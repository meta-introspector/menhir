module type Ast =
  sig
    module Parsetree :
      sig
        type structure
        type signature
        type toplevel_phrase
        type core_type
        type expression
        type pattern
        type case
        type type_declaration
        type type_extension
        type extension_constructor
        type class_expr
        type class_field
        type class_type
        type class_signature
        type class_type_field
        type module_expr
        type module_type
        type signature_item
        type structure_item
      end
    module Config :
      sig
        val ast_impl_magic_number : string
        val ast_intf_magic_number : string
      end
  end
type 'a _types = 'a
  constraint 'a =
    < case : 'b; class_expr : 'c; class_field : 'd; class_signature : 'e;
      class_type : 'f; class_type_field : 'g; core_type : 'h;
      expression : 'i; extension_constructor : 'j; module_expr : 'k;
      module_type : 'l; pattern : 'm; signature : 'n; signature_item : 'o;
      structure : 'p; structure_item : 'q; toplevel_phrase : 'r;
      type_declaration : 's; type_extension : 't >
type _ witnesses = private ..
type _ migration_info
module type OCaml_version =
  sig
    module Ast : Ast
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_402 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_402.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_402.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_402.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_402.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_402.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_402.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_402.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_402.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_402.Asttypes.variance =
                Covariant
              | Contravariant
              | Invariant
          end
        module Parsetree :
          sig
            type attribute = string Asttypes.loc * payload
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_402.Parsetree.payload =
                PStr of structure
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_402.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_402.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of (string * attributes * core_type) list *
                  Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_402.Parsetree.row_field =
                Rtag of Asttypes.label * attributes * bool * core_type list
              | Rinherit of core_type
            and pattern =
              Astlib__Ast_402.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_402.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of Asttypes.constant
              | Ppat_interval of Asttypes.constant * Asttypes.constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
            and expression =
              Astlib__Ast_402.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_402.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of Asttypes.constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.label * expression option * pattern *
                  expression
              | Pexp_apply of expression * (Asttypes.label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * string
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of string Asttypes.loc * expression
              | Pexp_override of (string Asttypes.loc * expression) list
              | Pexp_letmodule of string Asttypes.loc * module_expr *
                  expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string * expression
              | Pexp_pack of module_expr
              | Pexp_open of Asttypes.override_flag *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_extension of extension
            and case =
              Astlib__Ast_402.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and value_description =
              Astlib__Ast_402.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_402.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params : (core_type * Asttypes.variance) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_402.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_402.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_402.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : core_type list;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and type_extension =
              Astlib__Ast_402.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params : (core_type * Asttypes.variance) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_402.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_402.Parsetree.extension_constructor_kind =
                Pext_decl of core_type list * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_402.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_402.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.label * core_type * class_type
              | Pcty_extension of extension
            and class_signature =
              Astlib__Ast_402.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_402.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_402.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (string * Asttypes.mutable_flag * Asttypes.virtual_flag *
                   core_type)
              | Pctf_method of
                  (string * Asttypes.private_flag * Asttypes.virtual_flag *
                   core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_402.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params : (core_type * Asttypes.variance) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_402.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_402.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr * (Asttypes.label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
            and class_structure =
              Astlib__Ast_402.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_402.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_402.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string option
              | Pcf_val of
                  (string Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (string Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_402.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_402.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_402.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of string Asttypes.loc * module_type option *
                  module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_402.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_402.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of extension_constructor
              | Psig_module of module_declaration
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_402.Parsetree.module_declaration = {
              pmd_name : string Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_402.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and open_description =
              Astlib__Ast_402.Parsetree.open_description = {
              popen_lid : Astlib__.Longident.t Asttypes.loc;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and 'a include_infos =
              'a Astlib__Ast_402.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_402.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of type_declaration
              | Pwith_modsubst of string Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_402.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_402.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of string Asttypes.loc * module_type option *
                  module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_402.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_402.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of extension_constructor
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_description
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_402.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_402.Parsetree.module_binding = {
              pmb_name : string Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_402.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of string * directive_argument
            and directive_argument =
              Astlib__Ast_402.Parsetree.directive_argument =
                Pdir_none
              | Pdir_string of string
              | Pdir_int of int
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_403 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_403.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_403.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_403.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_403.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_403.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_403.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_403.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_403.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_403.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_403.Asttypes.variance =
                Covariant
              | Contravariant
              | Invariant
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_403.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * string option
              | Pconst_float of string * char option
            type attribute = string Asttypes.loc * payload
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_403.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_403.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_403.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of (string * attributes * core_type) list *
                  Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_403.Parsetree.row_field =
                Rtag of Asttypes.label * attributes * bool * core_type list
              | Rinherit of core_type
            and pattern =
              Astlib__Ast_403.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_403.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
            and expression =
              Astlib__Ast_403.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_403.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * string
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of string Asttypes.loc * expression
              | Pexp_override of (string Asttypes.loc * expression) list
              | Pexp_letmodule of string Asttypes.loc * module_expr *
                  expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string * expression
              | Pexp_pack of module_expr
              | Pexp_open of Asttypes.override_flag *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_403.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and value_description =
              Astlib__Ast_403.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_403.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params : (core_type * Asttypes.variance) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_403.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_403.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_403.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_403.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_403.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params : (core_type * Asttypes.variance) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_403.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_403.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_403.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_403.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
            and class_signature =
              Astlib__Ast_403.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_403.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_403.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (string * Asttypes.mutable_flag * Asttypes.virtual_flag *
                   core_type)
              | Pctf_method of
                  (string * Asttypes.private_flag * Asttypes.virtual_flag *
                   core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_403.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params : (core_type * Asttypes.variance) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_403.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_403.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
            and class_structure =
              Astlib__Ast_403.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_403.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_403.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string option
              | Pcf_val of
                  (string Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (string Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_403.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_403.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_403.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of string Asttypes.loc * module_type option *
                  module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_403.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_403.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of extension_constructor
              | Psig_module of module_declaration
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_403.Parsetree.module_declaration = {
              pmd_name : string Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_403.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and open_description =
              Astlib__Ast_403.Parsetree.open_description = {
              popen_lid : Astlib__.Longident.t Asttypes.loc;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and 'a include_infos =
              'a Astlib__Ast_403.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_403.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of type_declaration
              | Pwith_modsubst of string Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_403.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_403.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of string Asttypes.loc * module_type option *
                  module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_403.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_403.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of extension_constructor
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_description
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_403.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_403.Parsetree.module_binding = {
              pmb_name : string Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_403.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of string * directive_argument
            and directive_argument =
              Astlib__Ast_403.Parsetree.directive_argument =
                Pdir_none
              | Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_404 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_404.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_404.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_404.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_404.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_404.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_404.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_404.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_404.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_404.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_404.Asttypes.variance =
                Covariant
              | Contravariant
              | Invariant
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_404.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * string option
              | Pconst_float of string * char option
            type attribute = string Asttypes.loc * payload
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_404.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_404.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_404.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of (string * attributes * core_type) list *
                  Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_404.Parsetree.row_field =
                Rtag of Asttypes.label * attributes * bool * core_type list
              | Rinherit of core_type
            and pattern =
              Astlib__Ast_404.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_404.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_404.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_404.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * string
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of string Asttypes.loc * expression
              | Pexp_override of (string Asttypes.loc * expression) list
              | Pexp_letmodule of string Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string * expression
              | Pexp_pack of module_expr
              | Pexp_open of Asttypes.override_flag *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_404.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and value_description =
              Astlib__Ast_404.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_404.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params : (core_type * Asttypes.variance) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_404.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_404.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_404.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_404.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_404.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params : (core_type * Asttypes.variance) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_404.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_404.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_404.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_404.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
            and class_signature =
              Astlib__Ast_404.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_404.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_404.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (string * Asttypes.mutable_flag * Asttypes.virtual_flag *
                   core_type)
              | Pctf_method of
                  (string * Asttypes.private_flag * Asttypes.virtual_flag *
                   core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_404.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params : (core_type * Asttypes.variance) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_404.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_404.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
            and class_structure =
              Astlib__Ast_404.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_404.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_404.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string option
              | Pcf_val of
                  (string Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (string Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_404.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_404.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_404.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of string Asttypes.loc * module_type option *
                  module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_404.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_404.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of extension_constructor
              | Psig_module of module_declaration
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_404.Parsetree.module_declaration = {
              pmd_name : string Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_404.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and open_description =
              Astlib__Ast_404.Parsetree.open_description = {
              popen_lid : Astlib__.Longident.t Asttypes.loc;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and 'a include_infos =
              'a Astlib__Ast_404.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_404.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of type_declaration
              | Pwith_modsubst of string Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_404.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_404.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of string Asttypes.loc * module_type option *
                  module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_404.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_404.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of extension_constructor
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_description
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_404.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_404.Parsetree.module_binding = {
              pmb_name : string Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_404.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of string * directive_argument
            and directive_argument =
              Astlib__Ast_404.Parsetree.directive_argument =
                Pdir_none
              | Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_405 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_405.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_405.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_405.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_405.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_405.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_405.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_405.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_405.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_405.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_405.Asttypes.variance =
                Covariant
              | Contravariant
              | Invariant
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_405.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * string option
              | Pconst_float of string * char option
            type attribute = string Asttypes.loc * payload
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_405.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_405.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_405.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of
                  (string Asttypes.loc * attributes * core_type) list *
                  Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_405.Parsetree.row_field =
                Rtag of Asttypes.label * attributes * bool * core_type list
              | Rinherit of core_type
            and pattern =
              Astlib__Ast_405.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_405.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_405.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_405.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * string Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of string Asttypes.loc * expression
              | Pexp_override of (string Asttypes.loc * expression) list
              | Pexp_letmodule of string Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of Asttypes.override_flag *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_405.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and value_description =
              Astlib__Ast_405.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_405.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params : (core_type * Asttypes.variance) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_405.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_405.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_405.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_405.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_405.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params : (core_type * Asttypes.variance) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_405.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_405.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_405.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_405.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
            and class_signature =
              Astlib__Ast_405.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_405.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_405.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (string Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (string Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_405.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params : (core_type * Asttypes.variance) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_405.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_405.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
            and class_structure =
              Astlib__Ast_405.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_405.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_405.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (string Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (string Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_405.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_405.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_405.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of string Asttypes.loc * module_type option *
                  module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_405.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_405.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of extension_constructor
              | Psig_module of module_declaration
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_405.Parsetree.module_declaration = {
              pmd_name : string Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_405.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and open_description =
              Astlib__Ast_405.Parsetree.open_description = {
              popen_lid : Astlib__.Longident.t Asttypes.loc;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and 'a include_infos =
              'a Astlib__Ast_405.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_405.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of type_declaration
              | Pwith_modsubst of string Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_405.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_405.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of string Asttypes.loc * module_type option *
                  module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_405.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_405.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of extension_constructor
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_description
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_405.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_405.Parsetree.module_binding = {
              pmb_name : string Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_405.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of string * directive_argument
            and directive_argument =
              Astlib__Ast_405.Parsetree.directive_argument =
                Pdir_none
              | Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_406 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_406.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_406.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_406.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_406.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_406.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_406.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_406.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_406.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_406.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_406.Asttypes.variance =
                Covariant
              | Contravariant
              | Invariant
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_406.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * string option
              | Pconst_float of string * char option
            type attribute = string Asttypes.loc * payload
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_406.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_406.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_406.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list * Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_406.Parsetree.row_field =
                Rtag of Asttypes.label Asttypes.loc * attributes * bool *
                  core_type list
              | Rinherit of core_type
            and object_field =
              Astlib__Ast_406.Parsetree.object_field =
                Otag of Asttypes.label Asttypes.loc * attributes * core_type
              | Oinherit of core_type
            and pattern =
              Astlib__Ast_406.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_406.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_406.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_406.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * Asttypes.label Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
              | Pexp_override of
                  (Asttypes.label Asttypes.loc * expression) list
              | Pexp_letmodule of string Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of Asttypes.override_flag *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_406.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and value_description =
              Astlib__Ast_406.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_406.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params : (core_type * Asttypes.variance) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_406.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_406.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_406.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_406.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_406.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params : (core_type * Asttypes.variance) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_406.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_406.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_406.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_406.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of Asttypes.override_flag *
                  Astlib__.Longident.t Asttypes.loc * class_type
            and class_signature =
              Astlib__Ast_406.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_406.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_406.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_406.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params : (core_type * Asttypes.variance) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_406.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_406.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of Asttypes.override_flag *
                  Astlib__.Longident.t Asttypes.loc * class_expr
            and class_structure =
              Astlib__Ast_406.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_406.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_406.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_406.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_406.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_406.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of string Asttypes.loc * module_type option *
                  module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_406.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_406.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of extension_constructor
              | Psig_module of module_declaration
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_406.Parsetree.module_declaration = {
              pmd_name : string Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_406.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and open_description =
              Astlib__Ast_406.Parsetree.open_description = {
              popen_lid : Astlib__.Longident.t Asttypes.loc;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and 'a include_infos =
              'a Astlib__Ast_406.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_406.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_406.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_406.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of string Asttypes.loc * module_type option *
                  module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_406.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_406.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of extension_constructor
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_description
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_406.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_406.Parsetree.module_binding = {
              pmb_name : string Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_406.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of string * directive_argument
            and directive_argument =
              Astlib__Ast_406.Parsetree.directive_argument =
                Pdir_none
              | Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_407 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_407.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_407.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_407.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_407.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_407.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_407.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_407.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_407.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_407.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_407.Asttypes.variance =
                Covariant
              | Contravariant
              | Invariant
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_407.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * string option
              | Pconst_float of string * char option
            type attribute = string Asttypes.loc * payload
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_407.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_407.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_407.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list * Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_407.Parsetree.row_field =
                Rtag of Asttypes.label Asttypes.loc * attributes * bool *
                  core_type list
              | Rinherit of core_type
            and object_field =
              Astlib__Ast_407.Parsetree.object_field =
                Otag of Asttypes.label Asttypes.loc * attributes * core_type
              | Oinherit of core_type
            and pattern =
              Astlib__Ast_407.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_407.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_407.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_407.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * Asttypes.label Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
              | Pexp_override of
                  (Asttypes.label Asttypes.loc * expression) list
              | Pexp_letmodule of string Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of Asttypes.override_flag *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_407.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and value_description =
              Astlib__Ast_407.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_407.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params : (core_type * Asttypes.variance) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_407.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_407.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_407.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_407.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_407.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params : (core_type * Asttypes.variance) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_407.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_407.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_407.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_407.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of Asttypes.override_flag *
                  Astlib__.Longident.t Asttypes.loc * class_type
            and class_signature =
              Astlib__Ast_407.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_407.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_407.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_407.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params : (core_type * Asttypes.variance) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_407.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_407.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of Asttypes.override_flag *
                  Astlib__.Longident.t Asttypes.loc * class_expr
            and class_structure =
              Astlib__Ast_407.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_407.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_407.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_407.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_407.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_407.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of string Asttypes.loc * module_type option *
                  module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_407.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_407.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of extension_constructor
              | Psig_module of module_declaration
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_407.Parsetree.module_declaration = {
              pmd_name : string Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_407.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and open_description =
              Astlib__Ast_407.Parsetree.open_description = {
              popen_lid : Astlib__.Longident.t Asttypes.loc;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and 'a include_infos =
              'a Astlib__Ast_407.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_407.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_407.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_407.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of string Asttypes.loc * module_type option *
                  module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_407.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_407.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of extension_constructor
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_description
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_407.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_407.Parsetree.module_binding = {
              pmb_name : string Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_407.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of string * directive_argument
            and directive_argument =
              Astlib__Ast_407.Parsetree.directive_argument =
                Pdir_none
              | Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_408 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_408.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_408.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_408.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_408.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_408.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_408.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_408.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_408.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_408.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_408.Asttypes.variance =
                Covariant
              | Contravariant
              | Invariant
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_408.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * string option
              | Pconst_float of string * char option
            type attribute =
              Astlib__Ast_408.Parsetree.attribute = {
              attr_name : string Asttypes.loc;
              attr_payload : payload;
              attr_loc : Astlib__.Location.t;
            }
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_408.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_408.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_loc_stack : Astlib__.Location.t list;
              ptyp_attributes : attributes;
            }
            and typ = core_type
            and core_type_desc =
              Astlib__Ast_408.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list * Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_408.Parsetree.row_field = {
              prf_desc : row_field_desc;
              prf_loc : Astlib__.Location.t;
              prf_attributes : attributes;
            }
            and row_field_desc =
              Astlib__Ast_408.Parsetree.row_field_desc =
                Rtag of Asttypes.label Asttypes.loc * bool * core_type list
              | Rinherit of core_type
            and object_field =
              Astlib__Ast_408.Parsetree.object_field = {
              pof_desc : object_field_desc;
              pof_loc : Astlib__.Location.t;
              pof_attributes : attributes;
            }
            and object_field_desc =
              Astlib__Ast_408.Parsetree.object_field_desc =
                Otag of Asttypes.label Asttypes.loc * core_type
              | Oinherit of core_type
            and pattern =
              Astlib__Ast_408.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_loc_stack : Astlib__.Location.t list;
              ppat_attributes : attributes;
            }
            and pat = pattern
            and pattern_desc =
              Astlib__Ast_408.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_408.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_loc_stack : Astlib__.Location.t list;
              pexp_attributes : attributes;
            }
            and expr = expression
            and expression_desc =
              Astlib__Ast_408.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of cases
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * cases
              | Pexp_try of expression * cases
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * Asttypes.label Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
              | Pexp_override of
                  (Asttypes.label Asttypes.loc * expression) list
              | Pexp_letmodule of string Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of open_declaration * expression
              | Pexp_letop of letop
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_408.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and cases = case list
            and letop =
              Astlib__Ast_408.Parsetree.letop = {
              let_ : binding_op;
              ands : binding_op list;
              body : expression;
            }
            and binding_op =
              Astlib__Ast_408.Parsetree.binding_op = {
              pbop_op : string Asttypes.loc;
              pbop_pat : pattern;
              pbop_exp : expression;
              pbop_loc : Astlib__.Location.t;
            }
            and value_description =
              Astlib__Ast_408.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_408.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params : (core_type * Asttypes.variance) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_408.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_408.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_408.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_408.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_408.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params : (core_type * Asttypes.variance) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_loc : Astlib__.Location.t;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_408.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and type_exception =
              Astlib__Ast_408.Parsetree.type_exception = {
              ptyexn_constructor : extension_constructor;
              ptyexn_loc : Astlib__.Location.t;
              ptyexn_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_408.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_408.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_408.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of open_description * class_type
            and class_signature =
              Astlib__Ast_408.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_408.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_408.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_408.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params : (core_type * Asttypes.variance) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_408.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_408.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of open_description * class_expr
            and class_structure =
              Astlib__Ast_408.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_408.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_408.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_408.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_408.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_408.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of string Asttypes.loc * module_type option *
                  module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_408.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_408.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typesubst of type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of type_exception
              | Psig_module of module_declaration
              | Psig_modsubst of module_substitution
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_408.Parsetree.module_declaration = {
              pmd_name : string Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_substitution =
              Astlib__Ast_408.Parsetree.module_substitution = {
              pms_name : string Asttypes.loc;
              pms_manifest : Astlib__.Longident.t Asttypes.loc;
              pms_attributes : attributes;
              pms_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_408.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and 'a open_infos =
              'a Astlib__Ast_408.Parsetree.open_infos = {
              popen_expr : 'a;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and open_description =
                Astlib__.Longident.t Asttypes.loc open_infos
            and open_declaration = module_expr open_infos
            and 'a include_infos =
              'a Astlib__Ast_408.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_408.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_408.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_408.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of string Asttypes.loc * module_type option *
                  module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_408.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_408.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of type_exception
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_declaration
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_408.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_408.Parsetree.module_binding = {
              pmb_name : string Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_408.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of toplevel_directive
            and toplevel_directive =
              Astlib__Ast_408.Parsetree.toplevel_directive = {
              pdir_name : string Asttypes.loc;
              pdir_arg : directive_argument option;
              pdir_loc : Astlib__.Location.t;
            }
            and directive_argument =
              Astlib__Ast_408.Parsetree.directive_argument = {
              pdira_desc : directive_argument_desc;
              pdira_loc : Astlib__.Location.t;
            }
            and directive_argument_desc =
              Astlib__Ast_408.Parsetree.directive_argument_desc =
                Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_409 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_409.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_409.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_409.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_409.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_409.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_409.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_409.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_409.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_409.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_409.Asttypes.variance =
                Covariant
              | Contravariant
              | Invariant
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_409.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * string option
              | Pconst_float of string * char option
            type attribute =
              Astlib__Ast_409.Parsetree.attribute = {
              attr_name : string Asttypes.loc;
              attr_payload : payload;
              attr_loc : Astlib__.Location.t;
            }
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_409.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_409.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_loc_stack : Astlib__.Location.t list;
              ptyp_attributes : attributes;
            }
            and typ = core_type
            and core_type_desc =
              Astlib__Ast_409.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list * Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_409.Parsetree.row_field = {
              prf_desc : row_field_desc;
              prf_loc : Astlib__.Location.t;
              prf_attributes : attributes;
            }
            and row_field_desc =
              Astlib__Ast_409.Parsetree.row_field_desc =
                Rtag of Asttypes.label Asttypes.loc * bool * core_type list
              | Rinherit of core_type
            and object_field =
              Astlib__Ast_409.Parsetree.object_field = {
              pof_desc : object_field_desc;
              pof_loc : Astlib__.Location.t;
              pof_attributes : attributes;
            }
            and object_field_desc =
              Astlib__Ast_409.Parsetree.object_field_desc =
                Otag of Asttypes.label Asttypes.loc * core_type
              | Oinherit of core_type
            and pattern =
              Astlib__Ast_409.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_loc_stack : Astlib__.Location.t list;
              ppat_attributes : attributes;
            }
            and pat = pattern
            and pattern_desc =
              Astlib__Ast_409.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_409.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_loc_stack : Astlib__.Location.t list;
              pexp_attributes : attributes;
            }
            and expr = expression
            and expression_desc =
              Astlib__Ast_409.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of cases
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * cases
              | Pexp_try of expression * cases
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * Asttypes.label Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
              | Pexp_override of
                  (Asttypes.label Asttypes.loc * expression) list
              | Pexp_letmodule of string Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of open_declaration * expression
              | Pexp_letop of letop
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_409.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and cases = case list
            and letop =
              Astlib__Ast_409.Parsetree.letop = {
              let_ : binding_op;
              ands : binding_op list;
              body : expression;
            }
            and binding_op =
              Astlib__Ast_409.Parsetree.binding_op = {
              pbop_op : string Asttypes.loc;
              pbop_pat : pattern;
              pbop_exp : expression;
              pbop_loc : Astlib__.Location.t;
            }
            and value_description =
              Astlib__Ast_409.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_409.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params : (core_type * Asttypes.variance) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_409.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_409.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_409.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_409.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_409.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params : (core_type * Asttypes.variance) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_loc : Astlib__.Location.t;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_409.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and type_exception =
              Astlib__Ast_409.Parsetree.type_exception = {
              ptyexn_constructor : extension_constructor;
              ptyexn_loc : Astlib__.Location.t;
              ptyexn_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_409.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_409.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_409.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of open_description * class_type
            and class_signature =
              Astlib__Ast_409.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_409.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_409.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_409.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params : (core_type * Asttypes.variance) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_409.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_409.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of open_description * class_expr
            and class_structure =
              Astlib__Ast_409.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_409.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_409.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_409.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_409.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_409.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of string Asttypes.loc * module_type option *
                  module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_409.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_409.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typesubst of type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of type_exception
              | Psig_module of module_declaration
              | Psig_modsubst of module_substitution
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_409.Parsetree.module_declaration = {
              pmd_name : string Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_substitution =
              Astlib__Ast_409.Parsetree.module_substitution = {
              pms_name : string Asttypes.loc;
              pms_manifest : Astlib__.Longident.t Asttypes.loc;
              pms_attributes : attributes;
              pms_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_409.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and 'a open_infos =
              'a Astlib__Ast_409.Parsetree.open_infos = {
              popen_expr : 'a;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and open_description =
                Astlib__.Longident.t Asttypes.loc open_infos
            and open_declaration = module_expr open_infos
            and 'a include_infos =
              'a Astlib__Ast_409.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_409.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_409.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_409.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of string Asttypes.loc * module_type option *
                  module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_409.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_409.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of type_exception
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_declaration
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_409.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_409.Parsetree.module_binding = {
              pmb_name : string Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_409.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of toplevel_directive
            and toplevel_directive =
              Astlib__Ast_409.Parsetree.toplevel_directive = {
              pdir_name : string Asttypes.loc;
              pdir_arg : directive_argument option;
              pdir_loc : Astlib__.Location.t;
            }
            and directive_argument =
              Astlib__Ast_409.Parsetree.directive_argument = {
              pdira_desc : directive_argument_desc;
              pdira_loc : Astlib__.Location.t;
            }
            and directive_argument_desc =
              Astlib__Ast_409.Parsetree.directive_argument_desc =
                Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_410 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_410.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_410.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_410.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_410.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_410.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_410.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_410.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_410.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_410.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_410.Asttypes.variance =
                Covariant
              | Contravariant
              | Invariant
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_410.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * string option
              | Pconst_float of string * char option
            type location_stack = Astlib__.Location.t list
            type attribute =
              Astlib__Ast_410.Parsetree.attribute = {
              attr_name : string Asttypes.loc;
              attr_payload : payload;
              attr_loc : Astlib__.Location.t;
            }
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_410.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_410.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_loc_stack : location_stack;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_410.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list * Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_410.Parsetree.row_field = {
              prf_desc : row_field_desc;
              prf_loc : Astlib__.Location.t;
              prf_attributes : attributes;
            }
            and row_field_desc =
              Astlib__Ast_410.Parsetree.row_field_desc =
                Rtag of Asttypes.label Asttypes.loc * bool * core_type list
              | Rinherit of core_type
            and object_field =
              Astlib__Ast_410.Parsetree.object_field = {
              pof_desc : object_field_desc;
              pof_loc : Astlib__.Location.t;
              pof_attributes : attributes;
            }
            and object_field_desc =
              Astlib__Ast_410.Parsetree.object_field_desc =
                Otag of Asttypes.label Asttypes.loc * core_type
              | Oinherit of core_type
            and pattern =
              Astlib__Ast_410.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_loc_stack : location_stack;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_410.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string option Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_410.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_loc_stack : location_stack;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_410.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * Asttypes.label Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
              | Pexp_override of
                  (Asttypes.label Asttypes.loc * expression) list
              | Pexp_letmodule of string option Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of open_declaration * expression
              | Pexp_letop of letop
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_410.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and letop =
              Astlib__Ast_410.Parsetree.letop = {
              let_ : binding_op;
              ands : binding_op list;
              body : expression;
            }
            and binding_op =
              Astlib__Ast_410.Parsetree.binding_op = {
              pbop_op : string Asttypes.loc;
              pbop_pat : pattern;
              pbop_exp : expression;
              pbop_loc : Astlib__.Location.t;
            }
            and value_description =
              Astlib__Ast_410.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_410.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params : (core_type * Asttypes.variance) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_410.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_410.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_410.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_410.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_410.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params : (core_type * Asttypes.variance) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_loc : Astlib__.Location.t;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_410.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and type_exception =
              Astlib__Ast_410.Parsetree.type_exception = {
              ptyexn_constructor : extension_constructor;
              ptyexn_loc : Astlib__.Location.t;
              ptyexn_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_410.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_410.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_410.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of open_description * class_type
            and class_signature =
              Astlib__Ast_410.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_410.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_410.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_410.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params : (core_type * Asttypes.variance) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_410.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_410.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of open_description * class_expr
            and class_structure =
              Astlib__Ast_410.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_410.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_410.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_410.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_410.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_410.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of functor_parameter * module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and functor_parameter =
              Astlib__Ast_410.Parsetree.functor_parameter =
                Unit
              | Named of string option Asttypes.loc * module_type
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_410.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_410.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typesubst of type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of type_exception
              | Psig_module of module_declaration
              | Psig_modsubst of module_substitution
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_410.Parsetree.module_declaration = {
              pmd_name : string option Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_substitution =
              Astlib__Ast_410.Parsetree.module_substitution = {
              pms_name : string Asttypes.loc;
              pms_manifest : Astlib__.Longident.t Asttypes.loc;
              pms_attributes : attributes;
              pms_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_410.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and 'a open_infos =
              'a Astlib__Ast_410.Parsetree.open_infos = {
              popen_expr : 'a;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and open_description =
                Astlib__.Longident.t Asttypes.loc open_infos
            and open_declaration = module_expr open_infos
            and 'a include_infos =
              'a Astlib__Ast_410.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_410.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_410.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_410.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of functor_parameter * module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_410.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_410.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of type_exception
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_declaration
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_410.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_410.Parsetree.module_binding = {
              pmb_name : string option Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_410.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of toplevel_directive
            and toplevel_directive =
              Astlib__Ast_410.Parsetree.toplevel_directive = {
              pdir_name : string Asttypes.loc;
              pdir_arg : directive_argument option;
              pdir_loc : Astlib__.Location.t;
            }
            and directive_argument =
              Astlib__Ast_410.Parsetree.directive_argument = {
              pdira_desc : directive_argument_desc;
              pdira_loc : Astlib__.Location.t;
            }
            and directive_argument_desc =
              Astlib__Ast_410.Parsetree.directive_argument_desc =
                Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_411 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_411.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * Astlib__.Location.t * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_411.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_411.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_411.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_411.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_411.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_411.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_411.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_411.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_411.Asttypes.variance =
                Covariant
              | Contravariant
              | Invariant
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_411.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * Astlib__.Location.t * string option
              | Pconst_float of string * char option
            type location_stack = Astlib__.Location.t list
            type attribute =
              Astlib__Ast_411.Parsetree.attribute = {
              attr_name : string Asttypes.loc;
              attr_payload : payload;
              attr_loc : Astlib__.Location.t;
            }
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_411.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_411.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_loc_stack : location_stack;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_411.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list * Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_411.Parsetree.row_field = {
              prf_desc : row_field_desc;
              prf_loc : Astlib__.Location.t;
              prf_attributes : attributes;
            }
            and row_field_desc =
              Astlib__Ast_411.Parsetree.row_field_desc =
                Rtag of Asttypes.label Asttypes.loc * bool * core_type list
              | Rinherit of core_type
            and object_field =
              Astlib__Ast_411.Parsetree.object_field = {
              pof_desc : object_field_desc;
              pof_loc : Astlib__.Location.t;
              pof_attributes : attributes;
            }
            and object_field_desc =
              Astlib__Ast_411.Parsetree.object_field_desc =
                Otag of Asttypes.label Asttypes.loc * core_type
              | Oinherit of core_type
            and pattern =
              Astlib__Ast_411.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_loc_stack : location_stack;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_411.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string option Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_411.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_loc_stack : location_stack;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_411.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * Asttypes.label Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
              | Pexp_override of
                  (Asttypes.label Asttypes.loc * expression) list
              | Pexp_letmodule of string option Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of open_declaration * expression
              | Pexp_letop of letop
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_411.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and letop =
              Astlib__Ast_411.Parsetree.letop = {
              let_ : binding_op;
              ands : binding_op list;
              body : expression;
            }
            and binding_op =
              Astlib__Ast_411.Parsetree.binding_op = {
              pbop_op : string Asttypes.loc;
              pbop_pat : pattern;
              pbop_exp : expression;
              pbop_loc : Astlib__.Location.t;
            }
            and value_description =
              Astlib__Ast_411.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_411.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params : (core_type * Asttypes.variance) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_411.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_411.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_411.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_411.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_411.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params : (core_type * Asttypes.variance) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_loc : Astlib__.Location.t;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_411.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and type_exception =
              Astlib__Ast_411.Parsetree.type_exception = {
              ptyexn_constructor : extension_constructor;
              ptyexn_loc : Astlib__.Location.t;
              ptyexn_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_411.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_411.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_411.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of open_description * class_type
            and class_signature =
              Astlib__Ast_411.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_411.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_411.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_411.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params : (core_type * Asttypes.variance) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_411.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_411.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of open_description * class_expr
            and class_structure =
              Astlib__Ast_411.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_411.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_411.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_411.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_411.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_411.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of functor_parameter * module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and functor_parameter =
              Astlib__Ast_411.Parsetree.functor_parameter =
                Unit
              | Named of string option Asttypes.loc * module_type
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_411.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_411.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typesubst of type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of type_exception
              | Psig_module of module_declaration
              | Psig_modsubst of module_substitution
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_411.Parsetree.module_declaration = {
              pmd_name : string option Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_substitution =
              Astlib__Ast_411.Parsetree.module_substitution = {
              pms_name : string Asttypes.loc;
              pms_manifest : Astlib__.Longident.t Asttypes.loc;
              pms_attributes : attributes;
              pms_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_411.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and 'a open_infos =
              'a Astlib__Ast_411.Parsetree.open_infos = {
              popen_expr : 'a;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and open_description =
                Astlib__.Longident.t Asttypes.loc open_infos
            and open_declaration = module_expr open_infos
            and 'a include_infos =
              'a Astlib__Ast_411.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_411.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_411.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_411.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of functor_parameter * module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_411.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_411.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of type_exception
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_declaration
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_411.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_411.Parsetree.module_binding = {
              pmb_name : string option Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_411.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of toplevel_directive
            and toplevel_directive =
              Astlib__Ast_411.Parsetree.toplevel_directive = {
              pdir_name : string Asttypes.loc;
              pdir_arg : directive_argument option;
              pdir_loc : Astlib__.Location.t;
            }
            and directive_argument =
              Astlib__Ast_411.Parsetree.directive_argument = {
              pdira_desc : directive_argument_desc;
              pdira_loc : Astlib__.Location.t;
            }
            and directive_argument_desc =
              Astlib__Ast_411.Parsetree.directive_argument_desc =
                Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_412 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_412.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * Astlib__.Location.t * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_412.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_412.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_412.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_412.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_412.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_412.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_412.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_412.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_412.Asttypes.variance =
                Covariant
              | Contravariant
              | NoVariance
            type injectivity =
              Astlib__Ast_412.Asttypes.injectivity =
                Injective
              | NoInjectivity
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_412.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * Astlib__.Location.t * string option
              | Pconst_float of string * char option
            type location_stack = Astlib__.Location.t list
            type attribute =
              Astlib__Ast_412.Parsetree.attribute = {
              attr_name : string Asttypes.loc;
              attr_payload : payload;
              attr_loc : Astlib__.Location.t;
            }
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_412.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_412.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_loc_stack : location_stack;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_412.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list * Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_412.Parsetree.row_field = {
              prf_desc : row_field_desc;
              prf_loc : Astlib__.Location.t;
              prf_attributes : attributes;
            }
            and row_field_desc =
              Astlib__Ast_412.Parsetree.row_field_desc =
                Rtag of Asttypes.label Asttypes.loc * bool * core_type list
              | Rinherit of core_type
            and object_field =
              Astlib__Ast_412.Parsetree.object_field = {
              pof_desc : object_field_desc;
              pof_loc : Astlib__.Location.t;
              pof_attributes : attributes;
            }
            and object_field_desc =
              Astlib__Ast_412.Parsetree.object_field_desc =
                Otag of Asttypes.label Asttypes.loc * core_type
              | Oinherit of core_type
            and pattern =
              Astlib__Ast_412.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_loc_stack : location_stack;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_412.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  pattern option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string option Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_412.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_loc_stack : location_stack;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_412.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * Asttypes.label Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
              | Pexp_override of
                  (Asttypes.label Asttypes.loc * expression) list
              | Pexp_letmodule of string option Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of open_declaration * expression
              | Pexp_letop of letop
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_412.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and letop =
              Astlib__Ast_412.Parsetree.letop = {
              let_ : binding_op;
              ands : binding_op list;
              body : expression;
            }
            and binding_op =
              Astlib__Ast_412.Parsetree.binding_op = {
              pbop_op : string Asttypes.loc;
              pbop_pat : pattern;
              pbop_exp : expression;
              pbop_loc : Astlib__.Location.t;
            }
            and value_description =
              Astlib__Ast_412.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_412.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_412.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_412.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_412.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_412.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_412.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_loc : Astlib__.Location.t;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_412.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and type_exception =
              Astlib__Ast_412.Parsetree.type_exception = {
              ptyexn_constructor : extension_constructor;
              ptyexn_loc : Astlib__.Location.t;
              ptyexn_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_412.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_412.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_412.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of open_description * class_type
            and class_signature =
              Astlib__Ast_412.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_412.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_412.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_412.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_412.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_412.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of open_description * class_expr
            and class_structure =
              Astlib__Ast_412.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_412.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_412.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_412.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_412.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_412.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of functor_parameter * module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and functor_parameter =
              Astlib__Ast_412.Parsetree.functor_parameter =
                Unit
              | Named of string option Asttypes.loc * module_type
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_412.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_412.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typesubst of type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of type_exception
              | Psig_module of module_declaration
              | Psig_modsubst of module_substitution
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_412.Parsetree.module_declaration = {
              pmd_name : string option Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_substitution =
              Astlib__Ast_412.Parsetree.module_substitution = {
              pms_name : string Asttypes.loc;
              pms_manifest : Astlib__.Longident.t Asttypes.loc;
              pms_attributes : attributes;
              pms_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_412.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and 'a open_infos =
              'a Astlib__Ast_412.Parsetree.open_infos = {
              popen_expr : 'a;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and open_description =
                Astlib__.Longident.t Asttypes.loc open_infos
            and open_declaration = module_expr open_infos
            and 'a include_infos =
              'a Astlib__Ast_412.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_412.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_412.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_412.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of functor_parameter * module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_412.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_412.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of type_exception
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_declaration
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_412.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_412.Parsetree.module_binding = {
              pmb_name : string option Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_412.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of toplevel_directive
            and toplevel_directive =
              Astlib__Ast_412.Parsetree.toplevel_directive = {
              pdir_name : string Asttypes.loc;
              pdir_arg : directive_argument option;
              pdir_loc : Astlib__.Location.t;
            }
            and directive_argument =
              Astlib__Ast_412.Parsetree.directive_argument = {
              pdira_desc : directive_argument_desc;
              pdira_loc : Astlib__.Location.t;
            }
            and directive_argument_desc =
              Astlib__Ast_412.Parsetree.directive_argument_desc =
                Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_413 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_413.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * Astlib__.Location.t * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_413.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_413.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_413.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_413.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_413.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_413.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_413.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_413.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_413.Asttypes.variance =
                Covariant
              | Contravariant
              | NoVariance
            type injectivity =
              Astlib__Ast_413.Asttypes.injectivity =
                Injective
              | NoInjectivity
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_413.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * Astlib__.Location.t * string option
              | Pconst_float of string * char option
            type location_stack = Astlib__.Location.t list
            type attribute =
              Astlib__Ast_413.Parsetree.attribute = {
              attr_name : string Asttypes.loc;
              attr_payload : payload;
              attr_loc : Astlib__.Location.t;
            }
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_413.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_413.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_loc_stack : location_stack;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_413.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list * Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_413.Parsetree.row_field = {
              prf_desc : row_field_desc;
              prf_loc : Astlib__.Location.t;
              prf_attributes : attributes;
            }
            and row_field_desc =
              Astlib__Ast_413.Parsetree.row_field_desc =
                Rtag of Asttypes.label Asttypes.loc * bool * core_type list
              | Rinherit of core_type
            and object_field =
              Astlib__Ast_413.Parsetree.object_field = {
              pof_desc : object_field_desc;
              pof_loc : Astlib__.Location.t;
              pof_attributes : attributes;
            }
            and object_field_desc =
              Astlib__Ast_413.Parsetree.object_field_desc =
                Otag of Asttypes.label Asttypes.loc * core_type
              | Oinherit of core_type
            and pattern =
              Astlib__Ast_413.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_loc_stack : location_stack;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_413.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  (string Asttypes.loc list * pattern) option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string option Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_413.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_loc_stack : location_stack;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_413.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * Asttypes.label Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
              | Pexp_override of
                  (Asttypes.label Asttypes.loc * expression) list
              | Pexp_letmodule of string option Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of open_declaration * expression
              | Pexp_letop of letop
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_413.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and letop =
              Astlib__Ast_413.Parsetree.letop = {
              let_ : binding_op;
              ands : binding_op list;
              body : expression;
            }
            and binding_op =
              Astlib__Ast_413.Parsetree.binding_op = {
              pbop_op : string Asttypes.loc;
              pbop_pat : pattern;
              pbop_exp : expression;
              pbop_loc : Astlib__.Location.t;
            }
            and value_description =
              Astlib__Ast_413.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_413.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_413.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_413.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_413.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_413.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_413.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_loc : Astlib__.Location.t;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_413.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and type_exception =
              Astlib__Ast_413.Parsetree.type_exception = {
              ptyexn_constructor : extension_constructor;
              ptyexn_loc : Astlib__.Location.t;
              ptyexn_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_413.Parsetree.extension_constructor_kind =
                Pext_decl of constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_413.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_413.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of open_description * class_type
            and class_signature =
              Astlib__Ast_413.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_413.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_413.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_413.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_413.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_413.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of open_description * class_expr
            and class_structure =
              Astlib__Ast_413.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_413.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_413.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_413.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_413.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_413.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of functor_parameter * module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and functor_parameter =
              Astlib__Ast_413.Parsetree.functor_parameter =
                Unit
              | Named of string option Asttypes.loc * module_type
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_413.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_413.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typesubst of type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of type_exception
              | Psig_module of module_declaration
              | Psig_modsubst of module_substitution
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_modtypesubst of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_413.Parsetree.module_declaration = {
              pmd_name : string option Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_substitution =
              Astlib__Ast_413.Parsetree.module_substitution = {
              pms_name : string Asttypes.loc;
              pms_manifest : Astlib__.Longident.t Asttypes.loc;
              pms_attributes : attributes;
              pms_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_413.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and 'a open_infos =
              'a Astlib__Ast_413.Parsetree.open_infos = {
              popen_expr : 'a;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and open_description =
                Astlib__.Longident.t Asttypes.loc open_infos
            and open_declaration = module_expr open_infos
            and 'a include_infos =
              'a Astlib__Ast_413.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_413.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_modtype of Astlib__.Longident.t Asttypes.loc *
                  module_type
              | Pwith_modtypesubst of Astlib__.Longident.t Asttypes.loc *
                  module_type
              | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_413.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_413.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of functor_parameter * module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_413.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_413.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of type_exception
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_declaration
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_413.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_413.Parsetree.module_binding = {
              pmb_name : string option Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_413.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of toplevel_directive
            and toplevel_directive =
              Astlib__Ast_413.Parsetree.toplevel_directive = {
              pdir_name : string Asttypes.loc;
              pdir_arg : directive_argument option;
              pdir_loc : Astlib__.Location.t;
            }
            and directive_argument =
              Astlib__Ast_413.Parsetree.directive_argument = {
              pdira_desc : directive_argument_desc;
              pdira_loc : Astlib__.Location.t;
            }
            and directive_argument_desc =
              Astlib__Ast_413.Parsetree.directive_argument_desc =
                Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_414 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_414.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * Astlib__.Location.t * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_414.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_414.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_414.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_414.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_414.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_414.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_414.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_414.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_414.Asttypes.variance =
                Covariant
              | Contravariant
              | NoVariance
            type injectivity =
              Astlib__Ast_414.Asttypes.injectivity =
                Injective
              | NoInjectivity
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_414.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * Astlib__.Location.t * string option
              | Pconst_float of string * char option
            type location_stack = Astlib__.Location.t list
            type attribute =
              Astlib__Ast_414.Parsetree.attribute = {
              attr_name : string Asttypes.loc;
              attr_payload : payload;
              attr_loc : Astlib__.Location.t;
            }
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_414.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_414.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_loc_stack : location_stack;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_414.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list * Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Astlib__Ast_414.Parsetree.row_field = {
              prf_desc : row_field_desc;
              prf_loc : Astlib__.Location.t;
              prf_attributes : attributes;
            }
            and row_field_desc =
              Astlib__Ast_414.Parsetree.row_field_desc =
                Rtag of Asttypes.label Asttypes.loc * bool * core_type list
              | Rinherit of core_type
            and object_field =
              Astlib__Ast_414.Parsetree.object_field = {
              pof_desc : object_field_desc;
              pof_loc : Astlib__.Location.t;
              pof_attributes : attributes;
            }
            and object_field_desc =
              Astlib__Ast_414.Parsetree.object_field_desc =
                Otag of Asttypes.label Asttypes.loc * core_type
              | Oinherit of core_type
            and pattern =
              Astlib__Ast_414.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_loc_stack : location_stack;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_414.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  (string Asttypes.loc list * pattern) option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string option Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Astlib__Ast_414.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_loc_stack : location_stack;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_414.Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * Asttypes.label Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
              | Pexp_override of
                  (Asttypes.label Asttypes.loc * expression) list
              | Pexp_letmodule of string option Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of open_declaration * expression
              | Pexp_letop of letop
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_414.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and letop =
              Astlib__Ast_414.Parsetree.letop = {
              let_ : binding_op;
              ands : binding_op list;
              body : expression;
            }
            and binding_op =
              Astlib__Ast_414.Parsetree.binding_op = {
              pbop_op : string Asttypes.loc;
              pbop_pat : pattern;
              pbop_exp : expression;
              pbop_loc : Astlib__.Location.t;
            }
            and value_description =
              Astlib__Ast_414.Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_414.Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_414.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_414.Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_414.Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_vars : string Asttypes.loc list;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_414.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_414.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_loc : Astlib__.Location.t;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_414.Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and type_exception =
              Astlib__Ast_414.Parsetree.type_exception = {
              ptyexn_constructor : extension_constructor;
              ptyexn_loc : Astlib__.Location.t;
              ptyexn_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_414.Parsetree.extension_constructor_kind =
                Pext_decl of string Asttypes.loc list *
                  constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Astlib__Ast_414.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_414.Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of open_description * class_type
            and class_signature =
              Astlib__Ast_414.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_414.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_414.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_414.Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_414.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_414.Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of open_description * class_expr
            and class_structure =
              Astlib__Ast_414.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_414.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_414.Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_414.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_414.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_414.Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of functor_parameter * module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and functor_parameter =
              Astlib__Ast_414.Parsetree.functor_parameter =
                Unit
              | Named of string option Asttypes.loc * module_type
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_414.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_414.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typesubst of type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of type_exception
              | Psig_module of module_declaration
              | Psig_modsubst of module_substitution
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_modtypesubst of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_414.Parsetree.module_declaration = {
              pmd_name : string option Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_substitution =
              Astlib__Ast_414.Parsetree.module_substitution = {
              pms_name : string Asttypes.loc;
              pms_manifest : Astlib__.Longident.t Asttypes.loc;
              pms_attributes : attributes;
              pms_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_414.Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and 'a open_infos =
              'a Astlib__Ast_414.Parsetree.open_infos = {
              popen_expr : 'a;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and open_description =
                Astlib__.Longident.t Asttypes.loc open_infos
            and open_declaration = module_expr open_infos
            and 'a include_infos =
              'a Astlib__Ast_414.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_414.Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_modtype of Astlib__.Longident.t Asttypes.loc *
                  module_type
              | Pwith_modtypesubst of Astlib__.Longident.t Asttypes.loc *
                  module_type
              | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Astlib__Ast_414.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_414.Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of functor_parameter * module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_414.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_414.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of type_exception
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_declaration
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_414.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_414.Parsetree.module_binding = {
              pmb_name : string option Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_414.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of toplevel_directive
            and toplevel_directive =
              Astlib__Ast_414.Parsetree.toplevel_directive = {
              pdir_name : string Asttypes.loc;
              pdir_arg : directive_argument option;
              pdir_loc : Astlib__.Location.t;
            }
            and directive_argument =
              Astlib__Ast_414.Parsetree.directive_argument = {
              pdira_desc : directive_argument_desc;
              pdira_loc : Astlib__.Location.t;
            }
            and directive_argument_desc =
              Astlib__Ast_414.Parsetree.directive_argument_desc =
                Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_500 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Astlib__Ast_414.Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * Astlib__.Location.t * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag =
              Astlib__Ast_414.Asttypes.rec_flag =
                Nonrecursive
              | Recursive
            type direction_flag =
              Astlib__Ast_414.Asttypes.direction_flag =
                Upto
              | Downto
            type private_flag =
              Astlib__Ast_414.Asttypes.private_flag =
                Private
              | Public
            type mutable_flag =
              Astlib__Ast_414.Asttypes.mutable_flag =
                Immutable
              | Mutable
            type virtual_flag =
              Astlib__Ast_414.Asttypes.virtual_flag =
                Virtual
              | Concrete
            type override_flag =
              Astlib__Ast_414.Asttypes.override_flag =
                Override
              | Fresh
            type closed_flag =
              Astlib__Ast_414.Asttypes.closed_flag =
                Closed
              | Open
            type label = string
            type arg_label =
              Astlib__Ast_414.Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Astlib__Ast_414.Asttypes.variance =
                Covariant
              | Contravariant
              | NoVariance
            type injectivity =
              Astlib__Ast_414.Asttypes.injectivity =
                Injective
              | NoInjectivity
          end
        module Parsetree :
          sig
            type constant =
              Astlib__Ast_414.Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * Astlib__.Location.t * string option
              | Pconst_float of string * char option
            type location_stack = Astlib__.Location.t list
            type attribute =
              Astlib__Ast_414.Parsetree.attribute = {
              attr_name : string Astlib__Ast_414.Asttypes.loc;
              attr_payload : payload;
              attr_loc : Astlib__.Location.t;
            }
            and extension = string Astlib__Ast_414.Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Astlib__Ast_414.Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Astlib__Ast_414.Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_loc_stack : location_stack;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Astlib__Ast_414.Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Astlib__Ast_414.Asttypes.arg_label *
                  core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list *
                  Astlib__Ast_414.Asttypes.closed_flag
              | Ptyp_class of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list *
                  Astlib__Ast_414.Asttypes.closed_flag *
                  Astlib__Ast_414.Asttypes.label list option
              | Ptyp_poly of string Astlib__Ast_414.Asttypes.loc list *
                  core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                (Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                 core_type)
                list
            and row_field =
              Astlib__Ast_414.Parsetree.row_field = {
              prf_desc : row_field_desc;
              prf_loc : Astlib__.Location.t;
              prf_attributes : attributes;
            }
            and row_field_desc =
              Astlib__Ast_414.Parsetree.row_field_desc =
                Rtag of
                  Astlib__Ast_414.Asttypes.label Astlib__Ast_414.Asttypes.loc *
                  bool * core_type list
              | Rinherit of core_type
            and object_field =
              Astlib__Ast_414.Parsetree.object_field = {
              pof_desc : object_field_desc;
              pof_loc : Astlib__.Location.t;
              pof_attributes : attributes;
            }
            and object_field_desc =
              Astlib__Ast_414.Parsetree.object_field_desc =
                Otag of
                  Astlib__Ast_414.Asttypes.label Astlib__Ast_414.Asttypes.loc *
                  core_type
              | Oinherit of core_type
            and pattern =
              Astlib__Ast_414.Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_loc_stack : location_stack;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Astlib__Ast_414.Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Astlib__Ast_414.Asttypes.loc
              | Ppat_alias of pattern * string Astlib__Ast_414.Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  (string Astlib__Ast_414.Asttypes.loc list * pattern) option
              | Ppat_variant of Astlib__Ast_414.Asttypes.label *
                  pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                   pattern)
                  list * Astlib__Ast_414.Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string option Astlib__Ast_414.Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc * 
                  pattern
            and expression =
              Astlib__Ast_414.Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_loc_stack : location_stack;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Astlib__Ast_414.Parsetree.expression_desc =
                Pexp_ident of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Astlib__Ast_414.Asttypes.rec_flag *
                  value_binding list * expression
              | Pexp_function of case list
              | Pexp_fun of Astlib__Ast_414.Asttypes.arg_label *
                  expression option * pattern * expression
              | Pexp_apply of expression *
                  (Astlib__Ast_414.Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  expression option
              | Pexp_variant of Astlib__Ast_414.Asttypes.label *
                  expression option
              | Pexp_record of
                  (Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                   expression)
                  list * expression option
              | Pexp_field of expression *
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Astlib__Ast_414.Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression *
                  Astlib__Ast_414.Asttypes.label Astlib__Ast_414.Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc
              | Pexp_setinstvar of
                  Astlib__Ast_414.Asttypes.label Astlib__Ast_414.Asttypes.loc *
                  expression
              | Pexp_override of
                  (Astlib__Ast_414.Asttypes.label
                   Astlib__Ast_414.Asttypes.loc * expression)
                  list
              | Pexp_letmodule of
                  string option Astlib__Ast_414.Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Astlib__Ast_414.Asttypes.loc *
                  expression
              | Pexp_pack of module_expr
              | Pexp_open of open_declaration * expression
              | Pexp_letop of letop
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Astlib__Ast_414.Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and letop =
              Astlib__Ast_414.Parsetree.letop = {
              let_ : binding_op;
              ands : binding_op list;
              body : expression;
            }
            and binding_op =
              Astlib__Ast_414.Parsetree.binding_op = {
              pbop_op : string Astlib__Ast_414.Asttypes.loc;
              pbop_pat : pattern;
              pbop_exp : expression;
              pbop_loc : Astlib__.Location.t;
            }
            and value_description =
              Astlib__Ast_414.Parsetree.value_description = {
              pval_name : string Astlib__Ast_414.Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Astlib__Ast_414.Parsetree.type_declaration = {
              ptype_name : string Astlib__Ast_414.Asttypes.loc;
              ptype_params :
                (core_type *
                 (Astlib__Ast_414.Asttypes.variance *
                  Astlib__Ast_414.Asttypes.injectivity))
                list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Astlib__Ast_414.Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Astlib__Ast_414.Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Astlib__Ast_414.Parsetree.label_declaration = {
              pld_name : string Astlib__Ast_414.Asttypes.loc;
              pld_mutable : Astlib__Ast_414.Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Astlib__Ast_414.Parsetree.constructor_declaration = {
              pcd_name : string Astlib__Ast_414.Asttypes.loc;
              pcd_vars : string Astlib__Ast_414.Asttypes.loc list;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Astlib__Ast_414.Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Astlib__Ast_414.Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc;
              ptyext_params :
                (core_type *
                 (Astlib__Ast_414.Asttypes.variance *
                  Astlib__Ast_414.Asttypes.injectivity))
                list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Astlib__Ast_414.Asttypes.private_flag;
              ptyext_loc : Astlib__.Location.t;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Astlib__Ast_414.Parsetree.extension_constructor = {
              pext_name : string Astlib__Ast_414.Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and type_exception =
              Astlib__Ast_414.Parsetree.type_exception = {
              ptyexn_constructor : extension_constructor;
              ptyexn_loc : Astlib__.Location.t;
              ptyexn_attributes : attributes;
            }
            and extension_constructor_kind =
              Astlib__Ast_414.Parsetree.extension_constructor_kind =
                Pext_decl of string Astlib__Ast_414.Asttypes.loc list *
                  constructor_arguments * core_type option
              | Pext_rebind of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc
            and class_type =
              Astlib__Ast_414.Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Astlib__Ast_414.Parsetree.class_type_desc =
                Pcty_constr of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Astlib__Ast_414.Asttypes.arg_label *
                  core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of open_description * class_type
            and class_signature =
              Astlib__Ast_414.Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Astlib__Ast_414.Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Astlib__Ast_414.Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Astlib__Ast_414.Asttypes.label
                   Astlib__Ast_414.Asttypes.loc *
                   Astlib__Ast_414.Asttypes.mutable_flag *
                   Astlib__Ast_414.Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Astlib__Ast_414.Asttypes.label
                   Astlib__Ast_414.Asttypes.loc *
                   Astlib__Ast_414.Asttypes.private_flag *
                   Astlib__Ast_414.Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Astlib__Ast_414.Parsetree.class_infos = {
              pci_virt : Astlib__Ast_414.Asttypes.virtual_flag;
              pci_params :
                (core_type *
                 (Astlib__Ast_414.Asttypes.variance *
                  Astlib__Ast_414.Asttypes.injectivity))
                list;
              pci_name : string Astlib__Ast_414.Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Astlib__Ast_414.Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Astlib__Ast_414.Parsetree.class_expr_desc =
                Pcl_constr of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Astlib__Ast_414.Asttypes.arg_label *
                  expression option * pattern * class_expr
              | Pcl_apply of class_expr *
                  (Astlib__Ast_414.Asttypes.arg_label * expression) list
              | Pcl_let of Astlib__Ast_414.Asttypes.rec_flag *
                  value_binding list * class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of open_description * class_expr
            and class_structure =
              Astlib__Ast_414.Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Astlib__Ast_414.Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Astlib__Ast_414.Parsetree.class_field_desc =
                Pcf_inherit of Astlib__Ast_414.Asttypes.override_flag *
                  class_expr * string Astlib__Ast_414.Asttypes.loc option
              | Pcf_val of
                  (Astlib__Ast_414.Asttypes.label
                   Astlib__Ast_414.Asttypes.loc *
                   Astlib__Ast_414.Asttypes.mutable_flag * class_field_kind)
              | Pcf_method of
                  (Astlib__Ast_414.Asttypes.label
                   Astlib__Ast_414.Asttypes.loc *
                   Astlib__Ast_414.Asttypes.private_flag * class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Astlib__Ast_414.Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Astlib__Ast_414.Asttypes.override_flag *
                  expression
            and class_declaration = class_expr class_infos
            and module_type =
              Astlib__Ast_414.Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Astlib__Ast_414.Parsetree.module_type_desc =
                Pmty_ident of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of functor_parameter * module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc
            and functor_parameter =
              Astlib__Ast_414.Parsetree.functor_parameter =
                Unit
              | Named of string option Astlib__Ast_414.Asttypes.loc *
                  module_type
            and signature = signature_item list
            and signature_item =
              Astlib__Ast_414.Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Astlib__Ast_414.Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Astlib__Ast_414.Asttypes.rec_flag *
                  type_declaration list
              | Psig_typesubst of type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of type_exception
              | Psig_module of module_declaration
              | Psig_modsubst of module_substitution
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_modtypesubst of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Astlib__Ast_414.Parsetree.module_declaration = {
              pmd_name : string option Astlib__Ast_414.Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_substitution =
              Astlib__Ast_414.Parsetree.module_substitution = {
              pms_name : string Astlib__Ast_414.Asttypes.loc;
              pms_manifest :
                Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc;
              pms_attributes : attributes;
              pms_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Astlib__Ast_414.Parsetree.module_type_declaration = {
              pmtd_name : string Astlib__Ast_414.Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and 'a open_infos =
              'a Astlib__Ast_414.Parsetree.open_infos = {
              popen_expr : 'a;
              popen_override : Astlib__Ast_414.Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and open_description =
                Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc open_infos
            and open_declaration = module_expr open_infos
            and 'a include_infos =
              'a Astlib__Ast_414.Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Astlib__Ast_414.Parsetree.with_constraint =
                Pwith_type of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  type_declaration
              | Pwith_module of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc
              | Pwith_modtype of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  module_type
              | Pwith_modtypesubst of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  module_type
              | Pwith_typesubst of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc *
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc
            and module_expr =
              Astlib__Ast_414.Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Astlib__Ast_414.Parsetree.module_expr_desc =
                Pmod_ident of
                  Astlib__.Longident.t Astlib__Ast_414.Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of functor_parameter * module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Astlib__Ast_414.Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Astlib__Ast_414.Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Astlib__Ast_414.Asttypes.rec_flag *
                  value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Astlib__Ast_414.Asttypes.rec_flag *
                  type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of type_exception
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_declaration
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_binding =
              Astlib__Ast_414.Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Astlib__Ast_414.Parsetree.module_binding = {
              pmb_name : string option Astlib__Ast_414.Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Astlib__Ast_414.Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of toplevel_directive
            and toplevel_directive =
              Astlib__Ast_414.Parsetree.toplevel_directive = {
              pdir_name : string Astlib__Ast_414.Asttypes.loc;
              pdir_arg : directive_argument option;
              pdir_loc : Astlib__.Location.t;
            }
            and directive_argument =
              Astlib__Ast_414.Parsetree.directive_argument = {
              pdira_desc : directive_argument_desc;
              pdira_loc : Astlib__.Location.t;
            }
            and directive_argument_desc =
              Astlib__Ast_414.Parsetree.directive_argument_desc =
                Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_501 :
  sig
    module Ast :
      sig
        module Asttypes :
          sig
            type constant =
              Asttypes.constant =
                Const_int of int
              | Const_char of char
              | Const_string of string * Astlib__.Location.t * string option
              | Const_float of string
              | Const_int32 of int32
              | Const_int64 of int64
              | Const_nativeint of nativeint
            type rec_flag = Asttypes.rec_flag = Nonrecursive | Recursive
            type direction_flag = Asttypes.direction_flag = Upto | Downto
            type private_flag = Asttypes.private_flag = Private | Public
            type mutable_flag = Asttypes.mutable_flag = Immutable | Mutable
            type virtual_flag = Asttypes.virtual_flag = Virtual | Concrete
            type override_flag = Asttypes.override_flag = Override | Fresh
            type closed_flag = Asttypes.closed_flag = Closed | Open
            type label = string
            type arg_label =
              Asttypes.arg_label =
                Nolabel
              | Labelled of string
              | Optional of string
            type 'a loc =
              'a Astlib__.Location.loc = {
              txt : 'a;
              loc : Astlib__.Location.t;
            }
            type variance =
              Asttypes.variance =
                Covariant
              | Contravariant
              | NoVariance
            type injectivity =
              Asttypes.injectivity =
                Injective
              | NoInjectivity
          end
        module Parsetree :
          sig
            type constant =
              Parsetree.constant =
                Pconst_integer of string * char option
              | Pconst_char of char
              | Pconst_string of string * Astlib__.Location.t * string option
              | Pconst_float of string * char option
            type location_stack = Astlib__.Location.t list
            type attribute =
              Parsetree.attribute = {
              attr_name : string Asttypes.loc;
              attr_payload : payload;
              attr_loc : Astlib__.Location.t;
            }
            and extension = string Asttypes.loc * payload
            and attributes = attribute list
            and payload =
              Parsetree.payload =
                PStr of structure
              | PSig of signature
              | PTyp of core_type
              | PPat of pattern * expression option
            and core_type =
              Parsetree.core_type = {
              ptyp_desc : core_type_desc;
              ptyp_loc : Astlib__.Location.t;
              ptyp_loc_stack : location_stack;
              ptyp_attributes : attributes;
            }
            and core_type_desc =
              Parsetree.core_type_desc =
                Ptyp_any
              | Ptyp_var of string
              | Ptyp_arrow of Asttypes.arg_label * core_type * core_type
              | Ptyp_tuple of core_type list
              | Ptyp_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_object of object_field list * Asttypes.closed_flag
              | Ptyp_class of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Ptyp_alias of core_type * string
              | Ptyp_variant of row_field list * Asttypes.closed_flag *
                  Asttypes.label list option
              | Ptyp_poly of string Asttypes.loc list * core_type
              | Ptyp_package of package_type
              | Ptyp_extension of extension
            and package_type =
                Astlib__.Longident.t Asttypes.loc *
                (Astlib__.Longident.t Asttypes.loc * core_type) list
            and row_field =
              Parsetree.row_field = {
              prf_desc : row_field_desc;
              prf_loc : Astlib__.Location.t;
              prf_attributes : attributes;
            }
            and row_field_desc =
              Parsetree.row_field_desc =
                Rtag of Asttypes.label Asttypes.loc * bool * core_type list
              | Rinherit of core_type
            and object_field =
              Parsetree.object_field = {
              pof_desc : object_field_desc;
              pof_loc : Astlib__.Location.t;
              pof_attributes : attributes;
            }
            and object_field_desc =
              Parsetree.object_field_desc =
                Otag of Asttypes.label Asttypes.loc * core_type
              | Oinherit of core_type
            and pattern =
              Parsetree.pattern = {
              ppat_desc : pattern_desc;
              ppat_loc : Astlib__.Location.t;
              ppat_loc_stack : location_stack;
              ppat_attributes : attributes;
            }
            and pattern_desc =
              Parsetree.pattern_desc =
                Ppat_any
              | Ppat_var of string Asttypes.loc
              | Ppat_alias of pattern * string Asttypes.loc
              | Ppat_constant of constant
              | Ppat_interval of constant * constant
              | Ppat_tuple of pattern list
              | Ppat_construct of Astlib__.Longident.t Asttypes.loc *
                  (string Asttypes.loc list * pattern) option
              | Ppat_variant of Asttypes.label * pattern option
              | Ppat_record of
                  (Astlib__.Longident.t Asttypes.loc * pattern) list *
                  Asttypes.closed_flag
              | Ppat_array of pattern list
              | Ppat_or of pattern * pattern
              | Ppat_constraint of pattern * core_type
              | Ppat_type of Astlib__.Longident.t Asttypes.loc
              | Ppat_lazy of pattern
              | Ppat_unpack of string option Asttypes.loc
              | Ppat_exception of pattern
              | Ppat_extension of extension
              | Ppat_open of Astlib__.Longident.t Asttypes.loc * pattern
            and expression =
              Parsetree.expression = {
              pexp_desc : expression_desc;
              pexp_loc : Astlib__.Location.t;
              pexp_loc_stack : location_stack;
              pexp_attributes : attributes;
            }
            and expression_desc =
              Parsetree.expression_desc =
                Pexp_ident of Astlib__.Longident.t Asttypes.loc
              | Pexp_constant of constant
              | Pexp_let of Asttypes.rec_flag * value_binding list *
                  expression
              | Pexp_function of case list
              | Pexp_fun of Asttypes.arg_label * expression option *
                  pattern * expression
              | Pexp_apply of expression *
                  (Asttypes.arg_label * expression) list
              | Pexp_match of expression * case list
              | Pexp_try of expression * case list
              | Pexp_tuple of expression list
              | Pexp_construct of Astlib__.Longident.t Asttypes.loc *
                  expression option
              | Pexp_variant of Asttypes.label * expression option
              | Pexp_record of
                  (Astlib__.Longident.t Asttypes.loc * expression) list *
                  expression option
              | Pexp_field of expression * Astlib__.Longident.t Asttypes.loc
              | Pexp_setfield of expression *
                  Astlib__.Longident.t Asttypes.loc * expression
              | Pexp_array of expression list
              | Pexp_ifthenelse of expression * expression *
                  expression option
              | Pexp_sequence of expression * expression
              | Pexp_while of expression * expression
              | Pexp_for of pattern * expression * expression *
                  Asttypes.direction_flag * expression
              | Pexp_constraint of expression * core_type
              | Pexp_coerce of expression * core_type option * core_type
              | Pexp_send of expression * Asttypes.label Asttypes.loc
              | Pexp_new of Astlib__.Longident.t Asttypes.loc
              | Pexp_setinstvar of Asttypes.label Asttypes.loc * expression
              | Pexp_override of
                  (Asttypes.label Asttypes.loc * expression) list
              | Pexp_letmodule of string option Asttypes.loc * module_expr *
                  expression
              | Pexp_letexception of extension_constructor * expression
              | Pexp_assert of expression
              | Pexp_lazy of expression
              | Pexp_poly of expression * core_type option
              | Pexp_object of class_structure
              | Pexp_newtype of string Asttypes.loc * expression
              | Pexp_pack of module_expr
              | Pexp_open of open_declaration * expression
              | Pexp_letop of letop
              | Pexp_extension of extension
              | Pexp_unreachable
            and case =
              Parsetree.case = {
              pc_lhs : pattern;
              pc_guard : expression option;
              pc_rhs : expression;
            }
            and letop =
              Parsetree.letop = {
              let_ : binding_op;
              ands : binding_op list;
              body : expression;
            }
            and binding_op =
              Parsetree.binding_op = {
              pbop_op : string Asttypes.loc;
              pbop_pat : pattern;
              pbop_exp : expression;
              pbop_loc : Astlib__.Location.t;
            }
            and value_description =
              Parsetree.value_description = {
              pval_name : string Asttypes.loc;
              pval_type : core_type;
              pval_prim : string list;
              pval_attributes : attributes;
              pval_loc : Astlib__.Location.t;
            }
            and type_declaration =
              Parsetree.type_declaration = {
              ptype_name : string Asttypes.loc;
              ptype_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              ptype_cstrs :
                (core_type * core_type * Astlib__.Location.t) list;
              ptype_kind : type_kind;
              ptype_private : Asttypes.private_flag;
              ptype_manifest : core_type option;
              ptype_attributes : attributes;
              ptype_loc : Astlib__.Location.t;
            }
            and type_kind =
              Parsetree.type_kind =
                Ptype_abstract
              | Ptype_variant of constructor_declaration list
              | Ptype_record of label_declaration list
              | Ptype_open
            and label_declaration =
              Parsetree.label_declaration = {
              pld_name : string Asttypes.loc;
              pld_mutable : Asttypes.mutable_flag;
              pld_type : core_type;
              pld_loc : Astlib__.Location.t;
              pld_attributes : attributes;
            }
            and constructor_declaration =
              Parsetree.constructor_declaration = {
              pcd_name : string Asttypes.loc;
              pcd_vars : string Asttypes.loc list;
              pcd_args : constructor_arguments;
              pcd_res : core_type option;
              pcd_loc : Astlib__.Location.t;
              pcd_attributes : attributes;
            }
            and constructor_arguments =
              Parsetree.constructor_arguments =
                Pcstr_tuple of core_type list
              | Pcstr_record of label_declaration list
            and type_extension =
              Parsetree.type_extension = {
              ptyext_path : Astlib__.Longident.t Asttypes.loc;
              ptyext_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              ptyext_constructors : extension_constructor list;
              ptyext_private : Asttypes.private_flag;
              ptyext_loc : Astlib__.Location.t;
              ptyext_attributes : attributes;
            }
            and extension_constructor =
              Parsetree.extension_constructor = {
              pext_name : string Asttypes.loc;
              pext_kind : extension_constructor_kind;
              pext_loc : Astlib__.Location.t;
              pext_attributes : attributes;
            }
            and type_exception =
              Parsetree.type_exception = {
              ptyexn_constructor : extension_constructor;
              ptyexn_loc : Astlib__.Location.t;
              ptyexn_attributes : attributes;
            }
            and extension_constructor_kind =
              Parsetree.extension_constructor_kind =
                Pext_decl of string Asttypes.loc list *
                  constructor_arguments * core_type option
              | Pext_rebind of Astlib__.Longident.t Asttypes.loc
            and class_type =
              Parsetree.class_type = {
              pcty_desc : class_type_desc;
              pcty_loc : Astlib__.Location.t;
              pcty_attributes : attributes;
            }
            and class_type_desc =
              Parsetree.class_type_desc =
                Pcty_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcty_signature of class_signature
              | Pcty_arrow of Asttypes.arg_label * core_type * class_type
              | Pcty_extension of extension
              | Pcty_open of open_description * class_type
            and class_signature =
              Parsetree.class_signature = {
              pcsig_self : core_type;
              pcsig_fields : class_type_field list;
            }
            and class_type_field =
              Parsetree.class_type_field = {
              pctf_desc : class_type_field_desc;
              pctf_loc : Astlib__.Location.t;
              pctf_attributes : attributes;
            }
            and class_type_field_desc =
              Parsetree.class_type_field_desc =
                Pctf_inherit of class_type
              | Pctf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   Asttypes.virtual_flag * core_type)
              | Pctf_constraint of (core_type * core_type)
              | Pctf_attribute of attribute
              | Pctf_extension of extension
            and 'a class_infos =
              'a Parsetree.class_infos = {
              pci_virt : Asttypes.virtual_flag;
              pci_params :
                (core_type * (Asttypes.variance * Asttypes.injectivity)) list;
              pci_name : string Asttypes.loc;
              pci_expr : 'a;
              pci_loc : Astlib__.Location.t;
              pci_attributes : attributes;
            }
            and class_description = class_type class_infos
            and class_type_declaration = class_type class_infos
            and class_expr =
              Parsetree.class_expr = {
              pcl_desc : class_expr_desc;
              pcl_loc : Astlib__.Location.t;
              pcl_attributes : attributes;
            }
            and class_expr_desc =
              Parsetree.class_expr_desc =
                Pcl_constr of Astlib__.Longident.t Asttypes.loc *
                  core_type list
              | Pcl_structure of class_structure
              | Pcl_fun of Asttypes.arg_label * expression option * pattern *
                  class_expr
              | Pcl_apply of class_expr *
                  (Asttypes.arg_label * expression) list
              | Pcl_let of Asttypes.rec_flag * value_binding list *
                  class_expr
              | Pcl_constraint of class_expr * class_type
              | Pcl_extension of extension
              | Pcl_open of open_description * class_expr
            and class_structure =
              Parsetree.class_structure = {
              pcstr_self : pattern;
              pcstr_fields : class_field list;
            }
            and class_field =
              Parsetree.class_field = {
              pcf_desc : class_field_desc;
              pcf_loc : Astlib__.Location.t;
              pcf_attributes : attributes;
            }
            and class_field_desc =
              Parsetree.class_field_desc =
                Pcf_inherit of Asttypes.override_flag * class_expr *
                  string Asttypes.loc option
              | Pcf_val of
                  (Asttypes.label Asttypes.loc * Asttypes.mutable_flag *
                   class_field_kind)
              | Pcf_method of
                  (Asttypes.label Asttypes.loc * Asttypes.private_flag *
                   class_field_kind)
              | Pcf_constraint of (core_type * core_type)
              | Pcf_initializer of expression
              | Pcf_attribute of attribute
              | Pcf_extension of extension
            and class_field_kind =
              Parsetree.class_field_kind =
                Cfk_virtual of core_type
              | Cfk_concrete of Asttypes.override_flag * expression
            and class_declaration = class_expr class_infos
            and module_type =
              Parsetree.module_type = {
              pmty_desc : module_type_desc;
              pmty_loc : Astlib__.Location.t;
              pmty_attributes : attributes;
            }
            and module_type_desc =
              Parsetree.module_type_desc =
                Pmty_ident of Astlib__.Longident.t Asttypes.loc
              | Pmty_signature of signature
              | Pmty_functor of functor_parameter * module_type
              | Pmty_with of module_type * with_constraint list
              | Pmty_typeof of module_expr
              | Pmty_extension of extension
              | Pmty_alias of Astlib__.Longident.t Asttypes.loc
            and functor_parameter =
              Parsetree.functor_parameter =
                Unit
              | Named of string option Asttypes.loc * module_type
            and signature = signature_item list
            and signature_item =
              Parsetree.signature_item = {
              psig_desc : signature_item_desc;
              psig_loc : Astlib__.Location.t;
            }
            and signature_item_desc =
              Parsetree.signature_item_desc =
                Psig_value of value_description
              | Psig_type of Asttypes.rec_flag * type_declaration list
              | Psig_typesubst of type_declaration list
              | Psig_typext of type_extension
              | Psig_exception of type_exception
              | Psig_module of module_declaration
              | Psig_modsubst of module_substitution
              | Psig_recmodule of module_declaration list
              | Psig_modtype of module_type_declaration
              | Psig_modtypesubst of module_type_declaration
              | Psig_open of open_description
              | Psig_include of include_description
              | Psig_class of class_description list
              | Psig_class_type of class_type_declaration list
              | Psig_attribute of attribute
              | Psig_extension of extension * attributes
            and module_declaration =
              Parsetree.module_declaration = {
              pmd_name : string option Asttypes.loc;
              pmd_type : module_type;
              pmd_attributes : attributes;
              pmd_loc : Astlib__.Location.t;
            }
            and module_substitution =
              Parsetree.module_substitution = {
              pms_name : string Asttypes.loc;
              pms_manifest : Astlib__.Longident.t Asttypes.loc;
              pms_attributes : attributes;
              pms_loc : Astlib__.Location.t;
            }
            and module_type_declaration =
              Parsetree.module_type_declaration = {
              pmtd_name : string Asttypes.loc;
              pmtd_type : module_type option;
              pmtd_attributes : attributes;
              pmtd_loc : Astlib__.Location.t;
            }
            and 'a open_infos =
              'a Parsetree.open_infos = {
              popen_expr : 'a;
              popen_override : Asttypes.override_flag;
              popen_loc : Astlib__.Location.t;
              popen_attributes : attributes;
            }
            and open_description =
                Astlib__.Longident.t Asttypes.loc open_infos
            and open_declaration = module_expr open_infos
            and 'a include_infos =
              'a Parsetree.include_infos = {
              pincl_mod : 'a;
              pincl_loc : Astlib__.Location.t;
              pincl_attributes : attributes;
            }
            and include_description = module_type include_infos
            and include_declaration = module_expr include_infos
            and with_constraint =
              Parsetree.with_constraint =
                Pwith_type of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_module of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
              | Pwith_modtype of Astlib__.Longident.t Asttypes.loc *
                  module_type
              | Pwith_modtypesubst of Astlib__.Longident.t Asttypes.loc *
                  module_type
              | Pwith_typesubst of Astlib__.Longident.t Asttypes.loc *
                  type_declaration
              | Pwith_modsubst of Astlib__.Longident.t Asttypes.loc *
                  Astlib__.Longident.t Asttypes.loc
            and module_expr =
              Parsetree.module_expr = {
              pmod_desc : module_expr_desc;
              pmod_loc : Astlib__.Location.t;
              pmod_attributes : attributes;
            }
            and module_expr_desc =
              Parsetree.module_expr_desc =
                Pmod_ident of Astlib__.Longident.t Asttypes.loc
              | Pmod_structure of structure
              | Pmod_functor of functor_parameter * module_expr
              | Pmod_apply of module_expr * module_expr
              | Pmod_apply_unit of module_expr
              | Pmod_constraint of module_expr * module_type
              | Pmod_unpack of expression
              | Pmod_extension of extension
            and structure = structure_item list
            and structure_item =
              Parsetree.structure_item = {
              pstr_desc : structure_item_desc;
              pstr_loc : Astlib__.Location.t;
            }
            and structure_item_desc =
              Parsetree.structure_item_desc =
                Pstr_eval of expression * attributes
              | Pstr_value of Asttypes.rec_flag * value_binding list
              | Pstr_primitive of value_description
              | Pstr_type of Asttypes.rec_flag * type_declaration list
              | Pstr_typext of type_extension
              | Pstr_exception of type_exception
              | Pstr_module of module_binding
              | Pstr_recmodule of module_binding list
              | Pstr_modtype of module_type_declaration
              | Pstr_open of open_declaration
              | Pstr_class of class_declaration list
              | Pstr_class_type of class_type_declaration list
              | Pstr_include of include_declaration
              | Pstr_attribute of attribute
              | Pstr_extension of extension * attributes
            and value_constraint =
              Parsetree.value_constraint =
                Pvc_constraint of {
                  locally_abstract_univars : string Asttypes.loc list;
                  typ : core_type;
                }
              | Pvc_coercion of { ground : core_type option;
                  coercion : core_type;
                }
            and value_binding =
              Parsetree.value_binding = {
              pvb_pat : pattern;
              pvb_expr : expression;
              pvb_constraint : value_constraint option;
              pvb_attributes : attributes;
              pvb_loc : Astlib__.Location.t;
            }
            and module_binding =
              Parsetree.module_binding = {
              pmb_name : string option Asttypes.loc;
              pmb_expr : module_expr;
              pmb_attributes : attributes;
              pmb_loc : Astlib__.Location.t;
            }
            type toplevel_phrase =
              Parsetree.toplevel_phrase =
                Ptop_def of structure
              | Ptop_dir of toplevel_directive
            and toplevel_directive =
              Parsetree.toplevel_directive = {
              pdir_name : string Asttypes.loc;
              pdir_arg : directive_argument option;
              pdir_loc : Astlib__.Location.t;
            }
            and directive_argument =
              Parsetree.directive_argument = {
              pdira_desc : directive_argument_desc;
              pdira_loc : Astlib__.Location.t;
            }
            and directive_argument_desc =
              Parsetree.directive_argument_desc =
                Pdir_string of string
              | Pdir_int of string * char option
              | Pdir_ident of Astlib__.Longident.t
              | Pdir_bool of bool
          end
        module Config :
          sig
            val ast_impl_magic_number : string
            val ast_intf_magic_number : string
          end
      end
    val version : int
    val string_version : string
    type types =
        < case : Ast.Parsetree.case; class_expr : Ast.Parsetree.class_expr;
          class_field : Ast.Parsetree.class_field;
          class_signature : Ast.Parsetree.class_signature;
          class_type : Ast.Parsetree.class_type;
          class_type_field : Ast.Parsetree.class_type_field;
          core_type : Ast.Parsetree.core_type;
          expression : Ast.Parsetree.expression;
          extension_constructor : Ast.Parsetree.extension_constructor;
          module_expr : Ast.Parsetree.module_expr;
          module_type : Ast.Parsetree.module_type;
          pattern : Ast.Parsetree.pattern;
          signature : Ast.Parsetree.signature;
          signature_item : Ast.Parsetree.signature_item;
          structure : Ast.Parsetree.structure;
          structure_item : Ast.Parsetree.structure_item;
          toplevel_phrase : Ast.Parsetree.toplevel_phrase;
          type_declaration : Ast.Parsetree.type_declaration;
          type_extension : Ast.Parsetree.type_extension >
        _types
    type _ witnesses += Version : types witnesses
    val migration_info : types migration_info
  end
module OCaml_current = OCaml_501
val all_versions : (module OCaml_version) list
module Convert :
  functor (A : OCaml_version) (B : OCaml_version) ->
    sig
      val copy_structure :
        A.Ast.Parsetree.structure -> B.Ast.Parsetree.structure
      val copy_signature :
        A.Ast.Parsetree.signature -> B.Ast.Parsetree.signature
      val copy_toplevel_phrase :
        A.Ast.Parsetree.toplevel_phrase -> B.Ast.Parsetree.toplevel_phrase
      val copy_core_type :
        A.Ast.Parsetree.core_type -> B.Ast.Parsetree.core_type
      val copy_expression :
        A.Ast.Parsetree.expression -> B.Ast.Parsetree.expression
      val copy_pattern : A.Ast.Parsetree.pattern -> B.Ast.Parsetree.pattern
      val copy_case : A.Ast.Parsetree.case -> B.Ast.Parsetree.case
      val copy_type_declaration :
        A.Ast.Parsetree.type_declaration -> B.Ast.Parsetree.type_declaration
      val copy_type_extension :
        A.Ast.Parsetree.type_extension -> B.Ast.Parsetree.type_extension
      val copy_extension_constructor :
        A.Ast.Parsetree.extension_constructor ->
        B.Ast.Parsetree.extension_constructor
      val copy_class_expr :
        A.Ast.Parsetree.class_expr -> B.Ast.Parsetree.class_expr
      val copy_class_field :
        A.Ast.Parsetree.class_field -> B.Ast.Parsetree.class_field
      val copy_class_type :
        A.Ast.Parsetree.class_type -> B.Ast.Parsetree.class_type
      val copy_class_signature :
        A.Ast.Parsetree.class_signature -> B.Ast.Parsetree.class_signature
      val copy_class_type_field :
        A.Ast.Parsetree.class_type_field -> B.Ast.Parsetree.class_type_field
      val copy_module_expr :
        A.Ast.Parsetree.module_expr -> B.Ast.Parsetree.module_expr
      val copy_module_type :
        A.Ast.Parsetree.module_type -> B.Ast.Parsetree.module_type
      val copy_signature_item :
        A.Ast.Parsetree.signature_item -> B.Ast.Parsetree.signature_item
      val copy_structure_item :
        A.Ast.Parsetree.structure_item -> B.Ast.Parsetree.structure_item
    end
module Find_version :
  sig
    type t =
        Impl of (module OCaml_version)
      | Intf of (module OCaml_version)
      | Unknown
    val from_magic : string -> t("DEBUG:rule", [Tag4 (("Ast", 6671), ((Tag1 ([Tag3 (("Parsetree", 6697), 0, (Tag1 ([Tag1 (("structure", 6699), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 30, 1515, 1519), ("ast/versions.mli", 30, 1515, 1533), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 0)), 1, 0); Tag1 (("signature", 6700), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 31, 1534, 1538), ("ast/versions.mli", 31, 1534, 1552), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 1)), 1, 0); Tag1 (("toplevel_phrase", 6701), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 32, 1553, 1557), ("ast/versions.mli", 32, 1553, 1577), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 2)), 1, 0); Tag1 (("core_type", 6702), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 33, 1578, 1582), ("ast/versions.mli", 33, 1578, 1596), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 3)), 1, 0); Tag1 (("expression", 6703), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 34, 1597, 1601), ("ast/versions.mli", 34, 1597, 1616), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 4)), 1, 0); Tag1 (("pattern", 6704), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 35, 1617, 1621), ("ast/versions.mli", 35, 1617, 1633), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 5)), 1, 0); Tag1 (("case", 6705), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 36, 1634, 1638), ("ast/versions.mli", 36, 1634, 1647), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 6)), 1, 0); Tag1 (("type_declaration", 6706), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 37, 1648, 1652), ("ast/versions.mli", 37, 1648, 1673), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 7)), 1, 0); Tag1 (("type_extension", 6707), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 38, 1674, 1678), ("ast/versions.mli", 38, 1674, 1697), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 8)), 1, 0); Tag1 (("extension_constructor", 6708), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 39, 1698, 1702), ("ast/versions.mli", 39, 1698, 1728), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 9)), 1, 0); Tag1 (("class_expr", 6709), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 40, 1729, 1733), ("ast/versions.mli", 40, 1729, 1748), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 10)), 1, 0); Tag1 (("class_field", 6710), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 41, 1749, 1753), ("ast/versions.mli", 41, 1749, 1769), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 11)), 1, 0); Tag1 (("class_type", 6711), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 42, 1770, 1774), ("ast/versions.mli", 42, 1770, 1789), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 12)), 1, 0); Tag1 (("class_signature", 6712), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 43, 1790, 1794), ("ast/versions.mli", 43, 1790, 1814), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 13)), 1, 0); Tag1 (("class_type_field", 6713), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 44, 1815, 1819), ("ast/versions.mli", 44, 1815, 1840), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 14)), 1, 0); Tag1 (("module_expr", 6714), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 45, 1841, 1845), ("ast/versions.mli", 45, 1841, 1861), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 15)), 1, 0); Tag1 (("module_type", 6715), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 46, 1862, 1866), ("ast/versions.mli", 46, 1862, 1882), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 16)), 1, 0); Tag1 (("signature_item", 6716), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 47, 1883, 1887), ("ast/versions.mli", 47, 1883, 1906), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 17)), 1, 0); Tag1 (("structure_item", 6717), (0, 0, 0, 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 48, 1907, 1911), ("ast/versions.mli", 48, 1907, 1930), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 18)), 1, 0)]), 0, (("ast/versions.mli", 29, 1490, 1492), ("ast/versions.mli", 49, 1931, 1936), 0), Tag1 ("Ppxlib_ast__Versions", 19)), 0, 0); Tag3 (("Config", 6698), 0, (Tag1 ([(("ast_impl_magic_number", 6718), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -66), 0, (("ast/versions.mli", 52, 1965, 1969), ("ast/versions.mli", 52, 1965, 2003), 0), 0, Tag1 ("Ppxlib_ast__Versions", 20)), 0); (("ast_intf_magic_number", 6719), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -65), 0, (("ast/versions.mli", 53, 2004, 2008), ("ast/versions.mli", 53, 2004, 2042), 0), 0, Tag1 ("Ppxlib_ast__Versions", 21)), 0)]), 0, (("ast/versions.mli", 51, 1943, 1945), ("ast/versions.mli", 54, 2043, 2048), 0), Tag1 ("Ppxlib_ast__Versions", 22)), 0, 0)])), 0, (("ast/versions.mli", 22, 1308, 1308), ("ast/versions.mli", 55, 2049, 2052), 0), Tag1 ("Ppxlib_ast__Versions", 23)), 0); Tag1 (("_types", 6672), ([(Tag4 ((Tag5 ("case", 1, (Tag10 (((0), 100000000, 0, -46), 0), 100000000, 0, -45), (Tag5 ("class_expr", 1, (Tag10 (((0), 100000000, 0, -62), 0), 100000000, 0, -61), (Tag5 ("class_field", 1, (Tag10 (((0), 100000000, 0, -64), 0), 100000000, 0, -63), (Tag5 ("class_signature", 1, (Tag10 (((0), 100000000, 0, -56), 0), 100000000, 0, -55), (Tag5 ("class_type", 1, (Tag10 (((0), 100000000, 0, -28), 0), 100000000, 0, -27), (Tag5 ("class_type_field", 1, (Tag10 (((0), 100000000, 0, -42), 0), 100000000, 0, -41), (Tag5 ("core_type", 1, (Tag10 (((0), 100000000, 0, -32), 0), 100000000, 0, -31), (Tag5 ("expression", 1, (Tag10 (((0), 100000000, 0, -54), 0), 100000000, 0, -53), (Tag5 ("extension_constructor", 1, (Tag10 (((0), 100000000, 0, -40), 0), 100000000, 0, -39), (Tag5 ("module_expr", 1, (Tag10 (((0), 100000000, 0, -38), 0), 100000000, 0, -37), (Tag5 ("module_type", 1, (Tag10 (((0), 100000000, 0, -36), 0), 100000000, 0, -35), (Tag5 ("pattern", 1, (Tag10 (((0), 100000000, 0, -34), 0), 100000000, 0, -33), (Tag5 ("signature", 1, (Tag10 (((0), 100000000, 0, -50), 0), 100000000, 0, -49), (Tag5 ("signature_item", 1, (Tag10 (((0), 100000000, 0, -58), 0), 100000000, 0, -57), (Tag5 ("structure", 1, (Tag10 (((0), 100000000, 0, -52), 0), 100000000, 0, -51), (Tag5 ("structure_item", 1, (Tag10 (((0), 100000000, 0, -30), 0), 100000000, 0, -29), (Tag5 ("toplevel_phrase", 1, (Tag10 (((0), 100000000, 0, -44), 0), 100000000, 0, -43), (Tag5 ("type_declaration", 1, (Tag10 (((0), 100000000, 0, -60), 0), 100000000, 0, -59), (Tag5 ("type_extension", 1, (Tag10 (((0), 100000000, 0, -48), 0), 100000000, 0, -47), (0, 100000000, 0, -26)), 100000000, 0, 59)), 100000000, 0, 60)), 100000000, 0, 61)), 100000000, 0, 62)), 100000000, 0, 63)), 100000000, 0, 64)), 100000000, 0, 65)), 100000000, 0, 66)), 100000000, 0, 67)), 100000000, 0, 68)), 100000000, 0, 69)), 100000000, 0, 70)), 100000000, 0, 71)), 100000000, 0, 72)), 100000000, 0, 73)), 100000000, 0, 74)), 100000000, 0, 75)), 100000000, 0, 76)), 100000000, 0, -7), (0)), 100000000, 0, -6)], 1, 0, 1, ((Tag4 ((Tag5 ("case", 1, (Tag10 (((0), 100000000, 0, -46), 0), 100000000, 0, -45), (Tag5 ("class_expr", 1, (Tag10 (((0), 100000000, 0, -62), 0), 100000000, 0, -61), (Tag5 ("class_field", 1, (Tag10 (((0), 100000000, 0, -64), 0), 100000000, 0, -63), (Tag5 ("class_signature", 1, (Tag10 (((0), 100000000, 0, -56), 0), 100000000, 0, -55), (Tag5 ("class_type", 1, (Tag10 (((0), 100000000, 0, -28), 0), 100000000, 0, -27), (Tag5 ("class_type_field", 1, (Tag10 (((0), 100000000, 0, -42), 0), 100000000, 0, -41), (Tag5 ("core_type", 1, (Tag10 (((0), 100000000, 0, -32), 0), 100000000, 0, -31), (Tag5 ("expression", 1, (Tag10 (((0), 100000000, 0, -54), 0), 100000000, 0, -53), (Tag5 ("extension_constructor", 1, (Tag10 (((0), 100000000, 0, -40), 0), 100000000, 0, -39), (Tag5 ("module_expr", 1, (Tag10 (((0), 100000000, 0, -38), 0), 100000000, 0, -37), (Tag5 ("module_type", 1, (Tag10 (((0), 100000000, 0, -36), 0), 100000000, 0, -35), (Tag5 ("pattern", 1, (Tag10 (((0), 100000000, 0, -34), 0), 100000000, 0, -33), (Tag5 ("signature", 1, (Tag10 (((0), 100000000, 0, -50), 0), 100000000, 0, -49), (Tag5 ("signature_item", 1, (Tag10 (((0), 100000000, 0, -58), 0), 100000000, 0, -57), (Tag5 ("structure", 1, (Tag10 (((0), 100000000, 0, -52), 0), 100000000, 0, -51), (Tag5 ("structure_item", 1, (Tag10 (((0), 100000000, 0, -30), 0), 100000000, 0, -29), (Tag5 ("toplevel_phrase", 1, (Tag10 (((0), 100000000, 0, -44), 0), 100000000, 0, -43), (Tag5 ("type_declaration", 1, (Tag10 (((0), 100000000, 0, -60), 0), 100000000, 0, -59), (Tag5 ("type_extension", 1, (Tag10 (((0), 100000000, 0, -48), 0), 100000000, 0, -47), (0, 100000000, 0, -26)), 100000000, 0, 59)), 100000000, 0, 60)), 100000000, 0, 61)), 100000000, 0, 62)), 100000000, 0, 63)), 100000000, 0, 64)), 100000000, 0, 65)), 100000000, 0, 66)), 100000000, 0, 67)), 100000000, 0, 68)), 100000000, 0, 69)), 100000000, 0, 70)), 100000000, 0, 71)), 100000000, 0, 72)), 100000000, 0, 73)), 100000000, 0, 74)), 100000000, 0, 75)), 100000000, 0, 76)), 100000000, 0, -7), (0)), 100000000, 0, -6)), [31], [0], 0, 0, (("ast/versions.mli", 59, 2130, 2130), ("ast/versions.mli", 82, 2830, 2833), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 24)), 1, 0); Tag1 (("witnesses", 6673), ([((("_")), 100000000, 0, -5)], 1, 1, 0, 0, [15], [0], 0, 0, (("ast/versions.mli", 87, 2964, 2964), ("ast/versions.mli", 87, 2964, 3011), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 25)), 1, 0); Tag1 (("migration_info", 6674), ([((("_")), 100000000, 0, -4)], 1, 0, 1, 0, [7], [2], 0, 0, (("ast/versions.mli", 91, 3107, 3107), ("ast/versions.mli", 91, 3107, 3128), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 26)), 1, 0); Tag4 (("OCaml_version", 6675), ((Tag1 ([Tag3 (("Ast", 6720), 0, (((("Ast", 6671))), 0, (("ast/versions.mli", 98, 3300, 3302), ("ast/versions.mli", 98, 3300, 3318), 0), Tag1 ("Ppxlib_ast__Versions", 27)), 0, 0); (("version", 6721), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -133), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 6722), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -132), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 6723), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -113), 0), 100000000, 0, -112), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -129), 0), 100000000, 0, -128), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -131), 0), 100000000, 0, -130), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -123), 0), 100000000, 0, -122), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -95), 0), 100000000, 0, -94), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -109), 0), 100000000, 0, -108), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -99), 0), 100000000, 0, -98), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -121), 0), 100000000, 0, -120), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -107), 0), 100000000, 0, -106), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -105), 0), 100000000, 0, -104), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -103), 0), 100000000, 0, -102), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -101), 0), 100000000, 0, -100), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -117), 0), 100000000, 0, -116), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -125), 0), 100000000, 0, -124), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -119), 0), 100000000, 0, -118), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -97), 0), 100000000, 0, -96), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -111), 0), 100000000, 0, -110), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -127), 0), 100000000, 0, -126), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6720)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -115), 0), 100000000, 0, -114), (0, 100000000, 0, -93)), 100000000, 0, 99)), 100000000, 0, 100)), 100000000, 0, 101)), 100000000, 0, 102)), 100000000, 0, 103)), 100000000, 0, 104)), 100000000, 0, 105)), 100000000, 0, 106)), 100000000, 0, 107)), 100000000, 0, 108)), 100000000, 0, 109)), 100000000, 0, 110)), 100000000, 0, 111)), 100000000, 0, 112)), 100000000, 0, 113)), 100000000, 0, 114)), 100000000, 0, 115)), 100000000, 0, 116)), 100000000, 0, -74), (0)), 100000000, 0, -73)], (0)), 100000000, 0, -72)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 6724), ((("witnesses", 6673)), [((("_")), 100000000, 0, -71)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 6723)), 0, (0)), 100000000, 0, -70)], (0)), 100000000, 0, -69)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 6725), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 6723)), 0, (0)), 100000000, 0, -68)], (0)), 100000000, 0, -67), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)])), 0, (("ast/versions.mli", 95, 3226, 3226), ("ast/versions.mli", 137, 4977, 4980), 0), Tag1 ("Ppxlib_ast__Versions", 33)), 0); Tag3 (("OCaml_402", 6676), 0, (Tag1 ([Tag3 (("Ast", 6726), 0, (Tag1 ([Tag3 (("Asttypes", 6732), 0, (Tag1 ([Tag1 (("constant", 6735), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -214)]), 0, (("astlib/ast_402.ml", 24, 1559, 1565), ("astlib/ast_402.ml", 24, 1559, 1581), 0), 0, Tag1 ("Astlib__Ast_402", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -215)]), 0, (("astlib/ast_402.ml", 25, 1582, 1586), ("astlib/ast_402.ml", 25, 1582, 1606), 0), 0, Tag1 ("Astlib__Ast_402", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -216); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -218)], (0)), 100000000, 0, -217)]), 0, (("astlib/ast_402.ml", 26, 1607, 1611), ("astlib/ast_402.ml", 26, 1607, 1651), 0), 0, Tag1 ("Astlib__Ast_402", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -219)]), 0, (("astlib/ast_402.ml", 27, 1652, 1656), ("astlib/ast_402.ml", 27, 1652, 1679), 0), 0, Tag1 ("Astlib__Ast_402", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -220)]), 0, (("astlib/ast_402.ml", 28, 1680, 1684), ("astlib/ast_402.ml", 28, 1680, 1706), 0), 0, Tag1 ("Astlib__Ast_402", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -221)]), 0, (("astlib/ast_402.ml", 29, 1707, 1711), ("astlib/ast_402.ml", 29, 1707, 1733), 0), 0, Tag1 ("Astlib__Ast_402", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -222)]), 0, (("astlib/ast_402.ml", 30, 1734, 1738), ("astlib/ast_402.ml", 30, 1734, 1768), 0), 0, Tag1 ("Astlib__Ast_402", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -213)), 0, 0, 0, 0, (("astlib/ast_402.ml", 23, 1505, 1507), ("astlib/ast_402.ml", 30, 1734, 1768), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 0)), 1, 0); Tag1 (("rec_flag", 6736), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_402.ml", 32, 1770, 1824), ("astlib/ast_402.ml", 32, 1770, 1836), 0), 0, Tag1 ("Astlib__Ast_402", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_402.ml", 32, 1770, 1837), ("astlib/ast_402.ml", 32, 1770, 1848), 0), 0, Tag1 ("Astlib__Ast_402", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -212)), 0, 0, 0, 0, (("astlib/ast_402.ml", 32, 1770, 1772), ("astlib/ast_402.ml", 32, 1770, 1848), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 8)), 1, 0); Tag1 (("direction_flag", 6737), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_402.ml", 34, 1850, 1916), ("astlib/ast_402.ml", 34, 1850, 1920), 0), 0, Tag1 ("Astlib__Ast_402", 12)); (("Downto", 333), (0), 0, (("astlib/ast_402.ml", 34, 1850, 1921), ("astlib/ast_402.ml", 34, 1850, 1929), 0), 0, Tag1 ("Astlib__Ast_402", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -211)), 0, 0, 0, 0, (("astlib/ast_402.ml", 34, 1850, 1852), ("astlib/ast_402.ml", 34, 1850, 1929), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 11)), 1, 0); Tag1 (("private_flag", 6738), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_402.ml", 36, 1931, 1993), ("astlib/ast_402.ml", 36, 1931, 2000), 0), 0, Tag1 ("Astlib__Ast_402", 15)); (("Public", 336), (0), 0, (("astlib/ast_402.ml", 36, 1931, 2001), ("astlib/ast_402.ml", 36, 1931, 2009), 0), 0, Tag1 ("Astlib__Ast_402", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -210)), 0, 0, 0, 0, (("astlib/ast_402.ml", 36, 1931, 1933), ("astlib/ast_402.ml", 36, 1931, 2009), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 14)), 1, 0); Tag1 (("mutable_flag", 6739), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_402.ml", 38, 2011, 2073), ("astlib/ast_402.ml", 38, 2011, 2082), 0), 0, Tag1 ("Astlib__Ast_402", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_402.ml", 38, 2011, 2083), ("astlib/ast_402.ml", 38, 2011, 2092), 0), 0, Tag1 ("Astlib__Ast_402", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -209)), 0, 0, 0, 0, (("astlib/ast_402.ml", 38, 2011, 2013), ("astlib/ast_402.ml", 38, 2011, 2092), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 17)), 1, 0); Tag1 (("virtual_flag", 6740), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_402.ml", 40, 2094, 2156), ("astlib/ast_402.ml", 40, 2094, 2163), 0), 0, Tag1 ("Astlib__Ast_402", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_402.ml", 40, 2094, 2164), ("astlib/ast_402.ml", 40, 2094, 2174), 0), 0, Tag1 ("Astlib__Ast_402", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -208)), 0, 0, 0, 0, (("astlib/ast_402.ml", 40, 2094, 2096), ("astlib/ast_402.ml", 40, 2094, 2174), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 20)), 1, 0); Tag1 (("override_flag", 6741), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_402.ml", 42, 2176, 2240), ("astlib/ast_402.ml", 42, 2176, 2248), 0), 0, Tag1 ("Astlib__Ast_402", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_402.ml", 42, 2176, 2249), ("astlib/ast_402.ml", 42, 2176, 2256), 0), 0, Tag1 ("Astlib__Ast_402", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -207)), 0, 0, 0, 0, (("astlib/ast_402.ml", 42, 2176, 2178), ("astlib/ast_402.ml", 42, 2176, 2256), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 23)), 1, 0); Tag1 (("closed_flag", 6742), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_402.ml", 44, 2258, 2318), ("astlib/ast_402.ml", 44, 2258, 2324), 0), 0, Tag1 ("Astlib__Ast_402", 27)); (("Open", 348), (0), 0, (("astlib/ast_402.ml", 44, 2258, 2325), ("astlib/ast_402.ml", 44, 2258, 2331), 0), 0, Tag1 ("Astlib__Ast_402", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -206)), 0, 0, 0, 0, (("astlib/ast_402.ml", 44, 2258, 2260), ("astlib/ast_402.ml", 44, 2258, 2331), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 26)), 1, 0); Tag1 (("label", 6743), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -205)), 0, 0, 0, 0, (("astlib/ast_402.ml", 46, 2333, 2335), ("astlib/ast_402.ml", 46, 2333, 2354), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 29)), 1, 0); Tag1 (("loc", 6744), ([((("a")), 100000000, 0, -203)], 1, [[(("txt", 351), 0, ((("a")), 100000000, 0, -203), (("astlib/ast_402.ml", 49, 2392, 2396), ("astlib/ast_402.ml", 49, 2392, 2405), 0), 0, Tag1 ("Astlib__Ast_402", 31)); (("loc", 361), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -204), (("astlib/ast_402.ml", 50, 2406, 2410), ("astlib/ast_402.ml", 50, 2406, 2427), 0), 0, Tag1 ("Astlib__Ast_402", 32))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -203)], (0)), 100000000, 0, -202)), [25], [0], 0, 0, (("astlib/ast_402.ml", 48, 2356, 2358), ("astlib/ast_402.ml", 51, 2428, 2431), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 30)), 1, 0); Tag1 (("variance", 6745), (0, 0, Tag1 ([(("Covariant", 634), (0), 0, (("astlib/ast_402.ml", 55, 2488, 2492), ("astlib/ast_402.ml", 55, 2488, 2503), 0), 0, Tag1 ("Astlib__Ast_402", 34)); (("Contravariant", 635), (0), 0, (("astlib/ast_402.ml", 56, 2504, 2508), ("astlib/ast_402.ml", 56, 2504, 2523), 0), 0, Tag1 ("Astlib__Ast_402", 35)); (("Invariant", 636), (0), 0, (("astlib/ast_402.ml", 57, 2524, 2528), ("astlib/ast_402.ml", 57, 2524, 2539), 0), 0, Tag1 ("Astlib__Ast_402", 36))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -201)), 0, 0, 0, 0, (("astlib/ast_402.ml", 54, 2434, 2436), ("astlib/ast_402.ml", 57, 2524, 2539), 0), 0, 1, 0, Tag1 ("Astlib__Ast_402", 33)), 1, 0)]), 0, (("astlib/ast_402.ml", 20, 1415, 1415), ("astlib/ast_402.ml", 58, 2540, 2543), 0), Tag1 ("Astlib__Ast_402", 37)), 0, 0); Tag3 (("Parsetree", 6733), 0, (Tag1 ([Tag1 (("attribute", 6746), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -779)], (0)), 100000000, 0, -778); (Tag3 ((("payload", 6749)), 0, (0)), 100000000, 0, -780)]), 100000000, 0, -777)), 0, 0, 0, 0, (("astlib/ast_402.ml", 67, 2670, 2672), ("astlib/ast_402.ml", 67, 2670, 2709), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 38)), 1, 0); Tag1 (("extension", 6747), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -775)], (0)), 100000000, 0, -774); (Tag3 ((("payload", 6749)), 0, (0)), 100000000, 0, -776)]), 100000000, 0, -773)), 0, 0, 0, 0, (("astlib/ast_402.ml", 75, 2884, 2886), ("astlib/ast_402.ml", 75, 2884, 2922), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 39)), 2, 0); Tag1 (("attributes", 6748), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 6746)), 0, (0)), 100000000, 0, -772)], (0)), 100000000, 0, -771)), 0, 0, 0, 0, (("astlib/ast_402.ml", 82, 3047, 3049), ("astlib/ast_402.ml", 82, 3047, 3080), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 40)), 2, 0); Tag1 (("payload", 6749), (0, 0, Tag1 ([(("PStr", 693), ([(Tag3 ((("structure", 6796)), 0, (0)), 100000000, 0, -766)]), 0, (("astlib/ast_402.ml", 85, 3134, 3138), ("astlib/ast_402.ml", 85, 3134, 3157), 0), 0, Tag1 ("Astlib__Ast_402", 93)); (("PTyp", 694), ([(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -767)]), 0, (("astlib/ast_402.ml", 86, 3158, 3162), ("astlib/ast_402.ml", 86, 3158, 3181), 0), 0, Tag1 ("Astlib__Ast_402", 94)); (("PPat", 695), ([(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -768); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -770)], (0)), 100000000, 0, -769)]), 0, (("astlib/ast_402.ml", 87, 3193, 3197), ("astlib/ast_402.ml", 87, 3193, 3234), 0), 0, Tag1 ("Astlib__Ast_402", 95))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -765)), 0, 0, 0, 0, (("astlib/ast_402.ml", 84, 3082, 3084), ("astlib/ast_402.ml", 87, 3193, 3234), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 41)), 2, 0); Tag1 (("core_type", 6750), (0, 0, [[(("ptyp_desc", 696), 0, (Tag3 ((("core_type_desc", 6751)), 0, (0)), 100000000, 0, -762), (("astlib/ast_402.ml", 95, 3381, 3388), ("astlib/ast_402.ml", 95, 3381, 3414), 0), 0, Tag1 ("Astlib__Ast_402", 96)); (("ptyp_loc", 697), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -763), (("astlib/ast_402.ml", 96, 3415, 3422), ("astlib/ast_402.ml", 96, 3415, 3443), 0), 0, Tag1 ("Astlib__Ast_402", 97)); (("ptyp_attributes", 698), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -764), (("astlib/ast_402.ml", 97, 3444, 3451), ("astlib/ast_402.ml", 97, 3444, 3479), 0), 0, Tag1 ("Astlib__Ast_402", 98))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -761)), 0, 0, 0, 0, (("astlib/ast_402.ml", 93, 3317, 3319), ("astlib/ast_402.ml", 98, 3504, 3511), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 42)), 2, 0); Tag1 (("core_type_desc", 6751), (0, 0, Tag1 ([(("Ptyp_any", 699), (0), 0, (("astlib/ast_402.ml", 101, 3579, 3583), ("astlib/ast_402.ml", 101, 3579, 3593), 0), 0, Tag1 ("Astlib__Ast_402", 99)); (("Ptyp_var", 700), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -728)]), 0, (("astlib/ast_402.ml", 103, 3613, 3617), ("astlib/ast_402.ml", 103, 3613, 3637), 0), 0, Tag1 ("Astlib__Ast_402", 100)); (("Ptyp_arrow", 701), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "label"), 0, (0)), 100000000, 0, -729); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -730); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -731)]), 0, (("astlib/ast_402.ml", 105, 3657, 3661), ("astlib/ast_402.ml", 105, 3657, 3706), 0), 0, Tag1 ("Astlib__Ast_402", 101)); (("Ptyp_tuple", 702), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -733)], (0)), 100000000, 0, -732)]), 0, (("astlib/ast_402.ml", 110, 3847, 3851), ("astlib/ast_402.ml", 110, 3847, 3881), 0), 0, Tag1 ("Astlib__Ast_402", 102)); (("Ptyp_constr", 703), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -735)], (0)), 100000000, 0, -734); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -737)], (0)), 100000000, 0, -736)]), 0, (("astlib/ast_402.ml", 115, 3954, 3958), ("astlib/ast_402.ml", 115, 3954, 4007), 0), 0, Tag1 ("Astlib__Ast_402", 103)); (("Ptyp_object", 707), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -740); (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -741); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -742)]), 100000000, 0, -739)], (0)), 100000000, 0, -738); (Tag3 (Tag1 ((("Asttypes", 6732)), "closed_flag"), 0, (0)), 100000000, 0, -743)]), 0, (("astlib/ast_402.ml", 120, 4101, 4105), ("astlib/ast_402.ml", 120, 4101, 4174), 0), 0, Tag1 ("Astlib__Ast_402", 104)); (("Ptyp_class", 708), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -745)], (0)), 100000000, 0, -744); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -747)], (0)), 100000000, 0, -746)]), 0, (("astlib/ast_402.ml", 124, 4297, 4301), ("astlib/ast_402.ml", 124, 4297, 4349), 0), 0, Tag1 ("Astlib__Ast_402", 105)); (("Ptyp_alias", 709), ([(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -748); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -749)]), 0, (("astlib/ast_402.ml", 129, 4446, 4450), ("astlib/ast_402.ml", 129, 4446, 4484), 0), 0, Tag1 ("Astlib__Ast_402", 106)); (("Ptyp_variant", 710), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 6753)), 0, (0)), 100000000, 0, -751)], (0)), 100000000, 0, -750); (Tag3 (Tag1 ((("Asttypes", 6732)), "closed_flag"), 0, (0)), 100000000, 0, -752); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 6732)), "label"), 0, (0)), 100000000, 0, -755)], (0)), 100000000, 0, -754)], (0)), 100000000, 0, -753)]), 0, (("astlib/ast_402.ml", 131, 4509, 4513), ("astlib/ast_402.ml", 131, 4509, 4579), 0), 0, Tag1 ("Astlib__Ast_402", 107)); (("Ptyp_poly", 711), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -757)], (0)), 100000000, 0, -756); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -758)]), 0, (("astlib/ast_402.ml", 137, 4855, 4859), ("astlib/ast_402.ml", 137, 4855, 4897), 0), 0, Tag1 ("Astlib__Ast_402", 108)); (("Ptyp_package", 712), ([(Tag3 ((("package_type", 6752)), 0, (0)), 100000000, 0, -759)]), 0, (("astlib/ast_402.ml", 157, 5451, 5455), ("astlib/ast_402.ml", 157, 5451, 5485), 0), 0, Tag1 ("Astlib__Ast_402", 109)); (("Ptyp_extension", 713), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -760)]), 0, (("astlib/ast_402.ml", 159, 5513, 5517), ("astlib/ast_402.ml", 159, 5513, 5546), 0), 0, Tag1 ("Astlib__Ast_402", 110))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -727)), 0, 0, 0, 0, (("astlib/ast_402.ml", 100, 3513, 3515), ("astlib/ast_402.ml", 159, 5513, 5546), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 43)), 2, 0); Tag1 (("package_type", 6752), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -721)], (0)), 100000000, 0, -720); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -725)], (0)), 100000000, 0, -724); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -726)]), 100000000, 0, -723)], (0)), 100000000, 0, -722)]), 100000000, 0, -719)), 0, 0, 0, 0, (("astlib/ast_402.ml", 162, 5570, 5572), ("astlib/ast_402.ml", 162, 5570, 5643), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 44)), 2, 0); Tag1 (("row_field", 6753), (0, 0, Tag1 ([(("Rtag", 714), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "label"), 0, (0)), 100000000, 0, -713); (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -714); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -715); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -717)], (0)), 100000000, 0, -716)]), 0, (("astlib/ast_402.ml", 169, 5804, 5808), ("astlib/ast_402.ml", 169, 5804, 5860), 0), 0, Tag1 ("Astlib__Ast_402", 111)); (("Rinherit", 715), ([(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -718)]), 0, (("astlib/ast_402.ml", 182, 6384, 6388), ("astlib/ast_402.ml", 182, 6384, 6411), 0), 0, Tag1 ("Astlib__Ast_402", 112))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -712)), 0, 0, 0, 0, (("astlib/ast_402.ml", 168, 5748, 5750), ("astlib/ast_402.ml", 182, 6384, 6411), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 45)), 2, 0); Tag1 (("pattern", 6754), (0, 0, [[(("ppat_desc", 716), 0, (Tag3 ((("pattern_desc", 6755)), 0, (0)), 100000000, 0, -709), (("astlib/ast_402.ml", 189, 6513, 6520), ("astlib/ast_402.ml", 189, 6513, 6544), 0), 0, Tag1 ("Astlib__Ast_402", 113)); (("ppat_loc", 717), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -710), (("astlib/ast_402.ml", 190, 6545, 6552), ("astlib/ast_402.ml", 190, 6545, 6573), 0), 0, Tag1 ("Astlib__Ast_402", 114)); (("ppat_attributes", 718), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -711), (("astlib/ast_402.ml", 191, 6574, 6581), ("astlib/ast_402.ml", 191, 6574, 6609), 0), 0, Tag1 ("Astlib__Ast_402", 115))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -708)), 0, 0, 0, 0, (("astlib/ast_402.ml", 187, 6453, 6455), ("astlib/ast_402.ml", 192, 6634, 6641), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 46)), 2, 0); Tag1 (("pattern_desc", 6755), (0, 0, Tag1 ([(("Ppat_any", 719), (0), 0, (("astlib/ast_402.ml", 195, 6705, 6709), ("astlib/ast_402.ml", 195, 6705, 6719), 0), 0, Tag1 ("Astlib__Ast_402", 116)); (("Ppat_var", 720), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -673)], (0)), 100000000, 0, -672)]), 0, (("astlib/ast_402.ml", 197, 6738, 6742), ("astlib/ast_402.ml", 197, 6738, 6766), 0), 0, Tag1 ("Astlib__Ast_402", 117)); (("Ppat_alias", 721), ([(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -674); (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -676)], (0)), 100000000, 0, -675)]), 0, (("astlib/ast_402.ml", 199, 6785, 6789), ("astlib/ast_402.ml", 199, 6785, 6825), 0), 0, Tag1 ("Astlib__Ast_402", 118)); (("Ppat_constant", 722), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "constant"), 0, (0)), 100000000, 0, -677)]), 0, (("astlib/ast_402.ml", 201, 6850, 6854), ("astlib/ast_402.ml", 201, 6850, 6881), 0), 0, Tag1 ("Astlib__Ast_402", 119)); (("Ppat_interval", 723), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "constant"), 0, (0)), 100000000, 0, -678); (Tag3 (Tag1 ((("Asttypes", 6732)), "constant"), 0, (0)), 100000000, 0, -679)]), 0, (("astlib/ast_402.ml", 203, 6930, 6934), ("astlib/ast_402.ml", 203, 6930, 6972), 0), 0, Tag1 ("Astlib__Ast_402", 120)); (("Ppat_tuple", 724), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -681)], (0)), 100000000, 0, -680)]), 0, (("astlib/ast_402.ml", 208, 7112, 7116), ("astlib/ast_402.ml", 208, 7112, 7144), 0), 0, Tag1 ("Astlib__Ast_402", 121)); (("Ppat_construct", 725), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -683)], (0)), 100000000, 0, -682); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -685)], (0)), 100000000, 0, -684)]), 0, (("astlib/ast_402.ml", 213, 7217, 7221), ("astlib/ast_402.ml", 213, 7217, 7273), 0), 0, Tag1 ("Astlib__Ast_402", 122)); (("Ppat_variant", 726), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "label"), 0, (0)), 100000000, 0, -686); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -688)], (0)), 100000000, 0, -687)]), 0, (("astlib/ast_402.ml", 218, 7422, 7426), ("astlib/ast_402.ml", 218, 7422, 7466), 0), 0, Tag1 ("Astlib__Ast_402", 123)); (("Ppat_record", 727), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -692)], (0)), 100000000, 0, -691); (Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -693)]), 100000000, 0, -690)], (0)), 100000000, 0, -689); (Tag3 (Tag1 ((("Asttypes", 6732)), "closed_flag"), 0, (0)), 100000000, 0, -694)]), 0, (("astlib/ast_402.ml", 222, 7553, 7557), ("astlib/ast_402.ml", 222, 7553, 7620), 0), 0, Tag1 ("Astlib__Ast_402", 124)); (("Ppat_array", 728), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -696)], (0)), 100000000, 0, -695)]), 0, (("astlib/ast_402.ml", 228, 7774, 7778), ("astlib/ast_402.ml", 228, 7774, 7806), 0), 0, Tag1 ("Astlib__Ast_402", 125)); (("Ppat_or", 729), ([(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -697); (Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -698)]), 0, (("astlib/ast_402.ml", 230, 7841, 7845), ("astlib/ast_402.ml", 230, 7841, 7875), 0), 0, Tag1 ("Astlib__Ast_402", 126)); (("Ppat_constraint", 730), ([(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -699); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -700)]), 0, (("astlib/ast_402.ml", 232, 7900, 7904), ("astlib/ast_402.ml", 232, 7900, 7944), 0), 0, Tag1 ("Astlib__Ast_402", 127)); (("Ppat_type", 731), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -702)], (0)), 100000000, 0, -701)]), 0, (("astlib/ast_402.ml", 234, 7969, 7973), ("astlib/ast_402.ml", 234, 7969, 8003), 0), 0, Tag1 ("Astlib__Ast_402", 128)); (("Ppat_lazy", 732), ([(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -703)]), 0, (("astlib/ast_402.ml", 236, 8028, 8032), ("astlib/ast_402.ml", 236, 8028, 8054), 0), 0, Tag1 ("Astlib__Ast_402", 129)); (("Ppat_unpack", 733), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -705)], (0)), 100000000, 0, -704)]), 0, (("astlib/ast_402.ml", 238, 8078, 8082), ("astlib/ast_402.ml", 238, 8078, 8109), 0), 0, Tag1 ("Astlib__Ast_402", 130)); (("Ppat_exception", 734), ([(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -706)]), 0, (("astlib/ast_402.ml", 243, 8256, 8260), ("astlib/ast_402.ml", 243, 8256, 8287), 0), 0, Tag1 ("Astlib__Ast_402", 131)); (("Ppat_extension", 735), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -707)]), 0, (("astlib/ast_402.ml", 245, 8316, 8320), ("astlib/ast_402.ml", 245, 8316, 8349), 0), 0, Tag1 ("Astlib__Ast_402", 132))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -671)), 0, 0, 0, 0, (("astlib/ast_402.ml", 194, 6643, 6645), ("astlib/ast_402.ml", 245, 8316, 8349), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 47)), 2, 0); Tag1 (("expression", 6756), (0, 0, [[(("pexp_desc", 736), 0, (Tag3 ((("expression_desc", 6757)), 0, (0)), 100000000, 0, -668), (("astlib/ast_402.ml", 252, 8466, 8473), ("astlib/ast_402.ml", 252, 8466, 8500), 0), 0, Tag1 ("Astlib__Ast_402", 133)); (("pexp_loc", 737), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -669), (("astlib/ast_402.ml", 253, 8501, 8508), ("astlib/ast_402.ml", 253, 8501, 8529), 0), 0, Tag1 ("Astlib__Ast_402", 134)); (("pexp_attributes", 738), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -670), (("astlib/ast_402.ml", 254, 8530, 8537), ("astlib/ast_402.ml", 254, 8530, 8565), 0), 0, Tag1 ("Astlib__Ast_402", 135))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -667)), 0, 0, 0, 0, (("astlib/ast_402.ml", 250, 8400, 8402), ("astlib/ast_402.ml", 255, 8590, 8597), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 48)), 2, 0); Tag1 (("expression_desc", 6757), (0, 0, Tag1 ([(("Pexp_ident", 739), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -569)], (0)), 100000000, 0, -568)]), 0, (("astlib/ast_402.ml", 258, 8667, 8671), ("astlib/ast_402.ml", 258, 8667, 8702), 0), 0, Tag1 ("Astlib__Ast_402", 136)); (("Pexp_constant", 740), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "constant"), 0, (0)), 100000000, 0, -570)]), 0, (("astlib/ast_402.ml", 262, 8749, 8753), ("astlib/ast_402.ml", 262, 8749, 8780), 0), 0, Tag1 ("Astlib__Ast_402", 137)); (("Pexp_let", 741), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "rec_flag"), 0, (0)), 100000000, 0, -571); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 6799)), 0, (0)), 100000000, 0, -573)], (0)), 100000000, 0, -572); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -574)]), 0, (("astlib/ast_402.ml", 264, 8829, 8833), ("astlib/ast_402.ml", 264, 8829, 8889), 0), 0, Tag1 ("Astlib__Ast_402", 138)); (("Pexp_function", 742), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 6758)), 0, (0)), 100000000, 0, -576)], (0)), 100000000, 0, -575)]), 0, (("astlib/ast_402.ml", 268, 9057, 9061), ("astlib/ast_402.ml", 268, 9057, 9089), 0), 0, Tag1 ("Astlib__Ast_402", 139)); (("Pexp_fun", 743), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "label"), 0, (0)), 100000000, 0, -577); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -579)], (0)), 100000000, 0, -578); (Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -580); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -581)]), 0, (("astlib/ast_402.ml", 270, 9141, 9145), ("astlib/ast_402.ml", 270, 9141, 9207), 0), 0, Tag1 ("Astlib__Ast_402", 140)); (("Pexp_apply", 744), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -582); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "label"), 0, (0)), 100000000, 0, -585); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -586)]), 100000000, 0, -584)], (0)), 100000000, 0, -583)]), 0, (("astlib/ast_402.ml", 281, 9712, 9716), ("astlib/ast_402.ml", 281, 9712, 9770), 0), 0, Tag1 ("Astlib__Ast_402", 141)); (("Pexp_match", 745), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -587); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 6758)), 0, (0)), 100000000, 0, -589)], (0)), 100000000, 0, -588)]), 0, (("astlib/ast_402.ml", 288, 9954, 9958), ("astlib/ast_402.ml", 288, 9954, 9996), 0), 0, Tag1 ("Astlib__Ast_402", 142)); (("Pexp_try", 746), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -590); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 6758)), 0, (0)), 100000000, 0, -592)], (0)), 100000000, 0, -591)]), 0, (("astlib/ast_402.ml", 290, 10053, 10057), ("astlib/ast_402.ml", 290, 10053, 10093), 0), 0, Tag1 ("Astlib__Ast_402", 143)); (("Pexp_tuple", 747), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -594)], (0)), 100000000, 0, -593)]), 0, (("astlib/ast_402.ml", 292, 10148, 10152), ("astlib/ast_402.ml", 292, 10148, 10183), 0), 0, Tag1 ("Astlib__Ast_402", 144)); (("Pexp_construct", 748), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -596)], (0)), 100000000, 0, -595); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -598)], (0)), 100000000, 0, -597)]), 0, (("astlib/ast_402.ml", 297, 10256, 10260), ("astlib/ast_402.ml", 297, 10256, 10315), 0), 0, Tag1 ("Astlib__Ast_402", 145)); (("Pexp_variant", 749), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "label"), 0, (0)), 100000000, 0, -599); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -601)], (0)), 100000000, 0, -600)]), 0, (("astlib/ast_402.ml", 302, 10460, 10464), ("astlib/ast_402.ml", 302, 10460, 10507), 0), 0, Tag1 ("Astlib__Ast_402", 146)); (("Pexp_record", 750), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -605)], (0)), 100000000, 0, -604); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -606)]), 100000000, 0, -603)], (0)), 100000000, 0, -602); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -608)], (0)), 100000000, 0, -607)]), 0, (("astlib/ast_402.ml", 306, 10594, 10598), ("astlib/ast_402.ml", 306, 10594, 10670), 0), 0, Tag1 ("Astlib__Ast_402", 147)); (("Pexp_field", 751), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -609); (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -611)], (0)), 100000000, 0, -610)]), 0, (("astlib/ast_402.ml", 312, 10817, 10821), ("astlib/ast_402.ml", 312, 10817, 10865), 0), 0, Tag1 ("Astlib__Ast_402", 148)); (("Pexp_setfield", 752), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -612); (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -614)], (0)), 100000000, 0, -613); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -615)]), 0, (("astlib/ast_402.ml", 314, 10886, 10890), ("astlib/ast_402.ml", 314, 10886, 10950), 0), 0, Tag1 ("Astlib__Ast_402", 149)); (("Pexp_array", 753), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -617)], (0)), 100000000, 0, -616)]), 0, (("astlib/ast_402.ml", 316, 10978, 10982), ("astlib/ast_402.ml", 316, 10978, 11013), 0), 0, Tag1 ("Astlib__Ast_402", 150)); (("Pexp_ifthenelse", 754), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -618); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -619); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -621)], (0)), 100000000, 0, -620)]), 0, (("astlib/ast_402.ml", 318, 11048, 11052), ("astlib/ast_402.ml", 318, 11048, 11116), 0), 0, Tag1 ("Astlib__Ast_402", 151)); (("Pexp_sequence", 755), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -622); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -623)]), 0, (("astlib/ast_402.ml", 320, 11155, 11159), ("astlib/ast_402.ml", 320, 11155, 11201), 0), 0, Tag1 ("Astlib__Ast_402", 152)); (("Pexp_while", 756), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -624); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -625)]), 0, (("astlib/ast_402.ml", 322, 11225, 11229), ("astlib/ast_402.ml", 322, 11225, 11268), 0), 0, Tag1 ("Astlib__Ast_402", 153)); (("Pexp_for", 757), ([(Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -626); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -627); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -628); (Tag3 (Tag1 ((("Asttypes", 6732)), "direction_flag"), 0, (0)), 100000000, 0, -629); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -630)]), 0, (("astlib/ast_402.ml", 324, 11305, 11309), ("astlib/ast_402.ml", 325, 11323, 11395), 0), 0, Tag1 ("Astlib__Ast_402", 154)); (("Pexp_constraint", 758), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -631); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -632)]), 0, (("astlib/ast_402.ml", 329, 11532, 11536), ("astlib/ast_402.ml", 329, 11532, 11579), 0), 0, Tag1 ("Astlib__Ast_402", 155)); (("Pexp_coerce", 759), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -633); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -635)], (0)), 100000000, 0, -634); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -636)]), 0, (("astlib/ast_402.ml", 331, 11604, 11608), ("astlib/ast_402.ml", 331, 11604, 11666), 0), 0, Tag1 ("Astlib__Ast_402", 156)); (("Pexp_send", 760), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -637); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -638)]), 0, (("astlib/ast_402.ml", 335, 11762, 11766), ("astlib/ast_402.ml", 335, 11762, 11800), 0), 0, Tag1 ("Astlib__Ast_402", 157)); (("Pexp_new", 761), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -640)], (0)), 100000000, 0, -639)]), 0, (("astlib/ast_402.ml", 337, 11824, 11828), ("astlib/ast_402.ml", 337, 11824, 11857), 0), 0, Tag1 ("Astlib__Ast_402", 158)); (("Pexp_setinstvar", 762), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -642)], (0)), 100000000, 0, -641); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -643)]), 0, (("astlib/ast_402.ml", 339, 11882, 11886), ("astlib/ast_402.ml", 339, 11882, 11930), 0), 0, Tag1 ("Astlib__Ast_402", 159)); (("Pexp_override", 763), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -647)], (0)), 100000000, 0, -646); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -648)]), 100000000, 0, -645)], (0)), 100000000, 0, -644)]), 0, (("astlib/ast_402.ml", 341, 11954, 11958), ("astlib/ast_402.ml", 341, 11954, 12007), 0), 0, Tag1 ("Astlib__Ast_402", 160)); (("Pexp_letmodule", 764), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -650)], (0)), 100000000, 0, -649); (Tag3 ((("module_expr", 6794)), 0, (0)), 100000000, 0, -651); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -652)]), 0, (("astlib/ast_402.ml", 343, 12052, 12056), ("astlib/ast_402.ml", 343, 12052, 12113), 0), 0, Tag1 ("Astlib__Ast_402", 161)); (("Pexp_assert", 765), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -653)]), 0, (("astlib/ast_402.ml", 345, 12153, 12157), ("astlib/ast_402.ml", 345, 12153, 12184), 0), 0, Tag1 ("Astlib__Ast_402", 162)); (("Pexp_lazy", 766), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -654)]), 0, (("astlib/ast_402.ml", 349, 12306, 12310), ("astlib/ast_402.ml", 349, 12306, 12335), 0), 0, Tag1 ("Astlib__Ast_402", 163)); (("Pexp_poly", 767), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -655); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -657)], (0)), 100000000, 0, -656)]), 0, (("astlib/ast_402.ml", 351, 12359, 12363), ("astlib/ast_402.ml", 351, 12359, 12407), 0), 0, Tag1 ("Astlib__Ast_402", 164)); (("Pexp_object", 768), ([(Tag3 ((("class_structure", 6777)), 0, (0)), 100000000, 0, -658)]), 0, (("astlib/ast_402.ml", 356, 12555, 12559), ("astlib/ast_402.ml", 356, 12555, 12591), 0), 0, Tag1 ("Astlib__Ast_402", 165)); (("Pexp_newtype", 769), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -659); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -660)]), 0, (("astlib/ast_402.ml", 358, 12623, 12627), ("astlib/ast_402.ml", 358, 12623, 12664), 0), 0, Tag1 ("Astlib__Ast_402", 166)); (("Pexp_pack", 770), ([(Tag3 ((("module_expr", 6794)), 0, (0)), 100000000, 0, -661)]), 0, (("astlib/ast_402.ml", 360, 12699, 12703), ("astlib/ast_402.ml", 360, 12699, 12729), 0), 0, Tag1 ("Astlib__Ast_402", 167)); (("Pexp_open", 771), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "override_flag"), 0, (0)), 100000000, 0, -662); (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -664)], (0)), 100000000, 0, -663); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -665)]), 0, (("astlib/ast_402.ml", 365, 12862, 12866), ("astlib/ast_402.ml", 365, 12862, 12925), 0), 0, Tag1 ("Astlib__Ast_402", 168)); (("Pexp_extension", 772), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -666)]), 0, (("astlib/ast_402.ml", 369, 12998, 13002), ("astlib/ast_402.ml", 369, 12998, 13031), 0), 0, Tag1 ("Astlib__Ast_402", 169))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -567)), 0, 0, 0, 0, (("astlib/ast_402.ml", 257, 8599, 8601), ("astlib/ast_402.ml", 369, 12998, 13031), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 49)), 2, 0); Tag1 (("case", 6758), (0, 0, [[(("pc_lhs", 773), 0, (Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -563), (("astlib/ast_402.ml", 374, 13146, 13153), ("astlib/ast_402.ml", 374, 13146, 13169), 0), 0, Tag1 ("Astlib__Ast_402", 170)); (("pc_guard", 774), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -565)], (0)), 100000000, 0, -564), (("astlib/ast_402.ml", 375, 13170, 13177), ("astlib/ast_402.ml", 375, 13170, 13205), 0), 0, Tag1 ("Astlib__Ast_402", 171)); (("pc_rhs", 775), 0, (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -566), (("astlib/ast_402.ml", 376, 13206, 13213), ("astlib/ast_402.ml", 376, 13206, 13232), 0), 0, Tag1 ("Astlib__Ast_402", 172))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -562)), 0, 0, 0, 0, (("astlib/ast_402.ml", 372, 13055, 13057), ("astlib/ast_402.ml", 377, 13233, 13240), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 50)), 2, 0); Tag1 (("value_description", 6759), (0, 0, [[(("pval_name", 776), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -556)], (0)), 100000000, 0, -555), (("astlib/ast_402.ml", 383, 13350, 13357), ("astlib/ast_402.ml", 383, 13350, 13379), 0), 0, Tag1 ("Astlib__Ast_402", 173)); (("pval_type", 777), 0, (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -557), (("astlib/ast_402.ml", 384, 13380, 13387), ("astlib/ast_402.ml", 384, 13380, 13408), 0), 0, Tag1 ("Astlib__Ast_402", 174)); (("pval_prim", 778), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -559)], (0)), 100000000, 0, -558), (("astlib/ast_402.ml", 385, 13409, 13416), ("astlib/ast_402.ml", 385, 13409, 13439), 0), 0, Tag1 ("Astlib__Ast_402", 175)); (("pval_attributes", 779), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -560), (("astlib/ast_402.ml", 386, 13440, 13447), ("astlib/ast_402.ml", 386, 13440, 13475), 0), 0, Tag1 ("Astlib__Ast_402", 176)); (("pval_loc", 780), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -561), (("astlib/ast_402.ml", 387, 13503, 13510), ("astlib/ast_402.ml", 387, 13503, 13531), 0), 0, Tag1 ("Astlib__Ast_402", 177))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -554)), 0, 0, 0, 0, (("astlib/ast_402.ml", 381, 13270, 13272), ("astlib/ast_402.ml", 388, 13532, 13539), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 51)), 2, 0); Tag1 (("type_declaration", 6760), (0, 0, [[(("ptype_name", 781), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -538)], (0)), 100000000, 0, -537), (("astlib/ast_402.ml", 401, 13837, 13844), ("astlib/ast_402.ml", 401, 13837, 13867), 0), 0, Tag1 ("Astlib__Ast_402", 178)); (("ptype_params", 782), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -541); (Tag3 (Tag1 ((("Asttypes", 6732)), "variance"), 0, (0)), 100000000, 0, -542)]), 100000000, 0, -540)], (0)), 100000000, 0, -539), (("astlib/ast_402.ml", 402, 13868, 13875), ("astlib/ast_402.ml", 402, 13868, 13917), 0), 0, Tag1 ("Astlib__Ast_402", 179)); (("ptype_cstrs", 783), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -545); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -546); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -547)]), 100000000, 0, -544)], (0)), 100000000, 0, -543), (("astlib/ast_402.ml", 404, 13971, 13978), ("astlib/ast_402.ml", 404, 13971, 14033), 0), 0, Tag1 ("Astlib__Ast_402", 180)); (("ptype_kind", 784), 0, (Tag3 ((("type_kind", 6761)), 0, (0)), 100000000, 0, -548), (("astlib/ast_402.ml", 406, 14098, 14105), ("astlib/ast_402.ml", 406, 14098, 14127), 0), 0, Tag1 ("Astlib__Ast_402", 181)); (("ptype_private", 785), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "private_flag"), 0, (0)), 100000000, 0, -549), (("astlib/ast_402.ml", 407, 14128, 14135), ("astlib/ast_402.ml", 407, 14128, 14163), 0), 0, Tag1 ("Astlib__Ast_402", 182)); (("ptype_manifest", 786), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -551)], (0)), 100000000, 0, -550), (("astlib/ast_402.ml", 408, 14186, 14193), ("astlib/ast_402.ml", 408, 14186, 14226), 0), 0, Tag1 ("Astlib__Ast_402", 183)); (("ptype_attributes", 787), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -552), (("astlib/ast_402.ml", 409, 14238, 14245), ("astlib/ast_402.ml", 409, 14238, 14274), 0), 0, Tag1 ("Astlib__Ast_402", 184)); (("ptype_loc", 788), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -553), (("astlib/ast_402.ml", 410, 14303, 14310), ("astlib/ast_402.ml", 410, 14303, 14332), 0), 0, Tag1 ("Astlib__Ast_402", 185))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -536)), 0, 0, 0, 0, (("astlib/ast_402.ml", 399, 13759, 13761), ("astlib/ast_402.ml", 411, 14333, 14340), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 52)), 2, 0); Tag1 (("type_kind", 6761), (0, 0, Tag1 ([(("Ptype_abstract", 789), (0), 0, (("astlib/ast_402.ml", 424, 14794, 14798), ("astlib/ast_402.ml", 424, 14794, 14814), 0), 0, Tag1 ("Astlib__Ast_402", 186)); (("Ptype_variant", 790), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 6763)), 0, (0)), 100000000, 0, -533)], (0)), 100000000, 0, -532)]), 0, (("astlib/ast_402.ml", 425, 14815, 14819), ("astlib/ast_402.ml", 425, 14815, 14866), 0), 0, Tag1 ("Astlib__Ast_402", 187)); (("Ptype_record", 791), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 6762)), 0, (0)), 100000000, 0, -535)], (0)), 100000000, 0, -534)]), 0, (("astlib/ast_402.ml", 427, 14909, 14913), ("astlib/ast_402.ml", 427, 14909, 14953), 0), 0, Tag1 ("Astlib__Ast_402", 188)); (("Ptype_open", 792), (0), 0, (("astlib/ast_402.ml", 429, 14996, 15000), ("astlib/ast_402.ml", 429, 14996, 15012), 0), 0, Tag1 ("Astlib__Ast_402", 189))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -531)), 0, 0, 0, 0, (("astlib/ast_402.ml", 423, 14738, 14740), ("astlib/ast_402.ml", 429, 14996, 15012), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 53)), 2, 0); Tag1 (("label_declaration", 6762), (0, 0, [[(("pld_name", 793), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -526)], (0)), 100000000, 0, -525), (("astlib/ast_402.ml", 433, 15094, 15101), ("astlib/ast_402.ml", 433, 15094, 15122), 0), 0, Tag1 ("Astlib__Ast_402", 190)); (("pld_mutable", 794), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "mutable_flag"), 0, (0)), 100000000, 0, -527), (("astlib/ast_402.ml", 434, 15123, 15130), ("astlib/ast_402.ml", 434, 15123, 15156), 0), 0, Tag1 ("Astlib__Ast_402", 191)); (("pld_type", 795), 0, (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -528), (("astlib/ast_402.ml", 435, 15157, 15164), ("astlib/ast_402.ml", 435, 15157, 15184), 0), 0, Tag1 ("Astlib__Ast_402", 192)); (("pld_loc", 796), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -529), (("astlib/ast_402.ml", 436, 15185, 15192), ("astlib/ast_402.ml", 436, 15185, 15212), 0), 0, Tag1 ("Astlib__Ast_402", 193)); (("pld_attributes", 797), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -530), (("astlib/ast_402.ml", 437, 15213, 15220), ("astlib/ast_402.ml", 437, 15213, 15247), 0), 0, Tag1 ("Astlib__Ast_402", 194))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -524)), 0, 0, 0, 0, (("astlib/ast_402.ml", 431, 15014, 15016), ("astlib/ast_402.ml", 438, 15274, 15281), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 54)), 2, 0); Tag1 (("constructor_declaration", 6763), (0, 0, [[(("pcd_name", 798), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -517)], (0)), 100000000, 0, -516), (("astlib/ast_402.ml", 448, 15526, 15533), ("astlib/ast_402.ml", 448, 15526, 15554), 0), 0, Tag1 ("Astlib__Ast_402", 195)); (("pcd_args", 799), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -519)], (0)), 100000000, 0, -518), (("astlib/ast_402.ml", 449, 15555, 15562), ("astlib/ast_402.ml", 449, 15555, 15587), 0), 0, Tag1 ("Astlib__Ast_402", 196)); (("pcd_res", 800), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -521)], (0)), 100000000, 0, -520), (("astlib/ast_402.ml", 450, 15588, 15595), ("astlib/ast_402.ml", 450, 15588, 15621), 0), 0, Tag1 ("Astlib__Ast_402", 197)); (("pcd_loc", 801), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -522), (("astlib/ast_402.ml", 451, 15622, 15629), ("astlib/ast_402.ml", 451, 15622, 15649), 0), 0, Tag1 ("Astlib__Ast_402", 198)); (("pcd_attributes", 802), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -523), (("astlib/ast_402.ml", 452, 15650, 15657), ("astlib/ast_402.ml", 452, 15650, 15684), 0), 0, Tag1 ("Astlib__Ast_402", 199))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -515)), 0, 0, 0, 0, (("astlib/ast_402.ml", 446, 15434, 15436), ("astlib/ast_402.ml", 453, 15714, 15721), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 55)), 2, 0); Tag1 (("type_extension", 6764), (0, 0, [[(("ptyext_path", 803), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -506)], (0)), 100000000, 0, -505), (("astlib/ast_402.ml", 462, 15950, 15957), ("astlib/ast_402.ml", 462, 15950, 15986), 0), 0, Tag1 ("Astlib__Ast_402", 200)); (("ptyext_params", 804), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -509); (Tag3 (Tag1 ((("Asttypes", 6732)), "variance"), 0, (0)), 100000000, 0, -510)]), 100000000, 0, -508)], (0)), 100000000, 0, -507), (("astlib/ast_402.ml", 463, 15987, 15994), ("astlib/ast_402.ml", 463, 15987, 16037), 0), 0, Tag1 ("Astlib__Ast_402", 201)); (("ptyext_constructors", 805), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 6765)), 0, (0)), 100000000, 0, -512)], (0)), 100000000, 0, -511), (("astlib/ast_402.ml", 464, 16038, 16045), ("astlib/ast_402.ml", 464, 16038, 16093), 0), 0, Tag1 ("Astlib__Ast_402", 202)); (("ptyext_private", 806), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "private_flag"), 0, (0)), 100000000, 0, -513), (("astlib/ast_402.ml", 465, 16094, 16101), ("astlib/ast_402.ml", 465, 16094, 16130), 0), 0, Tag1 ("Astlib__Ast_402", 203)); (("ptyext_attributes", 807), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -514), (("astlib/ast_402.ml", 466, 16131, 16138), ("astlib/ast_402.ml", 466, 16131, 16168), 0), 0, Tag1 ("Astlib__Ast_402", 204))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -504)), 0, 0, 0, 0, (("astlib/ast_402.ml", 460, 15876, 15878), ("astlib/ast_402.ml", 467, 16197, 16204), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 56)), 2, 0); Tag1 (("extension_constructor", 6765), (0, 0, [[(("pext_name", 808), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -500)], (0)), 100000000, 0, -499), (("astlib/ast_402.ml", 474, 16322, 16329), ("astlib/ast_402.ml", 474, 16322, 16351), 0), 0, Tag1 ("Astlib__Ast_402", 205)); (("pext_kind", 809), 0, (Tag3 ((("extension_constructor_kind", 6766)), 0, (0)), 100000000, 0, -501), (("astlib/ast_402.ml", 475, 16352, 16359), ("astlib/ast_402.ml", 475, 16352, 16398), 0), 0, Tag1 ("Astlib__Ast_402", 206)); (("pext_loc", 810), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -502), (("astlib/ast_402.ml", 476, 16399, 16406), ("astlib/ast_402.ml", 476, 16399, 16428), 0), 0, Tag1 ("Astlib__Ast_402", 207)); (("pext_attributes", 811), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -503), (("astlib/ast_402.ml", 477, 16429, 16436), ("astlib/ast_402.ml", 477, 16429, 16464), 0), 0, Tag1 ("Astlib__Ast_402", 208))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -498)), 0, 0, 0, 0, (("astlib/ast_402.ml", 472, 16234, 16236), ("astlib/ast_402.ml", 478, 16494, 16501), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 57)), 2, 0); Tag1 (("extension_constructor_kind", 6766), (0, 0, Tag1 ([(("Pext_decl", 812), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -493)], (0)), 100000000, 0, -492); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -495)], (0)), 100000000, 0, -494)]), 0, (("astlib/ast_402.ml", 481, 16593, 16599), ("astlib/ast_402.ml", 481, 16593, 16645), 0), 0, Tag1 ("Astlib__Ast_402", 209)); (("Pext_rebind", 813), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -497)], (0)), 100000000, 0, -496)]), 0, (("astlib/ast_402.ml", 487, 16838, 16842), ("astlib/ast_402.ml", 487, 16838, 16874), 0), 0, Tag1 ("Astlib__Ast_402", 210))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -491)), 0, 0, 0, 0, (("astlib/ast_402.ml", 480, 16503, 16505), ("astlib/ast_402.ml", 487, 16838, 16874), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 58)), 2, 0); Tag1 (("class_type", 6767), (0, 0, [[(("pcty_desc", 814), 0, (Tag3 ((("class_type_desc", 6768)), 0, (0)), 100000000, 0, -488), (("astlib/ast_402.ml", 498, 17062, 17069), ("astlib/ast_402.ml", 498, 17062, 17096), 0), 0, Tag1 ("Astlib__Ast_402", 211)); (("pcty_loc", 815), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -489), (("astlib/ast_402.ml", 499, 17097, 17104), ("astlib/ast_402.ml", 499, 17097, 17125), 0), 0, Tag1 ("Astlib__Ast_402", 212)); (("pcty_attributes", 816), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -490), (("astlib/ast_402.ml", 500, 17126, 17133), ("astlib/ast_402.ml", 500, 17126, 17161), 0), 0, Tag1 ("Astlib__Ast_402", 213))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -487)), 0, 0, 0, 0, (("astlib/ast_402.ml", 496, 16996, 16998), ("astlib/ast_402.ml", 501, 17186, 17193), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 59)), 2, 0); Tag1 (("class_type_desc", 6768), (0, 0, Tag1 ([(("Pcty_constr", 817), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -479)], (0)), 100000000, 0, -478); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -481)], (0)), 100000000, 0, -480)]), 0, (("astlib/ast_402.ml", 504, 17263, 17267), ("astlib/ast_402.ml", 504, 17263, 17316), 0), 0, Tag1 ("Astlib__Ast_402", 214)); (("Pcty_signature", 818), ([(Tag3 ((("class_signature", 6769)), 0, (0)), 100000000, 0, -482)]), 0, (("astlib/ast_402.ml", 507, 17366, 17370), ("astlib/ast_402.ml", 507, 17366, 17405), 0), 0, Tag1 ("Astlib__Ast_402", 215)); (("Pcty_arrow", 819), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "label"), 0, (0)), 100000000, 0, -483); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -484); (Tag3 ((("class_type", 6767)), 0, (0)), 100000000, 0, -485)]), 0, (("astlib/ast_402.ml", 509, 17437, 17441), ("astlib/ast_402.ml", 509, 17437, 17487), 0), 0, Tag1 ("Astlib__Ast_402", 216)); (("Pcty_extension", 820), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -486)]), 0, (("astlib/ast_402.ml", 514, 17625, 17629), ("astlib/ast_402.ml", 514, 17625, 17658), 0), 0, Tag1 ("Astlib__Ast_402", 217))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -477)), 0, 0, 0, 0, (("astlib/ast_402.ml", 503, 17195, 17197), ("astlib/ast_402.ml", 514, 17625, 17658), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 60)), 2, 0); Tag1 (("class_signature", 6769), (0, 0, [[(("pcsig_self", 821), 0, (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -474), (("astlib/ast_402.ml", 519, 17758, 17765), ("astlib/ast_402.ml", 519, 17758, 17787), 0), 0, Tag1 ("Astlib__Ast_402", 218)); (("pcsig_fields", 822), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 6770)), 0, (0)), 100000000, 0, -476)], (0)), 100000000, 0, -475), (("astlib/ast_402.ml", 520, 17788, 17795), ("astlib/ast_402.ml", 520, 17788, 17831), 0), 0, Tag1 ("Astlib__Ast_402", 219))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -473)), 0, 0, 0, 0, (("astlib/ast_402.ml", 517, 17682, 17684), ("astlib/ast_402.ml", 521, 17832, 17839), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 61)), 2, 0); Tag1 (("class_type_field", 6770), (0, 0, [[(("pctf_desc", 823), 0, (Tag3 ((("class_type_field_desc", 6771)), 0, (0)), 100000000, 0, -470), (("astlib/ast_402.ml", 528, 18005, 18012), ("astlib/ast_402.ml", 528, 18005, 18045), 0), 0, Tag1 ("Astlib__Ast_402", 220)); (("pctf_loc", 824), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -471), (("astlib/ast_402.ml", 529, 18046, 18053), ("astlib/ast_402.ml", 529, 18046, 18074), 0), 0, Tag1 ("Astlib__Ast_402", 221)); (("pctf_attributes", 825), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -472), (("astlib/ast_402.ml", 530, 18075, 18082), ("astlib/ast_402.ml", 530, 18075, 18110), 0), 0, Tag1 ("Astlib__Ast_402", 222))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -469)), 0, 0, 0, 0, (("astlib/ast_402.ml", 526, 17927, 17929), ("astlib/ast_402.ml", 531, 18137, 18144), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 62)), 2, 0); Tag1 (("class_type_field_desc", 6771), (0, 0, Tag1 ([(("Pctf_inherit", 826), ([(Tag3 ((("class_type", 6767)), 0, (0)), 100000000, 0, -453)]), 0, (("astlib/ast_402.ml", 534, 18226, 18230), ("astlib/ast_402.ml", 534, 18226, 18258), 0), 0, Tag1 ("Astlib__Ast_402", 223)); (("Pctf_val", 827), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -455); (Tag3 (Tag1 ((("Asttypes", 6732)), "mutable_flag"), 0, (0)), 100000000, 0, -456); (Tag3 (Tag1 ((("Asttypes", 6732)), "virtual_flag"), 0, (0)), 100000000, 0, -457); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -458)]), 100000000, 0, -454)]), 0, (("astlib/ast_402.ml", 536, 18286, 18290), ("astlib/ast_402.ml", 536, 18286, 18354), 0), 0, Tag1 ("Astlib__Ast_402", 224)); (("Pctf_method", 828), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -460); (Tag3 (Tag1 ((("Asttypes", 6732)), "private_flag"), 0, (0)), 100000000, 0, -461); (Tag3 (Tag1 ((("Asttypes", 6732)), "virtual_flag"), 0, (0)), 100000000, 0, -462); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -463)]), 100000000, 0, -459)]), 0, (("astlib/ast_402.ml", 538, 18380, 18384), ("astlib/ast_402.ml", 538, 18380, 18452), 0), 0, Tag1 ("Astlib__Ast_402", 225)); (("Pctf_constraint", 829), ([(Tag2 ([(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -465); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -466)]), 100000000, 0, -464)]), 0, (("astlib/ast_402.ml", 543, 18534, 18538), ("astlib/ast_402.ml", 543, 18534, 18583), 0), 0, Tag1 ("Astlib__Ast_402", 226)); (("Pctf_attribute", 830), ([(Tag3 ((("attribute", 6746)), 0, (0)), 100000000, 0, -467)]), 0, (("astlib/ast_402.ml", 545, 18619, 18623), ("astlib/ast_402.ml", 545, 18619, 18652), 0), 0, Tag1 ("Astlib__Ast_402", 227)); (("Pctf_extension", 831), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -468)]), 0, (("astlib/ast_402.ml", 547, 18677, 18681), ("astlib/ast_402.ml", 547, 18677, 18710), 0), 0, Tag1 ("Astlib__Ast_402", 228))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -452)), 0, 0, 0, 0, (("astlib/ast_402.ml", 533, 18146, 18148), ("astlib/ast_402.ml", 547, 18677, 18710), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 63)), 2, 0); Tag1 (("class_infos", 6772), ([((("a")), 100000000, 0, -442)], 1, [[(("pci_virt", 832), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "virtual_flag"), 0, (0)), 100000000, 0, -443), (("astlib/ast_402.ml", 552, 18809, 18816), ("astlib/ast_402.ml", 552, 18809, 18839), 0), 0, Tag1 ("Astlib__Ast_402", 229)); (("pci_params", 833), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -446); (Tag3 (Tag1 ((("Asttypes", 6732)), "variance"), 0, (0)), 100000000, 0, -447)]), 100000000, 0, -445)], (0)), 100000000, 0, -444), (("astlib/ast_402.ml", 553, 18840, 18847), ("astlib/ast_402.ml", 553, 18840, 18887), 0), 0, Tag1 ("Astlib__Ast_402", 230)); (("pci_name", 834), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -449)], (0)), 100000000, 0, -448), (("astlib/ast_402.ml", 554, 18888, 18895), ("astlib/ast_402.ml", 554, 18888, 18916), 0), 0, Tag1 ("Astlib__Ast_402", 231)); (("pci_expr", 835), 0, ((("a")), 100000000, 0, -442), (("astlib/ast_402.ml", 555, 18917, 18924), ("astlib/ast_402.ml", 555, 18917, 18937), 0), 0, Tag1 ("Astlib__Ast_402", 232)); (("pci_loc", 836), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -450), (("astlib/ast_402.ml", 556, 18938, 18945), ("astlib/ast_402.ml", 556, 18938, 18965), 0), 0, Tag1 ("Astlib__Ast_402", 233)); (("pci_attributes", 837), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -451), (("astlib/ast_402.ml", 557, 18966, 18973), ("astlib/ast_402.ml", 557, 18966, 19000), 0), 0, Tag1 ("Astlib__Ast_402", 234))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -442)], (0)), 100000000, 0, -441)), [25], [0], 0, 0, (("astlib/ast_402.ml", 550, 18735, 18737), ("astlib/ast_402.ml", 558, 19028, 19035), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 64)), 2, 0); Tag1 (("class_description", 6773), (0, 0, 0, 1, ((Tag3 ((("class_infos", 6772)), [(Tag3 ((("class_type", 6767)), 0, (0)), 100000000, 0, -440)], (0)), 100000000, 0, -439)), 0, 0, 0, 0, (("astlib/ast_402.ml", 566, 19167, 19169), ("astlib/ast_402.ml", 566, 19167, 19215), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 65)), 2, 0); Tag1 (("class_type_declaration", 6774), (0, 0, 0, 1, ((Tag3 ((("class_infos", 6772)), [(Tag3 ((("class_type", 6767)), 0, (0)), 100000000, 0, -438)], (0)), 100000000, 0, -437)), 0, 0, 0, 0, (("astlib/ast_402.ml", 568, 19217, 19219), ("astlib/ast_402.ml", 568, 19217, 19270), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 66)), 2, 0); Tag1 (("class_expr", 6775), (0, 0, [[(("pcl_desc", 838), 0, (Tag3 ((("class_expr_desc", 6776)), 0, (0)), 100000000, 0, -434), (("astlib/ast_402.ml", 574, 19388, 19395), ("astlib/ast_402.ml", 574, 19388, 19421), 0), 0, Tag1 ("Astlib__Ast_402", 235)); (("pcl_loc", 839), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -435), (("astlib/ast_402.ml", 575, 19422, 19429), ("astlib/ast_402.ml", 575, 19422, 19449), 0), 0, Tag1 ("Astlib__Ast_402", 236)); (("pcl_attributes", 840), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -436), (("astlib/ast_402.ml", 576, 19450, 19457), ("astlib/ast_402.ml", 576, 19450, 19484), 0), 0, Tag1 ("Astlib__Ast_402", 237))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -433)), 0, 0, 0, 0, (("astlib/ast_402.ml", 572, 19322, 19324), ("astlib/ast_402.ml", 577, 19509, 19516), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 67)), 2, 0); Tag1 (("class_expr_desc", 6776), (0, 0, Tag1 ([(("Pcl_constr", 841), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -412)], (0)), 100000000, 0, -411); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -414)], (0)), 100000000, 0, -413)]), 0, (("astlib/ast_402.ml", 580, 19586, 19590), ("astlib/ast_402.ml", 580, 19586, 19638), 0), 0, Tag1 ("Astlib__Ast_402", 238)); (("Pcl_structure", 842), ([(Tag3 ((("class_structure", 6777)), 0, (0)), 100000000, 0, -415)]), 0, (("astlib/ast_402.ml", 583, 19688, 19692), ("astlib/ast_402.ml", 583, 19688, 19726), 0), 0, Tag1 ("Astlib__Ast_402", 239)); (("Pcl_fun", 843), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "label"), 0, (0)), 100000000, 0, -416); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -418)], (0)), 100000000, 0, -417); (Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -419); (Tag3 ((("class_expr", 6775)), 0, (0)), 100000000, 0, -420)]), 0, (("astlib/ast_402.ml", 585, 19758, 19762), ("astlib/ast_402.ml", 585, 19758, 19823), 0), 0, Tag1 ("Astlib__Ast_402", 240)); (("Pcl_apply", 844), ([(Tag3 ((("class_expr", 6775)), 0, (0)), 100000000, 0, -421); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "label"), 0, (0)), 100000000, 0, -424); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -425)]), 100000000, 0, -423)], (0)), 100000000, 0, -422)]), 0, (("astlib/ast_402.ml", 591, 20114, 20118), ("astlib/ast_402.ml", 591, 20114, 20171), 0), 0, Tag1 ("Astlib__Ast_402", 241)); (("Pcl_let", 845), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "rec_flag"), 0, (0)), 100000000, 0, -426); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 6799)), 0, (0)), 100000000, 0, -428)], (0)), 100000000, 0, -427); (Tag3 ((("class_expr", 6775)), 0, (0)), 100000000, 0, -429)]), 0, (("astlib/ast_402.ml", 598, 20355, 20359), ("astlib/ast_402.ml", 598, 20355, 20414), 0), 0, Tag1 ("Astlib__Ast_402", 242)); (("Pcl_constraint", 846), ([(Tag3 ((("class_expr", 6775)), 0, (0)), 100000000, 0, -430); (Tag3 ((("class_type", 6767)), 0, (0)), 100000000, 0, -431)]), 0, (("astlib/ast_402.ml", 602, 20582, 20586), ("astlib/ast_402.ml", 602, 20582, 20629), 0), 0, Tag1 ("Astlib__Ast_402", 243)); (("Pcl_extension", 847), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -432)]), 0, (("astlib/ast_402.ml", 604, 20656, 20660), ("astlib/ast_402.ml", 604, 20656, 20688), 0), 0, Tag1 ("Astlib__Ast_402", 244))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -410)), 0, 0, 0, 0, (("astlib/ast_402.ml", 579, 19518, 19520), ("astlib/ast_402.ml", 604, 20656, 20688), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 68)), 2, 0); Tag1 (("class_structure", 6777), (0, 0, [[(("pcstr_self", 848), 0, (Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -407), (("astlib/ast_402.ml", 609, 20788, 20795), ("astlib/ast_402.ml", 609, 20788, 20815), 0), 0, Tag1 ("Astlib__Ast_402", 245)); (("pcstr_fields", 849), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 6778)), 0, (0)), 100000000, 0, -409)], (0)), 100000000, 0, -408), (("astlib/ast_402.ml", 610, 20816, 20823), ("astlib/ast_402.ml", 610, 20816, 20854), 0), 0, Tag1 ("Astlib__Ast_402", 246))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -406)), 0, 0, 0, 0, (("astlib/ast_402.ml", 607, 20712, 20714), ("astlib/ast_402.ml", 611, 20855, 20862), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 69)), 2, 0); Tag1 (("class_field", 6778), (0, 0, [[(("pcf_desc", 850), 0, (Tag3 ((("class_field_desc", 6779)), 0, (0)), 100000000, 0, -403), (("astlib/ast_402.ml", 618, 21015, 21022), ("astlib/ast_402.ml", 618, 21015, 21049), 0), 0, Tag1 ("Astlib__Ast_402", 247)); (("pcf_loc", 851), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -404), (("astlib/ast_402.ml", 619, 21050, 21057), ("astlib/ast_402.ml", 619, 21050, 21077), 0), 0, Tag1 ("Astlib__Ast_402", 248)); (("pcf_attributes", 852), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -405), (("astlib/ast_402.ml", 620, 21078, 21085), ("astlib/ast_402.ml", 620, 21078, 21112), 0), 0, Tag1 ("Astlib__Ast_402", 249))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -402)), 0, 0, 0, 0, (("astlib/ast_402.ml", 616, 20947, 20949), ("astlib/ast_402.ml", 621, 21139, 21146), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 70)), 2, 0); Tag1 (("class_field_desc", 6779), (0, 0, Tag1 ([(("Pcf_inherit", 853), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "override_flag"), 0, (0)), 100000000, 0, -382); (Tag3 ((("class_expr", 6775)), 0, (0)), 100000000, 0, -383); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -385)], (0)), 100000000, 0, -384)]), 0, (("astlib/ast_402.ml", 624, 21218, 21222), ("astlib/ast_402.ml", 624, 21218, 21281), 0), 0, Tag1 ("Astlib__Ast_402", 250)); (("Pcf_val", 854), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -388)], (0)), 100000000, 0, -387); (Tag3 (Tag1 ((("Asttypes", 6732)), "mutable_flag"), 0, (0)), 100000000, 0, -389); (Tag3 ((("class_field_kind", 6780)), 0, (0)), 100000000, 0, -390)]), 100000000, 0, -386)]), 0, (("astlib/ast_402.ml", 630, 21404, 21408), ("astlib/ast_402.ml", 630, 21404, 21467), 0), 0, Tag1 ("Astlib__Ast_402", 251)); (("Pcf_method", 855), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -393)], (0)), 100000000, 0, -392); (Tag3 (Tag1 ((("Asttypes", 6732)), "private_flag"), 0, (0)), 100000000, 0, -394); (Tag3 ((("class_field_kind", 6780)), 0, (0)), 100000000, 0, -395)]), 100000000, 0, -391)]), 0, (("astlib/ast_402.ml", 634, 21535, 21539), ("astlib/ast_402.ml", 634, 21535, 21601), 0), 0, Tag1 ("Astlib__Ast_402", 252)); (("Pcf_constraint", 856), ([(Tag2 ([(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -397); (Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -398)]), 100000000, 0, -396)]), 0, (("astlib/ast_402.ml", 638, 21736, 21740), ("astlib/ast_402.ml", 638, 21736, 21783), 0), 0, Tag1 ("Astlib__Ast_402", 253)); (("Pcf_initializer", 857), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -399)]), 0, (("astlib/ast_402.ml", 640, 21819, 21823), ("astlib/ast_402.ml", 640, 21819, 21854), 0), 0, Tag1 ("Astlib__Ast_402", 254)); (("Pcf_attribute", 858), ([(Tag3 ((("attribute", 6746)), 0, (0)), 100000000, 0, -400)]), 0, (("astlib/ast_402.ml", 642, 21885, 21889), ("astlib/ast_402.ml", 642, 21885, 21917), 0), 0, Tag1 ("Astlib__Ast_402", 255)); (("Pcf_extension", 859), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -401)]), 0, (("astlib/ast_402.ml", 644, 21942, 21946), ("astlib/ast_402.ml", 644, 21942, 21974), 0), 0, Tag1 ("Astlib__Ast_402", 256))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -381)), 0, 0, 0, 0, (("astlib/ast_402.ml", 623, 21148, 21150), ("astlib/ast_402.ml", 644, 21942, 21974), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 71)), 2, 0); Tag1 (("class_field_kind", 6780), (0, 0, Tag1 ([(("Cfk_virtual", 860), ([(Tag3 ((("core_type", 6750)), 0, (0)), 100000000, 0, -378)]), 0, (("astlib/ast_402.ml", 648, 22069, 22073), ("astlib/ast_402.ml", 648, 22069, 22099), 0), 0, Tag1 ("Astlib__Ast_402", 257)); (("Cfk_concrete", 861), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "override_flag"), 0, (0)), 100000000, 0, -379); (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -380)]), 0, (("astlib/ast_402.ml", 649, 22100, 22104), ("astlib/ast_402.ml", 649, 22100, 22148), 0), 0, Tag1 ("Astlib__Ast_402", 258))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -377)), 0, 0, 0, 0, (("astlib/ast_402.ml", 647, 21999, 22001), ("astlib/ast_402.ml", 649, 22100, 22148), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 72)), 2, 0); Tag1 (("class_declaration", 6781), (0, 0, 0, 1, ((Tag3 ((("class_infos", 6772)), [(Tag3 ((("class_expr", 6775)), 0, (0)), 100000000, 0, -376)], (0)), 100000000, 0, -375)), 0, 0, 0, 0, (("astlib/ast_402.ml", 651, 22150, 22152), ("astlib/ast_402.ml", 651, 22150, 22198), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 73)), 2, 0); Tag1 (("module_type", 6782), (0, 0, [[(("pmty_desc", 862), 0, (Tag3 ((("module_type_desc", 6783)), 0, (0)), 100000000, 0, -372), (("astlib/ast_402.ml", 659, 22348, 22355), ("astlib/ast_402.ml", 659, 22348, 22383), 0), 0, Tag1 ("Astlib__Ast_402", 259)); (("pmty_loc", 863), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -373), (("astlib/ast_402.ml", 660, 22384, 22391), ("astlib/ast_402.ml", 660, 22384, 22412), 0), 0, Tag1 ("Astlib__Ast_402", 260)); (("pmty_attributes", 864), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -374), (("astlib/ast_402.ml", 661, 22413, 22420), ("astlib/ast_402.ml", 661, 22413, 22448), 0), 0, Tag1 ("Astlib__Ast_402", 261))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -371)), 0, 0, 0, 0, (("astlib/ast_402.ml", 657, 22280, 22282), ("astlib/ast_402.ml", 662, 22473, 22480), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 74)), 2, 0); Tag1 (("module_type_desc", 6783), (0, 0, Tag1 ([(("Pmty_ident", 865), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -357)], (0)), 100000000, 0, -356)]), 0, (("astlib/ast_402.ml", 665, 22552, 22556), ("astlib/ast_402.ml", 665, 22552, 22587), 0), 0, Tag1 ("Astlib__Ast_402", 262)); (("Pmty_signature", 866), ([(Tag3 ((("signature", 6784)), 0, (0)), 100000000, 0, -358)]), 0, (("astlib/ast_402.ml", 667, 22606, 22610), ("astlib/ast_402.ml", 667, 22606, 22639), 0), 0, Tag1 ("Astlib__Ast_402", 263)); (("Pmty_functor", 867), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -360)], (0)), 100000000, 0, -359); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 6782)), 0, (0)), 100000000, 0, -362)], (0)), 100000000, 0, -361); (Tag3 ((("module_type", 6782)), 0, (0)), 100000000, 0, -363)]), 0, (("astlib/ast_402.ml", 669, 22668, 22672), ("astlib/ast_402.ml", 669, 22668, 22735), 0), 0, Tag1 ("Astlib__Ast_402", 264)); (("Pmty_with", 868), ([(Tag3 ((("module_type", 6782)), 0, (0)), 100000000, 0, -364); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 6793)), 0, (0)), 100000000, 0, -366)], (0)), 100000000, 0, -365)]), 0, (("astlib/ast_402.ml", 671, 22776, 22780), ("astlib/ast_402.ml", 671, 22776, 22829), 0), 0, Tag1 ("Astlib__Ast_402", 265)); (("Pmty_typeof", 869), ([(Tag3 ((("module_expr", 6794)), 0, (0)), 100000000, 0, -367)]), 0, (("astlib/ast_402.ml", 673, 22858, 22862), ("astlib/ast_402.ml", 673, 22858, 22890), 0), 0, Tag1 ("Astlib__Ast_402", 266)); (("Pmty_extension", 870), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -368)]), 0, (("astlib/ast_402.ml", 675, 22925, 22929), ("astlib/ast_402.ml", 675, 22925, 22958), 0), 0, Tag1 ("Astlib__Ast_402", 267)); (("Pmty_alias", 871), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -370)], (0)), 100000000, 0, -369)]), 0, (("astlib/ast_402.ml", 677, 22981, 22985), ("astlib/ast_402.ml", 677, 22981, 23016), 0), 0, Tag1 ("Astlib__Ast_402", 268))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -355)), 0, 0, 0, 0, (("astlib/ast_402.ml", 664, 22482, 22484), ("astlib/ast_402.ml", 677, 22981, 23016), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 75)), 2, 0); Tag1 (("signature", 6784), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 6785)), 0, (0)), 100000000, 0, -354)], (0)), 100000000, 0, -353)), 0, 0, 0, 0, (("astlib/ast_402.ml", 680, 23045, 23047), ("astlib/ast_402.ml", 680, 23045, 23082), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 76)), 2, 0); Tag1 (("signature_item", 6785), (0, 0, [[(("psig_desc", 872), 0, (Tag3 ((("signature_item_desc", 6786)), 0, (0)), 100000000, 0, -351), (("astlib/ast_402.ml", 684, 23158, 23165), ("astlib/ast_402.ml", 684, 23158, 23196), 0), 0, Tag1 ("Astlib__Ast_402", 269)); (("psig_loc", 873), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -352), (("astlib/ast_402.ml", 685, 23197, 23204), ("astlib/ast_402.ml", 685, 23197, 23225), 0), 0, Tag1 ("Astlib__Ast_402", 270))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -350)), 0, 0, 0, 0, (("astlib/ast_402.ml", 682, 23084, 23086), ("astlib/ast_402.ml", 686, 23226, 23233), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 77)), 2, 0); Tag1 (("signature_item_desc", 6786), (0, 0, Tag1 ([(("Psig_value", 874), ([(Tag3 ((("value_description", 6759)), 0, (0)), 100000000, 0, -332)]), 0, (("astlib/ast_402.ml", 689, 23311, 23315), ("astlib/ast_402.ml", 689, 23311, 23348), 0), 0, Tag1 ("Astlib__Ast_402", 271)); (("Psig_type", 875), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 6760)), 0, (0)), 100000000, 0, -334)], (0)), 100000000, 0, -333)]), 0, (("astlib/ast_402.ml", 694, 23439, 23443), ("astlib/ast_402.ml", 694, 23439, 23479), 0), 0, Tag1 ("Astlib__Ast_402", 272)); (("Psig_typext", 876), ([(Tag3 ((("type_extension", 6764)), 0, (0)), 100000000, 0, -335)]), 0, (("astlib/ast_402.ml", 696, 23531, 23535), ("astlib/ast_402.ml", 696, 23531, 23566), 0), 0, Tag1 ("Astlib__Ast_402", 273)); (("Psig_exception", 877), ([(Tag3 ((("extension_constructor", 6765)), 0, (0)), 100000000, 0, -336)]), 0, (("astlib/ast_402.ml", 698, 23598, 23602), ("astlib/ast_402.ml", 698, 23598, 23643), 0), 0, Tag1 ("Astlib__Ast_402", 274)); (("Psig_module", 878), ([(Tag3 ((("module_declaration", 6787)), 0, (0)), 100000000, 0, -337)]), 0, (("astlib/ast_402.ml", 700, 23677, 23681), ("astlib/ast_402.ml", 700, 23677, 23716), 0), 0, Tag1 ("Astlib__Ast_402", 275)); (("Psig_recmodule", 879), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 6787)), 0, (0)), 100000000, 0, -339)], (0)), 100000000, 0, -338)]), 0, (("astlib/ast_402.ml", 702, 23747, 23751), ("astlib/ast_402.ml", 702, 23747, 23794), 0), 0, Tag1 ("Astlib__Ast_402", 276)); (("Psig_modtype", 880), ([(Tag3 ((("module_type_declaration", 6788)), 0, (0)), 100000000, 0, -340)]), 0, (("astlib/ast_402.ml", 704, 23852, 23856), ("astlib/ast_402.ml", 704, 23852, 23897), 0), 0, Tag1 ("Astlib__Ast_402", 277)); (("Psig_open", 881), ([(Tag3 ((("open_description", 6789)), 0, (0)), 100000000, 0, -341)]), 0, (("astlib/ast_402.ml", 707, 23960, 23964), ("astlib/ast_402.ml", 707, 23960, 23995), 0), 0, Tag1 ("Astlib__Ast_402", 278)); (("Psig_include", 882), ([(Tag3 ((("include_description", 6791)), 0, (0)), 100000000, 0, -342)]), 0, (("astlib/ast_402.ml", 709, 24019, 24023), ("astlib/ast_402.ml", 709, 24019, 24060), 0), 0, Tag1 ("Astlib__Ast_402", 279)); (("Psig_class", 883), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 6773)), 0, (0)), 100000000, 0, -344)], (0)), 100000000, 0, -343)]), 0, (("astlib/ast_402.ml", 711, 24088, 24092), ("astlib/ast_402.ml", 711, 24088, 24130), 0), 0, Tag1 ("Astlib__Ast_402", 280)); (("Psig_class_type", 884), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 6774)), 0, (0)), 100000000, 0, -346)], (0)), 100000000, 0, -345)]), 0, (("astlib/ast_402.ml", 713, 24183, 24187), ("astlib/ast_402.ml", 713, 24183, 24235), 0), 0, Tag1 ("Astlib__Ast_402", 281)); (("Psig_attribute", 885), ([(Tag3 ((("attribute", 6746)), 0, (0)), 100000000, 0, -347)]), 0, (("astlib/ast_402.ml", 715, 24295, 24299), ("astlib/ast_402.ml", 715, 24295, 24328), 0), 0, Tag1 ("Astlib__Ast_402", 282)); (("Psig_extension", 886), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -348); (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -349)]), 0, (("astlib/ast_402.ml", 717, 24353, 24357), ("astlib/ast_402.ml", 717, 24353, 24399), 0), 0, Tag1 ("Astlib__Ast_402", 283))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -331)), 0, 0, 0, 0, (("astlib/ast_402.ml", 688, 23235, 23237), ("astlib/ast_402.ml", 717, 24353, 24399), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 78)), 2, 0); Tag1 (("module_declaration", 6787), (0, 0, [[(("pmd_name", 887), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -327)], (0)), 100000000, 0, -326), (("astlib/ast_402.ml", 722, 24506, 24513), ("astlib/ast_402.ml", 722, 24506, 24534), 0), 0, Tag1 ("Astlib__Ast_402", 284)); (("pmd_type", 888), 0, (Tag3 ((("module_type", 6782)), 0, (0)), 100000000, 0, -328), (("astlib/ast_402.ml", 723, 24535, 24542), ("astlib/ast_402.ml", 723, 24535, 24564), 0), 0, Tag1 ("Astlib__Ast_402", 285)); (("pmd_attributes", 889), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -329), (("astlib/ast_402.ml", 724, 24565, 24572), ("astlib/ast_402.ml", 724, 24565, 24599), 0), 0, Tag1 ("Astlib__Ast_402", 286)); (("pmd_loc", 890), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -330), (("astlib/ast_402.ml", 725, 24626, 24633), ("astlib/ast_402.ml", 725, 24626, 24653), 0), 0, Tag1 ("Astlib__Ast_402", 287))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -325)), 0, 0, 0, 0, (("astlib/ast_402.ml", 720, 24424, 24426), ("astlib/ast_402.ml", 726, 24654, 24661), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 79)), 2, 0); Tag1 (("module_type_declaration", 6788), (0, 0, [[(("pmtd_name", 891), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -320)], (0)), 100000000, 0, -319), (("astlib/ast_402.ml", 731, 24770, 24777), ("astlib/ast_402.ml", 731, 24770, 24799), 0), 0, Tag1 ("Astlib__Ast_402", 288)); (("pmtd_type", 892), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 6782)), 0, (0)), 100000000, 0, -322)], (0)), 100000000, 0, -321), (("astlib/ast_402.ml", 732, 24800, 24807), ("astlib/ast_402.ml", 732, 24800, 24837), 0), 0, Tag1 ("Astlib__Ast_402", 289)); (("pmtd_attributes", 893), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -323), (("astlib/ast_402.ml", 733, 24838, 24845), ("astlib/ast_402.ml", 733, 24838, 24873), 0), 0, Tag1 ("Astlib__Ast_402", 290)); (("pmtd_loc", 894), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -324), (("astlib/ast_402.ml", 734, 24900, 24907), ("astlib/ast_402.ml", 734, 24900, 24928), 0), 0, Tag1 ("Astlib__Ast_402", 291))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -318)), 0, 0, 0, 0, (("astlib/ast_402.ml", 729, 24678, 24680), ("astlib/ast_402.ml", 735, 24929, 24936), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 80)), 2, 0); Tag1 (("open_description", 6789), (0, 0, [[(("popen_lid", 895), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -314)], (0)), 100000000, 0, -313), (("astlib/ast_402.ml", 742, 25099, 25106), ("astlib/ast_402.ml", 742, 25099, 25133), 0), 0, Tag1 ("Astlib__Ast_402", 292)); (("popen_override", 896), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "override_flag"), 0, (0)), 100000000, 0, -315), (("astlib/ast_402.ml", 743, 25134, 25141), ("astlib/ast_402.ml", 743, 25134, 25171), 0), 0, Tag1 ("Astlib__Ast_402", 293)); (("popen_loc", 897), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -316), (("astlib/ast_402.ml", 744, 25172, 25179), ("astlib/ast_402.ml", 744, 25172, 25201), 0), 0, Tag1 ("Astlib__Ast_402", 294)); (("popen_attributes", 898), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -317), (("astlib/ast_402.ml", 745, 25202, 25209), ("astlib/ast_402.ml", 745, 25202, 25238), 0), 0, Tag1 ("Astlib__Ast_402", 295))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "open_description"), 0, (0)), 100000000, 0, -312)), 0, 0, 0, 0, (("astlib/ast_402.ml", 740, 25021, 25023), ("astlib/ast_402.ml", 746, 25239, 25246), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 81)), 2, 0); Tag1 (("include_infos", 6790), ([((("a")), 100000000, 0, -309)], 1, [[(("pincl_mod", 899), 0, ((("a")), 100000000, 0, -309), (("astlib/ast_402.ml", 754, 25494, 25501), ("astlib/ast_402.ml", 754, 25494, 25515), 0), 0, Tag1 ("Astlib__Ast_402", 296)); (("pincl_loc", 900), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -310), (("astlib/ast_402.ml", 755, 25516, 25523), ("astlib/ast_402.ml", 755, 25516, 25545), 0), 0, Tag1 ("Astlib__Ast_402", 297)); (("pincl_attributes", 901), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -311), (("astlib/ast_402.ml", 756, 25546, 25553), ("astlib/ast_402.ml", 756, 25546, 25582), 0), 0, Tag1 ("Astlib__Ast_402", 298))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -309)], (0)), 100000000, 0, -308)), [25], [0], 0, 0, (("astlib/ast_402.ml", 752, 25416, 25418), ("astlib/ast_402.ml", 757, 25583, 25590), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 82)), 2, 0); Tag1 (("include_description", 6791), (0, 0, 0, 1, ((Tag3 ((("include_infos", 6790)), [(Tag3 ((("module_type", 6782)), 0, (0)), 100000000, 0, -307)], (0)), 100000000, 0, -306)), 0, 0, 0, 0, (("astlib/ast_402.ml", 759, 25592, 25594), ("astlib/ast_402.ml", 759, 25592, 25645), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 83)), 2, 0); Tag1 (("include_declaration", 6792), (0, 0, 0, 1, ((Tag3 ((("include_infos", 6790)), [(Tag3 ((("module_expr", 6794)), 0, (0)), 100000000, 0, -305)], (0)), 100000000, 0, -304)), 0, 0, 0, 0, (("astlib/ast_402.ml", 762, 25666, 25668), ("astlib/ast_402.ml", 762, 25666, 25719), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 84)), 2, 0); Tag1 (("with_constraint", 6793), (0, 0, Tag1 ([(("Pwith_type", 902), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -293)], (0)), 100000000, 0, -292); (Tag3 ((("type_declaration", 6760)), 0, (0)), 100000000, 0, -294)]), 0, (("astlib/ast_402.ml", 766, 25808, 25812), ("astlib/ast_402.ml", 766, 25808, 25862), 0), 0, Tag1 ("Astlib__Ast_402", 299)); (("Pwith_module", 903), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -296)], (0)), 100000000, 0, -295); (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -298)], (0)), 100000000, 0, -297)]), 0, (("astlib/ast_402.ml", 771, 26013, 26017), ("astlib/ast_402.ml", 771, 26013, 26068), 0), 0, Tag1 ("Astlib__Ast_402", 300)); (("Pwith_typesubst", 904), ([(Tag3 ((("type_declaration", 6760)), 0, (0)), 100000000, 0, -299)]), 0, (("astlib/ast_402.ml", 773, 26105, 26109), ("astlib/ast_402.ml", 773, 26105, 26146), 0), 0, Tag1 ("Astlib__Ast_402", 301)); (("Pwith_modsubst", 905), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -301)], (0)), 100000000, 0, -300); (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -303)], (0)), 100000000, 0, -302)]), 0, (("astlib/ast_402.ml", 775, 26182, 26186), ("astlib/ast_402.ml", 775, 26182, 26234), 0), 0, Tag1 ("Astlib__Ast_402", 302))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -291)), 0, 0, 0, 0, (("astlib/ast_402.ml", 765, 25740, 25742), ("astlib/ast_402.ml", 775, 26182, 26234), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 85)), 2, 0); Tag1 (("module_expr", 6794), (0, 0, [[(("pmod_desc", 906), 0, (Tag3 ((("module_expr_desc", 6795)), 0, (0)), 100000000, 0, -288), (("astlib/ast_402.ml", 782, 26390, 26397), ("astlib/ast_402.ml", 782, 26390, 26425), 0), 0, Tag1 ("Astlib__Ast_402", 303)); (("pmod_loc", 907), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -289), (("astlib/ast_402.ml", 783, 26426, 26433), ("astlib/ast_402.ml", 783, 26426, 26454), 0), 0, Tag1 ("Astlib__Ast_402", 304)); (("pmod_attributes", 908), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -290), (("astlib/ast_402.ml", 784, 26455, 26462), ("astlib/ast_402.ml", 784, 26455, 26490), 0), 0, Tag1 ("Astlib__Ast_402", 305))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -287)), 0, 0, 0, 0, (("astlib/ast_402.ml", 780, 26322, 26324), ("astlib/ast_402.ml", 785, 26515, 26522), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 86)), 2, 0); Tag1 (("module_expr_desc", 6795), (0, 0, Tag1 ([(("Pmod_ident", 909), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -274)], (0)), 100000000, 0, -273)]), 0, (("astlib/ast_402.ml", 788, 26594, 26598), ("astlib/ast_402.ml", 788, 26594, 26629), 0), 0, Tag1 ("Astlib__Ast_402", 306)); (("Pmod_structure", 910), ([(Tag3 ((("structure", 6796)), 0, (0)), 100000000, 0, -275)]), 0, (("astlib/ast_402.ml", 790, 26648, 26652), ("astlib/ast_402.ml", 790, 26648, 26681), 0), 0, Tag1 ("Astlib__Ast_402", 307)); (("Pmod_functor", 911), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -277)], (0)), 100000000, 0, -276); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 6782)), 0, (0)), 100000000, 0, -279)], (0)), 100000000, 0, -278); (Tag3 ((("module_expr", 6794)), 0, (0)), 100000000, 0, -280)]), 0, (("astlib/ast_402.ml", 792, 26713, 26717), ("astlib/ast_402.ml", 792, 26713, 26780), 0), 0, Tag1 ("Astlib__Ast_402", 308)); (("Pmod_apply", 912), ([(Tag3 ((("module_expr", 6794)), 0, (0)), 100000000, 0, -281); (Tag3 ((("module_expr", 6794)), 0, (0)), 100000000, 0, -282)]), 0, (("astlib/ast_402.ml", 794, 26820, 26824), ("astlib/ast_402.ml", 794, 26820, 26865), 0), 0, Tag1 ("Astlib__Ast_402", 309)); (("Pmod_constraint", 913), ([(Tag3 ((("module_expr", 6794)), 0, (0)), 100000000, 0, -283); (Tag3 ((("module_type", 6782)), 0, (0)), 100000000, 0, -284)]), 0, (("astlib/ast_402.ml", 796, 26891, 26895), ("astlib/ast_402.ml", 796, 26891, 26941), 0), 0, Tag1 ("Astlib__Ast_402", 310)); (("Pmod_unpack", 914), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -285)]), 0, (("astlib/ast_402.ml", 798, 26968, 26972), ("astlib/ast_402.ml", 798, 26968, 26999), 0), 0, Tag1 ("Astlib__Ast_402", 311)); (("Pmod_extension", 915), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -286)]), 0, (("astlib/ast_402.ml", 800, 27024, 27028), ("astlib/ast_402.ml", 800, 27024, 27057), 0), 0, Tag1 ("Astlib__Ast_402", 312))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -272)), 0, 0, 0, 0, (("astlib/ast_402.ml", 787, 26524, 26526), ("astlib/ast_402.ml", 800, 27024, 27057), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 87)), 2, 0); Tag1 (("structure", 6796), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 6797)), 0, (0)), 100000000, 0, -271)], (0)), 100000000, 0, -270)), 0, 0, 0, 0, (("astlib/ast_402.ml", 803, 27081, 27083), ("astlib/ast_402.ml", 803, 27081, 27118), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 88)), 2, 0); Tag1 (("structure_item", 6797), (0, 0, [[(("pstr_desc", 916), 0, (Tag3 ((("structure_item_desc", 6798)), 0, (0)), 100000000, 0, -268), (("astlib/ast_402.ml", 807, 27194, 27201), ("astlib/ast_402.ml", 807, 27194, 27232), 0), 0, Tag1 ("Astlib__Ast_402", 313)); (("pstr_loc", 917), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -269), (("astlib/ast_402.ml", 808, 27233, 27240), ("astlib/ast_402.ml", 808, 27233, 27261), 0), 0, Tag1 ("Astlib__Ast_402", 314))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -267)), 0, 0, 0, 0, (("astlib/ast_402.ml", 805, 27120, 27122), ("astlib/ast_402.ml", 809, 27262, 27269), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 89)), 2, 0); Tag1 (("structure_item_desc", 6798), (0, 0, Tag1 ([(("Pstr_eval", 918), ([(Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -244); (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -245)]), 0, (("astlib/ast_402.ml", 812, 27347, 27351), ("astlib/ast_402.ml", 812, 27347, 27389), 0), 0, Tag1 ("Astlib__Ast_402", 315)); (("Pstr_value", 919), ([(Tag3 (Tag1 ((("Asttypes", 6732)), "rec_flag"), 0, (0)), 100000000, 0, -246); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 6799)), 0, (0)), 100000000, 0, -248)], (0)), 100000000, 0, -247)]), 0, (("astlib/ast_402.ml", 814, 27408, 27412), ("astlib/ast_402.ml", 814, 27408, 27457), 0), 0, Tag1 ("Astlib__Ast_402", 316)); (("Pstr_primitive", 920), ([(Tag3 ((("value_description", 6759)), 0, (0)), 100000000, 0, -249)]), 0, (("astlib/ast_402.ml", 818, 27615, 27619), ("astlib/ast_402.ml", 818, 27615, 27656), 0), 0, Tag1 ("Astlib__Ast_402", 317)); (("Pstr_type", 921), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 6760)), 0, (0)), 100000000, 0, -251)], (0)), 100000000, 0, -250)]), 0, (("astlib/ast_402.ml", 820, 27703, 27707), ("astlib/ast_402.ml", 820, 27703, 27743), 0), 0, Tag1 ("Astlib__Ast_402", 318)); (("Pstr_typext", 922), ([(Tag3 ((("type_extension", 6764)), 0, (0)), 100000000, 0, -252)]), 0, (("astlib/ast_402.ml", 822, 27795, 27799), ("astlib/ast_402.ml", 822, 27795, 27830), 0), 0, Tag1 ("Astlib__Ast_402", 319)); (("Pstr_exception", 923), ([(Tag3 ((("extension_constructor", 6765)), 0, (0)), 100000000, 0, -253)]), 0, (("astlib/ast_402.ml", 824, 27862, 27866), ("astlib/ast_402.ml", 824, 27862, 27907), 0), 0, Tag1 ("Astlib__Ast_402", 320)); (("Pstr_module", 924), ([(Tag3 ((("module_binding", 6800)), 0, (0)), 100000000, 0, -254)]), 0, (("astlib/ast_402.ml", 827, 27972, 27976), ("astlib/ast_402.ml", 827, 27972, 28007), 0), 0, Tag1 ("Astlib__Ast_402", 321)); (("Pstr_recmodule", 925), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 6800)), 0, (0)), 100000000, 0, -256)], (0)), 100000000, 0, -255)]), 0, (("astlib/ast_402.ml", 829, 28038, 28042), ("astlib/ast_402.ml", 829, 28038, 28081), 0), 0, Tag1 ("Astlib__Ast_402", 322)); (("Pstr_modtype", 926), ([(Tag3 ((("module_type_declaration", 6788)), 0, (0)), 100000000, 0, -257)]), 0, (("astlib/ast_402.ml", 831, 28139, 28143), ("astlib/ast_402.ml", 831, 28139, 28184), 0), 0, Tag1 ("Astlib__Ast_402", 323)); (("Pstr_open", 927), ([(Tag3 ((("open_description", 6789)), 0, (0)), 100000000, 0, -258)]), 0, (("astlib/ast_402.ml", 833, 28220, 28224), ("astlib/ast_402.ml", 833, 28220, 28255), 0), 0, Tag1 ("Astlib__Ast_402", 324)); (("Pstr_class", 928), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 6781)), 0, (0)), 100000000, 0, -260)], (0)), 100000000, 0, -259)]), 0, (("astlib/ast_402.ml", 835, 28279, 28283), ("astlib/ast_402.ml", 835, 28279, 28321), 0), 0, Tag1 ("Astlib__Ast_402", 325)); (("Pstr_class_type", 929), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 6774)), 0, (0)), 100000000, 0, -262)], (0)), 100000000, 0, -261)]), 0, (("astlib/ast_402.ml", 837, 28374, 28378), ("astlib/ast_402.ml", 837, 28374, 28426), 0), 0, Tag1 ("Astlib__Ast_402", 326)); (("Pstr_include", 930), ([(Tag3 ((("include_declaration", 6792)), 0, (0)), 100000000, 0, -263)]), 0, (("astlib/ast_402.ml", 839, 28486, 28490), ("astlib/ast_402.ml", 839, 28486, 28527), 0), 0, Tag1 ("Astlib__Ast_402", 327)); (("Pstr_attribute", 931), ([(Tag3 ((("attribute", 6746)), 0, (0)), 100000000, 0, -264)]), 0, (("astlib/ast_402.ml", 841, 28555, 28559), ("astlib/ast_402.ml", 841, 28555, 28588), 0), 0, Tag1 ("Astlib__Ast_402", 328)); (("Pstr_extension", 932), ([(Tag3 ((("extension", 6747)), 0, (0)), 100000000, 0, -265); (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -266)]), 0, (("astlib/ast_402.ml", 843, 28613, 28617), ("astlib/ast_402.ml", 843, 28613, 28659), 0), 0, Tag1 ("Astlib__Ast_402", 329))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -243)), 0, 0, 0, 0, (("astlib/ast_402.ml", 811, 27271, 27273), ("astlib/ast_402.ml", 843, 28613, 28659), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 90)), 2, 0); Tag1 (("value_binding", 6799), (0, 0, [[(("pvb_pat", 933), 0, (Tag3 ((("pattern", 6754)), 0, (0)), 100000000, 0, -239), (("astlib/ast_402.ml", 848, 28754, 28760), ("astlib/ast_402.ml", 848, 28754, 28777), 0), 0, Tag1 ("Astlib__Ast_402", 330)); (("pvb_expr", 934), 0, (Tag3 ((("expression", 6756)), 0, (0)), 100000000, 0, -240), (("astlib/ast_402.ml", 849, 28778, 28784), ("astlib/ast_402.ml", 849, 28778, 28805), 0), 0, Tag1 ("Astlib__Ast_402", 331)); (("pvb_attributes", 935), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -241), (("astlib/ast_402.ml", 850, 28806, 28812), ("astlib/ast_402.ml", 850, 28806, 28839), 0), 0, Tag1 ("Astlib__Ast_402", 332)); (("pvb_loc", 936), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -242), (("astlib/ast_402.ml", 851, 28840, 28846), ("astlib/ast_402.ml", 851, 28840, 28866), 0), 0, Tag1 ("Astlib__Ast_402", 333))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -238)), 0, 0, 0, 0, (("astlib/ast_402.ml", 846, 28684, 28686), ("astlib/ast_402.ml", 852, 28867, 28872), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 91)), 2, 0); Tag1 (("module_binding", 6800), (0, 0, [[(("pmb_name", 937), 0, (Tag3 (Tag1 ((("Asttypes", 6732)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -234)], (0)), 100000000, 0, -233), (("astlib/ast_402.ml", 856, 28948, 28955), ("astlib/ast_402.ml", 856, 28948, 28976), 0), 0, Tag1 ("Astlib__Ast_402", 334)); (("pmb_expr", 938), 0, (Tag3 ((("module_expr", 6794)), 0, (0)), 100000000, 0, -235), (("astlib/ast_402.ml", 857, 28977, 28984), ("astlib/ast_402.ml", 857, 28977, 29006), 0), 0, Tag1 ("Astlib__Ast_402", 335)); (("pmb_attributes", 939), 0, (Tag3 ((("attributes", 6748)), 0, (0)), 100000000, 0, -236), (("astlib/ast_402.ml", 858, 29007, 29014), ("astlib/ast_402.ml", 858, 29007, 29041), 0), 0, Tag1 ("Astlib__Ast_402", 336)); (("pmb_loc", 940), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -237), (("astlib/ast_402.ml", 859, 29042, 29049), ("astlib/ast_402.ml", 859, 29042, 29069), 0), 0, Tag1 ("Astlib__Ast_402", 337))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -232)), 0, 0, 0, 0, (("astlib/ast_402.ml", 854, 28874, 28876), ("astlib/ast_402.ml", 860, 29070, 29077), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 92)), 2, 0); Tag1 (("toplevel_phrase", 6801), (0, 0, Tag1 ([(("Ptop_def", 953), ([(Tag3 ((("structure", 6796)), 0, (0)), 100000000, 0, -229)]), 0, (("astlib/ast_402.ml", 868, 29212, 29216), ("astlib/ast_402.ml", 868, 29212, 29239), 0), 0, Tag1 ("Astlib__Ast_402", 340)); (("Ptop_dir", 954), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -230); (Tag3 ((("directive_argument", 6802)), 0, (0)), 100000000, 0, -231)]), 0, (("astlib/ast_402.ml", 869, 29240, 29244), ("astlib/ast_402.ml", 869, 29240, 29285), 0), 0, Tag1 ("Astlib__Ast_402", 341))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -228)), 0, 0, 0, 0, (("astlib/ast_402.ml", 867, 29143, 29145), ("astlib/ast_402.ml", 869, 29240, 29285), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 338)), 1, 0); Tag1 (("directive_argument", 6802), (0, 0, Tag1 ([(("Pdir_none", 955), (0), 0, (("astlib/ast_402.ml", 873, 29390, 29394), ("astlib/ast_402.ml", 873, 29390, 29405), 0), 0, Tag1 ("Astlib__Ast_402", 342)); (("Pdir_string", 956), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -224)]), 0, (("astlib/ast_402.ml", 874, 29406, 29410), ("astlib/ast_402.ml", 874, 29406, 29433), 0), 0, Tag1 ("Astlib__Ast_402", 343)); (("Pdir_int", 957), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -225)]), 0, (("astlib/ast_402.ml", 875, 29434, 29438), ("astlib/ast_402.ml", 875, 29434, 29455), 0), 0, Tag1 ("Astlib__Ast_402", 344)); (("Pdir_ident", 958), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -226)]), 0, (("astlib/ast_402.ml", 876, 29456, 29460), ("astlib/ast_402.ml", 876, 29456, 29487), 0), 0, Tag1 ("Astlib__Ast_402", 345)); (("Pdir_bool", 959), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -227)]), 0, (("astlib/ast_402.ml", 877, 29488, 29492), ("astlib/ast_402.ml", 877, 29488, 29511), 0), 0, Tag1 ("Astlib__Ast_402", 346))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_402")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -223)), 0, 0, 0, 0, (("astlib/ast_402.ml", 872, 29316, 29318), ("astlib/ast_402.ml", 877, 29488, 29511), 0), 0, 0, 0, Tag1 ("Astlib__Ast_402", 339)), 2, 0)]), 0, (("astlib/ast_402.ml", 60, 2545, 2545), ("astlib/ast_402.ml", 878, 29512, 29515), 0), Tag1 ("Astlib__Ast_402", 347)), 0, 0); Tag3 (("Config", 6734), 0, (Tag1 ([(("ast_impl_magic_number", 6803), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -782), 0, (("astlib/ast_402.ml", 881, 29540, 29546), ("astlib/ast_402.ml", 881, 29540, 29567), 0), 0, Tag1 ("Astlib__Ast_402", 348)), 0); (("ast_intf_magic_number", 6804), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -781), 0, (("astlib/ast_402.ml", 882, 29585, 29591), ("astlib/ast_402.ml", 882, 29585, 29612), 0), 0, Tag1 ("Astlib__Ast_402", 349)), 0)]), 0, (("astlib/ast_402.ml", 880, 29517, 29517), ("astlib/ast_402.ml", 883, 29630, 29633), 0), Tag1 ("Astlib__Ast_402", 350)), 0, 0)]), 0, (("astlib/astlib.ml", 25, 1363, 1363), ("astlib/astlib.ml", 25, 1363, 1387), 0), Tag1 ("Astlib", 0)), 0, 0); (("version", 6727), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -200), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 6728), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -199), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 6729), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -180), 0), 100000000, 0, -179), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -196), 0), 100000000, 0, -195), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -198), 0), 100000000, 0, -197), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -190), 0), 100000000, 0, -189), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -162), 0), 100000000, 0, -161), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -176), 0), 100000000, 0, -175), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -166), 0), 100000000, 0, -165), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -188), 0), 100000000, 0, -187), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -174), 0), 100000000, 0, -173), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -172), 0), 100000000, 0, -171), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -170), 0), 100000000, 0, -169), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -168), 0), 100000000, 0, -167), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -184), 0), 100000000, 0, -183), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -192), 0), 100000000, 0, -191), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -186), 0), 100000000, 0, -185), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -164), 0), 100000000, 0, -163), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -178), 0), 100000000, 0, -177), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -194), 0), 100000000, 0, -193), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6726)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -182), 0), 100000000, 0, -181), (0, 100000000, 0, -160)), 100000000, 0, 175)), 100000000, 0, 176)), 100000000, 0, 177)), 100000000, 0, 178)), 100000000, 0, 179)), 100000000, 0, 180)), 100000000, 0, 181)), 100000000, 0, 182)), 100000000, 0, 183)), 100000000, 0, 184)), 100000000, 0, 185)), 100000000, 0, 186)), 100000000, 0, 187)), 100000000, 0, 188)), 100000000, 0, 189)), 100000000, 0, 190)), 100000000, 0, 191)), 100000000, 0, 192)), 100000000, 0, -141), (0)), 100000000, 0, -140)], (0)), 100000000, 0, -139)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 6730), ((("witnesses", 6673)), [((("_")), 100000000, 0, -138)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 6729)), 0, (0)), 100000000, 0, -137)], (0)), 100000000, 0, -136)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 6731), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 6729)), 0, (0)), 100000000, 0, -135)], (0)), 100000000, 0, -134), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 145, 5148, 5148), ("ast/versions.mli", 145, 5148, 5213), 0), Tag1 ("Ppxlib_ast__Versions", 34)), 0, 0); Tag3 (("OCaml_403", 6677), 0, (Tag1 ([Tag3 (("Ast", 6805), 0, (Tag1 ([Tag3 (("Asttypes", 6811), 0, (Tag1 ([Tag1 (("constant", 6814), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -866)]), 0, (("astlib/ast_403.ml", 24, 1559, 1565), ("astlib/ast_403.ml", 24, 1559, 1581), 0), 0, Tag1 ("Astlib__Ast_403", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -867)]), 0, (("astlib/ast_403.ml", 25, 1582, 1586), ("astlib/ast_403.ml", 25, 1582, 1606), 0), 0, Tag1 ("Astlib__Ast_403", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -868); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -870)], (0)), 100000000, 0, -869)]), 0, (("astlib/ast_403.ml", 26, 1607, 1611), ("astlib/ast_403.ml", 26, 1607, 1651), 0), 0, Tag1 ("Astlib__Ast_403", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -871)]), 0, (("astlib/ast_403.ml", 27, 1652, 1656), ("astlib/ast_403.ml", 27, 1652, 1679), 0), 0, Tag1 ("Astlib__Ast_403", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -872)]), 0, (("astlib/ast_403.ml", 28, 1680, 1684), ("astlib/ast_403.ml", 28, 1680, 1706), 0), 0, Tag1 ("Astlib__Ast_403", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -873)]), 0, (("astlib/ast_403.ml", 29, 1707, 1711), ("astlib/ast_403.ml", 29, 1707, 1733), 0), 0, Tag1 ("Astlib__Ast_403", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -874)]), 0, (("astlib/ast_403.ml", 30, 1734, 1738), ("astlib/ast_403.ml", 30, 1734, 1768), 0), 0, Tag1 ("Astlib__Ast_403", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -865)), 0, 0, 0, 0, (("astlib/ast_403.ml", 23, 1505, 1507), ("astlib/ast_403.ml", 30, 1734, 1768), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 0)), 1, 0); Tag1 (("rec_flag", 6815), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_403.ml", 32, 1770, 1824), ("astlib/ast_403.ml", 32, 1770, 1836), 0), 0, Tag1 ("Astlib__Ast_403", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_403.ml", 32, 1770, 1837), ("astlib/ast_403.ml", 32, 1770, 1848), 0), 0, Tag1 ("Astlib__Ast_403", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -864)), 0, 0, 0, 0, (("astlib/ast_403.ml", 32, 1770, 1772), ("astlib/ast_403.ml", 32, 1770, 1848), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 8)), 1, 0); Tag1 (("direction_flag", 6816), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_403.ml", 34, 1850, 1916), ("astlib/ast_403.ml", 34, 1850, 1920), 0), 0, Tag1 ("Astlib__Ast_403", 12)); (("Downto", 333), (0), 0, (("astlib/ast_403.ml", 34, 1850, 1921), ("astlib/ast_403.ml", 34, 1850, 1929), 0), 0, Tag1 ("Astlib__Ast_403", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -863)), 0, 0, 0, 0, (("astlib/ast_403.ml", 34, 1850, 1852), ("astlib/ast_403.ml", 34, 1850, 1929), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 11)), 1, 0); Tag1 (("private_flag", 6817), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_403.ml", 37, 1985, 2047), ("astlib/ast_403.ml", 37, 1985, 2054), 0), 0, Tag1 ("Astlib__Ast_403", 15)); (("Public", 336), (0), 0, (("astlib/ast_403.ml", 37, 1985, 2055), ("astlib/ast_403.ml", 37, 1985, 2063), 0), 0, Tag1 ("Astlib__Ast_403", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -862)), 0, 0, 0, 0, (("astlib/ast_403.ml", 37, 1985, 1987), ("astlib/ast_403.ml", 37, 1985, 2063), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 14)), 1, 0); Tag1 (("mutable_flag", 6818), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_403.ml", 39, 2065, 2127), ("astlib/ast_403.ml", 39, 2065, 2136), 0), 0, Tag1 ("Astlib__Ast_403", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_403.ml", 39, 2065, 2137), ("astlib/ast_403.ml", 39, 2065, 2146), 0), 0, Tag1 ("Astlib__Ast_403", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -861)), 0, 0, 0, 0, (("astlib/ast_403.ml", 39, 2065, 2067), ("astlib/ast_403.ml", 39, 2065, 2146), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 17)), 1, 0); Tag1 (("virtual_flag", 6819), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_403.ml", 41, 2148, 2210), ("astlib/ast_403.ml", 41, 2148, 2217), 0), 0, Tag1 ("Astlib__Ast_403", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_403.ml", 41, 2148, 2218), ("astlib/ast_403.ml", 41, 2148, 2228), 0), 0, Tag1 ("Astlib__Ast_403", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -860)), 0, 0, 0, 0, (("astlib/ast_403.ml", 41, 2148, 2150), ("astlib/ast_403.ml", 41, 2148, 2228), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 20)), 1, 0); Tag1 (("override_flag", 6820), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_403.ml", 43, 2230, 2294), ("astlib/ast_403.ml", 43, 2230, 2302), 0), 0, Tag1 ("Astlib__Ast_403", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_403.ml", 43, 2230, 2303), ("astlib/ast_403.ml", 43, 2230, 2310), 0), 0, Tag1 ("Astlib__Ast_403", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -859)), 0, 0, 0, 0, (("astlib/ast_403.ml", 43, 2230, 2232), ("astlib/ast_403.ml", 43, 2230, 2310), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 23)), 1, 0); Tag1 (("closed_flag", 6821), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_403.ml", 45, 2312, 2372), ("astlib/ast_403.ml", 45, 2312, 2378), 0), 0, Tag1 ("Astlib__Ast_403", 27)); (("Open", 348), (0), 0, (("astlib/ast_403.ml", 45, 2312, 2379), ("astlib/ast_403.ml", 45, 2312, 2385), 0), 0, Tag1 ("Astlib__Ast_403", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -858)), 0, 0, 0, 0, (("astlib/ast_403.ml", 45, 2312, 2314), ("astlib/ast_403.ml", 45, 2312, 2385), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 26)), 1, 0); Tag1 (("label", 6822), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -857)), 0, 0, 0, 0, (("astlib/ast_403.ml", 47, 2387, 2389), ("astlib/ast_403.ml", 47, 2387, 2408), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 29)), 1, 0); Tag1 (("arg_label", 6823), (0, 0, Tag1 ([(("Nolabel", 351), (0), 0, (("astlib/ast_403.ml", 50, 2466, 2472), ("astlib/ast_403.ml", 50, 2466, 2479), 0), 0, Tag1 ("Astlib__Ast_403", 31)); (("Labelled", 352), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -855)]), 0, (("astlib/ast_403.ml", 51, 2480, 2484), ("astlib/ast_403.ml", 51, 2480, 2504), 0), 0, Tag1 ("Astlib__Ast_403", 32)); (("Optional", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -856)]), 0, (("astlib/ast_403.ml", 52, 2527, 2531), ("astlib/ast_403.ml", 52, 2527, 2551), 0), 0, Tag1 ("Astlib__Ast_403", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -854)), 0, 0, 0, 0, (("astlib/ast_403.ml", 49, 2410, 2412), ("astlib/ast_403.ml", 52, 2527, 2551), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 30)), 1, 0); Tag1 (("loc", 6824), ([((("a")), 100000000, 0, -852)], 1, [[(("txt", 355), 0, ((("a")), 100000000, 0, -852), (("astlib/ast_403.ml", 55, 2611, 2615), ("astlib/ast_403.ml", 55, 2611, 2624), 0), 0, Tag1 ("Astlib__Ast_403", 35)); (("loc", 365), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -853), (("astlib/ast_403.ml", 56, 2625, 2629), ("astlib/ast_403.ml", 56, 2625, 2646), 0), 0, Tag1 ("Astlib__Ast_403", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -852)], (0)), 100000000, 0, -851)), [25], [0], 0, 0, (("astlib/ast_403.ml", 54, 2575, 2577), ("astlib/ast_403.ml", 57, 2647, 2650), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 34)), 1, 0); Tag1 (("variance", 6825), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_403.ml", 61, 2707, 2711), ("astlib/ast_403.ml", 61, 2707, 2722), 0), 0, Tag1 ("Astlib__Ast_403", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_403.ml", 62, 2723, 2727), ("astlib/ast_403.ml", 62, 2723, 2742), 0), 0, Tag1 ("Astlib__Ast_403", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_403.ml", 63, 2743, 2747), ("astlib/ast_403.ml", 63, 2743, 2758), 0), 0, Tag1 ("Astlib__Ast_403", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -850)), 0, 0, 0, 0, (("astlib/ast_403.ml", 60, 2653, 2655), ("astlib/ast_403.ml", 63, 2743, 2758), 0), 0, 1, 0, Tag1 ("Astlib__Ast_403", 37)), 1, 0)]), 0, (("astlib/ast_403.ml", 20, 1415, 1415), ("astlib/ast_403.ml", 64, 2759, 2762), 0), Tag1 ("Astlib__Ast_403", 41)), 0, 0); Tag3 (("Parsetree", 6812), 0, (Tag1 ([Tag1 (("constant", 6826), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1442); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1444)], (0)), 100000000, 0, -1443)]), 0, (("astlib/ast_403.ml", 72, 2913, 2919), ("astlib/ast_403.ml", 72, 2913, 2957), 0), 0, Tag1 ("Astlib__Ast_403", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1445)]), 0, (("astlib/ast_403.ml", 78, 3111, 3115), ("astlib/ast_403.ml", 78, 3111, 3136), 0), 0, Tag1 ("Astlib__Ast_403", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1446); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1448)], (0)), 100000000, 0, -1447)]), 0, (("astlib/ast_403.ml", 80, 3151, 3155), ("astlib/ast_403.ml", 80, 3151, 3196), 0), 0, Tag1 ("Astlib__Ast_403", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1449); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1451)], (0)), 100000000, 0, -1450)]), 0, (("astlib/ast_403.ml", 84, 3258, 3262), ("astlib/ast_403.ml", 84, 3258, 3300), 0), 0, Tag1 ("Astlib__Ast_403", 46))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -1441)), 0, 0, 0, 0, (("astlib/ast_403.ml", 71, 2858, 2860), ("astlib/ast_403.ml", 84, 3258, 3300), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 42)), 1, 0); Tag1 (("attribute", 6827), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1439)], (0)), 100000000, 0, -1438); (Tag3 ((("payload", 6830)), 0, (0)), 100000000, 0, -1440)]), 100000000, 0, -1437)), 0, 0, 0, 0, (("astlib/ast_403.ml", 93, 3467, 3469), ("astlib/ast_403.ml", 93, 3467, 3506), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 47)), 1, 0); Tag1 (("extension", 6828), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1435)], (0)), 100000000, 0, -1434); (Tag3 ((("payload", 6830)), 0, (0)), 100000000, 0, -1436)]), 100000000, 0, -1433)), 0, 0, 0, 0, (("astlib/ast_403.ml", 101, 3681, 3683), ("astlib/ast_403.ml", 101, 3681, 3719), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 48)), 2, 0); Tag1 (("attributes", 6829), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 6827)), 0, (0)), 100000000, 0, -1432)], (0)), 100000000, 0, -1431)), 0, 0, 0, 0, (("astlib/ast_403.ml", 108, 3844, 3846), ("astlib/ast_403.ml", 108, 3844, 3877), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 49)), 2, 0); Tag1 (("payload", 6830), (0, 0, Tag1 ([(("PStr", 703), ([(Tag3 ((("structure", 6878)), 0, (0)), 100000000, 0, -1425)]), 0, (("astlib/ast_403.ml", 111, 3931, 3935), ("astlib/ast_403.ml", 111, 3931, 3954), 0), 0, Tag1 ("Astlib__Ast_403", 103)); (("PSig", 704), ([(Tag3 ((("signature", 6866)), 0, (0)), 100000000, 0, -1426)]), 0, (("astlib/ast_403.ml", 112, 3955, 3959), ("astlib/ast_403.ml", 112, 3955, 3978), 0), 0, Tag1 ("Astlib__Ast_403", 104)); (("PTyp", 705), ([(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1427)]), 0, (("astlib/ast_403.ml", 113, 3991, 3995), ("astlib/ast_403.ml", 113, 3991, 4014), 0), 0, Tag1 ("Astlib__Ast_403", 105)); (("PPat", 706), ([(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1428); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1430)], (0)), 100000000, 0, -1429)]), 0, (("astlib/ast_403.ml", 114, 4026, 4030), ("astlib/ast_403.ml", 114, 4026, 4067), 0), 0, Tag1 ("Astlib__Ast_403", 106))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -1424)), 0, 0, 0, 0, (("astlib/ast_403.ml", 110, 3879, 3881), ("astlib/ast_403.ml", 114, 4026, 4067), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 50)), 2, 0); Tag1 (("core_type", 6831), (0, 0, [[(("ptyp_desc", 707), 0, (Tag3 ((("core_type_desc", 6832)), 0, (0)), 100000000, 0, -1421), (("astlib/ast_403.ml", 122, 4214, 4221), ("astlib/ast_403.ml", 122, 4214, 4247), 0), 0, Tag1 ("Astlib__Ast_403", 107)); (("ptyp_loc", 708), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1422), (("astlib/ast_403.ml", 123, 4248, 4255), ("astlib/ast_403.ml", 123, 4248, 4276), 0), 0, Tag1 ("Astlib__Ast_403", 108)); (("ptyp_attributes", 709), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1423), (("astlib/ast_403.ml", 124, 4277, 4284), ("astlib/ast_403.ml", 124, 4277, 4312), 0), 0, Tag1 ("Astlib__Ast_403", 109))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -1420)), 0, 0, 0, 0, (("astlib/ast_403.ml", 120, 4150, 4152), ("astlib/ast_403.ml", 125, 4337, 4344), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 51)), 2, 0); Tag1 (("core_type_desc", 6832), (0, 0, Tag1 ([(("Ptyp_any", 710), (0), 0, (("astlib/ast_403.ml", 128, 4412, 4416), ("astlib/ast_403.ml", 128, 4412, 4426), 0), 0, Tag1 ("Astlib__Ast_403", 110)); (("Ptyp_var", 711), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1387)]), 0, (("astlib/ast_403.ml", 130, 4446, 4450), ("astlib/ast_403.ml", 130, 4446, 4470), 0), 0, Tag1 ("Astlib__Ast_403", 111)); (("Ptyp_arrow", 712), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "arg_label"), 0, (0)), 100000000, 0, -1388); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1389); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1390)]), 0, (("astlib/ast_403.ml", 132, 4490, 4494), ("astlib/ast_403.ml", 132, 4490, 4543), 0), 0, Tag1 ("Astlib__Ast_403", 112)); (("Ptyp_tuple", 713), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1392)], (0)), 100000000, 0, -1391)]), 0, (("astlib/ast_403.ml", 137, 4666, 4670), ("astlib/ast_403.ml", 137, 4666, 4700), 0), 0, Tag1 ("Astlib__Ast_403", 113)); (("Ptyp_constr", 714), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1394)], (0)), 100000000, 0, -1393); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1396)], (0)), 100000000, 0, -1395)]), 0, (("astlib/ast_403.ml", 142, 4773, 4777), ("astlib/ast_403.ml", 142, 4773, 4826), 0), 0, Tag1 ("Astlib__Ast_403", 114)); (("Ptyp_object", 718), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1399); (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1400); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1401)]), 100000000, 0, -1398)], (0)), 100000000, 0, -1397); (Tag3 (Tag1 ((("Asttypes", 6811)), "closed_flag"), 0, (0)), 100000000, 0, -1402)]), 0, (("astlib/ast_403.ml", 147, 4920, 4924), ("astlib/ast_403.ml", 147, 4920, 4993), 0), 0, Tag1 ("Astlib__Ast_403", 115)); (("Ptyp_class", 719), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1404)], (0)), 100000000, 0, -1403); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1406)], (0)), 100000000, 0, -1405)]), 0, (("astlib/ast_403.ml", 151, 5116, 5120), ("astlib/ast_403.ml", 151, 5116, 5168), 0), 0, Tag1 ("Astlib__Ast_403", 116)); (("Ptyp_alias", 720), ([(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1407); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1408)]), 0, (("astlib/ast_403.ml", 156, 5265, 5269), ("astlib/ast_403.ml", 156, 5265, 5303), 0), 0, Tag1 ("Astlib__Ast_403", 117)); (("Ptyp_variant", 721), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 6834)), 0, (0)), 100000000, 0, -1410)], (0)), 100000000, 0, -1409); (Tag3 (Tag1 ((("Asttypes", 6811)), "closed_flag"), 0, (0)), 100000000, 0, -1411); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 6811)), "label"), 0, (0)), 100000000, 0, -1414)], (0)), 100000000, 0, -1413)], (0)), 100000000, 0, -1412)]), 0, (("astlib/ast_403.ml", 158, 5328, 5332), ("astlib/ast_403.ml", 158, 5328, 5398), 0), 0, Tag1 ("Astlib__Ast_403", 118)); (("Ptyp_poly", 722), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1416)], (0)), 100000000, 0, -1415); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1417)]), 0, (("astlib/ast_403.ml", 164, 5674, 5678), ("astlib/ast_403.ml", 164, 5674, 5716), 0), 0, Tag1 ("Astlib__Ast_403", 119)); (("Ptyp_package", 723), ([(Tag3 ((("package_type", 6833)), 0, (0)), 100000000, 0, -1418)]), 0, (("astlib/ast_403.ml", 184, 6270, 6274), ("astlib/ast_403.ml", 184, 6270, 6304), 0), 0, Tag1 ("Astlib__Ast_403", 120)); (("Ptyp_extension", 724), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -1419)]), 0, (("astlib/ast_403.ml", 186, 6332, 6336), ("astlib/ast_403.ml", 186, 6332, 6365), 0), 0, Tag1 ("Astlib__Ast_403", 121))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -1386)), 0, 0, 0, 0, (("astlib/ast_403.ml", 127, 4346, 4348), ("astlib/ast_403.ml", 186, 6332, 6365), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 52)), 2, 0); Tag1 (("package_type", 6833), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1380)], (0)), 100000000, 0, -1379); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1384)], (0)), 100000000, 0, -1383); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1385)]), 100000000, 0, -1382)], (0)), 100000000, 0, -1381)]), 100000000, 0, -1378)), 0, 0, 0, 0, (("astlib/ast_403.ml", 189, 6389, 6391), ("astlib/ast_403.ml", 189, 6389, 6462), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 53)), 2, 0); Tag1 (("row_field", 6834), (0, 0, Tag1 ([(("Rtag", 725), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "label"), 0, (0)), 100000000, 0, -1372); (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1373); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1374); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1376)], (0)), 100000000, 0, -1375)]), 0, (("astlib/ast_403.ml", 196, 6623, 6627), ("astlib/ast_403.ml", 196, 6623, 6679), 0), 0, Tag1 ("Astlib__Ast_403", 122)); (("Rinherit", 726), ([(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1377)]), 0, (("astlib/ast_403.ml", 209, 7203, 7207), ("astlib/ast_403.ml", 209, 7203, 7230), 0), 0, Tag1 ("Astlib__Ast_403", 123))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -1371)), 0, 0, 0, 0, (("astlib/ast_403.ml", 195, 6567, 6569), ("astlib/ast_403.ml", 209, 7203, 7230), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 54)), 2, 0); Tag1 (("pattern", 6835), (0, 0, [[(("ppat_desc", 727), 0, (Tag3 ((("pattern_desc", 6836)), 0, (0)), 100000000, 0, -1368), (("astlib/ast_403.ml", 216, 7332, 7339), ("astlib/ast_403.ml", 216, 7332, 7363), 0), 0, Tag1 ("Astlib__Ast_403", 124)); (("ppat_loc", 728), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1369), (("astlib/ast_403.ml", 217, 7364, 7371), ("astlib/ast_403.ml", 217, 7364, 7392), 0), 0, Tag1 ("Astlib__Ast_403", 125)); (("ppat_attributes", 729), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1370), (("astlib/ast_403.ml", 218, 7393, 7400), ("astlib/ast_403.ml", 218, 7393, 7428), 0), 0, Tag1 ("Astlib__Ast_403", 126))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -1367)), 0, 0, 0, 0, (("astlib/ast_403.ml", 214, 7272, 7274), ("astlib/ast_403.ml", 219, 7453, 7460), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 55)), 2, 0); Tag1 (("pattern_desc", 6836), (0, 0, Tag1 ([(("Ppat_any", 730), (0), 0, (("astlib/ast_403.ml", 222, 7524, 7528), ("astlib/ast_403.ml", 222, 7524, 7538), 0), 0, Tag1 ("Astlib__Ast_403", 127)); (("Ppat_var", 731), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1332)], (0)), 100000000, 0, -1331)]), 0, (("astlib/ast_403.ml", 224, 7557, 7561), ("astlib/ast_403.ml", 224, 7557, 7585), 0), 0, Tag1 ("Astlib__Ast_403", 128)); (("Ppat_alias", 732), ([(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1333); (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1335)], (0)), 100000000, 0, -1334)]), 0, (("astlib/ast_403.ml", 226, 7604, 7608), ("astlib/ast_403.ml", 226, 7604, 7644), 0), 0, Tag1 ("Astlib__Ast_403", 129)); (("Ppat_constant", 733), ([(Tag3 ((("constant", 6826)), 0, (0)), 100000000, 0, -1336)]), 0, (("astlib/ast_403.ml", 228, 7669, 7673), ("astlib/ast_403.ml", 228, 7669, 7700), 0), 0, Tag1 ("Astlib__Ast_403", 130)); (("Ppat_interval", 734), ([(Tag3 ((("constant", 6826)), 0, (0)), 100000000, 0, -1337); (Tag3 ((("constant", 6826)), 0, (0)), 100000000, 0, -1338)]), 0, (("astlib/ast_403.ml", 230, 7749, 7753), ("astlib/ast_403.ml", 230, 7749, 7791), 0), 0, Tag1 ("Astlib__Ast_403", 131)); (("Ppat_tuple", 735), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1340)], (0)), 100000000, 0, -1339)]), 0, (("astlib/ast_403.ml", 235, 7931, 7935), ("astlib/ast_403.ml", 235, 7931, 7963), 0), 0, Tag1 ("Astlib__Ast_403", 132)); (("Ppat_construct", 736), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1342)], (0)), 100000000, 0, -1341); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1344)], (0)), 100000000, 0, -1343)]), 0, (("astlib/ast_403.ml", 240, 8036, 8040), ("astlib/ast_403.ml", 240, 8036, 8092), 0), 0, Tag1 ("Astlib__Ast_403", 133)); (("Ppat_variant", 737), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "label"), 0, (0)), 100000000, 0, -1345); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1347)], (0)), 100000000, 0, -1346)]), 0, (("astlib/ast_403.ml", 245, 8241, 8245), ("astlib/ast_403.ml", 245, 8241, 8285), 0), 0, Tag1 ("Astlib__Ast_403", 134)); (("Ppat_record", 738), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1351)], (0)), 100000000, 0, -1350); (Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1352)]), 100000000, 0, -1349)], (0)), 100000000, 0, -1348); (Tag3 (Tag1 ((("Asttypes", 6811)), "closed_flag"), 0, (0)), 100000000, 0, -1353)]), 0, (("astlib/ast_403.ml", 249, 8372, 8376), ("astlib/ast_403.ml", 249, 8372, 8439), 0), 0, Tag1 ("Astlib__Ast_403", 135)); (("Ppat_array", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1355)], (0)), 100000000, 0, -1354)]), 0, (("astlib/ast_403.ml", 255, 8593, 8597), ("astlib/ast_403.ml", 255, 8593, 8625), 0), 0, Tag1 ("Astlib__Ast_403", 136)); (("Ppat_or", 740), ([(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1356); (Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1357)]), 0, (("astlib/ast_403.ml", 257, 8660, 8664), ("astlib/ast_403.ml", 257, 8660, 8694), 0), 0, Tag1 ("Astlib__Ast_403", 137)); (("Ppat_constraint", 741), ([(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1358); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1359)]), 0, (("astlib/ast_403.ml", 259, 8719, 8723), ("astlib/ast_403.ml", 259, 8719, 8763), 0), 0, Tag1 ("Astlib__Ast_403", 138)); (("Ppat_type", 742), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1361)], (0)), 100000000, 0, -1360)]), 0, (("astlib/ast_403.ml", 261, 8788, 8792), ("astlib/ast_403.ml", 261, 8788, 8822), 0), 0, Tag1 ("Astlib__Ast_403", 139)); (("Ppat_lazy", 743), ([(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1362)]), 0, (("astlib/ast_403.ml", 263, 8847, 8851), ("astlib/ast_403.ml", 263, 8847, 8873), 0), 0, Tag1 ("Astlib__Ast_403", 140)); (("Ppat_unpack", 744), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1364)], (0)), 100000000, 0, -1363)]), 0, (("astlib/ast_403.ml", 265, 8897, 8901), ("astlib/ast_403.ml", 265, 8897, 8928), 0), 0, Tag1 ("Astlib__Ast_403", 141)); (("Ppat_exception", 745), ([(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1365)]), 0, (("astlib/ast_403.ml", 270, 9075, 9079), ("astlib/ast_403.ml", 270, 9075, 9106), 0), 0, Tag1 ("Astlib__Ast_403", 142)); (("Ppat_extension", 746), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -1366)]), 0, (("astlib/ast_403.ml", 272, 9135, 9139), ("astlib/ast_403.ml", 272, 9135, 9168), 0), 0, Tag1 ("Astlib__Ast_403", 143))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -1330)), 0, 0, 0, 0, (("astlib/ast_403.ml", 221, 7462, 7464), ("astlib/ast_403.ml", 272, 9135, 9168), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 56)), 2, 0); Tag1 (("expression", 6837), (0, 0, [[(("pexp_desc", 747), 0, (Tag3 ((("expression_desc", 6838)), 0, (0)), 100000000, 0, -1327), (("astlib/ast_403.ml", 279, 9285, 9292), ("astlib/ast_403.ml", 279, 9285, 9319), 0), 0, Tag1 ("Astlib__Ast_403", 144)); (("pexp_loc", 748), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1328), (("astlib/ast_403.ml", 280, 9320, 9327), ("astlib/ast_403.ml", 280, 9320, 9348), 0), 0, Tag1 ("Astlib__Ast_403", 145)); (("pexp_attributes", 749), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1329), (("astlib/ast_403.ml", 281, 9349, 9356), ("astlib/ast_403.ml", 281, 9349, 9384), 0), 0, Tag1 ("Astlib__Ast_403", 146))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -1326)), 0, 0, 0, 0, (("astlib/ast_403.ml", 277, 9219, 9221), ("astlib/ast_403.ml", 282, 9409, 9416), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 57)), 2, 0); Tag1 (("expression_desc", 6838), (0, 0, Tag1 ([(("Pexp_ident", 750), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1228)], (0)), 100000000, 0, -1227)]), 0, (("astlib/ast_403.ml", 285, 9486, 9490), ("astlib/ast_403.ml", 285, 9486, 9521), 0), 0, Tag1 ("Astlib__Ast_403", 147)); (("Pexp_constant", 751), ([(Tag3 ((("constant", 6826)), 0, (0)), 100000000, 0, -1229)]), 0, (("astlib/ast_403.ml", 289, 9568, 9572), ("astlib/ast_403.ml", 289, 9568, 9599), 0), 0, Tag1 ("Astlib__Ast_403", 148)); (("Pexp_let", 752), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "rec_flag"), 0, (0)), 100000000, 0, -1230); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 6881)), 0, (0)), 100000000, 0, -1232)], (0)), 100000000, 0, -1231); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1233)]), 0, (("astlib/ast_403.ml", 291, 9648, 9652), ("astlib/ast_403.ml", 291, 9648, 9708), 0), 0, Tag1 ("Astlib__Ast_403", 149)); (("Pexp_function", 753), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 6839)), 0, (0)), 100000000, 0, -1235)], (0)), 100000000, 0, -1234)]), 0, (("astlib/ast_403.ml", 295, 9876, 9880), ("astlib/ast_403.ml", 295, 9876, 9908), 0), 0, Tag1 ("Astlib__Ast_403", 150)); (("Pexp_fun", 754), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "arg_label"), 0, (0)), 100000000, 0, -1236); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1238)], (0)), 100000000, 0, -1237); (Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1239); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1240)]), 0, (("astlib/ast_403.ml", 297, 9960, 9964), ("astlib/ast_403.ml", 297, 9960, 10030), 0), 0, Tag1 ("Astlib__Ast_403", 151)); (("Pexp_apply", 755), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1241); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "arg_label"), 0, (0)), 100000000, 0, -1244); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1245)]), 100000000, 0, -1243)], (0)), 100000000, 0, -1242)]), 0, (("astlib/ast_403.ml", 308, 10535, 10539), ("astlib/ast_403.ml", 308, 10535, 10597), 0), 0, Tag1 ("Astlib__Ast_403", 152)); (("Pexp_match", 756), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1246); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 6839)), 0, (0)), 100000000, 0, -1248)], (0)), 100000000, 0, -1247)]), 0, (("astlib/ast_403.ml", 315, 10781, 10785), ("astlib/ast_403.ml", 315, 10781, 10823), 0), 0, Tag1 ("Astlib__Ast_403", 153)); (("Pexp_try", 757), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1249); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 6839)), 0, (0)), 100000000, 0, -1251)], (0)), 100000000, 0, -1250)]), 0, (("astlib/ast_403.ml", 317, 10880, 10884), ("astlib/ast_403.ml", 317, 10880, 10920), 0), 0, Tag1 ("Astlib__Ast_403", 154)); (("Pexp_tuple", 758), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1253)], (0)), 100000000, 0, -1252)]), 0, (("astlib/ast_403.ml", 319, 10975, 10979), ("astlib/ast_403.ml", 319, 10975, 11010), 0), 0, Tag1 ("Astlib__Ast_403", 155)); (("Pexp_construct", 759), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1255)], (0)), 100000000, 0, -1254); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1257)], (0)), 100000000, 0, -1256)]), 0, (("astlib/ast_403.ml", 324, 11083, 11087), ("astlib/ast_403.ml", 324, 11083, 11142), 0), 0, Tag1 ("Astlib__Ast_403", 156)); (("Pexp_variant", 760), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "label"), 0, (0)), 100000000, 0, -1258); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1260)], (0)), 100000000, 0, -1259)]), 0, (("astlib/ast_403.ml", 329, 11287, 11291), ("astlib/ast_403.ml", 329, 11287, 11334), 0), 0, Tag1 ("Astlib__Ast_403", 157)); (("Pexp_record", 761), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1264)], (0)), 100000000, 0, -1263); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1265)]), 100000000, 0, -1262)], (0)), 100000000, 0, -1261); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1267)], (0)), 100000000, 0, -1266)]), 0, (("astlib/ast_403.ml", 333, 11421, 11425), ("astlib/ast_403.ml", 333, 11421, 11497), 0), 0, Tag1 ("Astlib__Ast_403", 158)); (("Pexp_field", 762), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1268); (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1270)], (0)), 100000000, 0, -1269)]), 0, (("astlib/ast_403.ml", 339, 11644, 11648), ("astlib/ast_403.ml", 339, 11644, 11692), 0), 0, Tag1 ("Astlib__Ast_403", 159)); (("Pexp_setfield", 763), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1271); (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1273)], (0)), 100000000, 0, -1272); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1274)]), 0, (("astlib/ast_403.ml", 341, 11713, 11717), ("astlib/ast_403.ml", 341, 11713, 11777), 0), 0, Tag1 ("Astlib__Ast_403", 160)); (("Pexp_array", 764), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1276)], (0)), 100000000, 0, -1275)]), 0, (("astlib/ast_403.ml", 343, 11805, 11809), ("astlib/ast_403.ml", 343, 11805, 11840), 0), 0, Tag1 ("Astlib__Ast_403", 161)); (("Pexp_ifthenelse", 765), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1277); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1278); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1280)], (0)), 100000000, 0, -1279)]), 0, (("astlib/ast_403.ml", 345, 11875, 11879), ("astlib/ast_403.ml", 345, 11875, 11943), 0), 0, Tag1 ("Astlib__Ast_403", 162)); (("Pexp_sequence", 766), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1281); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1282)]), 0, (("astlib/ast_403.ml", 347, 11982, 11986), ("astlib/ast_403.ml", 347, 11982, 12028), 0), 0, Tag1 ("Astlib__Ast_403", 163)); (("Pexp_while", 767), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1283); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1284)]), 0, (("astlib/ast_403.ml", 349, 12052, 12056), ("astlib/ast_403.ml", 349, 12052, 12095), 0), 0, Tag1 ("Astlib__Ast_403", 164)); (("Pexp_for", 768), ([(Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1285); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1286); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1287); (Tag3 (Tag1 ((("Asttypes", 6811)), "direction_flag"), 0, (0)), 100000000, 0, -1288); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1289)]), 0, (("astlib/ast_403.ml", 351, 12132, 12136), ("astlib/ast_403.ml", 352, 12150, 12222), 0), 0, Tag1 ("Astlib__Ast_403", 165)); (("Pexp_constraint", 769), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1290); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1291)]), 0, (("astlib/ast_403.ml", 356, 12359, 12363), ("astlib/ast_403.ml", 356, 12359, 12406), 0), 0, Tag1 ("Astlib__Ast_403", 166)); (("Pexp_coerce", 770), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1292); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1294)], (0)), 100000000, 0, -1293); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1295)]), 0, (("astlib/ast_403.ml", 358, 12431, 12435), ("astlib/ast_403.ml", 358, 12431, 12493), 0), 0, Tag1 ("Astlib__Ast_403", 167)); (("Pexp_send", 771), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1296); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1297)]), 0, (("astlib/ast_403.ml", 362, 12589, 12593), ("astlib/ast_403.ml", 362, 12589, 12627), 0), 0, Tag1 ("Astlib__Ast_403", 168)); (("Pexp_new", 772), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1299)], (0)), 100000000, 0, -1298)]), 0, (("astlib/ast_403.ml", 364, 12651, 12655), ("astlib/ast_403.ml", 364, 12651, 12684), 0), 0, Tag1 ("Astlib__Ast_403", 169)); (("Pexp_setinstvar", 773), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1301)], (0)), 100000000, 0, -1300); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1302)]), 0, (("astlib/ast_403.ml", 366, 12709, 12713), ("astlib/ast_403.ml", 366, 12709, 12757), 0), 0, Tag1 ("Astlib__Ast_403", 170)); (("Pexp_override", 774), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1306)], (0)), 100000000, 0, -1305); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1307)]), 100000000, 0, -1304)], (0)), 100000000, 0, -1303)]), 0, (("astlib/ast_403.ml", 368, 12781, 12785), ("astlib/ast_403.ml", 368, 12781, 12834), 0), 0, Tag1 ("Astlib__Ast_403", 171)); (("Pexp_letmodule", 775), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1309)], (0)), 100000000, 0, -1308); (Tag3 ((("module_expr", 6876)), 0, (0)), 100000000, 0, -1310); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1311)]), 0, (("astlib/ast_403.ml", 370, 12879, 12883), ("astlib/ast_403.ml", 370, 12879, 12940), 0), 0, Tag1 ("Astlib__Ast_403", 172)); (("Pexp_assert", 776), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1312)]), 0, (("astlib/ast_403.ml", 372, 12980, 12984), ("astlib/ast_403.ml", 372, 12980, 13011), 0), 0, Tag1 ("Astlib__Ast_403", 173)); (("Pexp_lazy", 777), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1313)]), 0, (("astlib/ast_403.ml", 376, 13133, 13137), ("astlib/ast_403.ml", 376, 13133, 13162), 0), 0, Tag1 ("Astlib__Ast_403", 174)); (("Pexp_poly", 778), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1314); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1316)], (0)), 100000000, 0, -1315)]), 0, (("astlib/ast_403.ml", 378, 13186, 13190), ("astlib/ast_403.ml", 378, 13186, 13234), 0), 0, Tag1 ("Astlib__Ast_403", 175)); (("Pexp_object", 779), ([(Tag3 ((("class_structure", 6859)), 0, (0)), 100000000, 0, -1317)]), 0, (("astlib/ast_403.ml", 383, 13382, 13386), ("astlib/ast_403.ml", 383, 13382, 13418), 0), 0, Tag1 ("Astlib__Ast_403", 176)); (("Pexp_newtype", 780), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1318); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1319)]), 0, (("astlib/ast_403.ml", 385, 13450, 13454), ("astlib/ast_403.ml", 385, 13450, 13491), 0), 0, Tag1 ("Astlib__Ast_403", 177)); (("Pexp_pack", 781), ([(Tag3 ((("module_expr", 6876)), 0, (0)), 100000000, 0, -1320)]), 0, (("astlib/ast_403.ml", 387, 13526, 13530), ("astlib/ast_403.ml", 387, 13526, 13556), 0), 0, Tag1 ("Astlib__Ast_403", 178)); (("Pexp_open", 782), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "override_flag"), 0, (0)), 100000000, 0, -1321); (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1323)], (0)), 100000000, 0, -1322); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1324)]), 0, (("astlib/ast_403.ml", 392, 13689, 13693), ("astlib/ast_403.ml", 392, 13689, 13752), 0), 0, Tag1 ("Astlib__Ast_403", 179)); (("Pexp_extension", 783), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -1325)]), 0, (("astlib/ast_403.ml", 396, 13825, 13829), ("astlib/ast_403.ml", 396, 13825, 13858), 0), 0, Tag1 ("Astlib__Ast_403", 180)); (("Pexp_unreachable", 784), (0), 0, (("astlib/ast_403.ml", 398, 13881, 13885), ("astlib/ast_403.ml", 398, 13881, 13903), 0), 0, Tag1 ("Astlib__Ast_403", 181))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -1226)), 0, 0, 0, 0, (("astlib/ast_403.ml", 284, 9418, 9420), ("astlib/ast_403.ml", 398, 13881, 13903), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 58)), 2, 0); Tag1 (("case", 6839), (0, 0, [[(("pc_lhs", 785), 0, (Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1222), (("astlib/ast_403.ml", 403, 14014, 14021), ("astlib/ast_403.ml", 403, 14014, 14037), 0), 0, Tag1 ("Astlib__Ast_403", 182)); (("pc_guard", 786), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1224)], (0)), 100000000, 0, -1223), (("astlib/ast_403.ml", 404, 14038, 14045), ("astlib/ast_403.ml", 404, 14038, 14073), 0), 0, Tag1 ("Astlib__Ast_403", 183)); (("pc_rhs", 787), 0, (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1225), (("astlib/ast_403.ml", 405, 14074, 14081), ("astlib/ast_403.ml", 405, 14074, 14100), 0), 0, Tag1 ("Astlib__Ast_403", 184))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -1221)), 0, 0, 0, 0, (("astlib/ast_403.ml", 401, 13923, 13925), ("astlib/ast_403.ml", 406, 14101, 14108), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 59)), 2, 0); Tag1 (("value_description", 6840), (0, 0, [[(("pval_name", 788), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1215)], (0)), 100000000, 0, -1214), (("astlib/ast_403.ml", 412, 14218, 14225), ("astlib/ast_403.ml", 412, 14218, 14247), 0), 0, Tag1 ("Astlib__Ast_403", 185)); (("pval_type", 789), 0, (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1216), (("astlib/ast_403.ml", 413, 14248, 14255), ("astlib/ast_403.ml", 413, 14248, 14276), 0), 0, Tag1 ("Astlib__Ast_403", 186)); (("pval_prim", 790), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1218)], (0)), 100000000, 0, -1217), (("astlib/ast_403.ml", 414, 14277, 14284), ("astlib/ast_403.ml", 414, 14277, 14307), 0), 0, Tag1 ("Astlib__Ast_403", 187)); (("pval_attributes", 791), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1219), (("astlib/ast_403.ml", 415, 14308, 14315), ("astlib/ast_403.ml", 415, 14308, 14343), 0), 0, Tag1 ("Astlib__Ast_403", 188)); (("pval_loc", 792), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1220), (("astlib/ast_403.ml", 416, 14371, 14378), ("astlib/ast_403.ml", 416, 14371, 14399), 0), 0, Tag1 ("Astlib__Ast_403", 189))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -1213)), 0, 0, 0, 0, (("astlib/ast_403.ml", 410, 14138, 14140), ("astlib/ast_403.ml", 417, 14400, 14407), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 60)), 2, 0); Tag1 (("type_declaration", 6841), (0, 0, [[(("ptype_name", 793), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1197)], (0)), 100000000, 0, -1196), (("astlib/ast_403.ml", 428, 14641, 14648), ("astlib/ast_403.ml", 428, 14641, 14671), 0), 0, Tag1 ("Astlib__Ast_403", 190)); (("ptype_params", 794), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1200); (Tag3 (Tag1 ((("Asttypes", 6811)), "variance"), 0, (0)), 100000000, 0, -1201)]), 100000000, 0, -1199)], (0)), 100000000, 0, -1198), (("astlib/ast_403.ml", 429, 14672, 14679), ("astlib/ast_403.ml", 429, 14672, 14721), 0), 0, Tag1 ("Astlib__Ast_403", 191)); (("ptype_cstrs", 795), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1204); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1205); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1206)]), 100000000, 0, -1203)], (0)), 100000000, 0, -1202), (("astlib/ast_403.ml", 431, 14775, 14782), ("astlib/ast_403.ml", 431, 14775, 14837), 0), 0, Tag1 ("Astlib__Ast_403", 192)); (("ptype_kind", 796), 0, (Tag3 ((("type_kind", 6842)), 0, (0)), 100000000, 0, -1207), (("astlib/ast_403.ml", 433, 14902, 14909), ("astlib/ast_403.ml", 433, 14902, 14931), 0), 0, Tag1 ("Astlib__Ast_403", 193)); (("ptype_private", 797), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "private_flag"), 0, (0)), 100000000, 0, -1208), (("astlib/ast_403.ml", 434, 14932, 14939), ("astlib/ast_403.ml", 434, 14932, 14967), 0), 0, Tag1 ("Astlib__Ast_403", 194)); (("ptype_manifest", 798), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1210)], (0)), 100000000, 0, -1209), (("astlib/ast_403.ml", 435, 14990, 14997), ("astlib/ast_403.ml", 435, 14990, 15030), 0), 0, Tag1 ("Astlib__Ast_403", 195)); (("ptype_attributes", 799), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1211), (("astlib/ast_403.ml", 436, 15042, 15049), ("astlib/ast_403.ml", 436, 15042, 15078), 0), 0, Tag1 ("Astlib__Ast_403", 196)); (("ptype_loc", 800), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1212), (("astlib/ast_403.ml", 437, 15107, 15114), ("astlib/ast_403.ml", 437, 15107, 15136), 0), 0, Tag1 ("Astlib__Ast_403", 197))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -1195)), 0, 0, 0, 0, (("astlib/ast_403.ml", 426, 14563, 14565), ("astlib/ast_403.ml", 438, 15137, 15144), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 61)), 2, 0); Tag1 (("type_kind", 6842), (0, 0, Tag1 ([(("Ptype_abstract", 801), (0), 0, (("astlib/ast_403.ml", 451, 15598, 15602), ("astlib/ast_403.ml", 451, 15598, 15618), 0), 0, Tag1 ("Astlib__Ast_403", 198)); (("Ptype_variant", 802), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 6844)), 0, (0)), 100000000, 0, -1192)], (0)), 100000000, 0, -1191)]), 0, (("astlib/ast_403.ml", 452, 15619, 15623), ("astlib/ast_403.ml", 452, 15619, 15670), 0), 0, Tag1 ("Astlib__Ast_403", 199)); (("Ptype_record", 803), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 6843)), 0, (0)), 100000000, 0, -1194)], (0)), 100000000, 0, -1193)]), 0, (("astlib/ast_403.ml", 454, 15713, 15717), ("astlib/ast_403.ml", 454, 15713, 15757), 0), 0, Tag1 ("Astlib__Ast_403", 200)); (("Ptype_open", 804), (0), 0, (("astlib/ast_403.ml", 456, 15800, 15804), ("astlib/ast_403.ml", 456, 15800, 15816), 0), 0, Tag1 ("Astlib__Ast_403", 201))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -1190)), 0, 0, 0, 0, (("astlib/ast_403.ml", 450, 15542, 15544), ("astlib/ast_403.ml", 456, 15800, 15816), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 62)), 2, 0); Tag1 (("label_declaration", 6843), (0, 0, [[(("pld_name", 805), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1185)], (0)), 100000000, 0, -1184), (("astlib/ast_403.ml", 460, 15898, 15905), ("astlib/ast_403.ml", 460, 15898, 15926), 0), 0, Tag1 ("Astlib__Ast_403", 202)); (("pld_mutable", 806), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "mutable_flag"), 0, (0)), 100000000, 0, -1186), (("astlib/ast_403.ml", 461, 15927, 15934), ("astlib/ast_403.ml", 461, 15927, 15960), 0), 0, Tag1 ("Astlib__Ast_403", 203)); (("pld_type", 807), 0, (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1187), (("astlib/ast_403.ml", 462, 15961, 15968), ("astlib/ast_403.ml", 462, 15961, 15988), 0), 0, Tag1 ("Astlib__Ast_403", 204)); (("pld_loc", 808), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1188), (("astlib/ast_403.ml", 463, 15989, 15996), ("astlib/ast_403.ml", 463, 15989, 16016), 0), 0, Tag1 ("Astlib__Ast_403", 205)); (("pld_attributes", 809), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1189), (("astlib/ast_403.ml", 464, 16017, 16024), ("astlib/ast_403.ml", 464, 16017, 16051), 0), 0, Tag1 ("Astlib__Ast_403", 206))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -1183)), 0, 0, 0, 0, (("astlib/ast_403.ml", 458, 15818, 15820), ("astlib/ast_403.ml", 465, 16078, 16085), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 63)), 2, 0); Tag1 (("constructor_declaration", 6844), (0, 0, [[(("pcd_name", 810), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1177)], (0)), 100000000, 0, -1176), (("astlib/ast_403.ml", 475, 16330, 16337), ("astlib/ast_403.ml", 475, 16330, 16358), 0), 0, Tag1 ("Astlib__Ast_403", 207)); (("pcd_args", 811), 0, (Tag3 ((("constructor_arguments", 6845)), 0, (0)), 100000000, 0, -1178), (("astlib/ast_403.ml", 476, 16359, 16366), ("astlib/ast_403.ml", 476, 16359, 16398), 0), 0, Tag1 ("Astlib__Ast_403", 208)); (("pcd_res", 812), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1180)], (0)), 100000000, 0, -1179), (("astlib/ast_403.ml", 477, 16399, 16406), ("astlib/ast_403.ml", 477, 16399, 16432), 0), 0, Tag1 ("Astlib__Ast_403", 209)); (("pcd_loc", 813), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1181), (("astlib/ast_403.ml", 478, 16433, 16440), ("astlib/ast_403.ml", 478, 16433, 16460), 0), 0, Tag1 ("Astlib__Ast_403", 210)); (("pcd_attributes", 814), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1182), (("astlib/ast_403.ml", 479, 16461, 16468), ("astlib/ast_403.ml", 479, 16461, 16495), 0), 0, Tag1 ("Astlib__Ast_403", 211))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -1175)), 0, 0, 0, 0, (("astlib/ast_403.ml", 473, 16238, 16240), ("astlib/ast_403.ml", 480, 16525, 16532), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 64)), 2, 0); Tag1 (("constructor_arguments", 6845), (0, 0, Tag1 ([(("Pcstr_tuple", 815), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1172)], (0)), 100000000, 0, -1171)]), 0, (("astlib/ast_403.ml", 483, 16614, 16618), ("astlib/ast_403.ml", 483, 16614, 16649), 0), 0, Tag1 ("Astlib__Ast_403", 212)); (("Pcstr_record", 816), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 6843)), 0, (0)), 100000000, 0, -1174)], (0)), 100000000, 0, -1173)]), 0, (("astlib/ast_403.ml", 484, 16650, 16654), ("astlib/ast_403.ml", 484, 16650, 16694), 0), 0, Tag1 ("Astlib__Ast_403", 213))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -1170)), 0, 0, 0, 0, (("astlib/ast_403.ml", 482, 16534, 16536), ("astlib/ast_403.ml", 484, 16650, 16694), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 65)), 2, 0); Tag1 (("type_extension", 6846), (0, 0, [[(("ptyext_path", 817), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1161)], (0)), 100000000, 0, -1160), (("astlib/ast_403.ml", 497, 17168, 17175), ("astlib/ast_403.ml", 497, 17168, 17204), 0), 0, Tag1 ("Astlib__Ast_403", 214)); (("ptyext_params", 818), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1164); (Tag3 (Tag1 ((("Asttypes", 6811)), "variance"), 0, (0)), 100000000, 0, -1165)]), 100000000, 0, -1163)], (0)), 100000000, 0, -1162), (("astlib/ast_403.ml", 498, 17205, 17212), ("astlib/ast_403.ml", 498, 17205, 17255), 0), 0, Tag1 ("Astlib__Ast_403", 215)); (("ptyext_constructors", 819), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 6847)), 0, (0)), 100000000, 0, -1167)], (0)), 100000000, 0, -1166), (("astlib/ast_403.ml", 499, 17256, 17263), ("astlib/ast_403.ml", 499, 17256, 17311), 0), 0, Tag1 ("Astlib__Ast_403", 216)); (("ptyext_private", 820), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "private_flag"), 0, (0)), 100000000, 0, -1168), (("astlib/ast_403.ml", 500, 17312, 17319), ("astlib/ast_403.ml", 500, 17312, 17348), 0), 0, Tag1 ("Astlib__Ast_403", 217)); (("ptyext_attributes", 821), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1169), (("astlib/ast_403.ml", 501, 17349, 17356), ("astlib/ast_403.ml", 501, 17349, 17386), 0), 0, Tag1 ("Astlib__Ast_403", 218))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -1159)), 0, 0, 0, 0, (("astlib/ast_403.ml", 495, 17094, 17096), ("astlib/ast_403.ml", 502, 17415, 17422), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 66)), 2, 0); Tag1 (("extension_constructor", 6847), (0, 0, [[(("pext_name", 822), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1155)], (0)), 100000000, 0, -1154), (("astlib/ast_403.ml", 509, 17540, 17547), ("astlib/ast_403.ml", 509, 17540, 17569), 0), 0, Tag1 ("Astlib__Ast_403", 219)); (("pext_kind", 823), 0, (Tag3 ((("extension_constructor_kind", 6848)), 0, (0)), 100000000, 0, -1156), (("astlib/ast_403.ml", 510, 17570, 17577), ("astlib/ast_403.ml", 510, 17570, 17616), 0), 0, Tag1 ("Astlib__Ast_403", 220)); (("pext_loc", 824), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1157), (("astlib/ast_403.ml", 511, 17617, 17624), ("astlib/ast_403.ml", 511, 17617, 17646), 0), 0, Tag1 ("Astlib__Ast_403", 221)); (("pext_attributes", 825), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1158), (("astlib/ast_403.ml", 512, 17647, 17654), ("astlib/ast_403.ml", 512, 17647, 17682), 0), 0, Tag1 ("Astlib__Ast_403", 222))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -1153)), 0, 0, 0, 0, (("astlib/ast_403.ml", 507, 17452, 17454), ("astlib/ast_403.ml", 513, 17712, 17719), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 67)), 2, 0); Tag1 (("extension_constructor_kind", 6848), (0, 0, Tag1 ([(("Pext_decl", 826), ([(Tag3 ((("constructor_arguments", 6845)), 0, (0)), 100000000, 0, -1148); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1150)], (0)), 100000000, 0, -1149)]), 0, (("astlib/ast_403.ml", 516, 17811, 17817), ("astlib/ast_403.ml", 516, 17811, 17870), 0), 0, Tag1 ("Astlib__Ast_403", 223)); (("Pext_rebind", 827), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1152)], (0)), 100000000, 0, -1151)]), 0, (("astlib/ast_403.ml", 522, 18063, 18067), ("astlib/ast_403.ml", 522, 18063, 18099), 0), 0, Tag1 ("Astlib__Ast_403", 224))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -1147)), 0, 0, 0, 0, (("astlib/ast_403.ml", 515, 17721, 17723), ("astlib/ast_403.ml", 522, 18063, 18099), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 68)), 2, 0); Tag1 (("class_type", 6849), (0, 0, [[(("pcty_desc", 828), 0, (Tag3 ((("class_type_desc", 6850)), 0, (0)), 100000000, 0, -1144), (("astlib/ast_403.ml", 533, 18287, 18294), ("astlib/ast_403.ml", 533, 18287, 18321), 0), 0, Tag1 ("Astlib__Ast_403", 225)); (("pcty_loc", 829), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1145), (("astlib/ast_403.ml", 534, 18322, 18329), ("astlib/ast_403.ml", 534, 18322, 18350), 0), 0, Tag1 ("Astlib__Ast_403", 226)); (("pcty_attributes", 830), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1146), (("astlib/ast_403.ml", 535, 18351, 18358), ("astlib/ast_403.ml", 535, 18351, 18386), 0), 0, Tag1 ("Astlib__Ast_403", 227))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -1143)), 0, 0, 0, 0, (("astlib/ast_403.ml", 531, 18221, 18223), ("astlib/ast_403.ml", 536, 18411, 18418), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 69)), 2, 0); Tag1 (("class_type_desc", 6850), (0, 0, Tag1 ([(("Pcty_constr", 831), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1135)], (0)), 100000000, 0, -1134); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1137)], (0)), 100000000, 0, -1136)]), 0, (("astlib/ast_403.ml", 539, 18488, 18492), ("astlib/ast_403.ml", 539, 18488, 18541), 0), 0, Tag1 ("Astlib__Ast_403", 228)); (("Pcty_signature", 832), ([(Tag3 ((("class_signature", 6851)), 0, (0)), 100000000, 0, -1138)]), 0, (("astlib/ast_403.ml", 542, 18591, 18595), ("astlib/ast_403.ml", 542, 18591, 18630), 0), 0, Tag1 ("Astlib__Ast_403", 229)); (("Pcty_arrow", 833), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "arg_label"), 0, (0)), 100000000, 0, -1139); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1140); (Tag3 ((("class_type", 6849)), 0, (0)), 100000000, 0, -1141)]), 0, (("astlib/ast_403.ml", 544, 18662, 18666), ("astlib/ast_403.ml", 544, 18662, 18716), 0), 0, Tag1 ("Astlib__Ast_403", 230)); (("Pcty_extension", 834), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -1142)]), 0, (("astlib/ast_403.ml", 549, 18841, 18845), ("astlib/ast_403.ml", 549, 18841, 18874), 0), 0, Tag1 ("Astlib__Ast_403", 231))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -1133)), 0, 0, 0, 0, (("astlib/ast_403.ml", 538, 18420, 18422), ("astlib/ast_403.ml", 549, 18841, 18874), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 70)), 2, 0); Tag1 (("class_signature", 6851), (0, 0, [[(("pcsig_self", 835), 0, (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1130), (("astlib/ast_403.ml", 554, 18974, 18981), ("astlib/ast_403.ml", 554, 18974, 19003), 0), 0, Tag1 ("Astlib__Ast_403", 232)); (("pcsig_fields", 836), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 6852)), 0, (0)), 100000000, 0, -1132)], (0)), 100000000, 0, -1131), (("astlib/ast_403.ml", 555, 19004, 19011), ("astlib/ast_403.ml", 555, 19004, 19047), 0), 0, Tag1 ("Astlib__Ast_403", 233))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -1129)), 0, 0, 0, 0, (("astlib/ast_403.ml", 552, 18898, 18900), ("astlib/ast_403.ml", 556, 19048, 19055), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 71)), 2, 0); Tag1 (("class_type_field", 6852), (0, 0, [[(("pctf_desc", 837), 0, (Tag3 ((("class_type_field_desc", 6853)), 0, (0)), 100000000, 0, -1126), (("astlib/ast_403.ml", 563, 19221, 19228), ("astlib/ast_403.ml", 563, 19221, 19261), 0), 0, Tag1 ("Astlib__Ast_403", 234)); (("pctf_loc", 838), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1127), (("astlib/ast_403.ml", 564, 19262, 19269), ("astlib/ast_403.ml", 564, 19262, 19290), 0), 0, Tag1 ("Astlib__Ast_403", 235)); (("pctf_attributes", 839), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1128), (("astlib/ast_403.ml", 565, 19291, 19298), ("astlib/ast_403.ml", 565, 19291, 19326), 0), 0, Tag1 ("Astlib__Ast_403", 236))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -1125)), 0, 0, 0, 0, (("astlib/ast_403.ml", 561, 19143, 19145), ("astlib/ast_403.ml", 566, 19353, 19360), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 72)), 2, 0); Tag1 (("class_type_field_desc", 6853), (0, 0, Tag1 ([(("Pctf_inherit", 840), ([(Tag3 ((("class_type", 6849)), 0, (0)), 100000000, 0, -1109)]), 0, (("astlib/ast_403.ml", 569, 19442, 19446), ("astlib/ast_403.ml", 569, 19442, 19474), 0), 0, Tag1 ("Astlib__Ast_403", 237)); (("Pctf_val", 841), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1111); (Tag3 (Tag1 ((("Asttypes", 6811)), "mutable_flag"), 0, (0)), 100000000, 0, -1112); (Tag3 (Tag1 ((("Asttypes", 6811)), "virtual_flag"), 0, (0)), 100000000, 0, -1113); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1114)]), 100000000, 0, -1110)]), 0, (("astlib/ast_403.ml", 571, 19502, 19506), ("astlib/ast_403.ml", 571, 19502, 19570), 0), 0, Tag1 ("Astlib__Ast_403", 238)); (("Pctf_method", 842), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1116); (Tag3 (Tag1 ((("Asttypes", 6811)), "private_flag"), 0, (0)), 100000000, 0, -1117); (Tag3 (Tag1 ((("Asttypes", 6811)), "virtual_flag"), 0, (0)), 100000000, 0, -1118); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1119)]), 100000000, 0, -1115)]), 0, (("astlib/ast_403.ml", 573, 19596, 19600), ("astlib/ast_403.ml", 573, 19596, 19668), 0), 0, Tag1 ("Astlib__Ast_403", 239)); (("Pctf_constraint", 843), ([(Tag2 ([(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1121); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1122)]), 100000000, 0, -1120)]), 0, (("astlib/ast_403.ml", 578, 19750, 19754), ("astlib/ast_403.ml", 578, 19750, 19799), 0), 0, Tag1 ("Astlib__Ast_403", 240)); (("Pctf_attribute", 844), ([(Tag3 ((("attribute", 6827)), 0, (0)), 100000000, 0, -1123)]), 0, (("astlib/ast_403.ml", 580, 19835, 19839), ("astlib/ast_403.ml", 580, 19835, 19868), 0), 0, Tag1 ("Astlib__Ast_403", 241)); (("Pctf_extension", 845), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -1124)]), 0, (("astlib/ast_403.ml", 582, 19893, 19897), ("astlib/ast_403.ml", 582, 19893, 19926), 0), 0, Tag1 ("Astlib__Ast_403", 242))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -1108)), 0, 0, 0, 0, (("astlib/ast_403.ml", 568, 19362, 19364), ("astlib/ast_403.ml", 582, 19893, 19926), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 73)), 2, 0); Tag1 (("class_infos", 6854), ([((("a")), 100000000, 0, -1098)], 1, [[(("pci_virt", 846), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "virtual_flag"), 0, (0)), 100000000, 0, -1099), (("astlib/ast_403.ml", 587, 20025, 20032), ("astlib/ast_403.ml", 587, 20025, 20055), 0), 0, Tag1 ("Astlib__Ast_403", 243)); (("pci_params", 847), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1102); (Tag3 (Tag1 ((("Asttypes", 6811)), "variance"), 0, (0)), 100000000, 0, -1103)]), 100000000, 0, -1101)], (0)), 100000000, 0, -1100), (("astlib/ast_403.ml", 588, 20056, 20063), ("astlib/ast_403.ml", 588, 20056, 20103), 0), 0, Tag1 ("Astlib__Ast_403", 244)); (("pci_name", 848), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1105)], (0)), 100000000, 0, -1104), (("astlib/ast_403.ml", 589, 20104, 20111), ("astlib/ast_403.ml", 589, 20104, 20132), 0), 0, Tag1 ("Astlib__Ast_403", 245)); (("pci_expr", 849), 0, ((("a")), 100000000, 0, -1098), (("astlib/ast_403.ml", 590, 20133, 20140), ("astlib/ast_403.ml", 590, 20133, 20153), 0), 0, Tag1 ("Astlib__Ast_403", 246)); (("pci_loc", 850), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1106), (("astlib/ast_403.ml", 591, 20154, 20161), ("astlib/ast_403.ml", 591, 20154, 20181), 0), 0, Tag1 ("Astlib__Ast_403", 247)); (("pci_attributes", 851), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1107), (("astlib/ast_403.ml", 592, 20182, 20189), ("astlib/ast_403.ml", 592, 20182, 20216), 0), 0, Tag1 ("Astlib__Ast_403", 248))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -1098)], (0)), 100000000, 0, -1097)), [25], [0], 0, 0, (("astlib/ast_403.ml", 585, 19951, 19953), ("astlib/ast_403.ml", 593, 20244, 20251), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 74)), 2, 0); Tag1 (("class_description", 6855), (0, 0, 0, 1, ((Tag3 ((("class_infos", 6854)), [(Tag3 ((("class_type", 6849)), 0, (0)), 100000000, 0, -1096)], (0)), 100000000, 0, -1095)), 0, 0, 0, 0, (("astlib/ast_403.ml", 601, 20383, 20385), ("astlib/ast_403.ml", 601, 20383, 20431), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 75)), 2, 0); Tag1 (("class_type_declaration", 6856), (0, 0, 0, 1, ((Tag3 ((("class_infos", 6854)), [(Tag3 ((("class_type", 6849)), 0, (0)), 100000000, 0, -1094)], (0)), 100000000, 0, -1093)), 0, 0, 0, 0, (("astlib/ast_403.ml", 603, 20433, 20435), ("astlib/ast_403.ml", 603, 20433, 20486), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 76)), 2, 0); Tag1 (("class_expr", 6857), (0, 0, [[(("pcl_desc", 852), 0, (Tag3 ((("class_expr_desc", 6858)), 0, (0)), 100000000, 0, -1090), (("astlib/ast_403.ml", 609, 20604, 20611), ("astlib/ast_403.ml", 609, 20604, 20637), 0), 0, Tag1 ("Astlib__Ast_403", 249)); (("pcl_loc", 853), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1091), (("astlib/ast_403.ml", 610, 20638, 20645), ("astlib/ast_403.ml", 610, 20638, 20665), 0), 0, Tag1 ("Astlib__Ast_403", 250)); (("pcl_attributes", 854), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1092), (("astlib/ast_403.ml", 611, 20666, 20673), ("astlib/ast_403.ml", 611, 20666, 20700), 0), 0, Tag1 ("Astlib__Ast_403", 251))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -1089)), 0, 0, 0, 0, (("astlib/ast_403.ml", 607, 20538, 20540), ("astlib/ast_403.ml", 612, 20725, 20732), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 77)), 2, 0); Tag1 (("class_expr_desc", 6858), (0, 0, Tag1 ([(("Pcl_constr", 855), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1068)], (0)), 100000000, 0, -1067); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1070)], (0)), 100000000, 0, -1069)]), 0, (("astlib/ast_403.ml", 615, 20802, 20806), ("astlib/ast_403.ml", 615, 20802, 20854), 0), 0, Tag1 ("Astlib__Ast_403", 252)); (("Pcl_structure", 856), ([(Tag3 ((("class_structure", 6859)), 0, (0)), 100000000, 0, -1071)]), 0, (("astlib/ast_403.ml", 618, 20904, 20908), ("astlib/ast_403.ml", 618, 20904, 20942), 0), 0, Tag1 ("Astlib__Ast_403", 253)); (("Pcl_fun", 857), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "arg_label"), 0, (0)), 100000000, 0, -1072); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1074)], (0)), 100000000, 0, -1073); (Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1075); (Tag3 ((("class_expr", 6857)), 0, (0)), 100000000, 0, -1076)]), 0, (("astlib/ast_403.ml", 620, 20974, 20978), ("astlib/ast_403.ml", 620, 20974, 21043), 0), 0, Tag1 ("Astlib__Ast_403", 254)); (("Pcl_apply", 858), ([(Tag3 ((("class_expr", 6857)), 0, (0)), 100000000, 0, -1077); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "arg_label"), 0, (0)), 100000000, 0, -1080); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1081)]), 100000000, 0, -1079)], (0)), 100000000, 0, -1078)]), 0, (("astlib/ast_403.ml", 626, 21333, 21337), ("astlib/ast_403.ml", 626, 21333, 21394), 0), 0, Tag1 ("Astlib__Ast_403", 255)); (("Pcl_let", 859), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "rec_flag"), 0, (0)), 100000000, 0, -1082); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 6881)), 0, (0)), 100000000, 0, -1084)], (0)), 100000000, 0, -1083); (Tag3 ((("class_expr", 6857)), 0, (0)), 100000000, 0, -1085)]), 0, (("astlib/ast_403.ml", 633, 21578, 21582), ("astlib/ast_403.ml", 633, 21578, 21637), 0), 0, Tag1 ("Astlib__Ast_403", 256)); (("Pcl_constraint", 860), ([(Tag3 ((("class_expr", 6857)), 0, (0)), 100000000, 0, -1086); (Tag3 ((("class_type", 6849)), 0, (0)), 100000000, 0, -1087)]), 0, (("astlib/ast_403.ml", 637, 21805, 21809), ("astlib/ast_403.ml", 637, 21805, 21852), 0), 0, Tag1 ("Astlib__Ast_403", 257)); (("Pcl_extension", 861), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -1088)]), 0, (("astlib/ast_403.ml", 639, 21879, 21883), ("astlib/ast_403.ml", 639, 21879, 21911), 0), 0, Tag1 ("Astlib__Ast_403", 258))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -1066)), 0, 0, 0, 0, (("astlib/ast_403.ml", 614, 20734, 20736), ("astlib/ast_403.ml", 639, 21879, 21911), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 78)), 2, 0); Tag1 (("class_structure", 6859), (0, 0, [[(("pcstr_self", 862), 0, (Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -1063), (("astlib/ast_403.ml", 644, 22011, 22018), ("astlib/ast_403.ml", 644, 22011, 22038), 0), 0, Tag1 ("Astlib__Ast_403", 259)); (("pcstr_fields", 863), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 6860)), 0, (0)), 100000000, 0, -1065)], (0)), 100000000, 0, -1064), (("astlib/ast_403.ml", 645, 22039, 22046), ("astlib/ast_403.ml", 645, 22039, 22077), 0), 0, Tag1 ("Astlib__Ast_403", 260))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -1062)), 0, 0, 0, 0, (("astlib/ast_403.ml", 642, 21935, 21937), ("astlib/ast_403.ml", 646, 22078, 22085), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 79)), 2, 0); Tag1 (("class_field", 6860), (0, 0, [[(("pcf_desc", 864), 0, (Tag3 ((("class_field_desc", 6861)), 0, (0)), 100000000, 0, -1059), (("astlib/ast_403.ml", 653, 22238, 22245), ("astlib/ast_403.ml", 653, 22238, 22272), 0), 0, Tag1 ("Astlib__Ast_403", 261)); (("pcf_loc", 865), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1060), (("astlib/ast_403.ml", 654, 22273, 22280), ("astlib/ast_403.ml", 654, 22273, 22300), 0), 0, Tag1 ("Astlib__Ast_403", 262)); (("pcf_attributes", 866), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1061), (("astlib/ast_403.ml", 655, 22301, 22308), ("astlib/ast_403.ml", 655, 22301, 22335), 0), 0, Tag1 ("Astlib__Ast_403", 263))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -1058)), 0, 0, 0, 0, (("astlib/ast_403.ml", 651, 22170, 22172), ("astlib/ast_403.ml", 656, 22362, 22369), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 80)), 2, 0); Tag1 (("class_field_desc", 6861), (0, 0, Tag1 ([(("Pcf_inherit", 867), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "override_flag"), 0, (0)), 100000000, 0, -1038); (Tag3 ((("class_expr", 6857)), 0, (0)), 100000000, 0, -1039); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1041)], (0)), 100000000, 0, -1040)]), 0, (("astlib/ast_403.ml", 659, 22441, 22445), ("astlib/ast_403.ml", 659, 22441, 22504), 0), 0, Tag1 ("Astlib__Ast_403", 264)); (("Pcf_val", 868), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1044)], (0)), 100000000, 0, -1043); (Tag3 (Tag1 ((("Asttypes", 6811)), "mutable_flag"), 0, (0)), 100000000, 0, -1045); (Tag3 ((("class_field_kind", 6862)), 0, (0)), 100000000, 0, -1046)]), 100000000, 0, -1042)]), 0, (("astlib/ast_403.ml", 665, 22627, 22631), ("astlib/ast_403.ml", 665, 22627, 22690), 0), 0, Tag1 ("Astlib__Ast_403", 265)); (("Pcf_method", 869), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1049)], (0)), 100000000, 0, -1048); (Tag3 (Tag1 ((("Asttypes", 6811)), "private_flag"), 0, (0)), 100000000, 0, -1050); (Tag3 ((("class_field_kind", 6862)), 0, (0)), 100000000, 0, -1051)]), 100000000, 0, -1047)]), 0, (("astlib/ast_403.ml", 669, 22758, 22762), ("astlib/ast_403.ml", 669, 22758, 22824), 0), 0, Tag1 ("Astlib__Ast_403", 266)); (("Pcf_constraint", 870), ([(Tag2 ([(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1053); (Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1054)]), 100000000, 0, -1052)]), 0, (("astlib/ast_403.ml", 673, 22959, 22963), ("astlib/ast_403.ml", 673, 22959, 23006), 0), 0, Tag1 ("Astlib__Ast_403", 267)); (("Pcf_initializer", 871), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1055)]), 0, (("astlib/ast_403.ml", 675, 23042, 23046), ("astlib/ast_403.ml", 675, 23042, 23077), 0), 0, Tag1 ("Astlib__Ast_403", 268)); (("Pcf_attribute", 872), ([(Tag3 ((("attribute", 6827)), 0, (0)), 100000000, 0, -1056)]), 0, (("astlib/ast_403.ml", 677, 23108, 23112), ("astlib/ast_403.ml", 677, 23108, 23140), 0), 0, Tag1 ("Astlib__Ast_403", 269)); (("Pcf_extension", 873), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -1057)]), 0, (("astlib/ast_403.ml", 679, 23165, 23169), ("astlib/ast_403.ml", 679, 23165, 23197), 0), 0, Tag1 ("Astlib__Ast_403", 270))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -1037)), 0, 0, 0, 0, (("astlib/ast_403.ml", 658, 22371, 22373), ("astlib/ast_403.ml", 679, 23165, 23197), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 81)), 2, 0); Tag1 (("class_field_kind", 6862), (0, 0, Tag1 ([(("Cfk_virtual", 874), ([(Tag3 ((("core_type", 6831)), 0, (0)), 100000000, 0, -1034)]), 0, (("astlib/ast_403.ml", 683, 23292, 23296), ("astlib/ast_403.ml", 683, 23292, 23322), 0), 0, Tag1 ("Astlib__Ast_403", 271)); (("Cfk_concrete", 875), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "override_flag"), 0, (0)), 100000000, 0, -1035); (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -1036)]), 0, (("astlib/ast_403.ml", 684, 23323, 23327), ("astlib/ast_403.ml", 684, 23323, 23371), 0), 0, Tag1 ("Astlib__Ast_403", 272))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -1033)), 0, 0, 0, 0, (("astlib/ast_403.ml", 682, 23222, 23224), ("astlib/ast_403.ml", 684, 23323, 23371), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 82)), 2, 0); Tag1 (("class_declaration", 6863), (0, 0, 0, 1, ((Tag3 ((("class_infos", 6854)), [(Tag3 ((("class_expr", 6857)), 0, (0)), 100000000, 0, -1032)], (0)), 100000000, 0, -1031)), 0, 0, 0, 0, (("astlib/ast_403.ml", 686, 23373, 23375), ("astlib/ast_403.ml", 686, 23373, 23421), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 83)), 2, 0); Tag1 (("module_type", 6864), (0, 0, [[(("pmty_desc", 876), 0, (Tag3 ((("module_type_desc", 6865)), 0, (0)), 100000000, 0, -1028), (("astlib/ast_403.ml", 694, 23571, 23578), ("astlib/ast_403.ml", 694, 23571, 23606), 0), 0, Tag1 ("Astlib__Ast_403", 273)); (("pmty_loc", 877), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1029), (("astlib/ast_403.ml", 695, 23607, 23614), ("astlib/ast_403.ml", 695, 23607, 23635), 0), 0, Tag1 ("Astlib__Ast_403", 274)); (("pmty_attributes", 878), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1030), (("astlib/ast_403.ml", 696, 23636, 23643), ("astlib/ast_403.ml", 696, 23636, 23671), 0), 0, Tag1 ("Astlib__Ast_403", 275))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -1027)), 0, 0, 0, 0, (("astlib/ast_403.ml", 692, 23503, 23505), ("astlib/ast_403.ml", 697, 23696, 23703), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 84)), 2, 0); Tag1 (("module_type_desc", 6865), (0, 0, Tag1 ([(("Pmty_ident", 879), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1013)], (0)), 100000000, 0, -1012)]), 0, (("astlib/ast_403.ml", 700, 23775, 23779), ("astlib/ast_403.ml", 700, 23775, 23810), 0), 0, Tag1 ("Astlib__Ast_403", 276)); (("Pmty_signature", 880), ([(Tag3 ((("signature", 6866)), 0, (0)), 100000000, 0, -1014)]), 0, (("astlib/ast_403.ml", 702, 23829, 23833), ("astlib/ast_403.ml", 702, 23829, 23862), 0), 0, Tag1 ("Astlib__Ast_403", 277)); (("Pmty_functor", 881), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1016)], (0)), 100000000, 0, -1015); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 6864)), 0, (0)), 100000000, 0, -1018)], (0)), 100000000, 0, -1017); (Tag3 ((("module_type", 6864)), 0, (0)), 100000000, 0, -1019)]), 0, (("astlib/ast_403.ml", 704, 23891, 23895), ("astlib/ast_403.ml", 704, 23891, 23958), 0), 0, Tag1 ("Astlib__Ast_403", 278)); (("Pmty_with", 882), ([(Tag3 ((("module_type", 6864)), 0, (0)), 100000000, 0, -1020); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 6875)), 0, (0)), 100000000, 0, -1022)], (0)), 100000000, 0, -1021)]), 0, (("astlib/ast_403.ml", 706, 23999, 24003), ("astlib/ast_403.ml", 706, 23999, 24052), 0), 0, Tag1 ("Astlib__Ast_403", 279)); (("Pmty_typeof", 883), ([(Tag3 ((("module_expr", 6876)), 0, (0)), 100000000, 0, -1023)]), 0, (("astlib/ast_403.ml", 708, 24081, 24085), ("astlib/ast_403.ml", 708, 24081, 24113), 0), 0, Tag1 ("Astlib__Ast_403", 280)); (("Pmty_extension", 884), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -1024)]), 0, (("astlib/ast_403.ml", 710, 24148, 24152), ("astlib/ast_403.ml", 710, 24148, 24181), 0), 0, Tag1 ("Astlib__Ast_403", 281)); (("Pmty_alias", 885), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1026)], (0)), 100000000, 0, -1025)]), 0, (("astlib/ast_403.ml", 712, 24204, 24208), ("astlib/ast_403.ml", 712, 24204, 24239), 0), 0, Tag1 ("Astlib__Ast_403", 282))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -1011)), 0, 0, 0, 0, (("astlib/ast_403.ml", 699, 23705, 23707), ("astlib/ast_403.ml", 712, 24204, 24239), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 85)), 2, 0); Tag1 (("signature", 6866), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 6867)), 0, (0)), 100000000, 0, -1010)], (0)), 100000000, 0, -1009)), 0, 0, 0, 0, (("astlib/ast_403.ml", 715, 24268, 24270), ("astlib/ast_403.ml", 715, 24268, 24305), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 86)), 2, 0); Tag1 (("signature_item", 6867), (0, 0, [[(("psig_desc", 886), 0, (Tag3 ((("signature_item_desc", 6868)), 0, (0)), 100000000, 0, -1007), (("astlib/ast_403.ml", 719, 24381, 24388), ("astlib/ast_403.ml", 719, 24381, 24419), 0), 0, Tag1 ("Astlib__Ast_403", 283)); (("psig_loc", 887), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1008), (("astlib/ast_403.ml", 720, 24420, 24427), ("astlib/ast_403.ml", 720, 24420, 24448), 0), 0, Tag1 ("Astlib__Ast_403", 284))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -1006)), 0, 0, 0, 0, (("astlib/ast_403.ml", 717, 24307, 24309), ("astlib/ast_403.ml", 721, 24449, 24456), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 87)), 2, 0); Tag1 (("signature_item_desc", 6868), (0, 0, Tag1 ([(("Psig_value", 888), ([(Tag3 ((("value_description", 6840)), 0, (0)), 100000000, 0, -987)]), 0, (("astlib/ast_403.ml", 724, 24534, 24538), ("astlib/ast_403.ml", 724, 24534, 24571), 0), 0, Tag1 ("Astlib__Ast_403", 285)); (("Psig_type", 889), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "rec_flag"), 0, (0)), 100000000, 0, -988); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 6841)), 0, (0)), 100000000, 0, -990)], (0)), 100000000, 0, -989)]), 0, (("astlib/ast_403.ml", 729, 24662, 24666), ("astlib/ast_403.ml", 729, 24662, 24713), 0), 0, Tag1 ("Astlib__Ast_403", 286)); (("Psig_typext", 890), ([(Tag3 ((("type_extension", 6846)), 0, (0)), 100000000, 0, -991)]), 0, (("astlib/ast_403.ml", 731, 24765, 24769), ("astlib/ast_403.ml", 731, 24765, 24800), 0), 0, Tag1 ("Astlib__Ast_403", 287)); (("Psig_exception", 891), ([(Tag3 ((("extension_constructor", 6847)), 0, (0)), 100000000, 0, -992)]), 0, (("astlib/ast_403.ml", 733, 24832, 24836), ("astlib/ast_403.ml", 733, 24832, 24877), 0), 0, Tag1 ("Astlib__Ast_403", 288)); (("Psig_module", 892), ([(Tag3 ((("module_declaration", 6869)), 0, (0)), 100000000, 0, -993)]), 0, (("astlib/ast_403.ml", 735, 24911, 24915), ("astlib/ast_403.ml", 735, 24911, 24950), 0), 0, Tag1 ("Astlib__Ast_403", 289)); (("Psig_recmodule", 893), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 6869)), 0, (0)), 100000000, 0, -995)], (0)), 100000000, 0, -994)]), 0, (("astlib/ast_403.ml", 737, 24981, 24985), ("astlib/ast_403.ml", 737, 24981, 25028), 0), 0, Tag1 ("Astlib__Ast_403", 290)); (("Psig_modtype", 894), ([(Tag3 ((("module_type_declaration", 6870)), 0, (0)), 100000000, 0, -996)]), 0, (("astlib/ast_403.ml", 739, 25086, 25090), ("astlib/ast_403.ml", 739, 25086, 25131), 0), 0, Tag1 ("Astlib__Ast_403", 291)); (("Psig_open", 895), ([(Tag3 ((("open_description", 6871)), 0, (0)), 100000000, 0, -997)]), 0, (("astlib/ast_403.ml", 742, 25194, 25198), ("astlib/ast_403.ml", 742, 25194, 25229), 0), 0, Tag1 ("Astlib__Ast_403", 292)); (("Psig_include", 896), ([(Tag3 ((("include_description", 6873)), 0, (0)), 100000000, 0, -998)]), 0, (("astlib/ast_403.ml", 744, 25253, 25257), ("astlib/ast_403.ml", 744, 25253, 25294), 0), 0, Tag1 ("Astlib__Ast_403", 293)); (("Psig_class", 897), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 6855)), 0, (0)), 100000000, 0, -1000)], (0)), 100000000, 0, -999)]), 0, (("astlib/ast_403.ml", 746, 25322, 25326), ("astlib/ast_403.ml", 746, 25322, 25364), 0), 0, Tag1 ("Astlib__Ast_403", 294)); (("Psig_class_type", 898), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 6856)), 0, (0)), 100000000, 0, -1002)], (0)), 100000000, 0, -1001)]), 0, (("astlib/ast_403.ml", 748, 25417, 25421), ("astlib/ast_403.ml", 748, 25417, 25469), 0), 0, Tag1 ("Astlib__Ast_403", 295)); (("Psig_attribute", 899), ([(Tag3 ((("attribute", 6827)), 0, (0)), 100000000, 0, -1003)]), 0, (("astlib/ast_403.ml", 750, 25529, 25533), ("astlib/ast_403.ml", 750, 25529, 25562), 0), 0, Tag1 ("Astlib__Ast_403", 296)); (("Psig_extension", 900), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -1004); (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -1005)]), 0, (("astlib/ast_403.ml", 752, 25587, 25591), ("astlib/ast_403.ml", 752, 25587, 25633), 0), 0, Tag1 ("Astlib__Ast_403", 297))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -986)), 0, 0, 0, 0, (("astlib/ast_403.ml", 723, 24458, 24460), ("astlib/ast_403.ml", 752, 25587, 25633), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 88)), 2, 0); Tag1 (("module_declaration", 6869), (0, 0, [[(("pmd_name", 901), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -982)], (0)), 100000000, 0, -981), (("astlib/ast_403.ml", 757, 25740, 25747), ("astlib/ast_403.ml", 757, 25740, 25768), 0), 0, Tag1 ("Astlib__Ast_403", 298)); (("pmd_type", 902), 0, (Tag3 ((("module_type", 6864)), 0, (0)), 100000000, 0, -983), (("astlib/ast_403.ml", 758, 25769, 25776), ("astlib/ast_403.ml", 758, 25769, 25798), 0), 0, Tag1 ("Astlib__Ast_403", 299)); (("pmd_attributes", 903), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -984), (("astlib/ast_403.ml", 759, 25799, 25806), ("astlib/ast_403.ml", 759, 25799, 25833), 0), 0, Tag1 ("Astlib__Ast_403", 300)); (("pmd_loc", 904), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -985), (("astlib/ast_403.ml", 760, 25860, 25867), ("astlib/ast_403.ml", 760, 25860, 25887), 0), 0, Tag1 ("Astlib__Ast_403", 301))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -980)), 0, 0, 0, 0, (("astlib/ast_403.ml", 755, 25658, 25660), ("astlib/ast_403.ml", 761, 25888, 25895), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 89)), 2, 0); Tag1 (("module_type_declaration", 6870), (0, 0, [[(("pmtd_name", 905), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -975)], (0)), 100000000, 0, -974), (("astlib/ast_403.ml", 766, 26004, 26011), ("astlib/ast_403.ml", 766, 26004, 26033), 0), 0, Tag1 ("Astlib__Ast_403", 302)); (("pmtd_type", 906), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 6864)), 0, (0)), 100000000, 0, -977)], (0)), 100000000, 0, -976), (("astlib/ast_403.ml", 767, 26034, 26041), ("astlib/ast_403.ml", 767, 26034, 26071), 0), 0, Tag1 ("Astlib__Ast_403", 303)); (("pmtd_attributes", 907), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -978), (("astlib/ast_403.ml", 768, 26072, 26079), ("astlib/ast_403.ml", 768, 26072, 26107), 0), 0, Tag1 ("Astlib__Ast_403", 304)); (("pmtd_loc", 908), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -979), (("astlib/ast_403.ml", 769, 26134, 26141), ("astlib/ast_403.ml", 769, 26134, 26162), 0), 0, Tag1 ("Astlib__Ast_403", 305))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -973)), 0, 0, 0, 0, (("astlib/ast_403.ml", 764, 25912, 25914), ("astlib/ast_403.ml", 770, 26163, 26170), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 90)), 2, 0); Tag1 (("open_description", 6871), (0, 0, [[(("popen_lid", 909), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -969)], (0)), 100000000, 0, -968), (("astlib/ast_403.ml", 777, 26333, 26340), ("astlib/ast_403.ml", 777, 26333, 26367), 0), 0, Tag1 ("Astlib__Ast_403", 306)); (("popen_override", 910), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "override_flag"), 0, (0)), 100000000, 0, -970), (("astlib/ast_403.ml", 778, 26368, 26375), ("astlib/ast_403.ml", 778, 26368, 26405), 0), 0, Tag1 ("Astlib__Ast_403", 307)); (("popen_loc", 911), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -971), (("astlib/ast_403.ml", 779, 26406, 26413), ("astlib/ast_403.ml", 779, 26406, 26435), 0), 0, Tag1 ("Astlib__Ast_403", 308)); (("popen_attributes", 912), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -972), (("astlib/ast_403.ml", 780, 26436, 26443), ("astlib/ast_403.ml", 780, 26436, 26472), 0), 0, Tag1 ("Astlib__Ast_403", 309))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "open_description"), 0, (0)), 100000000, 0, -967)), 0, 0, 0, 0, (("astlib/ast_403.ml", 775, 26255, 26257), ("astlib/ast_403.ml", 781, 26473, 26480), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 91)), 2, 0); Tag1 (("include_infos", 6872), ([((("a")), 100000000, 0, -964)], 1, [[(("pincl_mod", 913), 0, ((("a")), 100000000, 0, -964), (("astlib/ast_403.ml", 789, 26728, 26735), ("astlib/ast_403.ml", 789, 26728, 26749), 0), 0, Tag1 ("Astlib__Ast_403", 310)); (("pincl_loc", 914), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -965), (("astlib/ast_403.ml", 790, 26750, 26757), ("astlib/ast_403.ml", 790, 26750, 26779), 0), 0, Tag1 ("Astlib__Ast_403", 311)); (("pincl_attributes", 915), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -966), (("astlib/ast_403.ml", 791, 26780, 26787), ("astlib/ast_403.ml", 791, 26780, 26816), 0), 0, Tag1 ("Astlib__Ast_403", 312))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -964)], (0)), 100000000, 0, -963)), [25], [0], 0, 0, (("astlib/ast_403.ml", 787, 26650, 26652), ("astlib/ast_403.ml", 792, 26817, 26824), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 92)), 2, 0); Tag1 (("include_description", 6873), (0, 0, 0, 1, ((Tag3 ((("include_infos", 6872)), [(Tag3 ((("module_type", 6864)), 0, (0)), 100000000, 0, -962)], (0)), 100000000, 0, -961)), 0, 0, 0, 0, (("astlib/ast_403.ml", 794, 26826, 26828), ("astlib/ast_403.ml", 794, 26826, 26879), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 93)), 2, 0); Tag1 (("include_declaration", 6874), (0, 0, 0, 1, ((Tag3 ((("include_infos", 6872)), [(Tag3 ((("module_expr", 6876)), 0, (0)), 100000000, 0, -960)], (0)), 100000000, 0, -959)), 0, 0, 0, 0, (("astlib/ast_403.ml", 797, 26900, 26902), ("astlib/ast_403.ml", 797, 26900, 26953), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 94)), 2, 0); Tag1 (("with_constraint", 6875), (0, 0, Tag1 ([(("Pwith_type", 916), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -948)], (0)), 100000000, 0, -947); (Tag3 ((("type_declaration", 6841)), 0, (0)), 100000000, 0, -949)]), 0, (("astlib/ast_403.ml", 801, 27042, 27046), ("astlib/ast_403.ml", 801, 27042, 27096), 0), 0, Tag1 ("Astlib__Ast_403", 313)); (("Pwith_module", 917), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -951)], (0)), 100000000, 0, -950); (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -953)], (0)), 100000000, 0, -952)]), 0, (("astlib/ast_403.ml", 806, 27247, 27251), ("astlib/ast_403.ml", 806, 27247, 27302), 0), 0, Tag1 ("Astlib__Ast_403", 314)); (("Pwith_typesubst", 918), ([(Tag3 ((("type_declaration", 6841)), 0, (0)), 100000000, 0, -954)]), 0, (("astlib/ast_403.ml", 808, 27339, 27343), ("astlib/ast_403.ml", 808, 27339, 27380), 0), 0, Tag1 ("Astlib__Ast_403", 315)); (("Pwith_modsubst", 919), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -956)], (0)), 100000000, 0, -955); (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -958)], (0)), 100000000, 0, -957)]), 0, (("astlib/ast_403.ml", 810, 27416, 27420), ("astlib/ast_403.ml", 810, 27416, 27468), 0), 0, Tag1 ("Astlib__Ast_403", 316))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -946)), 0, 0, 0, 0, (("astlib/ast_403.ml", 800, 26974, 26976), ("astlib/ast_403.ml", 810, 27416, 27468), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 95)), 2, 0); Tag1 (("module_expr", 6876), (0, 0, [[(("pmod_desc", 920), 0, (Tag3 ((("module_expr_desc", 6877)), 0, (0)), 100000000, 0, -943), (("astlib/ast_403.ml", 817, 27624, 27631), ("astlib/ast_403.ml", 817, 27624, 27659), 0), 0, Tag1 ("Astlib__Ast_403", 317)); (("pmod_loc", 921), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -944), (("astlib/ast_403.ml", 818, 27660, 27667), ("astlib/ast_403.ml", 818, 27660, 27688), 0), 0, Tag1 ("Astlib__Ast_403", 318)); (("pmod_attributes", 922), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -945), (("astlib/ast_403.ml", 819, 27689, 27696), ("astlib/ast_403.ml", 819, 27689, 27724), 0), 0, Tag1 ("Astlib__Ast_403", 319))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -942)), 0, 0, 0, 0, (("astlib/ast_403.ml", 815, 27556, 27558), ("astlib/ast_403.ml", 820, 27749, 27756), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 96)), 2, 0); Tag1 (("module_expr_desc", 6877), (0, 0, Tag1 ([(("Pmod_ident", 923), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -929)], (0)), 100000000, 0, -928)]), 0, (("astlib/ast_403.ml", 823, 27828, 27832), ("astlib/ast_403.ml", 823, 27828, 27863), 0), 0, Tag1 ("Astlib__Ast_403", 320)); (("Pmod_structure", 924), ([(Tag3 ((("structure", 6878)), 0, (0)), 100000000, 0, -930)]), 0, (("astlib/ast_403.ml", 825, 27882, 27886), ("astlib/ast_403.ml", 825, 27882, 27915), 0), 0, Tag1 ("Astlib__Ast_403", 321)); (("Pmod_functor", 925), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -932)], (0)), 100000000, 0, -931); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 6864)), 0, (0)), 100000000, 0, -934)], (0)), 100000000, 0, -933); (Tag3 ((("module_expr", 6876)), 0, (0)), 100000000, 0, -935)]), 0, (("astlib/ast_403.ml", 827, 27947, 27951), ("astlib/ast_403.ml", 827, 27947, 28014), 0), 0, Tag1 ("Astlib__Ast_403", 322)); (("Pmod_apply", 926), ([(Tag3 ((("module_expr", 6876)), 0, (0)), 100000000, 0, -936); (Tag3 ((("module_expr", 6876)), 0, (0)), 100000000, 0, -937)]), 0, (("astlib/ast_403.ml", 829, 28054, 28058), ("astlib/ast_403.ml", 829, 28054, 28099), 0), 0, Tag1 ("Astlib__Ast_403", 323)); (("Pmod_constraint", 927), ([(Tag3 ((("module_expr", 6876)), 0, (0)), 100000000, 0, -938); (Tag3 ((("module_type", 6864)), 0, (0)), 100000000, 0, -939)]), 0, (("astlib/ast_403.ml", 831, 28125, 28129), ("astlib/ast_403.ml", 831, 28125, 28175), 0), 0, Tag1 ("Astlib__Ast_403", 324)); (("Pmod_unpack", 928), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -940)]), 0, (("astlib/ast_403.ml", 833, 28202, 28206), ("astlib/ast_403.ml", 833, 28202, 28233), 0), 0, Tag1 ("Astlib__Ast_403", 325)); (("Pmod_extension", 929), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -941)]), 0, (("astlib/ast_403.ml", 835, 28258, 28262), ("astlib/ast_403.ml", 835, 28258, 28291), 0), 0, Tag1 ("Astlib__Ast_403", 326))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -927)), 0, 0, 0, 0, (("astlib/ast_403.ml", 822, 27758, 27760), ("astlib/ast_403.ml", 835, 28258, 28291), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 97)), 2, 0); Tag1 (("structure", 6878), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 6879)), 0, (0)), 100000000, 0, -926)], (0)), 100000000, 0, -925)), 0, 0, 0, 0, (("astlib/ast_403.ml", 838, 28315, 28317), ("astlib/ast_403.ml", 838, 28315, 28352), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 98)), 2, 0); Tag1 (("structure_item", 6879), (0, 0, [[(("pstr_desc", 930), 0, (Tag3 ((("structure_item_desc", 6880)), 0, (0)), 100000000, 0, -923), (("astlib/ast_403.ml", 842, 28428, 28435), ("astlib/ast_403.ml", 842, 28428, 28466), 0), 0, Tag1 ("Astlib__Ast_403", 327)); (("pstr_loc", 931), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -924), (("astlib/ast_403.ml", 843, 28467, 28474), ("astlib/ast_403.ml", 843, 28467, 28495), 0), 0, Tag1 ("Astlib__Ast_403", 328))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -922)), 0, 0, 0, 0, (("astlib/ast_403.ml", 840, 28354, 28356), ("astlib/ast_403.ml", 844, 28496, 28503), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 99)), 2, 0); Tag1 (("structure_item_desc", 6880), (0, 0, Tag1 ([(("Pstr_eval", 932), ([(Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -898); (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -899)]), 0, (("astlib/ast_403.ml", 847, 28581, 28585), ("astlib/ast_403.ml", 847, 28581, 28623), 0), 0, Tag1 ("Astlib__Ast_403", 329)); (("Pstr_value", 933), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "rec_flag"), 0, (0)), 100000000, 0, -900); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 6881)), 0, (0)), 100000000, 0, -902)], (0)), 100000000, 0, -901)]), 0, (("astlib/ast_403.ml", 849, 28642, 28646), ("astlib/ast_403.ml", 849, 28642, 28691), 0), 0, Tag1 ("Astlib__Ast_403", 330)); (("Pstr_primitive", 934), ([(Tag3 ((("value_description", 6840)), 0, (0)), 100000000, 0, -903)]), 0, (("astlib/ast_403.ml", 853, 28849, 28853), ("astlib/ast_403.ml", 853, 28849, 28890), 0), 0, Tag1 ("Astlib__Ast_403", 331)); (("Pstr_type", 935), ([(Tag3 (Tag1 ((("Asttypes", 6811)), "rec_flag"), 0, (0)), 100000000, 0, -904); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 6841)), 0, (0)), 100000000, 0, -906)], (0)), 100000000, 0, -905)]), 0, (("astlib/ast_403.ml", 856, 28961, 28965), ("astlib/ast_403.ml", 856, 28961, 29012), 0), 0, Tag1 ("Astlib__Ast_403", 332)); (("Pstr_typext", 936), ([(Tag3 ((("type_extension", 6846)), 0, (0)), 100000000, 0, -907)]), 0, (("astlib/ast_403.ml", 858, 29064, 29068), ("astlib/ast_403.ml", 858, 29064, 29099), 0), 0, Tag1 ("Astlib__Ast_403", 333)); (("Pstr_exception", 937), ([(Tag3 ((("extension_constructor", 6847)), 0, (0)), 100000000, 0, -908)]), 0, (("astlib/ast_403.ml", 860, 29131, 29135), ("astlib/ast_403.ml", 860, 29131, 29176), 0), 0, Tag1 ("Astlib__Ast_403", 334)); (("Pstr_module", 938), ([(Tag3 ((("module_binding", 6882)), 0, (0)), 100000000, 0, -909)]), 0, (("astlib/ast_403.ml", 863, 29241, 29245), ("astlib/ast_403.ml", 863, 29241, 29276), 0), 0, Tag1 ("Astlib__Ast_403", 335)); (("Pstr_recmodule", 939), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 6882)), 0, (0)), 100000000, 0, -911)], (0)), 100000000, 0, -910)]), 0, (("astlib/ast_403.ml", 865, 29307, 29311), ("astlib/ast_403.ml", 865, 29307, 29350), 0), 0, Tag1 ("Astlib__Ast_403", 336)); (("Pstr_modtype", 940), ([(Tag3 ((("module_type_declaration", 6870)), 0, (0)), 100000000, 0, -912)]), 0, (("astlib/ast_403.ml", 867, 29408, 29412), ("astlib/ast_403.ml", 867, 29408, 29453), 0), 0, Tag1 ("Astlib__Ast_403", 337)); (("Pstr_open", 941), ([(Tag3 ((("open_description", 6871)), 0, (0)), 100000000, 0, -913)]), 0, (("astlib/ast_403.ml", 869, 29489, 29493), ("astlib/ast_403.ml", 869, 29489, 29524), 0), 0, Tag1 ("Astlib__Ast_403", 338)); (("Pstr_class", 942), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 6863)), 0, (0)), 100000000, 0, -915)], (0)), 100000000, 0, -914)]), 0, (("astlib/ast_403.ml", 871, 29548, 29552), ("astlib/ast_403.ml", 871, 29548, 29590), 0), 0, Tag1 ("Astlib__Ast_403", 339)); (("Pstr_class_type", 943), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 6856)), 0, (0)), 100000000, 0, -917)], (0)), 100000000, 0, -916)]), 0, (("astlib/ast_403.ml", 873, 29643, 29647), ("astlib/ast_403.ml", 873, 29643, 29695), 0), 0, Tag1 ("Astlib__Ast_403", 340)); (("Pstr_include", 944), ([(Tag3 ((("include_declaration", 6874)), 0, (0)), 100000000, 0, -918)]), 0, (("astlib/ast_403.ml", 875, 29755, 29759), ("astlib/ast_403.ml", 875, 29755, 29796), 0), 0, Tag1 ("Astlib__Ast_403", 341)); (("Pstr_attribute", 945), ([(Tag3 ((("attribute", 6827)), 0, (0)), 100000000, 0, -919)]), 0, (("astlib/ast_403.ml", 877, 29824, 29828), ("astlib/ast_403.ml", 877, 29824, 29857), 0), 0, Tag1 ("Astlib__Ast_403", 342)); (("Pstr_extension", 946), ([(Tag3 ((("extension", 6828)), 0, (0)), 100000000, 0, -920); (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -921)]), 0, (("astlib/ast_403.ml", 879, 29882, 29886), ("astlib/ast_403.ml", 879, 29882, 29928), 0), 0, Tag1 ("Astlib__Ast_403", 343))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -897)), 0, 0, 0, 0, (("astlib/ast_403.ml", 846, 28505, 28507), ("astlib/ast_403.ml", 879, 29882, 29928), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 100)), 2, 0); Tag1 (("value_binding", 6881), (0, 0, [[(("pvb_pat", 947), 0, (Tag3 ((("pattern", 6835)), 0, (0)), 100000000, 0, -893), (("astlib/ast_403.ml", 884, 30023, 30029), ("astlib/ast_403.ml", 884, 30023, 30046), 0), 0, Tag1 ("Astlib__Ast_403", 344)); (("pvb_expr", 948), 0, (Tag3 ((("expression", 6837)), 0, (0)), 100000000, 0, -894), (("astlib/ast_403.ml", 885, 30047, 30053), ("astlib/ast_403.ml", 885, 30047, 30074), 0), 0, Tag1 ("Astlib__Ast_403", 345)); (("pvb_attributes", 949), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -895), (("astlib/ast_403.ml", 886, 30075, 30081), ("astlib/ast_403.ml", 886, 30075, 30108), 0), 0, Tag1 ("Astlib__Ast_403", 346)); (("pvb_loc", 950), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -896), (("astlib/ast_403.ml", 887, 30109, 30115), ("astlib/ast_403.ml", 887, 30109, 30135), 0), 0, Tag1 ("Astlib__Ast_403", 347))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -892)), 0, 0, 0, 0, (("astlib/ast_403.ml", 882, 29953, 29955), ("astlib/ast_403.ml", 888, 30136, 30141), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 101)), 2, 0); Tag1 (("module_binding", 6882), (0, 0, [[(("pmb_name", 951), 0, (Tag3 (Tag1 ((("Asttypes", 6811)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -888)], (0)), 100000000, 0, -887), (("astlib/ast_403.ml", 892, 30217, 30224), ("astlib/ast_403.ml", 892, 30217, 30245), 0), 0, Tag1 ("Astlib__Ast_403", 348)); (("pmb_expr", 952), 0, (Tag3 ((("module_expr", 6876)), 0, (0)), 100000000, 0, -889), (("astlib/ast_403.ml", 893, 30246, 30253), ("astlib/ast_403.ml", 893, 30246, 30275), 0), 0, Tag1 ("Astlib__Ast_403", 349)); (("pmb_attributes", 953), 0, (Tag3 ((("attributes", 6829)), 0, (0)), 100000000, 0, -890), (("astlib/ast_403.ml", 894, 30276, 30283), ("astlib/ast_403.ml", 894, 30276, 30310), 0), 0, Tag1 ("Astlib__Ast_403", 350)); (("pmb_loc", 954), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -891), (("astlib/ast_403.ml", 895, 30311, 30318), ("astlib/ast_403.ml", 895, 30311, 30338), 0), 0, Tag1 ("Astlib__Ast_403", 351))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -886)), 0, 0, 0, 0, (("astlib/ast_403.ml", 890, 30143, 30145), ("astlib/ast_403.ml", 896, 30339, 30346), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 102)), 2, 0); Tag1 (("toplevel_phrase", 6883), (0, 0, Tag1 ([(("Ptop_def", 967), ([(Tag3 ((("structure", 6878)), 0, (0)), 100000000, 0, -883)]), 0, (("astlib/ast_403.ml", 904, 30481, 30485), ("astlib/ast_403.ml", 904, 30481, 30508), 0), 0, Tag1 ("Astlib__Ast_403", 354)); (("Ptop_dir", 968), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -884); (Tag3 ((("directive_argument", 6884)), 0, (0)), 100000000, 0, -885)]), 0, (("astlib/ast_403.ml", 905, 30509, 30513), ("astlib/ast_403.ml", 905, 30509, 30554), 0), 0, Tag1 ("Astlib__Ast_403", 355))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -882)), 0, 0, 0, 0, (("astlib/ast_403.ml", 903, 30412, 30414), ("astlib/ast_403.ml", 905, 30509, 30554), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 352)), 1, 0); Tag1 (("directive_argument", 6884), (0, 0, Tag1 ([(("Pdir_none", 969), (0), 0, (("astlib/ast_403.ml", 909, 30659, 30663), ("astlib/ast_403.ml", 909, 30659, 30674), 0), 0, Tag1 ("Astlib__Ast_403", 356)); (("Pdir_string", 970), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -876)]), 0, (("astlib/ast_403.ml", 910, 30675, 30679), ("astlib/ast_403.ml", 910, 30675, 30702), 0), 0, Tag1 ("Astlib__Ast_403", 357)); (("Pdir_int", 971), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -877); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -879)], (0)), 100000000, 0, -878)]), 0, (("astlib/ast_403.ml", 911, 30703, 30707), ("astlib/ast_403.ml", 911, 30703, 30741), 0), 0, Tag1 ("Astlib__Ast_403", 358)); (("Pdir_ident", 972), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -880)]), 0, (("astlib/ast_403.ml", 912, 30742, 30746), ("astlib/ast_403.ml", 912, 30742, 30773), 0), 0, Tag1 ("Astlib__Ast_403", 359)); (("Pdir_bool", 973), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -881)]), 0, (("astlib/ast_403.ml", 913, 30774, 30778), ("astlib/ast_403.ml", 913, 30774, 30797), 0), 0, Tag1 ("Astlib__Ast_403", 360))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_403")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -875)), 0, 0, 0, 0, (("astlib/ast_403.ml", 908, 30585, 30587), ("astlib/ast_403.ml", 913, 30774, 30797), 0), 0, 0, 0, Tag1 ("Astlib__Ast_403", 353)), 2, 0)]), 0, (("astlib/ast_403.ml", 66, 2764, 2764), ("astlib/ast_403.ml", 914, 30798, 30801), 0), Tag1 ("Astlib__Ast_403", 361)), 0, 0); Tag3 (("Config", 6813), 0, (Tag1 ([(("ast_impl_magic_number", 6885), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1453), 0, (("astlib/ast_403.ml", 917, 30826, 30832), ("astlib/ast_403.ml", 917, 30826, 30853), 0), 0, Tag1 ("Astlib__Ast_403", 362)), 0); (("ast_intf_magic_number", 6886), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1452), 0, (("astlib/ast_403.ml", 918, 30871, 30877), ("astlib/ast_403.ml", 918, 30871, 30898), 0), 0, Tag1 ("Astlib__Ast_403", 363)), 0)]), 0, (("astlib/ast_403.ml", 916, 30803, 30803), ("astlib/ast_403.ml", 919, 30916, 30919), 0), Tag1 ("Astlib__Ast_403", 364)), 0, 0)]), 0, (("astlib/astlib.ml", 26, 1388, 1388), ("astlib/astlib.ml", 26, 1388, 1412), 0), Tag1 ("Astlib", 1)), 0, 0); (("version", 6806), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -849), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 6807), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -848), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 6808), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -829), 0), 100000000, 0, -828), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -845), 0), 100000000, 0, -844), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -847), 0), 100000000, 0, -846), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -839), 0), 100000000, 0, -838), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -811), 0), 100000000, 0, -810), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -825), 0), 100000000, 0, -824), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -815), 0), 100000000, 0, -814), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -837), 0), 100000000, 0, -836), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -823), 0), 100000000, 0, -822), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -821), 0), 100000000, 0, -820), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -819), 0), 100000000, 0, -818), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -817), 0), 100000000, 0, -816), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -833), 0), 100000000, 0, -832), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -841), 0), 100000000, 0, -840), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -835), 0), 100000000, 0, -834), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -813), 0), 100000000, 0, -812), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -827), 0), 100000000, 0, -826), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -843), 0), 100000000, 0, -842), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6805)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -831), 0), 100000000, 0, -830), (0, 100000000, 0, -809)), 100000000, 0, 254)), 100000000, 0, 255)), 100000000, 0, 256)), 100000000, 0, 257)), 100000000, 0, 258)), 100000000, 0, 259)), 100000000, 0, 260)), 100000000, 0, 261)), 100000000, 0, 262)), 100000000, 0, 263)), 100000000, 0, 264)), 100000000, 0, 265)), 100000000, 0, 266)), 100000000, 0, 267)), 100000000, 0, 268)), 100000000, 0, 269)), 100000000, 0, 270)), 100000000, 0, 271)), 100000000, 0, -790), (0)), 100000000, 0, -789)], (0)), 100000000, 0, -788)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 6809), ((("witnesses", 6673)), [((("_")), 100000000, 0, -787)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 6808)), 0, (0)), 100000000, 0, -786)], (0)), 100000000, 0, -785)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 6810), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 6808)), 0, (0)), 100000000, 0, -784)], (0)), 100000000, 0, -783), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 146, 5214, 5214), ("ast/versions.mli", 146, 5214, 5279), 0), Tag1 ("Ppxlib_ast__Versions", 35)), 0, 0); Tag3 (("OCaml_404", 6678), 0, (Tag1 ([Tag3 (("Ast", 6887), 0, (Tag1 ([Tag3 (("Asttypes", 6893), 0, (Tag1 ([Tag1 (("constant", 6896), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1537)]), 0, (("astlib/ast_404.ml", 24, 1557, 1563), ("astlib/ast_404.ml", 24, 1557, 1579), 0), 0, Tag1 ("Astlib__Ast_404", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1538)]), 0, (("astlib/ast_404.ml", 25, 1580, 1584), ("astlib/ast_404.ml", 25, 1580, 1604), 0), 0, Tag1 ("Astlib__Ast_404", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1539); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1541)], (0)), 100000000, 0, -1540)]), 0, (("astlib/ast_404.ml", 26, 1605, 1609), ("astlib/ast_404.ml", 26, 1605, 1649), 0), 0, Tag1 ("Astlib__Ast_404", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1542)]), 0, (("astlib/ast_404.ml", 27, 1650, 1654), ("astlib/ast_404.ml", 27, 1650, 1677), 0), 0, Tag1 ("Astlib__Ast_404", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -1543)]), 0, (("astlib/ast_404.ml", 28, 1678, 1682), ("astlib/ast_404.ml", 28, 1678, 1704), 0), 0, Tag1 ("Astlib__Ast_404", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -1544)]), 0, (("astlib/ast_404.ml", 29, 1705, 1709), ("astlib/ast_404.ml", 29, 1705, 1731), 0), 0, Tag1 ("Astlib__Ast_404", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -1545)]), 0, (("astlib/ast_404.ml", 30, 1732, 1736), ("astlib/ast_404.ml", 30, 1732, 1766), 0), 0, Tag1 ("Astlib__Ast_404", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -1536)), 0, 0, 0, 0, (("astlib/ast_404.ml", 23, 1503, 1505), ("astlib/ast_404.ml", 30, 1732, 1766), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 0)), 1, 0); Tag1 (("rec_flag", 6897), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_404.ml", 32, 1768, 1822), ("astlib/ast_404.ml", 32, 1768, 1834), 0), 0, Tag1 ("Astlib__Ast_404", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_404.ml", 32, 1768, 1835), ("astlib/ast_404.ml", 32, 1768, 1846), 0), 0, Tag1 ("Astlib__Ast_404", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -1535)), 0, 0, 0, 0, (("astlib/ast_404.ml", 32, 1768, 1770), ("astlib/ast_404.ml", 32, 1768, 1846), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 8)), 1, 0); Tag1 (("direction_flag", 6898), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_404.ml", 34, 1848, 1914), ("astlib/ast_404.ml", 34, 1848, 1918), 0), 0, Tag1 ("Astlib__Ast_404", 12)); (("Downto", 333), (0), 0, (("astlib/ast_404.ml", 34, 1848, 1919), ("astlib/ast_404.ml", 34, 1848, 1927), 0), 0, Tag1 ("Astlib__Ast_404", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -1534)), 0, 0, 0, 0, (("astlib/ast_404.ml", 34, 1848, 1850), ("astlib/ast_404.ml", 34, 1848, 1927), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 11)), 1, 0); Tag1 (("private_flag", 6899), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_404.ml", 37, 1983, 2045), ("astlib/ast_404.ml", 37, 1983, 2052), 0), 0, Tag1 ("Astlib__Ast_404", 15)); (("Public", 336), (0), 0, (("astlib/ast_404.ml", 37, 1983, 2053), ("astlib/ast_404.ml", 37, 1983, 2061), 0), 0, Tag1 ("Astlib__Ast_404", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -1533)), 0, 0, 0, 0, (("astlib/ast_404.ml", 37, 1983, 1985), ("astlib/ast_404.ml", 37, 1983, 2061), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 14)), 1, 0); Tag1 (("mutable_flag", 6900), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_404.ml", 39, 2063, 2125), ("astlib/ast_404.ml", 39, 2063, 2134), 0), 0, Tag1 ("Astlib__Ast_404", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_404.ml", 39, 2063, 2135), ("astlib/ast_404.ml", 39, 2063, 2144), 0), 0, Tag1 ("Astlib__Ast_404", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -1532)), 0, 0, 0, 0, (("astlib/ast_404.ml", 39, 2063, 2065), ("astlib/ast_404.ml", 39, 2063, 2144), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 17)), 1, 0); Tag1 (("virtual_flag", 6901), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_404.ml", 41, 2146, 2208), ("astlib/ast_404.ml", 41, 2146, 2215), 0), 0, Tag1 ("Astlib__Ast_404", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_404.ml", 41, 2146, 2216), ("astlib/ast_404.ml", 41, 2146, 2226), 0), 0, Tag1 ("Astlib__Ast_404", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -1531)), 0, 0, 0, 0, (("astlib/ast_404.ml", 41, 2146, 2148), ("astlib/ast_404.ml", 41, 2146, 2226), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 20)), 1, 0); Tag1 (("override_flag", 6902), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_404.ml", 43, 2228, 2292), ("astlib/ast_404.ml", 43, 2228, 2300), 0), 0, Tag1 ("Astlib__Ast_404", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_404.ml", 43, 2228, 2301), ("astlib/ast_404.ml", 43, 2228, 2308), 0), 0, Tag1 ("Astlib__Ast_404", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -1530)), 0, 0, 0, 0, (("astlib/ast_404.ml", 43, 2228, 2230), ("astlib/ast_404.ml", 43, 2228, 2308), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 23)), 1, 0); Tag1 (("closed_flag", 6903), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_404.ml", 45, 2310, 2370), ("astlib/ast_404.ml", 45, 2310, 2376), 0), 0, Tag1 ("Astlib__Ast_404", 27)); (("Open", 348), (0), 0, (("astlib/ast_404.ml", 45, 2310, 2377), ("astlib/ast_404.ml", 45, 2310, 2383), 0), 0, Tag1 ("Astlib__Ast_404", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -1529)), 0, 0, 0, 0, (("astlib/ast_404.ml", 45, 2310, 2312), ("astlib/ast_404.ml", 45, 2310, 2383), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 26)), 1, 0); Tag1 (("label", 6904), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1528)), 0, 0, 0, 0, (("astlib/ast_404.ml", 47, 2385, 2387), ("astlib/ast_404.ml", 47, 2385, 2406), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 29)), 1, 0); Tag1 (("arg_label", 6905), (0, 0, Tag1 ([(("Nolabel", 351), (0), 0, (("astlib/ast_404.ml", 50, 2464, 2470), ("astlib/ast_404.ml", 50, 2464, 2477), 0), 0, Tag1 ("Astlib__Ast_404", 31)); (("Labelled", 352), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1526)]), 0, (("astlib/ast_404.ml", 51, 2478, 2482), ("astlib/ast_404.ml", 51, 2478, 2502), 0), 0, Tag1 ("Astlib__Ast_404", 32)); (("Optional", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1527)]), 0, (("astlib/ast_404.ml", 52, 2525, 2529), ("astlib/ast_404.ml", 52, 2525, 2549), 0), 0, Tag1 ("Astlib__Ast_404", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -1525)), 0, 0, 0, 0, (("astlib/ast_404.ml", 49, 2408, 2410), ("astlib/ast_404.ml", 52, 2525, 2549), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 30)), 1, 0); Tag1 (("loc", 6906), ([((("a")), 100000000, 0, -1523)], 1, [[(("txt", 355), 0, ((("a")), 100000000, 0, -1523), (("astlib/ast_404.ml", 55, 2609, 2613), ("astlib/ast_404.ml", 55, 2609, 2622), 0), 0, Tag1 ("Astlib__Ast_404", 35)); (("loc", 365), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1524), (("astlib/ast_404.ml", 56, 2623, 2627), ("astlib/ast_404.ml", 56, 2623, 2644), 0), 0, Tag1 ("Astlib__Ast_404", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -1523)], (0)), 100000000, 0, -1522)), [25], [0], 0, 0, (("astlib/ast_404.ml", 54, 2573, 2575), ("astlib/ast_404.ml", 57, 2645, 2648), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 34)), 1, 0); Tag1 (("variance", 6907), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_404.ml", 61, 2705, 2709), ("astlib/ast_404.ml", 61, 2705, 2720), 0), 0, Tag1 ("Astlib__Ast_404", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_404.ml", 62, 2721, 2725), ("astlib/ast_404.ml", 62, 2721, 2740), 0), 0, Tag1 ("Astlib__Ast_404", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_404.ml", 63, 2741, 2745), ("astlib/ast_404.ml", 63, 2741, 2756), 0), 0, Tag1 ("Astlib__Ast_404", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -1521)), 0, 0, 0, 0, (("astlib/ast_404.ml", 60, 2651, 2653), ("astlib/ast_404.ml", 63, 2741, 2756), 0), 0, 1, 0, Tag1 ("Astlib__Ast_404", 37)), 1, 0)]), 0, (("astlib/ast_404.ml", 20, 1415, 1415), ("astlib/ast_404.ml", 64, 2757, 2760), 0), Tag1 ("Astlib__Ast_404", 41)), 0, 0); Tag3 (("Parsetree", 6894), 0, (Tag1 ([Tag1 (("constant", 6908), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2118); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2120)], (0)), 100000000, 0, -2119)]), 0, (("astlib/ast_404.ml", 72, 2911, 2917), ("astlib/ast_404.ml", 72, 2911, 2955), 0), 0, Tag1 ("Astlib__Ast_404", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2121)]), 0, (("astlib/ast_404.ml", 78, 3109, 3113), ("astlib/ast_404.ml", 78, 3109, 3134), 0), 0, Tag1 ("Astlib__Ast_404", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2122); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2124)], (0)), 100000000, 0, -2123)]), 0, (("astlib/ast_404.ml", 80, 3149, 3153), ("astlib/ast_404.ml", 80, 3149, 3194), 0), 0, Tag1 ("Astlib__Ast_404", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2125); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2127)], (0)), 100000000, 0, -2126)]), 0, (("astlib/ast_404.ml", 84, 3256, 3260), ("astlib/ast_404.ml", 84, 3256, 3298), 0), 0, Tag1 ("Astlib__Ast_404", 46))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -2117)), 0, 0, 0, 0, (("astlib/ast_404.ml", 71, 2856, 2858), ("astlib/ast_404.ml", 84, 3256, 3298), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 42)), 1, 0); Tag1 (("attribute", 6909), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2115)], (0)), 100000000, 0, -2114); (Tag3 ((("payload", 6912)), 0, (0)), 100000000, 0, -2116)]), 100000000, 0, -2113)), 0, 0, 0, 0, (("astlib/ast_404.ml", 93, 3465, 3467), ("astlib/ast_404.ml", 93, 3465, 3504), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 47)), 1, 0); Tag1 (("extension", 6910), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2111)], (0)), 100000000, 0, -2110); (Tag3 ((("payload", 6912)), 0, (0)), 100000000, 0, -2112)]), 100000000, 0, -2109)), 0, 0, 0, 0, (("astlib/ast_404.ml", 101, 3679, 3681), ("astlib/ast_404.ml", 101, 3679, 3717), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 48)), 2, 0); Tag1 (("attributes", 6911), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 6909)), 0, (0)), 100000000, 0, -2108)], (0)), 100000000, 0, -2107)), 0, 0, 0, 0, (("astlib/ast_404.ml", 108, 3842, 3844), ("astlib/ast_404.ml", 108, 3842, 3875), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 49)), 2, 0); Tag1 (("payload", 6912), (0, 0, Tag1 ([(("PStr", 703), ([(Tag3 ((("structure", 6960)), 0, (0)), 100000000, 0, -2101)]), 0, (("astlib/ast_404.ml", 111, 3929, 3933), ("astlib/ast_404.ml", 111, 3929, 3952), 0), 0, Tag1 ("Astlib__Ast_404", 103)); (("PSig", 704), ([(Tag3 ((("signature", 6948)), 0, (0)), 100000000, 0, -2102)]), 0, (("astlib/ast_404.ml", 112, 3953, 3957), ("astlib/ast_404.ml", 112, 3953, 3976), 0), 0, Tag1 ("Astlib__Ast_404", 104)); (("PTyp", 705), ([(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2103)]), 0, (("astlib/ast_404.ml", 113, 3989, 3993), ("astlib/ast_404.ml", 113, 3989, 4012), 0), 0, Tag1 ("Astlib__Ast_404", 105)); (("PPat", 706), ([(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2104); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -2106)], (0)), 100000000, 0, -2105)]), 0, (("astlib/ast_404.ml", 114, 4024, 4028), ("astlib/ast_404.ml", 114, 4024, 4065), 0), 0, Tag1 ("Astlib__Ast_404", 106))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -2100)), 0, 0, 0, 0, (("astlib/ast_404.ml", 110, 3877, 3879), ("astlib/ast_404.ml", 114, 4024, 4065), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 50)), 2, 0); Tag1 (("core_type", 6913), (0, 0, [[(("ptyp_desc", 707), 0, (Tag3 ((("core_type_desc", 6914)), 0, (0)), 100000000, 0, -2097), (("astlib/ast_404.ml", 122, 4212, 4219), ("astlib/ast_404.ml", 122, 4212, 4245), 0), 0, Tag1 ("Astlib__Ast_404", 107)); (("ptyp_loc", 708), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2098), (("astlib/ast_404.ml", 123, 4246, 4253), ("astlib/ast_404.ml", 123, 4246, 4274), 0), 0, Tag1 ("Astlib__Ast_404", 108)); (("ptyp_attributes", 709), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -2099), (("astlib/ast_404.ml", 124, 4275, 4282), ("astlib/ast_404.ml", 124, 4275, 4310), 0), 0, Tag1 ("Astlib__Ast_404", 109))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -2096)), 0, 0, 0, 0, (("astlib/ast_404.ml", 120, 4148, 4150), ("astlib/ast_404.ml", 125, 4335, 4342), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 51)), 2, 0); Tag1 (("core_type_desc", 6914), (0, 0, Tag1 ([(("Ptyp_any", 710), (0), 0, (("astlib/ast_404.ml", 128, 4410, 4414), ("astlib/ast_404.ml", 128, 4410, 4424), 0), 0, Tag1 ("Astlib__Ast_404", 110)); (("Ptyp_var", 711), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2063)]), 0, (("astlib/ast_404.ml", 130, 4444, 4448), ("astlib/ast_404.ml", 130, 4444, 4468), 0), 0, Tag1 ("Astlib__Ast_404", 111)); (("Ptyp_arrow", 712), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "arg_label"), 0, (0)), 100000000, 0, -2064); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2065); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2066)]), 0, (("astlib/ast_404.ml", 132, 4488, 4492), ("astlib/ast_404.ml", 132, 4488, 4541), 0), 0, Tag1 ("Astlib__Ast_404", 112)); (("Ptyp_tuple", 713), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2068)], (0)), 100000000, 0, -2067)]), 0, (("astlib/ast_404.ml", 137, 4664, 4668), ("astlib/ast_404.ml", 137, 4664, 4698), 0), 0, Tag1 ("Astlib__Ast_404", 113)); (("Ptyp_constr", 714), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2070)], (0)), 100000000, 0, -2069); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2072)], (0)), 100000000, 0, -2071)]), 0, (("astlib/ast_404.ml", 142, 4771, 4775), ("astlib/ast_404.ml", 142, 4771, 4824), 0), 0, Tag1 ("Astlib__Ast_404", 114)); (("Ptyp_object", 718), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2075); (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -2076); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2077)]), 100000000, 0, -2074)], (0)), 100000000, 0, -2073); (Tag3 (Tag1 ((("Asttypes", 6893)), "closed_flag"), 0, (0)), 100000000, 0, -2078)]), 0, (("astlib/ast_404.ml", 147, 4918, 4922), ("astlib/ast_404.ml", 147, 4918, 4991), 0), 0, Tag1 ("Astlib__Ast_404", 115)); (("Ptyp_class", 719), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2080)], (0)), 100000000, 0, -2079); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2082)], (0)), 100000000, 0, -2081)]), 0, (("astlib/ast_404.ml", 151, 5114, 5118), ("astlib/ast_404.ml", 151, 5114, 5166), 0), 0, Tag1 ("Astlib__Ast_404", 116)); (("Ptyp_alias", 720), ([(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2083); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2084)]), 0, (("astlib/ast_404.ml", 156, 5263, 5267), ("astlib/ast_404.ml", 156, 5263, 5301), 0), 0, Tag1 ("Astlib__Ast_404", 117)); (("Ptyp_variant", 721), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 6916)), 0, (0)), 100000000, 0, -2086)], (0)), 100000000, 0, -2085); (Tag3 (Tag1 ((("Asttypes", 6893)), "closed_flag"), 0, (0)), 100000000, 0, -2087); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 6893)), "label"), 0, (0)), 100000000, 0, -2090)], (0)), 100000000, 0, -2089)], (0)), 100000000, 0, -2088)]), 0, (("astlib/ast_404.ml", 158, 5326, 5330), ("astlib/ast_404.ml", 158, 5326, 5396), 0), 0, Tag1 ("Astlib__Ast_404", 118)); (("Ptyp_poly", 722), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2092)], (0)), 100000000, 0, -2091); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2093)]), 0, (("astlib/ast_404.ml", 164, 5672, 5676), ("astlib/ast_404.ml", 164, 5672, 5714), 0), 0, Tag1 ("Astlib__Ast_404", 119)); (("Ptyp_package", 723), ([(Tag3 ((("package_type", 6915)), 0, (0)), 100000000, 0, -2094)]), 0, (("astlib/ast_404.ml", 184, 6268, 6272), ("astlib/ast_404.ml", 184, 6268, 6302), 0), 0, Tag1 ("Astlib__Ast_404", 120)); (("Ptyp_extension", 724), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -2095)]), 0, (("astlib/ast_404.ml", 186, 6330, 6334), ("astlib/ast_404.ml", 186, 6330, 6363), 0), 0, Tag1 ("Astlib__Ast_404", 121))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -2062)), 0, 0, 0, 0, (("astlib/ast_404.ml", 127, 4344, 4346), ("astlib/ast_404.ml", 186, 6330, 6363), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 52)), 2, 0); Tag1 (("package_type", 6915), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2056)], (0)), 100000000, 0, -2055); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2060)], (0)), 100000000, 0, -2059); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2061)]), 100000000, 0, -2058)], (0)), 100000000, 0, -2057)]), 100000000, 0, -2054)), 0, 0, 0, 0, (("astlib/ast_404.ml", 189, 6387, 6389), ("astlib/ast_404.ml", 189, 6387, 6460), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 53)), 2, 0); Tag1 (("row_field", 6916), (0, 0, Tag1 ([(("Rtag", 725), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "label"), 0, (0)), 100000000, 0, -2048); (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -2049); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2050); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2052)], (0)), 100000000, 0, -2051)]), 0, (("astlib/ast_404.ml", 196, 6621, 6625), ("astlib/ast_404.ml", 196, 6621, 6677), 0), 0, Tag1 ("Astlib__Ast_404", 122)); (("Rinherit", 726), ([(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2053)]), 0, (("astlib/ast_404.ml", 209, 7201, 7205), ("astlib/ast_404.ml", 209, 7201, 7228), 0), 0, Tag1 ("Astlib__Ast_404", 123))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -2047)), 0, 0, 0, 0, (("astlib/ast_404.ml", 195, 6565, 6567), ("astlib/ast_404.ml", 209, 7201, 7228), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 54)), 2, 0); Tag1 (("pattern", 6917), (0, 0, [[(("ppat_desc", 727), 0, (Tag3 ((("pattern_desc", 6918)), 0, (0)), 100000000, 0, -2044), (("astlib/ast_404.ml", 216, 7330, 7337), ("astlib/ast_404.ml", 216, 7330, 7361), 0), 0, Tag1 ("Astlib__Ast_404", 124)); (("ppat_loc", 728), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2045), (("astlib/ast_404.ml", 217, 7362, 7369), ("astlib/ast_404.ml", 217, 7362, 7390), 0), 0, Tag1 ("Astlib__Ast_404", 125)); (("ppat_attributes", 729), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -2046), (("astlib/ast_404.ml", 218, 7391, 7398), ("astlib/ast_404.ml", 218, 7391, 7426), 0), 0, Tag1 ("Astlib__Ast_404", 126))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -2043)), 0, 0, 0, 0, (("astlib/ast_404.ml", 214, 7270, 7272), ("astlib/ast_404.ml", 219, 7451, 7458), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 55)), 2, 0); Tag1 (("pattern_desc", 6918), (0, 0, Tag1 ([(("Ppat_any", 730), (0), 0, (("astlib/ast_404.ml", 222, 7522, 7526), ("astlib/ast_404.ml", 222, 7522, 7536), 0), 0, Tag1 ("Astlib__Ast_404", 127)); (("Ppat_var", 731), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2005)], (0)), 100000000, 0, -2004)]), 0, (("astlib/ast_404.ml", 224, 7555, 7559), ("astlib/ast_404.ml", 224, 7555, 7583), 0), 0, Tag1 ("Astlib__Ast_404", 128)); (("Ppat_alias", 732), ([(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2006); (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2008)], (0)), 100000000, 0, -2007)]), 0, (("astlib/ast_404.ml", 226, 7602, 7606), ("astlib/ast_404.ml", 226, 7602, 7642), 0), 0, Tag1 ("Astlib__Ast_404", 129)); (("Ppat_constant", 733), ([(Tag3 ((("constant", 6908)), 0, (0)), 100000000, 0, -2009)]), 0, (("astlib/ast_404.ml", 228, 7667, 7671), ("astlib/ast_404.ml", 228, 7667, 7698), 0), 0, Tag1 ("Astlib__Ast_404", 130)); (("Ppat_interval", 734), ([(Tag3 ((("constant", 6908)), 0, (0)), 100000000, 0, -2010); (Tag3 ((("constant", 6908)), 0, (0)), 100000000, 0, -2011)]), 0, (("astlib/ast_404.ml", 230, 7747, 7751), ("astlib/ast_404.ml", 230, 7747, 7789), 0), 0, Tag1 ("Astlib__Ast_404", 131)); (("Ppat_tuple", 735), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2013)], (0)), 100000000, 0, -2012)]), 0, (("astlib/ast_404.ml", 235, 7929, 7933), ("astlib/ast_404.ml", 235, 7929, 7961), 0), 0, Tag1 ("Astlib__Ast_404", 132)); (("Ppat_construct", 736), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2015)], (0)), 100000000, 0, -2014); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2017)], (0)), 100000000, 0, -2016)]), 0, (("astlib/ast_404.ml", 240, 8034, 8038), ("astlib/ast_404.ml", 240, 8034, 8090), 0), 0, Tag1 ("Astlib__Ast_404", 133)); (("Ppat_variant", 737), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "label"), 0, (0)), 100000000, 0, -2018); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2020)], (0)), 100000000, 0, -2019)]), 0, (("astlib/ast_404.ml", 245, 8239, 8243), ("astlib/ast_404.ml", 245, 8239, 8283), 0), 0, Tag1 ("Astlib__Ast_404", 134)); (("Ppat_record", 738), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2024)], (0)), 100000000, 0, -2023); (Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2025)]), 100000000, 0, -2022)], (0)), 100000000, 0, -2021); (Tag3 (Tag1 ((("Asttypes", 6893)), "closed_flag"), 0, (0)), 100000000, 0, -2026)]), 0, (("astlib/ast_404.ml", 249, 8370, 8374), ("astlib/ast_404.ml", 249, 8370, 8437), 0), 0, Tag1 ("Astlib__Ast_404", 135)); (("Ppat_array", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2028)], (0)), 100000000, 0, -2027)]), 0, (("astlib/ast_404.ml", 255, 8591, 8595), ("astlib/ast_404.ml", 255, 8591, 8623), 0), 0, Tag1 ("Astlib__Ast_404", 136)); (("Ppat_or", 740), ([(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2029); (Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2030)]), 0, (("astlib/ast_404.ml", 257, 8658, 8662), ("astlib/ast_404.ml", 257, 8658, 8692), 0), 0, Tag1 ("Astlib__Ast_404", 137)); (("Ppat_constraint", 741), ([(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2031); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -2032)]), 0, (("astlib/ast_404.ml", 259, 8717, 8721), ("astlib/ast_404.ml", 259, 8717, 8761), 0), 0, Tag1 ("Astlib__Ast_404", 138)); (("Ppat_type", 742), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2034)], (0)), 100000000, 0, -2033)]), 0, (("astlib/ast_404.ml", 261, 8786, 8790), ("astlib/ast_404.ml", 261, 8786, 8820), 0), 0, Tag1 ("Astlib__Ast_404", 139)); (("Ppat_lazy", 743), ([(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2035)]), 0, (("astlib/ast_404.ml", 263, 8845, 8849), ("astlib/ast_404.ml", 263, 8845, 8871), 0), 0, Tag1 ("Astlib__Ast_404", 140)); (("Ppat_unpack", 744), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2037)], (0)), 100000000, 0, -2036)]), 0, (("astlib/ast_404.ml", 265, 8895, 8899), ("astlib/ast_404.ml", 265, 8895, 8926), 0), 0, Tag1 ("Astlib__Ast_404", 141)); (("Ppat_exception", 745), ([(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2038)]), 0, (("astlib/ast_404.ml", 270, 9073, 9077), ("astlib/ast_404.ml", 270, 9073, 9104), 0), 0, Tag1 ("Astlib__Ast_404", 142)); (("Ppat_extension", 746), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -2039)]), 0, (("astlib/ast_404.ml", 272, 9133, 9137), ("astlib/ast_404.ml", 272, 9133, 9166), 0), 0, Tag1 ("Astlib__Ast_404", 143)); (("Ppat_open", 747), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2041)], (0)), 100000000, 0, -2040); (Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -2042)]), 0, (("astlib/ast_404.ml", 274, 9189, 9193), ("astlib/ast_404.ml", 274, 9189, 9233), 0), 0, Tag1 ("Astlib__Ast_404", 144))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -2003)), 0, 0, 0, 0, (("astlib/ast_404.ml", 221, 7460, 7462), ("astlib/ast_404.ml", 274, 9189, 9233), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 56)), 2, 0); Tag1 (("expression", 6919), (0, 0, [[(("pexp_desc", 748), 0, (Tag3 ((("expression_desc", 6920)), 0, (0)), 100000000, 0, -2000), (("astlib/ast_404.ml", 280, 9328, 9335), ("astlib/ast_404.ml", 280, 9328, 9362), 0), 0, Tag1 ("Astlib__Ast_404", 145)); (("pexp_loc", 749), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2001), (("astlib/ast_404.ml", 281, 9363, 9370), ("astlib/ast_404.ml", 281, 9363, 9391), 0), 0, Tag1 ("Astlib__Ast_404", 146)); (("pexp_attributes", 750), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -2002), (("astlib/ast_404.ml", 282, 9392, 9399), ("astlib/ast_404.ml", 282, 9392, 9427), 0), 0, Tag1 ("Astlib__Ast_404", 147))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -1999)), 0, 0, 0, 0, (("astlib/ast_404.ml", 278, 9262, 9264), ("astlib/ast_404.ml", 283, 9452, 9459), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 57)), 2, 0); Tag1 (("expression_desc", 6920), (0, 0, Tag1 ([(("Pexp_ident", 751), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1899)], (0)), 100000000, 0, -1898)]), 0, (("astlib/ast_404.ml", 286, 9529, 9533), ("astlib/ast_404.ml", 286, 9529, 9564), 0), 0, Tag1 ("Astlib__Ast_404", 148)); (("Pexp_constant", 752), ([(Tag3 ((("constant", 6908)), 0, (0)), 100000000, 0, -1900)]), 0, (("astlib/ast_404.ml", 290, 9611, 9615), ("astlib/ast_404.ml", 290, 9611, 9642), 0), 0, Tag1 ("Astlib__Ast_404", 149)); (("Pexp_let", 753), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "rec_flag"), 0, (0)), 100000000, 0, -1901); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 6963)), 0, (0)), 100000000, 0, -1903)], (0)), 100000000, 0, -1902); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1904)]), 0, (("astlib/ast_404.ml", 292, 9691, 9695), ("astlib/ast_404.ml", 292, 9691, 9751), 0), 0, Tag1 ("Astlib__Ast_404", 150)); (("Pexp_function", 754), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 6921)), 0, (0)), 100000000, 0, -1906)], (0)), 100000000, 0, -1905)]), 0, (("astlib/ast_404.ml", 296, 9919, 9923), ("astlib/ast_404.ml", 296, 9919, 9951), 0), 0, Tag1 ("Astlib__Ast_404", 151)); (("Pexp_fun", 755), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "arg_label"), 0, (0)), 100000000, 0, -1907); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1909)], (0)), 100000000, 0, -1908); (Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -1910); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1911)]), 0, (("astlib/ast_404.ml", 298, 10003, 10007), ("astlib/ast_404.ml", 298, 10003, 10073), 0), 0, Tag1 ("Astlib__Ast_404", 152)); (("Pexp_apply", 756), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1912); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "arg_label"), 0, (0)), 100000000, 0, -1915); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1916)]), 100000000, 0, -1914)], (0)), 100000000, 0, -1913)]), 0, (("astlib/ast_404.ml", 309, 10578, 10582), ("astlib/ast_404.ml", 309, 10578, 10640), 0), 0, Tag1 ("Astlib__Ast_404", 153)); (("Pexp_match", 757), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1917); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 6921)), 0, (0)), 100000000, 0, -1919)], (0)), 100000000, 0, -1918)]), 0, (("astlib/ast_404.ml", 316, 10824, 10828), ("astlib/ast_404.ml", 316, 10824, 10866), 0), 0, Tag1 ("Astlib__Ast_404", 154)); (("Pexp_try", 758), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1920); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 6921)), 0, (0)), 100000000, 0, -1922)], (0)), 100000000, 0, -1921)]), 0, (("astlib/ast_404.ml", 318, 10923, 10927), ("astlib/ast_404.ml", 318, 10923, 10963), 0), 0, Tag1 ("Astlib__Ast_404", 155)); (("Pexp_tuple", 759), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1924)], (0)), 100000000, 0, -1923)]), 0, (("astlib/ast_404.ml", 320, 11018, 11022), ("astlib/ast_404.ml", 320, 11018, 11053), 0), 0, Tag1 ("Astlib__Ast_404", 156)); (("Pexp_construct", 760), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1926)], (0)), 100000000, 0, -1925); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1928)], (0)), 100000000, 0, -1927)]), 0, (("astlib/ast_404.ml", 325, 11126, 11130), ("astlib/ast_404.ml", 325, 11126, 11185), 0), 0, Tag1 ("Astlib__Ast_404", 157)); (("Pexp_variant", 761), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "label"), 0, (0)), 100000000, 0, -1929); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1931)], (0)), 100000000, 0, -1930)]), 0, (("astlib/ast_404.ml", 330, 11330, 11334), ("astlib/ast_404.ml", 330, 11330, 11377), 0), 0, Tag1 ("Astlib__Ast_404", 158)); (("Pexp_record", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1935)], (0)), 100000000, 0, -1934); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1936)]), 100000000, 0, -1933)], (0)), 100000000, 0, -1932); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1938)], (0)), 100000000, 0, -1937)]), 0, (("astlib/ast_404.ml", 334, 11464, 11468), ("astlib/ast_404.ml", 334, 11464, 11540), 0), 0, Tag1 ("Astlib__Ast_404", 159)); (("Pexp_field", 763), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1939); (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1941)], (0)), 100000000, 0, -1940)]), 0, (("astlib/ast_404.ml", 340, 11687, 11691), ("astlib/ast_404.ml", 340, 11687, 11735), 0), 0, Tag1 ("Astlib__Ast_404", 160)); (("Pexp_setfield", 764), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1942); (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1944)], (0)), 100000000, 0, -1943); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1945)]), 0, (("astlib/ast_404.ml", 342, 11756, 11760), ("astlib/ast_404.ml", 342, 11756, 11820), 0), 0, Tag1 ("Astlib__Ast_404", 161)); (("Pexp_array", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1947)], (0)), 100000000, 0, -1946)]), 0, (("astlib/ast_404.ml", 344, 11848, 11852), ("astlib/ast_404.ml", 344, 11848, 11883), 0), 0, Tag1 ("Astlib__Ast_404", 162)); (("Pexp_ifthenelse", 766), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1948); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1949); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1951)], (0)), 100000000, 0, -1950)]), 0, (("astlib/ast_404.ml", 346, 11918, 11922), ("astlib/ast_404.ml", 346, 11918, 11986), 0), 0, Tag1 ("Astlib__Ast_404", 163)); (("Pexp_sequence", 767), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1952); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1953)]), 0, (("astlib/ast_404.ml", 348, 12025, 12029), ("astlib/ast_404.ml", 348, 12025, 12071), 0), 0, Tag1 ("Astlib__Ast_404", 164)); (("Pexp_while", 768), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1954); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1955)]), 0, (("astlib/ast_404.ml", 350, 12095, 12099), ("astlib/ast_404.ml", 350, 12095, 12138), 0), 0, Tag1 ("Astlib__Ast_404", 165)); (("Pexp_for", 769), ([(Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -1956); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1957); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1958); (Tag3 (Tag1 ((("Asttypes", 6893)), "direction_flag"), 0, (0)), 100000000, 0, -1959); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1960)]), 0, (("astlib/ast_404.ml", 352, 12175, 12179), ("astlib/ast_404.ml", 353, 12193, 12265), 0), 0, Tag1 ("Astlib__Ast_404", 166)); (("Pexp_constraint", 770), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1961); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1962)]), 0, (("astlib/ast_404.ml", 357, 12402, 12406), ("astlib/ast_404.ml", 357, 12402, 12449), 0), 0, Tag1 ("Astlib__Ast_404", 167)); (("Pexp_coerce", 771), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1963); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1965)], (0)), 100000000, 0, -1964); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1966)]), 0, (("astlib/ast_404.ml", 359, 12474, 12478), ("astlib/ast_404.ml", 359, 12474, 12536), 0), 0, Tag1 ("Astlib__Ast_404", 168)); (("Pexp_send", 772), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1967); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1968)]), 0, (("astlib/ast_404.ml", 363, 12632, 12636), ("astlib/ast_404.ml", 363, 12632, 12670), 0), 0, Tag1 ("Astlib__Ast_404", 169)); (("Pexp_new", 773), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1970)], (0)), 100000000, 0, -1969)]), 0, (("astlib/ast_404.ml", 365, 12694, 12698), ("astlib/ast_404.ml", 365, 12694, 12727), 0), 0, Tag1 ("Astlib__Ast_404", 170)); (("Pexp_setinstvar", 774), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1972)], (0)), 100000000, 0, -1971); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1973)]), 0, (("astlib/ast_404.ml", 367, 12752, 12756), ("astlib/ast_404.ml", 367, 12752, 12800), 0), 0, Tag1 ("Astlib__Ast_404", 171)); (("Pexp_override", 775), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1977)], (0)), 100000000, 0, -1976); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1978)]), 100000000, 0, -1975)], (0)), 100000000, 0, -1974)]), 0, (("astlib/ast_404.ml", 369, 12824, 12828), ("astlib/ast_404.ml", 369, 12824, 12877), 0), 0, Tag1 ("Astlib__Ast_404", 172)); (("Pexp_letmodule", 776), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1980)], (0)), 100000000, 0, -1979); (Tag3 ((("module_expr", 6958)), 0, (0)), 100000000, 0, -1981); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1982)]), 0, (("astlib/ast_404.ml", 371, 12922, 12926), ("astlib/ast_404.ml", 371, 12922, 12983), 0), 0, Tag1 ("Astlib__Ast_404", 173)); (("Pexp_letexception", 777), ([(Tag3 ((("extension_constructor", 6929)), 0, (0)), 100000000, 0, -1983); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1984)]), 0, (("astlib/ast_404.ml", 373, 13023, 13027), ("astlib/ast_404.ml", 373, 13023, 13084), 0), 0, Tag1 ("Astlib__Ast_404", 174)); (("Pexp_assert", 778), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1985)]), 0, (("astlib/ast_404.ml", 375, 13122, 13126), ("astlib/ast_404.ml", 375, 13122, 13153), 0), 0, Tag1 ("Astlib__Ast_404", 175)); (("Pexp_lazy", 779), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1986)]), 0, (("astlib/ast_404.ml", 379, 13275, 13279), ("astlib/ast_404.ml", 379, 13275, 13304), 0), 0, Tag1 ("Astlib__Ast_404", 176)); (("Pexp_poly", 780), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1987); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1989)], (0)), 100000000, 0, -1988)]), 0, (("astlib/ast_404.ml", 381, 13328, 13332), ("astlib/ast_404.ml", 381, 13328, 13376), 0), 0, Tag1 ("Astlib__Ast_404", 177)); (("Pexp_object", 781), ([(Tag3 ((("class_structure", 6941)), 0, (0)), 100000000, 0, -1990)]), 0, (("astlib/ast_404.ml", 386, 13524, 13528), ("astlib/ast_404.ml", 386, 13524, 13560), 0), 0, Tag1 ("Astlib__Ast_404", 178)); (("Pexp_newtype", 782), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1991); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1992)]), 0, (("astlib/ast_404.ml", 388, 13592, 13596), ("astlib/ast_404.ml", 388, 13592, 13633), 0), 0, Tag1 ("Astlib__Ast_404", 179)); (("Pexp_pack", 783), ([(Tag3 ((("module_expr", 6958)), 0, (0)), 100000000, 0, -1993)]), 0, (("astlib/ast_404.ml", 390, 13668, 13672), ("astlib/ast_404.ml", 390, 13668, 13698), 0), 0, Tag1 ("Astlib__Ast_404", 180)); (("Pexp_open", 784), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "override_flag"), 0, (0)), 100000000, 0, -1994); (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1996)], (0)), 100000000, 0, -1995); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1997)]), 0, (("astlib/ast_404.ml", 395, 13831, 13835), ("astlib/ast_404.ml", 395, 13831, 13894), 0), 0, Tag1 ("Astlib__Ast_404", 181)); (("Pexp_extension", 785), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -1998)]), 0, (("astlib/ast_404.ml", 399, 13967, 13971), ("astlib/ast_404.ml", 399, 13967, 14000), 0), 0, Tag1 ("Astlib__Ast_404", 182)); (("Pexp_unreachable", 786), (0), 0, (("astlib/ast_404.ml", 401, 14023, 14027), ("astlib/ast_404.ml", 401, 14023, 14045), 0), 0, Tag1 ("Astlib__Ast_404", 183))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -1897)), 0, 0, 0, 0, (("astlib/ast_404.ml", 285, 9461, 9463), ("astlib/ast_404.ml", 401, 14023, 14045), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 58)), 2, 0); Tag1 (("case", 6921), (0, 0, [[(("pc_lhs", 787), 0, (Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -1893), (("astlib/ast_404.ml", 406, 14156, 14163), ("astlib/ast_404.ml", 406, 14156, 14179), 0), 0, Tag1 ("Astlib__Ast_404", 184)); (("pc_guard", 788), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1895)], (0)), 100000000, 0, -1894), (("astlib/ast_404.ml", 407, 14180, 14187), ("astlib/ast_404.ml", 407, 14180, 14215), 0), 0, Tag1 ("Astlib__Ast_404", 185)); (("pc_rhs", 789), 0, (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1896), (("astlib/ast_404.ml", 408, 14216, 14223), ("astlib/ast_404.ml", 408, 14216, 14242), 0), 0, Tag1 ("Astlib__Ast_404", 186))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -1892)), 0, 0, 0, 0, (("astlib/ast_404.ml", 404, 14065, 14067), ("astlib/ast_404.ml", 409, 14243, 14250), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 59)), 2, 0); Tag1 (("value_description", 6922), (0, 0, [[(("pval_name", 790), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1886)], (0)), 100000000, 0, -1885), (("astlib/ast_404.ml", 415, 14360, 14367), ("astlib/ast_404.ml", 415, 14360, 14389), 0), 0, Tag1 ("Astlib__Ast_404", 187)); (("pval_type", 791), 0, (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1887), (("astlib/ast_404.ml", 416, 14390, 14397), ("astlib/ast_404.ml", 416, 14390, 14418), 0), 0, Tag1 ("Astlib__Ast_404", 188)); (("pval_prim", 792), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1889)], (0)), 100000000, 0, -1888), (("astlib/ast_404.ml", 417, 14419, 14426), ("astlib/ast_404.ml", 417, 14419, 14449), 0), 0, Tag1 ("Astlib__Ast_404", 189)); (("pval_attributes", 793), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1890), (("astlib/ast_404.ml", 418, 14450, 14457), ("astlib/ast_404.ml", 418, 14450, 14485), 0), 0, Tag1 ("Astlib__Ast_404", 190)); (("pval_loc", 794), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1891), (("astlib/ast_404.ml", 419, 14513, 14520), ("astlib/ast_404.ml", 419, 14513, 14541), 0), 0, Tag1 ("Astlib__Ast_404", 191))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -1884)), 0, 0, 0, 0, (("astlib/ast_404.ml", 413, 14280, 14282), ("astlib/ast_404.ml", 420, 14542, 14549), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 60)), 2, 0); Tag1 (("type_declaration", 6923), (0, 0, [[(("ptype_name", 795), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1868)], (0)), 100000000, 0, -1867), (("astlib/ast_404.ml", 431, 14783, 14790), ("astlib/ast_404.ml", 431, 14783, 14813), 0), 0, Tag1 ("Astlib__Ast_404", 192)); (("ptype_params", 796), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1871); (Tag3 (Tag1 ((("Asttypes", 6893)), "variance"), 0, (0)), 100000000, 0, -1872)]), 100000000, 0, -1870)], (0)), 100000000, 0, -1869), (("astlib/ast_404.ml", 432, 14814, 14821), ("astlib/ast_404.ml", 432, 14814, 14863), 0), 0, Tag1 ("Astlib__Ast_404", 193)); (("ptype_cstrs", 797), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1875); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1876); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1877)]), 100000000, 0, -1874)], (0)), 100000000, 0, -1873), (("astlib/ast_404.ml", 434, 14917, 14924), ("astlib/ast_404.ml", 434, 14917, 14979), 0), 0, Tag1 ("Astlib__Ast_404", 194)); (("ptype_kind", 798), 0, (Tag3 ((("type_kind", 6924)), 0, (0)), 100000000, 0, -1878), (("astlib/ast_404.ml", 436, 15044, 15051), ("astlib/ast_404.ml", 436, 15044, 15073), 0), 0, Tag1 ("Astlib__Ast_404", 195)); (("ptype_private", 799), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "private_flag"), 0, (0)), 100000000, 0, -1879), (("astlib/ast_404.ml", 437, 15074, 15081), ("astlib/ast_404.ml", 437, 15074, 15109), 0), 0, Tag1 ("Astlib__Ast_404", 196)); (("ptype_manifest", 800), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1881)], (0)), 100000000, 0, -1880), (("astlib/ast_404.ml", 438, 15132, 15139), ("astlib/ast_404.ml", 438, 15132, 15172), 0), 0, Tag1 ("Astlib__Ast_404", 197)); (("ptype_attributes", 801), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1882), (("astlib/ast_404.ml", 439, 15184, 15191), ("astlib/ast_404.ml", 439, 15184, 15220), 0), 0, Tag1 ("Astlib__Ast_404", 198)); (("ptype_loc", 802), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1883), (("astlib/ast_404.ml", 440, 15249, 15256), ("astlib/ast_404.ml", 440, 15249, 15278), 0), 0, Tag1 ("Astlib__Ast_404", 199))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -1866)), 0, 0, 0, 0, (("astlib/ast_404.ml", 429, 14705, 14707), ("astlib/ast_404.ml", 441, 15279, 15286), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 61)), 2, 0); Tag1 (("type_kind", 6924), (0, 0, Tag1 ([(("Ptype_abstract", 803), (0), 0, (("astlib/ast_404.ml", 454, 15740, 15744), ("astlib/ast_404.ml", 454, 15740, 15760), 0), 0, Tag1 ("Astlib__Ast_404", 200)); (("Ptype_variant", 804), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 6926)), 0, (0)), 100000000, 0, -1863)], (0)), 100000000, 0, -1862)]), 0, (("astlib/ast_404.ml", 455, 15761, 15765), ("astlib/ast_404.ml", 455, 15761, 15812), 0), 0, Tag1 ("Astlib__Ast_404", 201)); (("Ptype_record", 805), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 6925)), 0, (0)), 100000000, 0, -1865)], (0)), 100000000, 0, -1864)]), 0, (("astlib/ast_404.ml", 457, 15855, 15859), ("astlib/ast_404.ml", 457, 15855, 15899), 0), 0, Tag1 ("Astlib__Ast_404", 202)); (("Ptype_open", 806), (0), 0, (("astlib/ast_404.ml", 459, 15942, 15946), ("astlib/ast_404.ml", 459, 15942, 15958), 0), 0, Tag1 ("Astlib__Ast_404", 203))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -1861)), 0, 0, 0, 0, (("astlib/ast_404.ml", 453, 15684, 15686), ("astlib/ast_404.ml", 459, 15942, 15958), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 62)), 2, 0); Tag1 (("label_declaration", 6925), (0, 0, [[(("pld_name", 807), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1856)], (0)), 100000000, 0, -1855), (("astlib/ast_404.ml", 463, 16040, 16047), ("astlib/ast_404.ml", 463, 16040, 16068), 0), 0, Tag1 ("Astlib__Ast_404", 204)); (("pld_mutable", 808), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "mutable_flag"), 0, (0)), 100000000, 0, -1857), (("astlib/ast_404.ml", 464, 16069, 16076), ("astlib/ast_404.ml", 464, 16069, 16102), 0), 0, Tag1 ("Astlib__Ast_404", 205)); (("pld_type", 809), 0, (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1858), (("astlib/ast_404.ml", 465, 16103, 16110), ("astlib/ast_404.ml", 465, 16103, 16130), 0), 0, Tag1 ("Astlib__Ast_404", 206)); (("pld_loc", 810), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1859), (("astlib/ast_404.ml", 466, 16131, 16138), ("astlib/ast_404.ml", 466, 16131, 16158), 0), 0, Tag1 ("Astlib__Ast_404", 207)); (("pld_attributes", 811), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1860), (("astlib/ast_404.ml", 467, 16159, 16166), ("astlib/ast_404.ml", 467, 16159, 16193), 0), 0, Tag1 ("Astlib__Ast_404", 208))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -1854)), 0, 0, 0, 0, (("astlib/ast_404.ml", 461, 15960, 15962), ("astlib/ast_404.ml", 468, 16220, 16227), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 63)), 2, 0); Tag1 (("constructor_declaration", 6926), (0, 0, [[(("pcd_name", 812), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1848)], (0)), 100000000, 0, -1847), (("astlib/ast_404.ml", 478, 16472, 16479), ("astlib/ast_404.ml", 478, 16472, 16500), 0), 0, Tag1 ("Astlib__Ast_404", 209)); (("pcd_args", 813), 0, (Tag3 ((("constructor_arguments", 6927)), 0, (0)), 100000000, 0, -1849), (("astlib/ast_404.ml", 479, 16501, 16508), ("astlib/ast_404.ml", 479, 16501, 16540), 0), 0, Tag1 ("Astlib__Ast_404", 210)); (("pcd_res", 814), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1851)], (0)), 100000000, 0, -1850), (("astlib/ast_404.ml", 480, 16541, 16548), ("astlib/ast_404.ml", 480, 16541, 16574), 0), 0, Tag1 ("Astlib__Ast_404", 211)); (("pcd_loc", 815), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1852), (("astlib/ast_404.ml", 481, 16575, 16582), ("astlib/ast_404.ml", 481, 16575, 16602), 0), 0, Tag1 ("Astlib__Ast_404", 212)); (("pcd_attributes", 816), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1853), (("astlib/ast_404.ml", 482, 16603, 16610), ("astlib/ast_404.ml", 482, 16603, 16637), 0), 0, Tag1 ("Astlib__Ast_404", 213))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -1846)), 0, 0, 0, 0, (("astlib/ast_404.ml", 476, 16380, 16382), ("astlib/ast_404.ml", 483, 16667, 16674), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 64)), 2, 0); Tag1 (("constructor_arguments", 6927), (0, 0, Tag1 ([(("Pcstr_tuple", 817), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1843)], (0)), 100000000, 0, -1842)]), 0, (("astlib/ast_404.ml", 486, 16756, 16760), ("astlib/ast_404.ml", 486, 16756, 16791), 0), 0, Tag1 ("Astlib__Ast_404", 214)); (("Pcstr_record", 818), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 6925)), 0, (0)), 100000000, 0, -1845)], (0)), 100000000, 0, -1844)]), 0, (("astlib/ast_404.ml", 487, 16792, 16796), ("astlib/ast_404.ml", 487, 16792, 16836), 0), 0, Tag1 ("Astlib__Ast_404", 215))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -1841)), 0, 0, 0, 0, (("astlib/ast_404.ml", 485, 16676, 16678), ("astlib/ast_404.ml", 487, 16792, 16836), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 65)), 2, 0); Tag1 (("type_extension", 6928), (0, 0, [[(("ptyext_path", 819), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1832)], (0)), 100000000, 0, -1831), (("astlib/ast_404.ml", 500, 17310, 17317), ("astlib/ast_404.ml", 500, 17310, 17346), 0), 0, Tag1 ("Astlib__Ast_404", 216)); (("ptyext_params", 820), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1835); (Tag3 (Tag1 ((("Asttypes", 6893)), "variance"), 0, (0)), 100000000, 0, -1836)]), 100000000, 0, -1834)], (0)), 100000000, 0, -1833), (("astlib/ast_404.ml", 501, 17347, 17354), ("astlib/ast_404.ml", 501, 17347, 17397), 0), 0, Tag1 ("Astlib__Ast_404", 217)); (("ptyext_constructors", 821), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 6929)), 0, (0)), 100000000, 0, -1838)], (0)), 100000000, 0, -1837), (("astlib/ast_404.ml", 502, 17398, 17405), ("astlib/ast_404.ml", 502, 17398, 17453), 0), 0, Tag1 ("Astlib__Ast_404", 218)); (("ptyext_private", 822), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "private_flag"), 0, (0)), 100000000, 0, -1839), (("astlib/ast_404.ml", 503, 17454, 17461), ("astlib/ast_404.ml", 503, 17454, 17490), 0), 0, Tag1 ("Astlib__Ast_404", 219)); (("ptyext_attributes", 823), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1840), (("astlib/ast_404.ml", 504, 17491, 17498), ("astlib/ast_404.ml", 504, 17491, 17528), 0), 0, Tag1 ("Astlib__Ast_404", 220))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -1830)), 0, 0, 0, 0, (("astlib/ast_404.ml", 498, 17236, 17238), ("astlib/ast_404.ml", 505, 17557, 17564), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 66)), 2, 0); Tag1 (("extension_constructor", 6929), (0, 0, [[(("pext_name", 824), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1826)], (0)), 100000000, 0, -1825), (("astlib/ast_404.ml", 512, 17682, 17689), ("astlib/ast_404.ml", 512, 17682, 17711), 0), 0, Tag1 ("Astlib__Ast_404", 221)); (("pext_kind", 825), 0, (Tag3 ((("extension_constructor_kind", 6930)), 0, (0)), 100000000, 0, -1827), (("astlib/ast_404.ml", 513, 17712, 17719), ("astlib/ast_404.ml", 513, 17712, 17758), 0), 0, Tag1 ("Astlib__Ast_404", 222)); (("pext_loc", 826), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1828), (("astlib/ast_404.ml", 514, 17759, 17766), ("astlib/ast_404.ml", 514, 17759, 17788), 0), 0, Tag1 ("Astlib__Ast_404", 223)); (("pext_attributes", 827), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1829), (("astlib/ast_404.ml", 515, 17789, 17796), ("astlib/ast_404.ml", 515, 17789, 17824), 0), 0, Tag1 ("Astlib__Ast_404", 224))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -1824)), 0, 0, 0, 0, (("astlib/ast_404.ml", 510, 17594, 17596), ("astlib/ast_404.ml", 516, 17854, 17861), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 67)), 2, 0); Tag1 (("extension_constructor_kind", 6930), (0, 0, Tag1 ([(("Pext_decl", 828), ([(Tag3 ((("constructor_arguments", 6927)), 0, (0)), 100000000, 0, -1819); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1821)], (0)), 100000000, 0, -1820)]), 0, (("astlib/ast_404.ml", 519, 17953, 17959), ("astlib/ast_404.ml", 519, 17953, 18012), 0), 0, Tag1 ("Astlib__Ast_404", 225)); (("Pext_rebind", 829), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1823)], (0)), 100000000, 0, -1822)]), 0, (("astlib/ast_404.ml", 525, 18205, 18209), ("astlib/ast_404.ml", 525, 18205, 18241), 0), 0, Tag1 ("Astlib__Ast_404", 226))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -1818)), 0, 0, 0, 0, (("astlib/ast_404.ml", 518, 17863, 17865), ("astlib/ast_404.ml", 525, 18205, 18241), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 68)), 2, 0); Tag1 (("class_type", 6931), (0, 0, [[(("pcty_desc", 830), 0, (Tag3 ((("class_type_desc", 6932)), 0, (0)), 100000000, 0, -1815), (("astlib/ast_404.ml", 536, 18429, 18436), ("astlib/ast_404.ml", 536, 18429, 18463), 0), 0, Tag1 ("Astlib__Ast_404", 227)); (("pcty_loc", 831), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1816), (("astlib/ast_404.ml", 537, 18464, 18471), ("astlib/ast_404.ml", 537, 18464, 18492), 0), 0, Tag1 ("Astlib__Ast_404", 228)); (("pcty_attributes", 832), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1817), (("astlib/ast_404.ml", 538, 18493, 18500), ("astlib/ast_404.ml", 538, 18493, 18528), 0), 0, Tag1 ("Astlib__Ast_404", 229))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -1814)), 0, 0, 0, 0, (("astlib/ast_404.ml", 534, 18363, 18365), ("astlib/ast_404.ml", 539, 18553, 18560), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 69)), 2, 0); Tag1 (("class_type_desc", 6932), (0, 0, Tag1 ([(("Pcty_constr", 833), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1806)], (0)), 100000000, 0, -1805); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1808)], (0)), 100000000, 0, -1807)]), 0, (("astlib/ast_404.ml", 542, 18630, 18634), ("astlib/ast_404.ml", 542, 18630, 18683), 0), 0, Tag1 ("Astlib__Ast_404", 230)); (("Pcty_signature", 834), ([(Tag3 ((("class_signature", 6933)), 0, (0)), 100000000, 0, -1809)]), 0, (("astlib/ast_404.ml", 545, 18733, 18737), ("astlib/ast_404.ml", 545, 18733, 18772), 0), 0, Tag1 ("Astlib__Ast_404", 231)); (("Pcty_arrow", 835), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "arg_label"), 0, (0)), 100000000, 0, -1810); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1811); (Tag3 ((("class_type", 6931)), 0, (0)), 100000000, 0, -1812)]), 0, (("astlib/ast_404.ml", 547, 18804, 18808), ("astlib/ast_404.ml", 547, 18804, 18858), 0), 0, Tag1 ("Astlib__Ast_404", 232)); (("Pcty_extension", 836), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -1813)]), 0, (("astlib/ast_404.ml", 552, 18983, 18987), ("astlib/ast_404.ml", 552, 18983, 19016), 0), 0, Tag1 ("Astlib__Ast_404", 233))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -1804)), 0, 0, 0, 0, (("astlib/ast_404.ml", 541, 18562, 18564), ("astlib/ast_404.ml", 552, 18983, 19016), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 70)), 2, 0); Tag1 (("class_signature", 6933), (0, 0, [[(("pcsig_self", 837), 0, (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1801), (("astlib/ast_404.ml", 557, 19116, 19123), ("astlib/ast_404.ml", 557, 19116, 19145), 0), 0, Tag1 ("Astlib__Ast_404", 234)); (("pcsig_fields", 838), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 6934)), 0, (0)), 100000000, 0, -1803)], (0)), 100000000, 0, -1802), (("astlib/ast_404.ml", 558, 19146, 19153), ("astlib/ast_404.ml", 558, 19146, 19189), 0), 0, Tag1 ("Astlib__Ast_404", 235))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -1800)), 0, 0, 0, 0, (("astlib/ast_404.ml", 555, 19040, 19042), ("astlib/ast_404.ml", 559, 19190, 19197), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 71)), 2, 0); Tag1 (("class_type_field", 6934), (0, 0, [[(("pctf_desc", 839), 0, (Tag3 ((("class_type_field_desc", 6935)), 0, (0)), 100000000, 0, -1797), (("astlib/ast_404.ml", 566, 19363, 19370), ("astlib/ast_404.ml", 566, 19363, 19403), 0), 0, Tag1 ("Astlib__Ast_404", 236)); (("pctf_loc", 840), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1798), (("astlib/ast_404.ml", 567, 19404, 19411), ("astlib/ast_404.ml", 567, 19404, 19432), 0), 0, Tag1 ("Astlib__Ast_404", 237)); (("pctf_attributes", 841), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1799), (("astlib/ast_404.ml", 568, 19433, 19440), ("astlib/ast_404.ml", 568, 19433, 19468), 0), 0, Tag1 ("Astlib__Ast_404", 238))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -1796)), 0, 0, 0, 0, (("astlib/ast_404.ml", 564, 19285, 19287), ("astlib/ast_404.ml", 569, 19495, 19502), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 72)), 2, 0); Tag1 (("class_type_field_desc", 6935), (0, 0, Tag1 ([(("Pctf_inherit", 842), ([(Tag3 ((("class_type", 6931)), 0, (0)), 100000000, 0, -1780)]), 0, (("astlib/ast_404.ml", 572, 19584, 19588), ("astlib/ast_404.ml", 572, 19584, 19616), 0), 0, Tag1 ("Astlib__Ast_404", 239)); (("Pctf_val", 843), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1782); (Tag3 (Tag1 ((("Asttypes", 6893)), "mutable_flag"), 0, (0)), 100000000, 0, -1783); (Tag3 (Tag1 ((("Asttypes", 6893)), "virtual_flag"), 0, (0)), 100000000, 0, -1784); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1785)]), 100000000, 0, -1781)]), 0, (("astlib/ast_404.ml", 574, 19644, 19648), ("astlib/ast_404.ml", 574, 19644, 19712), 0), 0, Tag1 ("Astlib__Ast_404", 240)); (("Pctf_method", 844), ([(Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1787); (Tag3 (Tag1 ((("Asttypes", 6893)), "private_flag"), 0, (0)), 100000000, 0, -1788); (Tag3 (Tag1 ((("Asttypes", 6893)), "virtual_flag"), 0, (0)), 100000000, 0, -1789); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1790)]), 100000000, 0, -1786)]), 0, (("astlib/ast_404.ml", 576, 19738, 19742), ("astlib/ast_404.ml", 576, 19738, 19810), 0), 0, Tag1 ("Astlib__Ast_404", 241)); (("Pctf_constraint", 845), ([(Tag2 ([(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1792); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1793)]), 100000000, 0, -1791)]), 0, (("astlib/ast_404.ml", 581, 19892, 19896), ("astlib/ast_404.ml", 581, 19892, 19941), 0), 0, Tag1 ("Astlib__Ast_404", 242)); (("Pctf_attribute", 846), ([(Tag3 ((("attribute", 6909)), 0, (0)), 100000000, 0, -1794)]), 0, (("astlib/ast_404.ml", 583, 19977, 19981), ("astlib/ast_404.ml", 583, 19977, 20010), 0), 0, Tag1 ("Astlib__Ast_404", 243)); (("Pctf_extension", 847), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -1795)]), 0, (("astlib/ast_404.ml", 585, 20035, 20039), ("astlib/ast_404.ml", 585, 20035, 20068), 0), 0, Tag1 ("Astlib__Ast_404", 244))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -1779)), 0, 0, 0, 0, (("astlib/ast_404.ml", 571, 19504, 19506), ("astlib/ast_404.ml", 585, 20035, 20068), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 73)), 2, 0); Tag1 (("class_infos", 6936), ([((("a")), 100000000, 0, -1769)], 1, [[(("pci_virt", 848), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "virtual_flag"), 0, (0)), 100000000, 0, -1770), (("astlib/ast_404.ml", 590, 20167, 20174), ("astlib/ast_404.ml", 590, 20167, 20197), 0), 0, Tag1 ("Astlib__Ast_404", 245)); (("pci_params", 849), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1773); (Tag3 (Tag1 ((("Asttypes", 6893)), "variance"), 0, (0)), 100000000, 0, -1774)]), 100000000, 0, -1772)], (0)), 100000000, 0, -1771), (("astlib/ast_404.ml", 591, 20198, 20205), ("astlib/ast_404.ml", 591, 20198, 20245), 0), 0, Tag1 ("Astlib__Ast_404", 246)); (("pci_name", 850), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1776)], (0)), 100000000, 0, -1775), (("astlib/ast_404.ml", 592, 20246, 20253), ("astlib/ast_404.ml", 592, 20246, 20274), 0), 0, Tag1 ("Astlib__Ast_404", 247)); (("pci_expr", 851), 0, ((("a")), 100000000, 0, -1769), (("astlib/ast_404.ml", 593, 20275, 20282), ("astlib/ast_404.ml", 593, 20275, 20295), 0), 0, Tag1 ("Astlib__Ast_404", 248)); (("pci_loc", 852), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1777), (("astlib/ast_404.ml", 594, 20296, 20303), ("astlib/ast_404.ml", 594, 20296, 20323), 0), 0, Tag1 ("Astlib__Ast_404", 249)); (("pci_attributes", 853), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1778), (("astlib/ast_404.ml", 595, 20324, 20331), ("astlib/ast_404.ml", 595, 20324, 20358), 0), 0, Tag1 ("Astlib__Ast_404", 250))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -1769)], (0)), 100000000, 0, -1768)), [25], [0], 0, 0, (("astlib/ast_404.ml", 588, 20093, 20095), ("astlib/ast_404.ml", 596, 20386, 20393), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 74)), 2, 0); Tag1 (("class_description", 6937), (0, 0, 0, 1, ((Tag3 ((("class_infos", 6936)), [(Tag3 ((("class_type", 6931)), 0, (0)), 100000000, 0, -1767)], (0)), 100000000, 0, -1766)), 0, 0, 0, 0, (("astlib/ast_404.ml", 604, 20525, 20527), ("astlib/ast_404.ml", 604, 20525, 20573), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 75)), 2, 0); Tag1 (("class_type_declaration", 6938), (0, 0, 0, 1, ((Tag3 ((("class_infos", 6936)), [(Tag3 ((("class_type", 6931)), 0, (0)), 100000000, 0, -1765)], (0)), 100000000, 0, -1764)), 0, 0, 0, 0, (("astlib/ast_404.ml", 606, 20575, 20577), ("astlib/ast_404.ml", 606, 20575, 20628), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 76)), 2, 0); Tag1 (("class_expr", 6939), (0, 0, [[(("pcl_desc", 854), 0, (Tag3 ((("class_expr_desc", 6940)), 0, (0)), 100000000, 0, -1761), (("astlib/ast_404.ml", 612, 20746, 20753), ("astlib/ast_404.ml", 612, 20746, 20779), 0), 0, Tag1 ("Astlib__Ast_404", 251)); (("pcl_loc", 855), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1762), (("astlib/ast_404.ml", 613, 20780, 20787), ("astlib/ast_404.ml", 613, 20780, 20807), 0), 0, Tag1 ("Astlib__Ast_404", 252)); (("pcl_attributes", 856), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1763), (("astlib/ast_404.ml", 614, 20808, 20815), ("astlib/ast_404.ml", 614, 20808, 20842), 0), 0, Tag1 ("Astlib__Ast_404", 253))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -1760)), 0, 0, 0, 0, (("astlib/ast_404.ml", 610, 20680, 20682), ("astlib/ast_404.ml", 615, 20867, 20874), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 77)), 2, 0); Tag1 (("class_expr_desc", 6940), (0, 0, Tag1 ([(("Pcl_constr", 857), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1739)], (0)), 100000000, 0, -1738); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1741)], (0)), 100000000, 0, -1740)]), 0, (("astlib/ast_404.ml", 618, 20944, 20948), ("astlib/ast_404.ml", 618, 20944, 20996), 0), 0, Tag1 ("Astlib__Ast_404", 254)); (("Pcl_structure", 858), ([(Tag3 ((("class_structure", 6941)), 0, (0)), 100000000, 0, -1742)]), 0, (("astlib/ast_404.ml", 621, 21046, 21050), ("astlib/ast_404.ml", 621, 21046, 21084), 0), 0, Tag1 ("Astlib__Ast_404", 255)); (("Pcl_fun", 859), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "arg_label"), 0, (0)), 100000000, 0, -1743); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1745)], (0)), 100000000, 0, -1744); (Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -1746); (Tag3 ((("class_expr", 6939)), 0, (0)), 100000000, 0, -1747)]), 0, (("astlib/ast_404.ml", 623, 21116, 21120), ("astlib/ast_404.ml", 623, 21116, 21185), 0), 0, Tag1 ("Astlib__Ast_404", 256)); (("Pcl_apply", 860), ([(Tag3 ((("class_expr", 6939)), 0, (0)), 100000000, 0, -1748); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "arg_label"), 0, (0)), 100000000, 0, -1751); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1752)]), 100000000, 0, -1750)], (0)), 100000000, 0, -1749)]), 0, (("astlib/ast_404.ml", 629, 21475, 21479), ("astlib/ast_404.ml", 629, 21475, 21536), 0), 0, Tag1 ("Astlib__Ast_404", 257)); (("Pcl_let", 861), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "rec_flag"), 0, (0)), 100000000, 0, -1753); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 6963)), 0, (0)), 100000000, 0, -1755)], (0)), 100000000, 0, -1754); (Tag3 ((("class_expr", 6939)), 0, (0)), 100000000, 0, -1756)]), 0, (("astlib/ast_404.ml", 636, 21720, 21724), ("astlib/ast_404.ml", 636, 21720, 21779), 0), 0, Tag1 ("Astlib__Ast_404", 258)); (("Pcl_constraint", 862), ([(Tag3 ((("class_expr", 6939)), 0, (0)), 100000000, 0, -1757); (Tag3 ((("class_type", 6931)), 0, (0)), 100000000, 0, -1758)]), 0, (("astlib/ast_404.ml", 640, 21947, 21951), ("astlib/ast_404.ml", 640, 21947, 21994), 0), 0, Tag1 ("Astlib__Ast_404", 259)); (("Pcl_extension", 863), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -1759)]), 0, (("astlib/ast_404.ml", 642, 22021, 22025), ("astlib/ast_404.ml", 642, 22021, 22053), 0), 0, Tag1 ("Astlib__Ast_404", 260))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -1737)), 0, 0, 0, 0, (("astlib/ast_404.ml", 617, 20876, 20878), ("astlib/ast_404.ml", 642, 22021, 22053), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 78)), 2, 0); Tag1 (("class_structure", 6941), (0, 0, [[(("pcstr_self", 864), 0, (Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -1734), (("astlib/ast_404.ml", 647, 22153, 22160), ("astlib/ast_404.ml", 647, 22153, 22180), 0), 0, Tag1 ("Astlib__Ast_404", 261)); (("pcstr_fields", 865), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 6942)), 0, (0)), 100000000, 0, -1736)], (0)), 100000000, 0, -1735), (("astlib/ast_404.ml", 648, 22181, 22188), ("astlib/ast_404.ml", 648, 22181, 22219), 0), 0, Tag1 ("Astlib__Ast_404", 262))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -1733)), 0, 0, 0, 0, (("astlib/ast_404.ml", 645, 22077, 22079), ("astlib/ast_404.ml", 649, 22220, 22227), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 79)), 2, 0); Tag1 (("class_field", 6942), (0, 0, [[(("pcf_desc", 866), 0, (Tag3 ((("class_field_desc", 6943)), 0, (0)), 100000000, 0, -1730), (("astlib/ast_404.ml", 656, 22380, 22387), ("astlib/ast_404.ml", 656, 22380, 22414), 0), 0, Tag1 ("Astlib__Ast_404", 263)); (("pcf_loc", 867), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1731), (("astlib/ast_404.ml", 657, 22415, 22422), ("astlib/ast_404.ml", 657, 22415, 22442), 0), 0, Tag1 ("Astlib__Ast_404", 264)); (("pcf_attributes", 868), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1732), (("astlib/ast_404.ml", 658, 22443, 22450), ("astlib/ast_404.ml", 658, 22443, 22477), 0), 0, Tag1 ("Astlib__Ast_404", 265))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -1729)), 0, 0, 0, 0, (("astlib/ast_404.ml", 654, 22312, 22314), ("astlib/ast_404.ml", 659, 22504, 22511), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 80)), 2, 0); Tag1 (("class_field_desc", 6943), (0, 0, Tag1 ([(("Pcf_inherit", 869), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "override_flag"), 0, (0)), 100000000, 0, -1709); (Tag3 ((("class_expr", 6939)), 0, (0)), 100000000, 0, -1710); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1712)], (0)), 100000000, 0, -1711)]), 0, (("astlib/ast_404.ml", 662, 22583, 22587), ("astlib/ast_404.ml", 662, 22583, 22646), 0), 0, Tag1 ("Astlib__Ast_404", 266)); (("Pcf_val", 870), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1715)], (0)), 100000000, 0, -1714); (Tag3 (Tag1 ((("Asttypes", 6893)), "mutable_flag"), 0, (0)), 100000000, 0, -1716); (Tag3 ((("class_field_kind", 6944)), 0, (0)), 100000000, 0, -1717)]), 100000000, 0, -1713)]), 0, (("astlib/ast_404.ml", 668, 22769, 22773), ("astlib/ast_404.ml", 668, 22769, 22832), 0), 0, Tag1 ("Astlib__Ast_404", 267)); (("Pcf_method", 871), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1720)], (0)), 100000000, 0, -1719); (Tag3 (Tag1 ((("Asttypes", 6893)), "private_flag"), 0, (0)), 100000000, 0, -1721); (Tag3 ((("class_field_kind", 6944)), 0, (0)), 100000000, 0, -1722)]), 100000000, 0, -1718)]), 0, (("astlib/ast_404.ml", 672, 22900, 22904), ("astlib/ast_404.ml", 672, 22900, 22966), 0), 0, Tag1 ("Astlib__Ast_404", 268)); (("Pcf_constraint", 872), ([(Tag2 ([(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1724); (Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1725)]), 100000000, 0, -1723)]), 0, (("astlib/ast_404.ml", 676, 23101, 23105), ("astlib/ast_404.ml", 676, 23101, 23148), 0), 0, Tag1 ("Astlib__Ast_404", 269)); (("Pcf_initializer", 873), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1726)]), 0, (("astlib/ast_404.ml", 678, 23184, 23188), ("astlib/ast_404.ml", 678, 23184, 23219), 0), 0, Tag1 ("Astlib__Ast_404", 270)); (("Pcf_attribute", 874), ([(Tag3 ((("attribute", 6909)), 0, (0)), 100000000, 0, -1727)]), 0, (("astlib/ast_404.ml", 680, 23250, 23254), ("astlib/ast_404.ml", 680, 23250, 23282), 0), 0, Tag1 ("Astlib__Ast_404", 271)); (("Pcf_extension", 875), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -1728)]), 0, (("astlib/ast_404.ml", 682, 23307, 23311), ("astlib/ast_404.ml", 682, 23307, 23339), 0), 0, Tag1 ("Astlib__Ast_404", 272))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -1708)), 0, 0, 0, 0, (("astlib/ast_404.ml", 661, 22513, 22515), ("astlib/ast_404.ml", 682, 23307, 23339), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 81)), 2, 0); Tag1 (("class_field_kind", 6944), (0, 0, Tag1 ([(("Cfk_virtual", 876), ([(Tag3 ((("core_type", 6913)), 0, (0)), 100000000, 0, -1705)]), 0, (("astlib/ast_404.ml", 686, 23434, 23438), ("astlib/ast_404.ml", 686, 23434, 23464), 0), 0, Tag1 ("Astlib__Ast_404", 273)); (("Cfk_concrete", 877), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "override_flag"), 0, (0)), 100000000, 0, -1706); (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1707)]), 0, (("astlib/ast_404.ml", 687, 23465, 23469), ("astlib/ast_404.ml", 687, 23465, 23513), 0), 0, Tag1 ("Astlib__Ast_404", 274))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -1704)), 0, 0, 0, 0, (("astlib/ast_404.ml", 685, 23364, 23366), ("astlib/ast_404.ml", 687, 23465, 23513), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 82)), 2, 0); Tag1 (("class_declaration", 6945), (0, 0, 0, 1, ((Tag3 ((("class_infos", 6936)), [(Tag3 ((("class_expr", 6939)), 0, (0)), 100000000, 0, -1703)], (0)), 100000000, 0, -1702)), 0, 0, 0, 0, (("astlib/ast_404.ml", 689, 23515, 23517), ("astlib/ast_404.ml", 689, 23515, 23563), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 83)), 2, 0); Tag1 (("module_type", 6946), (0, 0, [[(("pmty_desc", 878), 0, (Tag3 ((("module_type_desc", 6947)), 0, (0)), 100000000, 0, -1699), (("astlib/ast_404.ml", 697, 23713, 23720), ("astlib/ast_404.ml", 697, 23713, 23748), 0), 0, Tag1 ("Astlib__Ast_404", 275)); (("pmty_loc", 879), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1700), (("astlib/ast_404.ml", 698, 23749, 23756), ("astlib/ast_404.ml", 698, 23749, 23777), 0), 0, Tag1 ("Astlib__Ast_404", 276)); (("pmty_attributes", 880), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1701), (("astlib/ast_404.ml", 699, 23778, 23785), ("astlib/ast_404.ml", 699, 23778, 23813), 0), 0, Tag1 ("Astlib__Ast_404", 277))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -1698)), 0, 0, 0, 0, (("astlib/ast_404.ml", 695, 23645, 23647), ("astlib/ast_404.ml", 700, 23838, 23845), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 84)), 2, 0); Tag1 (("module_type_desc", 6947), (0, 0, Tag1 ([(("Pmty_ident", 881), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1684)], (0)), 100000000, 0, -1683)]), 0, (("astlib/ast_404.ml", 703, 23917, 23921), ("astlib/ast_404.ml", 703, 23917, 23952), 0), 0, Tag1 ("Astlib__Ast_404", 278)); (("Pmty_signature", 882), ([(Tag3 ((("signature", 6948)), 0, (0)), 100000000, 0, -1685)]), 0, (("astlib/ast_404.ml", 705, 23971, 23975), ("astlib/ast_404.ml", 705, 23971, 24004), 0), 0, Tag1 ("Astlib__Ast_404", 279)); (("Pmty_functor", 883), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1687)], (0)), 100000000, 0, -1686); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 6946)), 0, (0)), 100000000, 0, -1689)], (0)), 100000000, 0, -1688); (Tag3 ((("module_type", 6946)), 0, (0)), 100000000, 0, -1690)]), 0, (("astlib/ast_404.ml", 707, 24033, 24037), ("astlib/ast_404.ml", 707, 24033, 24100), 0), 0, Tag1 ("Astlib__Ast_404", 280)); (("Pmty_with", 884), ([(Tag3 ((("module_type", 6946)), 0, (0)), 100000000, 0, -1691); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 6957)), 0, (0)), 100000000, 0, -1693)], (0)), 100000000, 0, -1692)]), 0, (("astlib/ast_404.ml", 709, 24141, 24145), ("astlib/ast_404.ml", 709, 24141, 24194), 0), 0, Tag1 ("Astlib__Ast_404", 281)); (("Pmty_typeof", 885), ([(Tag3 ((("module_expr", 6958)), 0, (0)), 100000000, 0, -1694)]), 0, (("astlib/ast_404.ml", 711, 24223, 24227), ("astlib/ast_404.ml", 711, 24223, 24255), 0), 0, Tag1 ("Astlib__Ast_404", 282)); (("Pmty_extension", 886), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -1695)]), 0, (("astlib/ast_404.ml", 713, 24290, 24294), ("astlib/ast_404.ml", 713, 24290, 24323), 0), 0, Tag1 ("Astlib__Ast_404", 283)); (("Pmty_alias", 887), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1697)], (0)), 100000000, 0, -1696)]), 0, (("astlib/ast_404.ml", 715, 24346, 24350), ("astlib/ast_404.ml", 715, 24346, 24381), 0), 0, Tag1 ("Astlib__Ast_404", 284))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -1682)), 0, 0, 0, 0, (("astlib/ast_404.ml", 702, 23847, 23849), ("astlib/ast_404.ml", 715, 24346, 24381), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 85)), 2, 0); Tag1 (("signature", 6948), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 6949)), 0, (0)), 100000000, 0, -1681)], (0)), 100000000, 0, -1680)), 0, 0, 0, 0, (("astlib/ast_404.ml", 718, 24410, 24412), ("astlib/ast_404.ml", 718, 24410, 24447), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 86)), 2, 0); Tag1 (("signature_item", 6949), (0, 0, [[(("psig_desc", 888), 0, (Tag3 ((("signature_item_desc", 6950)), 0, (0)), 100000000, 0, -1678), (("astlib/ast_404.ml", 722, 24523, 24530), ("astlib/ast_404.ml", 722, 24523, 24561), 0), 0, Tag1 ("Astlib__Ast_404", 285)); (("psig_loc", 889), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1679), (("astlib/ast_404.ml", 723, 24562, 24569), ("astlib/ast_404.ml", 723, 24562, 24590), 0), 0, Tag1 ("Astlib__Ast_404", 286))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -1677)), 0, 0, 0, 0, (("astlib/ast_404.ml", 720, 24449, 24451), ("astlib/ast_404.ml", 724, 24591, 24598), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 87)), 2, 0); Tag1 (("signature_item_desc", 6950), (0, 0, Tag1 ([(("Psig_value", 890), ([(Tag3 ((("value_description", 6922)), 0, (0)), 100000000, 0, -1658)]), 0, (("astlib/ast_404.ml", 727, 24676, 24680), ("astlib/ast_404.ml", 727, 24676, 24713), 0), 0, Tag1 ("Astlib__Ast_404", 287)); (("Psig_type", 891), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "rec_flag"), 0, (0)), 100000000, 0, -1659); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 6923)), 0, (0)), 100000000, 0, -1661)], (0)), 100000000, 0, -1660)]), 0, (("astlib/ast_404.ml", 732, 24804, 24808), ("astlib/ast_404.ml", 732, 24804, 24855), 0), 0, Tag1 ("Astlib__Ast_404", 288)); (("Psig_typext", 892), ([(Tag3 ((("type_extension", 6928)), 0, (0)), 100000000, 0, -1662)]), 0, (("astlib/ast_404.ml", 734, 24907, 24911), ("astlib/ast_404.ml", 734, 24907, 24942), 0), 0, Tag1 ("Astlib__Ast_404", 289)); (("Psig_exception", 893), ([(Tag3 ((("extension_constructor", 6929)), 0, (0)), 100000000, 0, -1663)]), 0, (("astlib/ast_404.ml", 736, 24974, 24978), ("astlib/ast_404.ml", 736, 24974, 25019), 0), 0, Tag1 ("Astlib__Ast_404", 290)); (("Psig_module", 894), ([(Tag3 ((("module_declaration", 6951)), 0, (0)), 100000000, 0, -1664)]), 0, (("astlib/ast_404.ml", 738, 25053, 25057), ("astlib/ast_404.ml", 738, 25053, 25092), 0), 0, Tag1 ("Astlib__Ast_404", 291)); (("Psig_recmodule", 895), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 6951)), 0, (0)), 100000000, 0, -1666)], (0)), 100000000, 0, -1665)]), 0, (("astlib/ast_404.ml", 740, 25123, 25127), ("astlib/ast_404.ml", 740, 25123, 25170), 0), 0, Tag1 ("Astlib__Ast_404", 292)); (("Psig_modtype", 896), ([(Tag3 ((("module_type_declaration", 6952)), 0, (0)), 100000000, 0, -1667)]), 0, (("astlib/ast_404.ml", 742, 25228, 25232), ("astlib/ast_404.ml", 742, 25228, 25273), 0), 0, Tag1 ("Astlib__Ast_404", 293)); (("Psig_open", 897), ([(Tag3 ((("open_description", 6953)), 0, (0)), 100000000, 0, -1668)]), 0, (("astlib/ast_404.ml", 745, 25336, 25340), ("astlib/ast_404.ml", 745, 25336, 25371), 0), 0, Tag1 ("Astlib__Ast_404", 294)); (("Psig_include", 898), ([(Tag3 ((("include_description", 6955)), 0, (0)), 100000000, 0, -1669)]), 0, (("astlib/ast_404.ml", 747, 25395, 25399), ("astlib/ast_404.ml", 747, 25395, 25436), 0), 0, Tag1 ("Astlib__Ast_404", 295)); (("Psig_class", 899), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 6937)), 0, (0)), 100000000, 0, -1671)], (0)), 100000000, 0, -1670)]), 0, (("astlib/ast_404.ml", 749, 25464, 25468), ("astlib/ast_404.ml", 749, 25464, 25506), 0), 0, Tag1 ("Astlib__Ast_404", 296)); (("Psig_class_type", 900), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 6938)), 0, (0)), 100000000, 0, -1673)], (0)), 100000000, 0, -1672)]), 0, (("astlib/ast_404.ml", 751, 25559, 25563), ("astlib/ast_404.ml", 751, 25559, 25611), 0), 0, Tag1 ("Astlib__Ast_404", 297)); (("Psig_attribute", 901), ([(Tag3 ((("attribute", 6909)), 0, (0)), 100000000, 0, -1674)]), 0, (("astlib/ast_404.ml", 753, 25671, 25675), ("astlib/ast_404.ml", 753, 25671, 25704), 0), 0, Tag1 ("Astlib__Ast_404", 298)); (("Psig_extension", 902), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -1675); (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1676)]), 0, (("astlib/ast_404.ml", 755, 25729, 25733), ("astlib/ast_404.ml", 755, 25729, 25775), 0), 0, Tag1 ("Astlib__Ast_404", 299))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -1657)), 0, 0, 0, 0, (("astlib/ast_404.ml", 726, 24600, 24602), ("astlib/ast_404.ml", 755, 25729, 25775), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 88)), 2, 0); Tag1 (("module_declaration", 6951), (0, 0, [[(("pmd_name", 903), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1653)], (0)), 100000000, 0, -1652), (("astlib/ast_404.ml", 760, 25882, 25889), ("astlib/ast_404.ml", 760, 25882, 25910), 0), 0, Tag1 ("Astlib__Ast_404", 300)); (("pmd_type", 904), 0, (Tag3 ((("module_type", 6946)), 0, (0)), 100000000, 0, -1654), (("astlib/ast_404.ml", 761, 25911, 25918), ("astlib/ast_404.ml", 761, 25911, 25940), 0), 0, Tag1 ("Astlib__Ast_404", 301)); (("pmd_attributes", 905), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1655), (("astlib/ast_404.ml", 762, 25941, 25948), ("astlib/ast_404.ml", 762, 25941, 25975), 0), 0, Tag1 ("Astlib__Ast_404", 302)); (("pmd_loc", 906), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1656), (("astlib/ast_404.ml", 763, 26002, 26009), ("astlib/ast_404.ml", 763, 26002, 26029), 0), 0, Tag1 ("Astlib__Ast_404", 303))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -1651)), 0, 0, 0, 0, (("astlib/ast_404.ml", 758, 25800, 25802), ("astlib/ast_404.ml", 764, 26030, 26037), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 89)), 2, 0); Tag1 (("module_type_declaration", 6952), (0, 0, [[(("pmtd_name", 907), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1646)], (0)), 100000000, 0, -1645), (("astlib/ast_404.ml", 769, 26146, 26153), ("astlib/ast_404.ml", 769, 26146, 26175), 0), 0, Tag1 ("Astlib__Ast_404", 304)); (("pmtd_type", 908), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 6946)), 0, (0)), 100000000, 0, -1648)], (0)), 100000000, 0, -1647), (("astlib/ast_404.ml", 770, 26176, 26183), ("astlib/ast_404.ml", 770, 26176, 26213), 0), 0, Tag1 ("Astlib__Ast_404", 305)); (("pmtd_attributes", 909), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1649), (("astlib/ast_404.ml", 771, 26214, 26221), ("astlib/ast_404.ml", 771, 26214, 26249), 0), 0, Tag1 ("Astlib__Ast_404", 306)); (("pmtd_loc", 910), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1650), (("astlib/ast_404.ml", 772, 26276, 26283), ("astlib/ast_404.ml", 772, 26276, 26304), 0), 0, Tag1 ("Astlib__Ast_404", 307))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -1644)), 0, 0, 0, 0, (("astlib/ast_404.ml", 767, 26054, 26056), ("astlib/ast_404.ml", 773, 26305, 26312), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 90)), 2, 0); Tag1 (("open_description", 6953), (0, 0, [[(("popen_lid", 911), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1640)], (0)), 100000000, 0, -1639), (("astlib/ast_404.ml", 780, 26475, 26482), ("astlib/ast_404.ml", 780, 26475, 26509), 0), 0, Tag1 ("Astlib__Ast_404", 308)); (("popen_override", 912), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "override_flag"), 0, (0)), 100000000, 0, -1641), (("astlib/ast_404.ml", 781, 26510, 26517), ("astlib/ast_404.ml", 781, 26510, 26547), 0), 0, Tag1 ("Astlib__Ast_404", 309)); (("popen_loc", 913), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1642), (("astlib/ast_404.ml", 782, 26548, 26555), ("astlib/ast_404.ml", 782, 26548, 26577), 0), 0, Tag1 ("Astlib__Ast_404", 310)); (("popen_attributes", 914), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1643), (("astlib/ast_404.ml", 783, 26578, 26585), ("astlib/ast_404.ml", 783, 26578, 26614), 0), 0, Tag1 ("Astlib__Ast_404", 311))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "open_description"), 0, (0)), 100000000, 0, -1638)), 0, 0, 0, 0, (("astlib/ast_404.ml", 778, 26397, 26399), ("astlib/ast_404.ml", 784, 26615, 26622), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 91)), 2, 0); Tag1 (("include_infos", 6954), ([((("a")), 100000000, 0, -1635)], 1, [[(("pincl_mod", 915), 0, ((("a")), 100000000, 0, -1635), (("astlib/ast_404.ml", 792, 26870, 26877), ("astlib/ast_404.ml", 792, 26870, 26891), 0), 0, Tag1 ("Astlib__Ast_404", 312)); (("pincl_loc", 916), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1636), (("astlib/ast_404.ml", 793, 26892, 26899), ("astlib/ast_404.ml", 793, 26892, 26921), 0), 0, Tag1 ("Astlib__Ast_404", 313)); (("pincl_attributes", 917), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1637), (("astlib/ast_404.ml", 794, 26922, 26929), ("astlib/ast_404.ml", 794, 26922, 26958), 0), 0, Tag1 ("Astlib__Ast_404", 314))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -1635)], (0)), 100000000, 0, -1634)), [25], [0], 0, 0, (("astlib/ast_404.ml", 790, 26792, 26794), ("astlib/ast_404.ml", 795, 26959, 26966), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 92)), 2, 0); Tag1 (("include_description", 6955), (0, 0, 0, 1, ((Tag3 ((("include_infos", 6954)), [(Tag3 ((("module_type", 6946)), 0, (0)), 100000000, 0, -1633)], (0)), 100000000, 0, -1632)), 0, 0, 0, 0, (("astlib/ast_404.ml", 797, 26968, 26970), ("astlib/ast_404.ml", 797, 26968, 27021), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 93)), 2, 0); Tag1 (("include_declaration", 6956), (0, 0, 0, 1, ((Tag3 ((("include_infos", 6954)), [(Tag3 ((("module_expr", 6958)), 0, (0)), 100000000, 0, -1631)], (0)), 100000000, 0, -1630)), 0, 0, 0, 0, (("astlib/ast_404.ml", 800, 27042, 27044), ("astlib/ast_404.ml", 800, 27042, 27095), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 94)), 2, 0); Tag1 (("with_constraint", 6957), (0, 0, Tag1 ([(("Pwith_type", 918), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1619)], (0)), 100000000, 0, -1618); (Tag3 ((("type_declaration", 6923)), 0, (0)), 100000000, 0, -1620)]), 0, (("astlib/ast_404.ml", 804, 27184, 27188), ("astlib/ast_404.ml", 804, 27184, 27238), 0), 0, Tag1 ("Astlib__Ast_404", 315)); (("Pwith_module", 919), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1622)], (0)), 100000000, 0, -1621); (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1624)], (0)), 100000000, 0, -1623)]), 0, (("astlib/ast_404.ml", 809, 27389, 27393), ("astlib/ast_404.ml", 809, 27389, 27444), 0), 0, Tag1 ("Astlib__Ast_404", 316)); (("Pwith_typesubst", 920), ([(Tag3 ((("type_declaration", 6923)), 0, (0)), 100000000, 0, -1625)]), 0, (("astlib/ast_404.ml", 811, 27481, 27485), ("astlib/ast_404.ml", 811, 27481, 27522), 0), 0, Tag1 ("Astlib__Ast_404", 317)); (("Pwith_modsubst", 921), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1627)], (0)), 100000000, 0, -1626); (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1629)], (0)), 100000000, 0, -1628)]), 0, (("astlib/ast_404.ml", 813, 27558, 27562), ("astlib/ast_404.ml", 813, 27558, 27610), 0), 0, Tag1 ("Astlib__Ast_404", 318))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -1617)), 0, 0, 0, 0, (("astlib/ast_404.ml", 803, 27116, 27118), ("astlib/ast_404.ml", 813, 27558, 27610), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 95)), 2, 0); Tag1 (("module_expr", 6958), (0, 0, [[(("pmod_desc", 922), 0, (Tag3 ((("module_expr_desc", 6959)), 0, (0)), 100000000, 0, -1614), (("astlib/ast_404.ml", 820, 27766, 27773), ("astlib/ast_404.ml", 820, 27766, 27801), 0), 0, Tag1 ("Astlib__Ast_404", 319)); (("pmod_loc", 923), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1615), (("astlib/ast_404.ml", 821, 27802, 27809), ("astlib/ast_404.ml", 821, 27802, 27830), 0), 0, Tag1 ("Astlib__Ast_404", 320)); (("pmod_attributes", 924), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1616), (("astlib/ast_404.ml", 822, 27831, 27838), ("astlib/ast_404.ml", 822, 27831, 27866), 0), 0, Tag1 ("Astlib__Ast_404", 321))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -1613)), 0, 0, 0, 0, (("astlib/ast_404.ml", 818, 27698, 27700), ("astlib/ast_404.ml", 823, 27891, 27898), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 96)), 2, 0); Tag1 (("module_expr_desc", 6959), (0, 0, Tag1 ([(("Pmod_ident", 925), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1600)], (0)), 100000000, 0, -1599)]), 0, (("astlib/ast_404.ml", 826, 27970, 27974), ("astlib/ast_404.ml", 826, 27970, 28005), 0), 0, Tag1 ("Astlib__Ast_404", 322)); (("Pmod_structure", 926), ([(Tag3 ((("structure", 6960)), 0, (0)), 100000000, 0, -1601)]), 0, (("astlib/ast_404.ml", 828, 28024, 28028), ("astlib/ast_404.ml", 828, 28024, 28057), 0), 0, Tag1 ("Astlib__Ast_404", 323)); (("Pmod_functor", 927), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1603)], (0)), 100000000, 0, -1602); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 6946)), 0, (0)), 100000000, 0, -1605)], (0)), 100000000, 0, -1604); (Tag3 ((("module_expr", 6958)), 0, (0)), 100000000, 0, -1606)]), 0, (("astlib/ast_404.ml", 830, 28089, 28093), ("astlib/ast_404.ml", 830, 28089, 28156), 0), 0, Tag1 ("Astlib__Ast_404", 324)); (("Pmod_apply", 928), ([(Tag3 ((("module_expr", 6958)), 0, (0)), 100000000, 0, -1607); (Tag3 ((("module_expr", 6958)), 0, (0)), 100000000, 0, -1608)]), 0, (("astlib/ast_404.ml", 832, 28196, 28200), ("astlib/ast_404.ml", 832, 28196, 28241), 0), 0, Tag1 ("Astlib__Ast_404", 325)); (("Pmod_constraint", 929), ([(Tag3 ((("module_expr", 6958)), 0, (0)), 100000000, 0, -1609); (Tag3 ((("module_type", 6946)), 0, (0)), 100000000, 0, -1610)]), 0, (("astlib/ast_404.ml", 834, 28267, 28271), ("astlib/ast_404.ml", 834, 28267, 28317), 0), 0, Tag1 ("Astlib__Ast_404", 326)); (("Pmod_unpack", 930), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1611)]), 0, (("astlib/ast_404.ml", 836, 28344, 28348), ("astlib/ast_404.ml", 836, 28344, 28375), 0), 0, Tag1 ("Astlib__Ast_404", 327)); (("Pmod_extension", 931), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -1612)]), 0, (("astlib/ast_404.ml", 838, 28400, 28404), ("astlib/ast_404.ml", 838, 28400, 28433), 0), 0, Tag1 ("Astlib__Ast_404", 328))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -1598)), 0, 0, 0, 0, (("astlib/ast_404.ml", 825, 27900, 27902), ("astlib/ast_404.ml", 838, 28400, 28433), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 97)), 2, 0); Tag1 (("structure", 6960), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 6961)), 0, (0)), 100000000, 0, -1597)], (0)), 100000000, 0, -1596)), 0, 0, 0, 0, (("astlib/ast_404.ml", 841, 28457, 28459), ("astlib/ast_404.ml", 841, 28457, 28494), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 98)), 2, 0); Tag1 (("structure_item", 6961), (0, 0, [[(("pstr_desc", 932), 0, (Tag3 ((("structure_item_desc", 6962)), 0, (0)), 100000000, 0, -1594), (("astlib/ast_404.ml", 845, 28570, 28577), ("astlib/ast_404.ml", 845, 28570, 28608), 0), 0, Tag1 ("Astlib__Ast_404", 329)); (("pstr_loc", 933), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1595), (("astlib/ast_404.ml", 846, 28609, 28616), ("astlib/ast_404.ml", 846, 28609, 28637), 0), 0, Tag1 ("Astlib__Ast_404", 330))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -1593)), 0, 0, 0, 0, (("astlib/ast_404.ml", 843, 28496, 28498), ("astlib/ast_404.ml", 847, 28638, 28645), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 99)), 2, 0); Tag1 (("structure_item_desc", 6962), (0, 0, Tag1 ([(("Pstr_eval", 934), ([(Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1569); (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1570)]), 0, (("astlib/ast_404.ml", 850, 28723, 28727), ("astlib/ast_404.ml", 850, 28723, 28765), 0), 0, Tag1 ("Astlib__Ast_404", 331)); (("Pstr_value", 935), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "rec_flag"), 0, (0)), 100000000, 0, -1571); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 6963)), 0, (0)), 100000000, 0, -1573)], (0)), 100000000, 0, -1572)]), 0, (("astlib/ast_404.ml", 852, 28784, 28788), ("astlib/ast_404.ml", 852, 28784, 28833), 0), 0, Tag1 ("Astlib__Ast_404", 332)); (("Pstr_primitive", 936), ([(Tag3 ((("value_description", 6922)), 0, (0)), 100000000, 0, -1574)]), 0, (("astlib/ast_404.ml", 856, 28991, 28995), ("astlib/ast_404.ml", 856, 28991, 29032), 0), 0, Tag1 ("Astlib__Ast_404", 333)); (("Pstr_type", 937), ([(Tag3 (Tag1 ((("Asttypes", 6893)), "rec_flag"), 0, (0)), 100000000, 0, -1575); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 6923)), 0, (0)), 100000000, 0, -1577)], (0)), 100000000, 0, -1576)]), 0, (("astlib/ast_404.ml", 859, 29103, 29107), ("astlib/ast_404.ml", 859, 29103, 29154), 0), 0, Tag1 ("Astlib__Ast_404", 334)); (("Pstr_typext", 938), ([(Tag3 ((("type_extension", 6928)), 0, (0)), 100000000, 0, -1578)]), 0, (("astlib/ast_404.ml", 861, 29206, 29210), ("astlib/ast_404.ml", 861, 29206, 29241), 0), 0, Tag1 ("Astlib__Ast_404", 335)); (("Pstr_exception", 939), ([(Tag3 ((("extension_constructor", 6929)), 0, (0)), 100000000, 0, -1579)]), 0, (("astlib/ast_404.ml", 863, 29273, 29277), ("astlib/ast_404.ml", 863, 29273, 29318), 0), 0, Tag1 ("Astlib__Ast_404", 336)); (("Pstr_module", 940), ([(Tag3 ((("module_binding", 6964)), 0, (0)), 100000000, 0, -1580)]), 0, (("astlib/ast_404.ml", 866, 29383, 29387), ("astlib/ast_404.ml", 866, 29383, 29418), 0), 0, Tag1 ("Astlib__Ast_404", 337)); (("Pstr_recmodule", 941), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 6964)), 0, (0)), 100000000, 0, -1582)], (0)), 100000000, 0, -1581)]), 0, (("astlib/ast_404.ml", 868, 29449, 29453), ("astlib/ast_404.ml", 868, 29449, 29492), 0), 0, Tag1 ("Astlib__Ast_404", 338)); (("Pstr_modtype", 942), ([(Tag3 ((("module_type_declaration", 6952)), 0, (0)), 100000000, 0, -1583)]), 0, (("astlib/ast_404.ml", 870, 29550, 29554), ("astlib/ast_404.ml", 870, 29550, 29595), 0), 0, Tag1 ("Astlib__Ast_404", 339)); (("Pstr_open", 943), ([(Tag3 ((("open_description", 6953)), 0, (0)), 100000000, 0, -1584)]), 0, (("astlib/ast_404.ml", 872, 29631, 29635), ("astlib/ast_404.ml", 872, 29631, 29666), 0), 0, Tag1 ("Astlib__Ast_404", 340)); (("Pstr_class", 944), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 6945)), 0, (0)), 100000000, 0, -1586)], (0)), 100000000, 0, -1585)]), 0, (("astlib/ast_404.ml", 874, 29690, 29694), ("astlib/ast_404.ml", 874, 29690, 29732), 0), 0, Tag1 ("Astlib__Ast_404", 341)); (("Pstr_class_type", 945), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 6938)), 0, (0)), 100000000, 0, -1588)], (0)), 100000000, 0, -1587)]), 0, (("astlib/ast_404.ml", 876, 29785, 29789), ("astlib/ast_404.ml", 876, 29785, 29837), 0), 0, Tag1 ("Astlib__Ast_404", 342)); (("Pstr_include", 946), ([(Tag3 ((("include_declaration", 6956)), 0, (0)), 100000000, 0, -1589)]), 0, (("astlib/ast_404.ml", 878, 29897, 29901), ("astlib/ast_404.ml", 878, 29897, 29938), 0), 0, Tag1 ("Astlib__Ast_404", 343)); (("Pstr_attribute", 947), ([(Tag3 ((("attribute", 6909)), 0, (0)), 100000000, 0, -1590)]), 0, (("astlib/ast_404.ml", 880, 29966, 29970), ("astlib/ast_404.ml", 880, 29966, 29999), 0), 0, Tag1 ("Astlib__Ast_404", 344)); (("Pstr_extension", 948), ([(Tag3 ((("extension", 6910)), 0, (0)), 100000000, 0, -1591); (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1592)]), 0, (("astlib/ast_404.ml", 882, 30024, 30028), ("astlib/ast_404.ml", 882, 30024, 30070), 0), 0, Tag1 ("Astlib__Ast_404", 345))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -1568)), 0, 0, 0, 0, (("astlib/ast_404.ml", 849, 28647, 28649), ("astlib/ast_404.ml", 882, 30024, 30070), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 100)), 2, 0); Tag1 (("value_binding", 6963), (0, 0, [[(("pvb_pat", 949), 0, (Tag3 ((("pattern", 6917)), 0, (0)), 100000000, 0, -1564), (("astlib/ast_404.ml", 887, 30165, 30171), ("astlib/ast_404.ml", 887, 30165, 30188), 0), 0, Tag1 ("Astlib__Ast_404", 346)); (("pvb_expr", 950), 0, (Tag3 ((("expression", 6919)), 0, (0)), 100000000, 0, -1565), (("astlib/ast_404.ml", 888, 30189, 30195), ("astlib/ast_404.ml", 888, 30189, 30216), 0), 0, Tag1 ("Astlib__Ast_404", 347)); (("pvb_attributes", 951), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1566), (("astlib/ast_404.ml", 889, 30217, 30223), ("astlib/ast_404.ml", 889, 30217, 30250), 0), 0, Tag1 ("Astlib__Ast_404", 348)); (("pvb_loc", 952), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1567), (("astlib/ast_404.ml", 890, 30251, 30257), ("astlib/ast_404.ml", 890, 30251, 30277), 0), 0, Tag1 ("Astlib__Ast_404", 349))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -1563)), 0, 0, 0, 0, (("astlib/ast_404.ml", 885, 30095, 30097), ("astlib/ast_404.ml", 891, 30278, 30283), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 101)), 2, 0); Tag1 (("module_binding", 6964), (0, 0, [[(("pmb_name", 953), 0, (Tag3 (Tag1 ((("Asttypes", 6893)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1559)], (0)), 100000000, 0, -1558), (("astlib/ast_404.ml", 895, 30359, 30366), ("astlib/ast_404.ml", 895, 30359, 30387), 0), 0, Tag1 ("Astlib__Ast_404", 350)); (("pmb_expr", 954), 0, (Tag3 ((("module_expr", 6958)), 0, (0)), 100000000, 0, -1560), (("astlib/ast_404.ml", 896, 30388, 30395), ("astlib/ast_404.ml", 896, 30388, 30417), 0), 0, Tag1 ("Astlib__Ast_404", 351)); (("pmb_attributes", 955), 0, (Tag3 ((("attributes", 6911)), 0, (0)), 100000000, 0, -1561), (("astlib/ast_404.ml", 897, 30418, 30425), ("astlib/ast_404.ml", 897, 30418, 30452), 0), 0, Tag1 ("Astlib__Ast_404", 352)); (("pmb_loc", 956), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -1562), (("astlib/ast_404.ml", 898, 30453, 30460), ("astlib/ast_404.ml", 898, 30453, 30480), 0), 0, Tag1 ("Astlib__Ast_404", 353))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -1557)), 0, 0, 0, 0, (("astlib/ast_404.ml", 893, 30285, 30287), ("astlib/ast_404.ml", 899, 30481, 30488), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 102)), 2, 0); Tag1 (("toplevel_phrase", 6965), (0, 0, Tag1 ([(("Ptop_def", 969), ([(Tag3 ((("structure", 6960)), 0, (0)), 100000000, 0, -1554)]), 0, (("astlib/ast_404.ml", 907, 30623, 30627), ("astlib/ast_404.ml", 907, 30623, 30650), 0), 0, Tag1 ("Astlib__Ast_404", 356)); (("Ptop_dir", 970), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1555); (Tag3 ((("directive_argument", 6966)), 0, (0)), 100000000, 0, -1556)]), 0, (("astlib/ast_404.ml", 908, 30651, 30655), ("astlib/ast_404.ml", 908, 30651, 30696), 0), 0, Tag1 ("Astlib__Ast_404", 357))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -1553)), 0, 0, 0, 0, (("astlib/ast_404.ml", 906, 30554, 30556), ("astlib/ast_404.ml", 908, 30651, 30696), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 354)), 1, 0); Tag1 (("directive_argument", 6966), (0, 0, Tag1 ([(("Pdir_none", 971), (0), 0, (("astlib/ast_404.ml", 912, 30801, 30805), ("astlib/ast_404.ml", 912, 30801, 30816), 0), 0, Tag1 ("Astlib__Ast_404", 358)); (("Pdir_string", 972), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1547)]), 0, (("astlib/ast_404.ml", 913, 30817, 30821), ("astlib/ast_404.ml", 913, 30817, 30844), 0), 0, Tag1 ("Astlib__Ast_404", 359)); (("Pdir_int", 973), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1548); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -1550)], (0)), 100000000, 0, -1549)]), 0, (("astlib/ast_404.ml", 914, 30845, 30849), ("astlib/ast_404.ml", 914, 30845, 30883), 0), 0, Tag1 ("Astlib__Ast_404", 360)); (("Pdir_ident", 974), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -1551)]), 0, (("astlib/ast_404.ml", 915, 30884, 30888), ("astlib/ast_404.ml", 915, 30884, 30915), 0), 0, Tag1 ("Astlib__Ast_404", 361)); (("Pdir_bool", 975), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -1552)]), 0, (("astlib/ast_404.ml", 916, 30916, 30920), ("astlib/ast_404.ml", 916, 30916, 30939), 0), 0, Tag1 ("Astlib__Ast_404", 362))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_404")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -1546)), 0, 0, 0, 0, (("astlib/ast_404.ml", 911, 30727, 30729), ("astlib/ast_404.ml", 916, 30916, 30939), 0), 0, 0, 0, Tag1 ("Astlib__Ast_404", 355)), 2, 0)]), 0, (("astlib/ast_404.ml", 66, 2762, 2762), ("astlib/ast_404.ml", 917, 30940, 30943), 0), Tag1 ("Astlib__Ast_404", 363)), 0, 0); Tag3 (("Config", 6895), 0, (Tag1 ([(("ast_impl_magic_number", 6967), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2129), 0, (("astlib/ast_404.ml", 920, 30968, 30974), ("astlib/ast_404.ml", 920, 30968, 30995), 0), 0, Tag1 ("Astlib__Ast_404", 364)), 0); (("ast_intf_magic_number", 6968), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2128), 0, (("astlib/ast_404.ml", 921, 31013, 31019), ("astlib/ast_404.ml", 921, 31013, 31040), 0), 0, Tag1 ("Astlib__Ast_404", 365)), 0)]), 0, (("astlib/ast_404.ml", 919, 30945, 30945), ("astlib/ast_404.ml", 922, 31058, 31061), 0), Tag1 ("Astlib__Ast_404", 366)), 0, 0)]), 0, (("astlib/astlib.ml", 27, 1413, 1413), ("astlib/astlib.ml", 27, 1413, 1437), 0), Tag1 ("Astlib", 2)), 0, 0); (("version", 6888), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -1520), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 6889), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -1519), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 6890), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -1500), 0), 100000000, 0, -1499), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -1516), 0), 100000000, 0, -1515), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -1518), 0), 100000000, 0, -1517), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -1510), 0), 100000000, 0, -1509), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -1482), 0), 100000000, 0, -1481), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -1496), 0), 100000000, 0, -1495), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -1486), 0), 100000000, 0, -1485), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -1508), 0), 100000000, 0, -1507), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -1494), 0), 100000000, 0, -1493), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -1492), 0), 100000000, 0, -1491), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -1490), 0), 100000000, 0, -1489), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -1488), 0), 100000000, 0, -1487), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -1504), 0), 100000000, 0, -1503), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -1512), 0), 100000000, 0, -1511), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -1506), 0), 100000000, 0, -1505), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -1484), 0), 100000000, 0, -1483), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -1498), 0), 100000000, 0, -1497), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -1514), 0), 100000000, 0, -1513), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6887)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -1502), 0), 100000000, 0, -1501), (0, 100000000, 0, -1480)), 100000000, 0, 333)), 100000000, 0, 334)), 100000000, 0, 335)), 100000000, 0, 336)), 100000000, 0, 337)), 100000000, 0, 338)), 100000000, 0, 339)), 100000000, 0, 340)), 100000000, 0, 341)), 100000000, 0, 342)), 100000000, 0, 343)), 100000000, 0, 344)), 100000000, 0, 345)), 100000000, 0, 346)), 100000000, 0, 347)), 100000000, 0, 348)), 100000000, 0, 349)), 100000000, 0, 350)), 100000000, 0, -1461), (0)), 100000000, 0, -1460)], (0)), 100000000, 0, -1459)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 6891), ((("witnesses", 6673)), [((("_")), 100000000, 0, -1458)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 6890)), 0, (0)), 100000000, 0, -1457)], (0)), 100000000, 0, -1456)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 6892), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 6890)), 0, (0)), 100000000, 0, -1455)], (0)), 100000000, 0, -1454), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 147, 5280, 5280), ("ast/versions.mli", 147, 5280, 5345), 0), Tag1 ("Ppxlib_ast__Versions", 36)), 0, 0); Tag3 (("OCaml_405", 6679), 0, (Tag1 ([Tag3 (("Ast", 6969), 0, (Tag1 ([Tag3 (("Asttypes", 6975), 0, (Tag1 ([Tag1 (("constant", 6978), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2213)]), 0, (("astlib/ast_405.ml", 24, 1557, 1563), ("astlib/ast_405.ml", 24, 1557, 1579), 0), 0, Tag1 ("Astlib__Ast_405", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2214)]), 0, (("astlib/ast_405.ml", 25, 1580, 1584), ("astlib/ast_405.ml", 25, 1580, 1604), 0), 0, Tag1 ("Astlib__Ast_405", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2215); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2217)], (0)), 100000000, 0, -2216)]), 0, (("astlib/ast_405.ml", 26, 1605, 1609), ("astlib/ast_405.ml", 26, 1605, 1649), 0), 0, Tag1 ("Astlib__Ast_405", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2218)]), 0, (("astlib/ast_405.ml", 27, 1650, 1654), ("astlib/ast_405.ml", 27, 1650, 1677), 0), 0, Tag1 ("Astlib__Ast_405", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -2219)]), 0, (("astlib/ast_405.ml", 28, 1678, 1682), ("astlib/ast_405.ml", 28, 1678, 1704), 0), 0, Tag1 ("Astlib__Ast_405", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -2220)]), 0, (("astlib/ast_405.ml", 29, 1705, 1709), ("astlib/ast_405.ml", 29, 1705, 1731), 0), 0, Tag1 ("Astlib__Ast_405", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -2221)]), 0, (("astlib/ast_405.ml", 30, 1732, 1736), ("astlib/ast_405.ml", 30, 1732, 1766), 0), 0, Tag1 ("Astlib__Ast_405", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -2212)), 0, 0, 0, 0, (("astlib/ast_405.ml", 23, 1503, 1505), ("astlib/ast_405.ml", 30, 1732, 1766), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 0)), 1, 0); Tag1 (("rec_flag", 6979), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_405.ml", 32, 1768, 1822), ("astlib/ast_405.ml", 32, 1768, 1834), 0), 0, Tag1 ("Astlib__Ast_405", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_405.ml", 32, 1768, 1835), ("astlib/ast_405.ml", 32, 1768, 1846), 0), 0, Tag1 ("Astlib__Ast_405", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -2211)), 0, 0, 0, 0, (("astlib/ast_405.ml", 32, 1768, 1770), ("astlib/ast_405.ml", 32, 1768, 1846), 0), 0, 1, 0, Tag1 ("Astlib__Ast_405", 8)), 1, 0); Tag1 (("direction_flag", 6980), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_405.ml", 34, 1848, 1914), ("astlib/ast_405.ml", 34, 1848, 1918), 0), 0, Tag1 ("Astlib__Ast_405", 12)); (("Downto", 333), (0), 0, (("astlib/ast_405.ml", 34, 1848, 1919), ("astlib/ast_405.ml", 34, 1848, 1927), 0), 0, Tag1 ("Astlib__Ast_405", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -2210)), 0, 0, 0, 0, (("astlib/ast_405.ml", 34, 1848, 1850), ("astlib/ast_405.ml", 34, 1848, 1927), 0), 0, 1, 0, Tag1 ("Astlib__Ast_405", 11)), 1, 0); Tag1 (("private_flag", 6981), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_405.ml", 37, 1983, 2045), ("astlib/ast_405.ml", 37, 1983, 2052), 0), 0, Tag1 ("Astlib__Ast_405", 15)); (("Public", 336), (0), 0, (("astlib/ast_405.ml", 37, 1983, 2053), ("astlib/ast_405.ml", 37, 1983, 2061), 0), 0, Tag1 ("Astlib__Ast_405", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -2209)), 0, 0, 0, 0, (("astlib/ast_405.ml", 37, 1983, 1985), ("astlib/ast_405.ml", 37, 1983, 2061), 0), 0, 1, 0, Tag1 ("Astlib__Ast_405", 14)), 1, 0); Tag1 (("mutable_flag", 6982), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_405.ml", 39, 2063, 2125), ("astlib/ast_405.ml", 39, 2063, 2134), 0), 0, Tag1 ("Astlib__Ast_405", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_405.ml", 39, 2063, 2135), ("astlib/ast_405.ml", 39, 2063, 2144), 0), 0, Tag1 ("Astlib__Ast_405", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -2208)), 0, 0, 0, 0, (("astlib/ast_405.ml", 39, 2063, 2065), ("astlib/ast_405.ml", 39, 2063, 2144), 0), 0, 1, 0, Tag1 ("Astlib__Ast_405", 17)), 1, 0); Tag1 (("virtual_flag", 6983), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_405.ml", 41, 2146, 2208), ("astlib/ast_405.ml", 41, 2146, 2215), 0), 0, Tag1 ("Astlib__Ast_405", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_405.ml", 41, 2146, 2216), ("astlib/ast_405.ml", 41, 2146, 2226), 0), 0, Tag1 ("Astlib__Ast_405", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -2207)), 0, 0, 0, 0, (("astlib/ast_405.ml", 41, 2146, 2148), ("astlib/ast_405.ml", 41, 2146, 2226), 0), 0, 1, 0, Tag1 ("Astlib__Ast_405", 20)), 1, 0); Tag1 (("override_flag", 6984), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_405.ml", 43, 2228, 2292), ("astlib/ast_405.ml", 43, 2228, 2300), 0), 0, Tag1 ("Astlib__Ast_405", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_405.ml", 43, 2228, 2301), ("astlib/ast_405.ml", 43, 2228, 2308), 0), 0, Tag1 ("Astlib__Ast_405", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -2206)), 0, 0, 0, 0, (("astlib/ast_405.ml", 43, 2228, 2230), ("astlib/ast_405.ml", 43, 2228, 2308), 0), 0, 1, 0, Tag1 ("Astlib__Ast_405", 23)), 1, 0); Tag1 (("closed_flag", 6985), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_405.ml", 45, 2310, 2370), ("astlib/ast_405.ml", 45, 2310, 2376), 0), 0, Tag1 ("Astlib__Ast_405", 27)); (("Open", 348), (0), 0, (("astlib/ast_405.ml", 45, 2310, 2377), ("astlib/ast_405.ml", 45, 2310, 2383), 0), 0, Tag1 ("Astlib__Ast_405", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -2205)), 0, 0, 0, 0, (("astlib/ast_405.ml", 45, 2310, 2312), ("astlib/ast_405.ml", 45, 2310, 2383), 0), 0, 1, 0, Tag1 ("Astlib__Ast_405", 26)), 1, 0); Tag1 (("label", 6986), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2204)), 0, 0, 0, 0, (("astlib/ast_405.ml", 47, 2385, 2387), ("astlib/ast_405.ml", 47, 2385, 2406), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 29)), 1, 0); Tag1 (("arg_label", 6987), (0, 0, Tag1 ([(("Nolabel", 351), (0), 0, (("astlib/ast_405.ml", 50, 2464, 2470), ("astlib/ast_405.ml", 50, 2464, 2477), 0), 0, Tag1 ("Astlib__Ast_405", 31)); (("Labelled", 352), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2202)]), 0, (("astlib/ast_405.ml", 51, 2478, 2482), ("astlib/ast_405.ml", 51, 2478, 2502), 0), 0, Tag1 ("Astlib__Ast_405", 32)); (("Optional", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2203)]), 0, (("astlib/ast_405.ml", 52, 2525, 2529), ("astlib/ast_405.ml", 52, 2525, 2549), 0), 0, Tag1 ("Astlib__Ast_405", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -2201)), 0, 0, 0, 0, (("astlib/ast_405.ml", 49, 2408, 2410), ("astlib/ast_405.ml", 52, 2525, 2549), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 30)), 1, 0); Tag1 (("loc", 6988), ([((("a")), 100000000, 0, -2199)], 1, [[(("txt", 355), 0, ((("a")), 100000000, 0, -2199), (("astlib/ast_405.ml", 55, 2609, 2613), ("astlib/ast_405.ml", 55, 2609, 2622), 0), 0, Tag1 ("Astlib__Ast_405", 35)); (("loc", 365), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2200), (("astlib/ast_405.ml", 56, 2623, 2627), ("astlib/ast_405.ml", 56, 2623, 2644), 0), 0, Tag1 ("Astlib__Ast_405", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -2199)], (0)), 100000000, 0, -2198)), [25], [0], 0, 0, (("astlib/ast_405.ml", 54, 2573, 2575), ("astlib/ast_405.ml", 57, 2645, 2648), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 34)), 1, 0); Tag1 (("variance", 6989), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_405.ml", 61, 2705, 2709), ("astlib/ast_405.ml", 61, 2705, 2720), 0), 0, Tag1 ("Astlib__Ast_405", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_405.ml", 62, 2721, 2725), ("astlib/ast_405.ml", 62, 2721, 2740), 0), 0, Tag1 ("Astlib__Ast_405", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_405.ml", 63, 2741, 2745), ("astlib/ast_405.ml", 63, 2741, 2756), 0), 0, Tag1 ("Astlib__Ast_405", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -2197)), 0, 0, 0, 0, (("astlib/ast_405.ml", 60, 2651, 2653), ("astlib/ast_405.ml", 63, 2741, 2756), 0), 0, 1, 0, Tag1 ("Astlib__Ast_405", 37)), 1, 0)]), 0, (("astlib/ast_405.ml", 20, 1415, 1415), ("astlib/ast_405.ml", 64, 2757, 2760), 0), Tag1 ("Astlib__Ast_405", 41)), 0, 0); Tag3 (("Parsetree", 6976), 0, (Tag1 ([Tag1 (("constant", 6990), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2801); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2803)], (0)), 100000000, 0, -2802)]), 0, (("astlib/ast_405.ml", 72, 2911, 2917), ("astlib/ast_405.ml", 72, 2911, 2955), 0), 0, Tag1 ("Astlib__Ast_405", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2804)]), 0, (("astlib/ast_405.ml", 78, 3109, 3113), ("astlib/ast_405.ml", 78, 3109, 3134), 0), 0, Tag1 ("Astlib__Ast_405", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2805); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2807)], (0)), 100000000, 0, -2806)]), 0, (("astlib/ast_405.ml", 80, 3149, 3153), ("astlib/ast_405.ml", 80, 3149, 3194), 0), 0, Tag1 ("Astlib__Ast_405", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2808); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2810)], (0)), 100000000, 0, -2809)]), 0, (("astlib/ast_405.ml", 84, 3256, 3260), ("astlib/ast_405.ml", 84, 3256, 3298), 0), 0, Tag1 ("Astlib__Ast_405", 46))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -2800)), 0, 0, 0, 0, (("astlib/ast_405.ml", 71, 2856, 2858), ("astlib/ast_405.ml", 84, 3256, 3298), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 42)), 1, 0); Tag1 (("attribute", 6991), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2798)], (0)), 100000000, 0, -2797); (Tag3 ((("payload", 6994)), 0, (0)), 100000000, 0, -2799)]), 100000000, 0, -2796)), 0, 0, 0, 0, (("astlib/ast_405.ml", 93, 3465, 3467), ("astlib/ast_405.ml", 93, 3465, 3504), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 47)), 1, 0); Tag1 (("extension", 6992), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2794)], (0)), 100000000, 0, -2793); (Tag3 ((("payload", 6994)), 0, (0)), 100000000, 0, -2795)]), 100000000, 0, -2792)), 0, 0, 0, 0, (("astlib/ast_405.ml", 101, 3679, 3681), ("astlib/ast_405.ml", 101, 3679, 3717), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 48)), 2, 0); Tag1 (("attributes", 6993), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 6991)), 0, (0)), 100000000, 0, -2791)], (0)), 100000000, 0, -2790)), 0, 0, 0, 0, (("astlib/ast_405.ml", 108, 3842, 3844), ("astlib/ast_405.ml", 108, 3842, 3875), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 49)), 2, 0); Tag1 (("payload", 6994), (0, 0, Tag1 ([(("PStr", 703), ([(Tag3 ((("structure", 7042)), 0, (0)), 100000000, 0, -2784)]), 0, (("astlib/ast_405.ml", 111, 3929, 3933), ("astlib/ast_405.ml", 111, 3929, 3952), 0), 0, Tag1 ("Astlib__Ast_405", 103)); (("PSig", 704), ([(Tag3 ((("signature", 7030)), 0, (0)), 100000000, 0, -2785)]), 0, (("astlib/ast_405.ml", 112, 3953, 3957), ("astlib/ast_405.ml", 112, 3953, 3976), 0), 0, Tag1 ("Astlib__Ast_405", 104)); (("PTyp", 705), ([(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2786)]), 0, (("astlib/ast_405.ml", 113, 3989, 3993), ("astlib/ast_405.ml", 113, 3989, 4012), 0), 0, Tag1 ("Astlib__Ast_405", 105)); (("PPat", 706), ([(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2787); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2789)], (0)), 100000000, 0, -2788)]), 0, (("astlib/ast_405.ml", 114, 4024, 4028), ("astlib/ast_405.ml", 114, 4024, 4065), 0), 0, Tag1 ("Astlib__Ast_405", 106))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -2783)), 0, 0, 0, 0, (("astlib/ast_405.ml", 110, 3877, 3879), ("astlib/ast_405.ml", 114, 4024, 4065), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 50)), 2, 0); Tag1 (("core_type", 6995), (0, 0, [[(("ptyp_desc", 707), 0, (Tag3 ((("core_type_desc", 6996)), 0, (0)), 100000000, 0, -2780), (("astlib/ast_405.ml", 122, 4212, 4219), ("astlib/ast_405.ml", 122, 4212, 4245), 0), 0, Tag1 ("Astlib__Ast_405", 107)); (("ptyp_loc", 708), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2781), (("astlib/ast_405.ml", 123, 4246, 4253), ("astlib/ast_405.ml", 123, 4246, 4274), 0), 0, Tag1 ("Astlib__Ast_405", 108)); (("ptyp_attributes", 709), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2782), (("astlib/ast_405.ml", 124, 4275, 4282), ("astlib/ast_405.ml", 124, 4275, 4310), 0), 0, Tag1 ("Astlib__Ast_405", 109))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -2779)), 0, 0, 0, 0, (("astlib/ast_405.ml", 120, 4148, 4150), ("astlib/ast_405.ml", 125, 4335, 4342), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 51)), 2, 0); Tag1 (("core_type_desc", 6996), (0, 0, Tag1 ([(("Ptyp_any", 710), (0), 0, (("astlib/ast_405.ml", 128, 4410, 4414), ("astlib/ast_405.ml", 128, 4410, 4424), 0), 0, Tag1 ("Astlib__Ast_405", 110)); (("Ptyp_var", 711), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2744)]), 0, (("astlib/ast_405.ml", 130, 4444, 4448), ("astlib/ast_405.ml", 130, 4444, 4468), 0), 0, Tag1 ("Astlib__Ast_405", 111)); (("Ptyp_arrow", 712), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "arg_label"), 0, (0)), 100000000, 0, -2745); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2746); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2747)]), 0, (("astlib/ast_405.ml", 132, 4488, 4492), ("astlib/ast_405.ml", 132, 4488, 4541), 0), 0, Tag1 ("Astlib__Ast_405", 112)); (("Ptyp_tuple", 713), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2749)], (0)), 100000000, 0, -2748)]), 0, (("astlib/ast_405.ml", 137, 4664, 4668), ("astlib/ast_405.ml", 137, 4664, 4698), 0), 0, Tag1 ("Astlib__Ast_405", 113)); (("Ptyp_constr", 714), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2751)], (0)), 100000000, 0, -2750); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2753)], (0)), 100000000, 0, -2752)]), 0, (("astlib/ast_405.ml", 142, 4771, 4775), ("astlib/ast_405.ml", 142, 4771, 4824), 0), 0, Tag1 ("Astlib__Ast_405", 114)); (("Ptyp_object", 718), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2757)], (0)), 100000000, 0, -2756); (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2758); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2759)]), 100000000, 0, -2755)], (0)), 100000000, 0, -2754); (Tag3 (Tag1 ((("Asttypes", 6975)), "closed_flag"), 0, (0)), 100000000, 0, -2760)]), 0, (("astlib/ast_405.ml", 147, 4918, 4922), ("astlib/ast_405.ml", 147, 4918, 4995), 0), 0, Tag1 ("Astlib__Ast_405", 115)); (("Ptyp_class", 719), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2762)], (0)), 100000000, 0, -2761); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2764)], (0)), 100000000, 0, -2763)]), 0, (("astlib/ast_405.ml", 151, 5118, 5122), ("astlib/ast_405.ml", 151, 5118, 5170), 0), 0, Tag1 ("Astlib__Ast_405", 116)); (("Ptyp_alias", 720), ([(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2765); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2766)]), 0, (("astlib/ast_405.ml", 156, 5267, 5271), ("astlib/ast_405.ml", 156, 5267, 5305), 0), 0, Tag1 ("Astlib__Ast_405", 117)); (("Ptyp_variant", 721), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 6998)), 0, (0)), 100000000, 0, -2768)], (0)), 100000000, 0, -2767); (Tag3 (Tag1 ((("Asttypes", 6975)), "closed_flag"), 0, (0)), 100000000, 0, -2769); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 6975)), "label"), 0, (0)), 100000000, 0, -2772)], (0)), 100000000, 0, -2771)], (0)), 100000000, 0, -2770)]), 0, (("astlib/ast_405.ml", 158, 5330, 5334), ("astlib/ast_405.ml", 158, 5330, 5400), 0), 0, Tag1 ("Astlib__Ast_405", 118)); (("Ptyp_poly", 722), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2775)], (0)), 100000000, 0, -2774)], (0)), 100000000, 0, -2773); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2776)]), 0, (("astlib/ast_405.ml", 164, 5676, 5680), ("astlib/ast_405.ml", 164, 5676, 5722), 0), 0, Tag1 ("Astlib__Ast_405", 119)); (("Ptyp_package", 723), ([(Tag3 ((("package_type", 6997)), 0, (0)), 100000000, 0, -2777)]), 0, (("astlib/ast_405.ml", 184, 6276, 6280), ("astlib/ast_405.ml", 184, 6276, 6310), 0), 0, Tag1 ("Astlib__Ast_405", 120)); (("Ptyp_extension", 724), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2778)]), 0, (("astlib/ast_405.ml", 186, 6338, 6342), ("astlib/ast_405.ml", 186, 6338, 6371), 0), 0, Tag1 ("Astlib__Ast_405", 121))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -2743)), 0, 0, 0, 0, (("astlib/ast_405.ml", 127, 4344, 4346), ("astlib/ast_405.ml", 186, 6338, 6371), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 52)), 2, 0); Tag1 (("package_type", 6997), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2737)], (0)), 100000000, 0, -2736); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2741)], (0)), 100000000, 0, -2740); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2742)]), 100000000, 0, -2739)], (0)), 100000000, 0, -2738)]), 100000000, 0, -2735)), 0, 0, 0, 0, (("astlib/ast_405.ml", 189, 6395, 6397), ("astlib/ast_405.ml", 189, 6395, 6468), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 53)), 2, 0); Tag1 (("row_field", 6998), (0, 0, Tag1 ([(("Rtag", 725), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "label"), 0, (0)), 100000000, 0, -2729); (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2730); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2731); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2733)], (0)), 100000000, 0, -2732)]), 0, (("astlib/ast_405.ml", 196, 6629, 6633), ("astlib/ast_405.ml", 196, 6629, 6685), 0), 0, Tag1 ("Astlib__Ast_405", 122)); (("Rinherit", 726), ([(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2734)]), 0, (("astlib/ast_405.ml", 209, 7209, 7213), ("astlib/ast_405.ml", 209, 7209, 7236), 0), 0, Tag1 ("Astlib__Ast_405", 123))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -2728)), 0, 0, 0, 0, (("astlib/ast_405.ml", 195, 6573, 6575), ("astlib/ast_405.ml", 209, 7209, 7236), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 54)), 2, 0); Tag1 (("pattern", 6999), (0, 0, [[(("ppat_desc", 727), 0, (Tag3 ((("pattern_desc", 7000)), 0, (0)), 100000000, 0, -2725), (("astlib/ast_405.ml", 216, 7338, 7345), ("astlib/ast_405.ml", 216, 7338, 7369), 0), 0, Tag1 ("Astlib__Ast_405", 124)); (("ppat_loc", 728), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2726), (("astlib/ast_405.ml", 217, 7370, 7377), ("astlib/ast_405.ml", 217, 7370, 7398), 0), 0, Tag1 ("Astlib__Ast_405", 125)); (("ppat_attributes", 729), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2727), (("astlib/ast_405.ml", 218, 7399, 7406), ("astlib/ast_405.ml", 218, 7399, 7434), 0), 0, Tag1 ("Astlib__Ast_405", 126))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -2724)), 0, 0, 0, 0, (("astlib/ast_405.ml", 214, 7278, 7280), ("astlib/ast_405.ml", 219, 7459, 7466), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 55)), 2, 0); Tag1 (("pattern_desc", 7000), (0, 0, Tag1 ([(("Ppat_any", 730), (0), 0, (("astlib/ast_405.ml", 222, 7530, 7534), ("astlib/ast_405.ml", 222, 7530, 7544), 0), 0, Tag1 ("Astlib__Ast_405", 127)); (("Ppat_var", 731), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2686)], (0)), 100000000, 0, -2685)]), 0, (("astlib/ast_405.ml", 224, 7563, 7567), ("astlib/ast_405.ml", 224, 7563, 7591), 0), 0, Tag1 ("Astlib__Ast_405", 128)); (("Ppat_alias", 732), ([(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2687); (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2689)], (0)), 100000000, 0, -2688)]), 0, (("astlib/ast_405.ml", 226, 7610, 7614), ("astlib/ast_405.ml", 226, 7610, 7650), 0), 0, Tag1 ("Astlib__Ast_405", 129)); (("Ppat_constant", 733), ([(Tag3 ((("constant", 6990)), 0, (0)), 100000000, 0, -2690)]), 0, (("astlib/ast_405.ml", 228, 7675, 7679), ("astlib/ast_405.ml", 228, 7675, 7706), 0), 0, Tag1 ("Astlib__Ast_405", 130)); (("Ppat_interval", 734), ([(Tag3 ((("constant", 6990)), 0, (0)), 100000000, 0, -2691); (Tag3 ((("constant", 6990)), 0, (0)), 100000000, 0, -2692)]), 0, (("astlib/ast_405.ml", 230, 7755, 7759), ("astlib/ast_405.ml", 230, 7755, 7797), 0), 0, Tag1 ("Astlib__Ast_405", 131)); (("Ppat_tuple", 735), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2694)], (0)), 100000000, 0, -2693)]), 0, (("astlib/ast_405.ml", 235, 7937, 7941), ("astlib/ast_405.ml", 235, 7937, 7969), 0), 0, Tag1 ("Astlib__Ast_405", 132)); (("Ppat_construct", 736), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2696)], (0)), 100000000, 0, -2695); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2698)], (0)), 100000000, 0, -2697)]), 0, (("astlib/ast_405.ml", 240, 8042, 8046), ("astlib/ast_405.ml", 240, 8042, 8098), 0), 0, Tag1 ("Astlib__Ast_405", 133)); (("Ppat_variant", 737), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "label"), 0, (0)), 100000000, 0, -2699); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2701)], (0)), 100000000, 0, -2700)]), 0, (("astlib/ast_405.ml", 245, 8247, 8251), ("astlib/ast_405.ml", 245, 8247, 8291), 0), 0, Tag1 ("Astlib__Ast_405", 134)); (("Ppat_record", 738), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2705)], (0)), 100000000, 0, -2704); (Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2706)]), 100000000, 0, -2703)], (0)), 100000000, 0, -2702); (Tag3 (Tag1 ((("Asttypes", 6975)), "closed_flag"), 0, (0)), 100000000, 0, -2707)]), 0, (("astlib/ast_405.ml", 249, 8378, 8382), ("astlib/ast_405.ml", 249, 8378, 8445), 0), 0, Tag1 ("Astlib__Ast_405", 135)); (("Ppat_array", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2709)], (0)), 100000000, 0, -2708)]), 0, (("astlib/ast_405.ml", 255, 8599, 8603), ("astlib/ast_405.ml", 255, 8599, 8631), 0), 0, Tag1 ("Astlib__Ast_405", 136)); (("Ppat_or", 740), ([(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2710); (Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2711)]), 0, (("astlib/ast_405.ml", 257, 8666, 8670), ("astlib/ast_405.ml", 257, 8666, 8700), 0), 0, Tag1 ("Astlib__Ast_405", 137)); (("Ppat_constraint", 741), ([(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2712); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2713)]), 0, (("astlib/ast_405.ml", 259, 8725, 8729), ("astlib/ast_405.ml", 259, 8725, 8769), 0), 0, Tag1 ("Astlib__Ast_405", 138)); (("Ppat_type", 742), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2715)], (0)), 100000000, 0, -2714)]), 0, (("astlib/ast_405.ml", 261, 8794, 8798), ("astlib/ast_405.ml", 261, 8794, 8828), 0), 0, Tag1 ("Astlib__Ast_405", 139)); (("Ppat_lazy", 743), ([(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2716)]), 0, (("astlib/ast_405.ml", 263, 8853, 8857), ("astlib/ast_405.ml", 263, 8853, 8879), 0), 0, Tag1 ("Astlib__Ast_405", 140)); (("Ppat_unpack", 744), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2718)], (0)), 100000000, 0, -2717)]), 0, (("astlib/ast_405.ml", 265, 8903, 8907), ("astlib/ast_405.ml", 265, 8903, 8934), 0), 0, Tag1 ("Astlib__Ast_405", 141)); (("Ppat_exception", 745), ([(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2719)]), 0, (("astlib/ast_405.ml", 270, 9081, 9085), ("astlib/ast_405.ml", 270, 9081, 9112), 0), 0, Tag1 ("Astlib__Ast_405", 142)); (("Ppat_extension", 746), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2720)]), 0, (("astlib/ast_405.ml", 272, 9141, 9145), ("astlib/ast_405.ml", 272, 9141, 9174), 0), 0, Tag1 ("Astlib__Ast_405", 143)); (("Ppat_open", 747), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2722)], (0)), 100000000, 0, -2721); (Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2723)]), 0, (("astlib/ast_405.ml", 274, 9197, 9201), ("astlib/ast_405.ml", 274, 9197, 9241), 0), 0, Tag1 ("Astlib__Ast_405", 144))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -2684)), 0, 0, 0, 0, (("astlib/ast_405.ml", 221, 7468, 7470), ("astlib/ast_405.ml", 274, 9197, 9241), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 56)), 2, 0); Tag1 (("expression", 7001), (0, 0, [[(("pexp_desc", 748), 0, (Tag3 ((("expression_desc", 7002)), 0, (0)), 100000000, 0, -2681), (("astlib/ast_405.ml", 281, 9358, 9365), ("astlib/ast_405.ml", 281, 9358, 9392), 0), 0, Tag1 ("Astlib__Ast_405", 145)); (("pexp_loc", 749), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2682), (("astlib/ast_405.ml", 282, 9393, 9400), ("astlib/ast_405.ml", 282, 9393, 9421), 0), 0, Tag1 ("Astlib__Ast_405", 146)); (("pexp_attributes", 750), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2683), (("astlib/ast_405.ml", 283, 9422, 9429), ("astlib/ast_405.ml", 283, 9422, 9457), 0), 0, Tag1 ("Astlib__Ast_405", 147))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -2680)), 0, 0, 0, 0, (("astlib/ast_405.ml", 279, 9292, 9294), ("astlib/ast_405.ml", 284, 9482, 9489), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 57)), 2, 0); Tag1 (("expression_desc", 7002), (0, 0, Tag1 ([(("Pexp_ident", 751), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2578)], (0)), 100000000, 0, -2577)]), 0, (("astlib/ast_405.ml", 287, 9559, 9563), ("astlib/ast_405.ml", 287, 9559, 9594), 0), 0, Tag1 ("Astlib__Ast_405", 148)); (("Pexp_constant", 752), ([(Tag3 ((("constant", 6990)), 0, (0)), 100000000, 0, -2579)]), 0, (("astlib/ast_405.ml", 291, 9641, 9645), ("astlib/ast_405.ml", 291, 9641, 9672), 0), 0, Tag1 ("Astlib__Ast_405", 149)); (("Pexp_let", 753), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "rec_flag"), 0, (0)), 100000000, 0, -2580); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7045)), 0, (0)), 100000000, 0, -2582)], (0)), 100000000, 0, -2581); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2583)]), 0, (("astlib/ast_405.ml", 293, 9721, 9725), ("astlib/ast_405.ml", 293, 9721, 9781), 0), 0, Tag1 ("Astlib__Ast_405", 150)); (("Pexp_function", 754), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7003)), 0, (0)), 100000000, 0, -2585)], (0)), 100000000, 0, -2584)]), 0, (("astlib/ast_405.ml", 297, 9949, 9953), ("astlib/ast_405.ml", 297, 9949, 9981), 0), 0, Tag1 ("Astlib__Ast_405", 151)); (("Pexp_fun", 755), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "arg_label"), 0, (0)), 100000000, 0, -2586); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2588)], (0)), 100000000, 0, -2587); (Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2589); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2590)]), 0, (("astlib/ast_405.ml", 299, 10033, 10037), ("astlib/ast_405.ml", 299, 10033, 10103), 0), 0, Tag1 ("Astlib__Ast_405", 152)); (("Pexp_apply", 756), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2591); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "arg_label"), 0, (0)), 100000000, 0, -2594); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2595)]), 100000000, 0, -2593)], (0)), 100000000, 0, -2592)]), 0, (("astlib/ast_405.ml", 310, 10608, 10612), ("astlib/ast_405.ml", 310, 10608, 10670), 0), 0, Tag1 ("Astlib__Ast_405", 153)); (("Pexp_match", 757), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2596); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7003)), 0, (0)), 100000000, 0, -2598)], (0)), 100000000, 0, -2597)]), 0, (("astlib/ast_405.ml", 317, 10854, 10858), ("astlib/ast_405.ml", 317, 10854, 10896), 0), 0, Tag1 ("Astlib__Ast_405", 154)); (("Pexp_try", 758), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2599); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7003)), 0, (0)), 100000000, 0, -2601)], (0)), 100000000, 0, -2600)]), 0, (("astlib/ast_405.ml", 319, 10953, 10957), ("astlib/ast_405.ml", 319, 10953, 10993), 0), 0, Tag1 ("Astlib__Ast_405", 155)); (("Pexp_tuple", 759), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2603)], (0)), 100000000, 0, -2602)]), 0, (("astlib/ast_405.ml", 321, 11048, 11052), ("astlib/ast_405.ml", 321, 11048, 11083), 0), 0, Tag1 ("Astlib__Ast_405", 156)); (("Pexp_construct", 760), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2605)], (0)), 100000000, 0, -2604); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2607)], (0)), 100000000, 0, -2606)]), 0, (("astlib/ast_405.ml", 326, 11156, 11160), ("astlib/ast_405.ml", 326, 11156, 11215), 0), 0, Tag1 ("Astlib__Ast_405", 157)); (("Pexp_variant", 761), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "label"), 0, (0)), 100000000, 0, -2608); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2610)], (0)), 100000000, 0, -2609)]), 0, (("astlib/ast_405.ml", 331, 11360, 11364), ("astlib/ast_405.ml", 331, 11360, 11407), 0), 0, Tag1 ("Astlib__Ast_405", 158)); (("Pexp_record", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2614)], (0)), 100000000, 0, -2613); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2615)]), 100000000, 0, -2612)], (0)), 100000000, 0, -2611); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2617)], (0)), 100000000, 0, -2616)]), 0, (("astlib/ast_405.ml", 335, 11494, 11498), ("astlib/ast_405.ml", 335, 11494, 11570), 0), 0, Tag1 ("Astlib__Ast_405", 159)); (("Pexp_field", 763), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2618); (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2620)], (0)), 100000000, 0, -2619)]), 0, (("astlib/ast_405.ml", 341, 11717, 11721), ("astlib/ast_405.ml", 341, 11717, 11765), 0), 0, Tag1 ("Astlib__Ast_405", 160)); (("Pexp_setfield", 764), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2621); (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2623)], (0)), 100000000, 0, -2622); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2624)]), 0, (("astlib/ast_405.ml", 343, 11786, 11790), ("astlib/ast_405.ml", 343, 11786, 11850), 0), 0, Tag1 ("Astlib__Ast_405", 161)); (("Pexp_array", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2626)], (0)), 100000000, 0, -2625)]), 0, (("astlib/ast_405.ml", 345, 11878, 11882), ("astlib/ast_405.ml", 345, 11878, 11913), 0), 0, Tag1 ("Astlib__Ast_405", 162)); (("Pexp_ifthenelse", 766), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2627); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2628); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2630)], (0)), 100000000, 0, -2629)]), 0, (("astlib/ast_405.ml", 347, 11948, 11952), ("astlib/ast_405.ml", 347, 11948, 12016), 0), 0, Tag1 ("Astlib__Ast_405", 163)); (("Pexp_sequence", 767), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2631); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2632)]), 0, (("astlib/ast_405.ml", 349, 12055, 12059), ("astlib/ast_405.ml", 349, 12055, 12101), 0), 0, Tag1 ("Astlib__Ast_405", 164)); (("Pexp_while", 768), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2633); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2634)]), 0, (("astlib/ast_405.ml", 351, 12125, 12129), ("astlib/ast_405.ml", 351, 12125, 12168), 0), 0, Tag1 ("Astlib__Ast_405", 165)); (("Pexp_for", 769), ([(Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2635); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2636); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2637); (Tag3 (Tag1 ((("Asttypes", 6975)), "direction_flag"), 0, (0)), 100000000, 0, -2638); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2639)]), 0, (("astlib/ast_405.ml", 353, 12205, 12209), ("astlib/ast_405.ml", 354, 12223, 12295), 0), 0, Tag1 ("Astlib__Ast_405", 166)); (("Pexp_constraint", 770), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2640); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2641)]), 0, (("astlib/ast_405.ml", 358, 12432, 12436), ("astlib/ast_405.ml", 358, 12432, 12479), 0), 0, Tag1 ("Astlib__Ast_405", 167)); (("Pexp_coerce", 771), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2642); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2644)], (0)), 100000000, 0, -2643); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2645)]), 0, (("astlib/ast_405.ml", 360, 12504, 12508), ("astlib/ast_405.ml", 360, 12504, 12566), 0), 0, Tag1 ("Astlib__Ast_405", 168)); (("Pexp_send", 772), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2646); (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2648)], (0)), 100000000, 0, -2647)]), 0, (("astlib/ast_405.ml", 364, 12662, 12666), ("astlib/ast_405.ml", 364, 12662, 12704), 0), 0, Tag1 ("Astlib__Ast_405", 169)); (("Pexp_new", 773), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2650)], (0)), 100000000, 0, -2649)]), 0, (("astlib/ast_405.ml", 366, 12728, 12732), ("astlib/ast_405.ml", 366, 12728, 12761), 0), 0, Tag1 ("Astlib__Ast_405", 170)); (("Pexp_setinstvar", 774), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2652)], (0)), 100000000, 0, -2651); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2653)]), 0, (("astlib/ast_405.ml", 368, 12786, 12790), ("astlib/ast_405.ml", 368, 12786, 12834), 0), 0, Tag1 ("Astlib__Ast_405", 171)); (("Pexp_override", 775), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2657)], (0)), 100000000, 0, -2656); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2658)]), 100000000, 0, -2655)], (0)), 100000000, 0, -2654)]), 0, (("astlib/ast_405.ml", 370, 12858, 12862), ("astlib/ast_405.ml", 370, 12858, 12911), 0), 0, Tag1 ("Astlib__Ast_405", 172)); (("Pexp_letmodule", 776), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2660)], (0)), 100000000, 0, -2659); (Tag3 ((("module_expr", 7040)), 0, (0)), 100000000, 0, -2661); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2662)]), 0, (("astlib/ast_405.ml", 372, 12956, 12960), ("astlib/ast_405.ml", 372, 12956, 13017), 0), 0, Tag1 ("Astlib__Ast_405", 173)); (("Pexp_letexception", 777), ([(Tag3 ((("extension_constructor", 7011)), 0, (0)), 100000000, 0, -2663); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2664)]), 0, (("astlib/ast_405.ml", 374, 13057, 13061), ("astlib/ast_405.ml", 374, 13057, 13118), 0), 0, Tag1 ("Astlib__Ast_405", 174)); (("Pexp_assert", 778), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2665)]), 0, (("astlib/ast_405.ml", 376, 13156, 13160), ("astlib/ast_405.ml", 376, 13156, 13187), 0), 0, Tag1 ("Astlib__Ast_405", 175)); (("Pexp_lazy", 779), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2666)]), 0, (("astlib/ast_405.ml", 380, 13309, 13313), ("astlib/ast_405.ml", 380, 13309, 13338), 0), 0, Tag1 ("Astlib__Ast_405", 176)); (("Pexp_poly", 780), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2667); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2669)], (0)), 100000000, 0, -2668)]), 0, (("astlib/ast_405.ml", 382, 13362, 13366), ("astlib/ast_405.ml", 382, 13362, 13410), 0), 0, Tag1 ("Astlib__Ast_405", 177)); (("Pexp_object", 781), ([(Tag3 ((("class_structure", 7023)), 0, (0)), 100000000, 0, -2670)]), 0, (("astlib/ast_405.ml", 387, 13558, 13562), ("astlib/ast_405.ml", 387, 13558, 13594), 0), 0, Tag1 ("Astlib__Ast_405", 178)); (("Pexp_newtype", 782), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2672)], (0)), 100000000, 0, -2671); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2673)]), 0, (("astlib/ast_405.ml", 389, 13626, 13630), ("astlib/ast_405.ml", 389, 13626, 13671), 0), 0, Tag1 ("Astlib__Ast_405", 179)); (("Pexp_pack", 783), ([(Tag3 ((("module_expr", 7040)), 0, (0)), 100000000, 0, -2674)]), 0, (("astlib/ast_405.ml", 391, 13706, 13710), ("astlib/ast_405.ml", 391, 13706, 13736), 0), 0, Tag1 ("Astlib__Ast_405", 180)); (("Pexp_open", 784), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "override_flag"), 0, (0)), 100000000, 0, -2675); (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2677)], (0)), 100000000, 0, -2676); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2678)]), 0, (("astlib/ast_405.ml", 396, 13869, 13873), ("astlib/ast_405.ml", 396, 13869, 13932), 0), 0, Tag1 ("Astlib__Ast_405", 181)); (("Pexp_extension", 785), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2679)]), 0, (("astlib/ast_405.ml", 400, 14014, 14018), ("astlib/ast_405.ml", 400, 14014, 14047), 0), 0, Tag1 ("Astlib__Ast_405", 182)); (("Pexp_unreachable", 786), (0), 0, (("astlib/ast_405.ml", 402, 14070, 14074), ("astlib/ast_405.ml", 402, 14070, 14092), 0), 0, Tag1 ("Astlib__Ast_405", 183))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -2576)), 0, 0, 0, 0, (("astlib/ast_405.ml", 286, 9491, 9493), ("astlib/ast_405.ml", 402, 14070, 14092), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 58)), 2, 0); Tag1 (("case", 7003), (0, 0, [[(("pc_lhs", 787), 0, (Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2572), (("astlib/ast_405.ml", 407, 14203, 14210), ("astlib/ast_405.ml", 407, 14203, 14226), 0), 0, Tag1 ("Astlib__Ast_405", 184)); (("pc_guard", 788), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2574)], (0)), 100000000, 0, -2573), (("astlib/ast_405.ml", 408, 14227, 14234), ("astlib/ast_405.ml", 408, 14227, 14262), 0), 0, Tag1 ("Astlib__Ast_405", 185)); (("pc_rhs", 789), 0, (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2575), (("astlib/ast_405.ml", 409, 14263, 14270), ("astlib/ast_405.ml", 409, 14263, 14289), 0), 0, Tag1 ("Astlib__Ast_405", 186))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -2571)), 0, 0, 0, 0, (("astlib/ast_405.ml", 405, 14112, 14114), ("astlib/ast_405.ml", 410, 14290, 14297), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 59)), 2, 0); Tag1 (("value_description", 7004), (0, 0, [[(("pval_name", 790), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2565)], (0)), 100000000, 0, -2564), (("astlib/ast_405.ml", 416, 14407, 14414), ("astlib/ast_405.ml", 416, 14407, 14436), 0), 0, Tag1 ("Astlib__Ast_405", 187)); (("pval_type", 791), 0, (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2566), (("astlib/ast_405.ml", 417, 14437, 14444), ("astlib/ast_405.ml", 417, 14437, 14465), 0), 0, Tag1 ("Astlib__Ast_405", 188)); (("pval_prim", 792), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2568)], (0)), 100000000, 0, -2567), (("astlib/ast_405.ml", 418, 14466, 14473), ("astlib/ast_405.ml", 418, 14466, 14496), 0), 0, Tag1 ("Astlib__Ast_405", 189)); (("pval_attributes", 793), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2569), (("astlib/ast_405.ml", 419, 14497, 14504), ("astlib/ast_405.ml", 419, 14497, 14532), 0), 0, Tag1 ("Astlib__Ast_405", 190)); (("pval_loc", 794), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2570), (("astlib/ast_405.ml", 420, 14560, 14567), ("astlib/ast_405.ml", 420, 14560, 14588), 0), 0, Tag1 ("Astlib__Ast_405", 191))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -2563)), 0, 0, 0, 0, (("astlib/ast_405.ml", 414, 14327, 14329), ("astlib/ast_405.ml", 421, 14589, 14596), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 60)), 2, 0); Tag1 (("type_declaration", 7005), (0, 0, [[(("ptype_name", 795), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2547)], (0)), 100000000, 0, -2546), (("astlib/ast_405.ml", 432, 14830, 14837), ("astlib/ast_405.ml", 432, 14830, 14860), 0), 0, Tag1 ("Astlib__Ast_405", 192)); (("ptype_params", 796), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2550); (Tag3 (Tag1 ((("Asttypes", 6975)), "variance"), 0, (0)), 100000000, 0, -2551)]), 100000000, 0, -2549)], (0)), 100000000, 0, -2548), (("astlib/ast_405.ml", 433, 14861, 14868), ("astlib/ast_405.ml", 433, 14861, 14910), 0), 0, Tag1 ("Astlib__Ast_405", 193)); (("ptype_cstrs", 797), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2554); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2555); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2556)]), 100000000, 0, -2553)], (0)), 100000000, 0, -2552), (("astlib/ast_405.ml", 435, 14964, 14971), ("astlib/ast_405.ml", 435, 14964, 15026), 0), 0, Tag1 ("Astlib__Ast_405", 194)); (("ptype_kind", 798), 0, (Tag3 ((("type_kind", 7006)), 0, (0)), 100000000, 0, -2557), (("astlib/ast_405.ml", 437, 15091, 15098), ("astlib/ast_405.ml", 437, 15091, 15120), 0), 0, Tag1 ("Astlib__Ast_405", 195)); (("ptype_private", 799), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "private_flag"), 0, (0)), 100000000, 0, -2558), (("astlib/ast_405.ml", 438, 15121, 15128), ("astlib/ast_405.ml", 438, 15121, 15156), 0), 0, Tag1 ("Astlib__Ast_405", 196)); (("ptype_manifest", 800), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2560)], (0)), 100000000, 0, -2559), (("astlib/ast_405.ml", 439, 15179, 15186), ("astlib/ast_405.ml", 439, 15179, 15219), 0), 0, Tag1 ("Astlib__Ast_405", 197)); (("ptype_attributes", 801), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2561), (("astlib/ast_405.ml", 440, 15231, 15238), ("astlib/ast_405.ml", 440, 15231, 15267), 0), 0, Tag1 ("Astlib__Ast_405", 198)); (("ptype_loc", 802), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2562), (("astlib/ast_405.ml", 441, 15296, 15303), ("astlib/ast_405.ml", 441, 15296, 15325), 0), 0, Tag1 ("Astlib__Ast_405", 199))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -2545)), 0, 0, 0, 0, (("astlib/ast_405.ml", 430, 14752, 14754), ("astlib/ast_405.ml", 442, 15326, 15333), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 61)), 2, 0); Tag1 (("type_kind", 7006), (0, 0, Tag1 ([(("Ptype_abstract", 803), (0), 0, (("astlib/ast_405.ml", 455, 15787, 15791), ("astlib/ast_405.ml", 455, 15787, 15807), 0), 0, Tag1 ("Astlib__Ast_405", 200)); (("Ptype_variant", 804), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7008)), 0, (0)), 100000000, 0, -2542)], (0)), 100000000, 0, -2541)]), 0, (("astlib/ast_405.ml", 456, 15808, 15812), ("astlib/ast_405.ml", 456, 15808, 15859), 0), 0, Tag1 ("Astlib__Ast_405", 201)); (("Ptype_record", 805), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7007)), 0, (0)), 100000000, 0, -2544)], (0)), 100000000, 0, -2543)]), 0, (("astlib/ast_405.ml", 458, 15902, 15906), ("astlib/ast_405.ml", 458, 15902, 15946), 0), 0, Tag1 ("Astlib__Ast_405", 202)); (("Ptype_open", 806), (0), 0, (("astlib/ast_405.ml", 460, 15989, 15993), ("astlib/ast_405.ml", 460, 15989, 16005), 0), 0, Tag1 ("Astlib__Ast_405", 203))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -2540)), 0, 0, 0, 0, (("astlib/ast_405.ml", 454, 15731, 15733), ("astlib/ast_405.ml", 460, 15989, 16005), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 62)), 2, 0); Tag1 (("label_declaration", 7007), (0, 0, [[(("pld_name", 807), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2535)], (0)), 100000000, 0, -2534), (("astlib/ast_405.ml", 464, 16087, 16094), ("astlib/ast_405.ml", 464, 16087, 16115), 0), 0, Tag1 ("Astlib__Ast_405", 204)); (("pld_mutable", 808), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "mutable_flag"), 0, (0)), 100000000, 0, -2536), (("astlib/ast_405.ml", 465, 16116, 16123), ("astlib/ast_405.ml", 465, 16116, 16149), 0), 0, Tag1 ("Astlib__Ast_405", 205)); (("pld_type", 809), 0, (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2537), (("astlib/ast_405.ml", 466, 16150, 16157), ("astlib/ast_405.ml", 466, 16150, 16177), 0), 0, Tag1 ("Astlib__Ast_405", 206)); (("pld_loc", 810), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2538), (("astlib/ast_405.ml", 467, 16178, 16185), ("astlib/ast_405.ml", 467, 16178, 16205), 0), 0, Tag1 ("Astlib__Ast_405", 207)); (("pld_attributes", 811), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2539), (("astlib/ast_405.ml", 468, 16206, 16213), ("astlib/ast_405.ml", 468, 16206, 16240), 0), 0, Tag1 ("Astlib__Ast_405", 208))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -2533)), 0, 0, 0, 0, (("astlib/ast_405.ml", 462, 16007, 16009), ("astlib/ast_405.ml", 469, 16267, 16274), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 63)), 2, 0); Tag1 (("constructor_declaration", 7008), (0, 0, [[(("pcd_name", 812), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2527)], (0)), 100000000, 0, -2526), (("astlib/ast_405.ml", 479, 16519, 16526), ("astlib/ast_405.ml", 479, 16519, 16547), 0), 0, Tag1 ("Astlib__Ast_405", 209)); (("pcd_args", 813), 0, (Tag3 ((("constructor_arguments", 7009)), 0, (0)), 100000000, 0, -2528), (("astlib/ast_405.ml", 480, 16548, 16555), ("astlib/ast_405.ml", 480, 16548, 16587), 0), 0, Tag1 ("Astlib__Ast_405", 210)); (("pcd_res", 814), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2530)], (0)), 100000000, 0, -2529), (("astlib/ast_405.ml", 481, 16588, 16595), ("astlib/ast_405.ml", 481, 16588, 16621), 0), 0, Tag1 ("Astlib__Ast_405", 211)); (("pcd_loc", 815), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2531), (("astlib/ast_405.ml", 482, 16622, 16629), ("astlib/ast_405.ml", 482, 16622, 16649), 0), 0, Tag1 ("Astlib__Ast_405", 212)); (("pcd_attributes", 816), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2532), (("astlib/ast_405.ml", 483, 16650, 16657), ("astlib/ast_405.ml", 483, 16650, 16684), 0), 0, Tag1 ("Astlib__Ast_405", 213))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -2525)), 0, 0, 0, 0, (("astlib/ast_405.ml", 477, 16427, 16429), ("astlib/ast_405.ml", 484, 16714, 16721), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 64)), 2, 0); Tag1 (("constructor_arguments", 7009), (0, 0, Tag1 ([(("Pcstr_tuple", 817), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2522)], (0)), 100000000, 0, -2521)]), 0, (("astlib/ast_405.ml", 487, 16803, 16807), ("astlib/ast_405.ml", 487, 16803, 16838), 0), 0, Tag1 ("Astlib__Ast_405", 214)); (("Pcstr_record", 818), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7007)), 0, (0)), 100000000, 0, -2524)], (0)), 100000000, 0, -2523)]), 0, (("astlib/ast_405.ml", 488, 16839, 16843), ("astlib/ast_405.ml", 488, 16839, 16883), 0), 0, Tag1 ("Astlib__Ast_405", 215))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -2520)), 0, 0, 0, 0, (("astlib/ast_405.ml", 486, 16723, 16725), ("astlib/ast_405.ml", 488, 16839, 16883), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 65)), 2, 0); Tag1 (("type_extension", 7010), (0, 0, [[(("ptyext_path", 819), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2511)], (0)), 100000000, 0, -2510), (("astlib/ast_405.ml", 501, 17357, 17364), ("astlib/ast_405.ml", 501, 17357, 17393), 0), 0, Tag1 ("Astlib__Ast_405", 216)); (("ptyext_params", 820), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2514); (Tag3 (Tag1 ((("Asttypes", 6975)), "variance"), 0, (0)), 100000000, 0, -2515)]), 100000000, 0, -2513)], (0)), 100000000, 0, -2512), (("astlib/ast_405.ml", 502, 17394, 17401), ("astlib/ast_405.ml", 502, 17394, 17444), 0), 0, Tag1 ("Astlib__Ast_405", 217)); (("ptyext_constructors", 821), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7011)), 0, (0)), 100000000, 0, -2517)], (0)), 100000000, 0, -2516), (("astlib/ast_405.ml", 503, 17445, 17452), ("astlib/ast_405.ml", 503, 17445, 17500), 0), 0, Tag1 ("Astlib__Ast_405", 218)); (("ptyext_private", 822), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "private_flag"), 0, (0)), 100000000, 0, -2518), (("astlib/ast_405.ml", 504, 17501, 17508), ("astlib/ast_405.ml", 504, 17501, 17537), 0), 0, Tag1 ("Astlib__Ast_405", 219)); (("ptyext_attributes", 823), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2519), (("astlib/ast_405.ml", 505, 17538, 17545), ("astlib/ast_405.ml", 505, 17538, 17575), 0), 0, Tag1 ("Astlib__Ast_405", 220))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -2509)), 0, 0, 0, 0, (("astlib/ast_405.ml", 499, 17283, 17285), ("astlib/ast_405.ml", 506, 17604, 17611), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 66)), 2, 0); Tag1 (("extension_constructor", 7011), (0, 0, [[(("pext_name", 824), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2505)], (0)), 100000000, 0, -2504), (("astlib/ast_405.ml", 513, 17729, 17736), ("astlib/ast_405.ml", 513, 17729, 17758), 0), 0, Tag1 ("Astlib__Ast_405", 221)); (("pext_kind", 825), 0, (Tag3 ((("extension_constructor_kind", 7012)), 0, (0)), 100000000, 0, -2506), (("astlib/ast_405.ml", 514, 17759, 17766), ("astlib/ast_405.ml", 514, 17759, 17805), 0), 0, Tag1 ("Astlib__Ast_405", 222)); (("pext_loc", 826), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2507), (("astlib/ast_405.ml", 515, 17806, 17813), ("astlib/ast_405.ml", 515, 17806, 17835), 0), 0, Tag1 ("Astlib__Ast_405", 223)); (("pext_attributes", 827), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2508), (("astlib/ast_405.ml", 516, 17836, 17843), ("astlib/ast_405.ml", 516, 17836, 17871), 0), 0, Tag1 ("Astlib__Ast_405", 224))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -2503)), 0, 0, 0, 0, (("astlib/ast_405.ml", 511, 17641, 17643), ("astlib/ast_405.ml", 517, 17901, 17908), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 67)), 2, 0); Tag1 (("extension_constructor_kind", 7012), (0, 0, Tag1 ([(("Pext_decl", 828), ([(Tag3 ((("constructor_arguments", 7009)), 0, (0)), 100000000, 0, -2498); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2500)], (0)), 100000000, 0, -2499)]), 0, (("astlib/ast_405.ml", 520, 18000, 18006), ("astlib/ast_405.ml", 520, 18000, 18059), 0), 0, Tag1 ("Astlib__Ast_405", 225)); (("Pext_rebind", 829), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2502)], (0)), 100000000, 0, -2501)]), 0, (("astlib/ast_405.ml", 526, 18252, 18256), ("astlib/ast_405.ml", 526, 18252, 18288), 0), 0, Tag1 ("Astlib__Ast_405", 226))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -2497)), 0, 0, 0, 0, (("astlib/ast_405.ml", 519, 17910, 17912), ("astlib/ast_405.ml", 526, 18252, 18288), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 68)), 2, 0); Tag1 (("class_type", 7013), (0, 0, [[(("pcty_desc", 830), 0, (Tag3 ((("class_type_desc", 7014)), 0, (0)), 100000000, 0, -2494), (("astlib/ast_405.ml", 537, 18476, 18483), ("astlib/ast_405.ml", 537, 18476, 18510), 0), 0, Tag1 ("Astlib__Ast_405", 227)); (("pcty_loc", 831), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2495), (("astlib/ast_405.ml", 538, 18511, 18518), ("astlib/ast_405.ml", 538, 18511, 18539), 0), 0, Tag1 ("Astlib__Ast_405", 228)); (("pcty_attributes", 832), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2496), (("astlib/ast_405.ml", 539, 18540, 18547), ("astlib/ast_405.ml", 539, 18540, 18575), 0), 0, Tag1 ("Astlib__Ast_405", 229))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -2493)), 0, 0, 0, 0, (("astlib/ast_405.ml", 535, 18410, 18412), ("astlib/ast_405.ml", 540, 18600, 18607), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 69)), 2, 0); Tag1 (("class_type_desc", 7014), (0, 0, Tag1 ([(("Pcty_constr", 833), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2485)], (0)), 100000000, 0, -2484); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2487)], (0)), 100000000, 0, -2486)]), 0, (("astlib/ast_405.ml", 543, 18677, 18681), ("astlib/ast_405.ml", 543, 18677, 18730), 0), 0, Tag1 ("Astlib__Ast_405", 230)); (("Pcty_signature", 834), ([(Tag3 ((("class_signature", 7015)), 0, (0)), 100000000, 0, -2488)]), 0, (("astlib/ast_405.ml", 546, 18780, 18784), ("astlib/ast_405.ml", 546, 18780, 18819), 0), 0, Tag1 ("Astlib__Ast_405", 231)); (("Pcty_arrow", 835), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "arg_label"), 0, (0)), 100000000, 0, -2489); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2490); (Tag3 ((("class_type", 7013)), 0, (0)), 100000000, 0, -2491)]), 0, (("astlib/ast_405.ml", 548, 18851, 18855), ("astlib/ast_405.ml", 548, 18851, 18905), 0), 0, Tag1 ("Astlib__Ast_405", 232)); (("Pcty_extension", 836), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2492)]), 0, (("astlib/ast_405.ml", 553, 19030, 19034), ("astlib/ast_405.ml", 553, 19030, 19063), 0), 0, Tag1 ("Astlib__Ast_405", 233))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -2483)), 0, 0, 0, 0, (("astlib/ast_405.ml", 542, 18609, 18611), ("astlib/ast_405.ml", 553, 19030, 19063), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 70)), 2, 0); Tag1 (("class_signature", 7015), (0, 0, [[(("pcsig_self", 837), 0, (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2480), (("astlib/ast_405.ml", 558, 19163, 19170), ("astlib/ast_405.ml", 558, 19163, 19192), 0), 0, Tag1 ("Astlib__Ast_405", 234)); (("pcsig_fields", 838), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7016)), 0, (0)), 100000000, 0, -2482)], (0)), 100000000, 0, -2481), (("astlib/ast_405.ml", 559, 19193, 19200), ("astlib/ast_405.ml", 559, 19193, 19236), 0), 0, Tag1 ("Astlib__Ast_405", 235))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -2479)), 0, 0, 0, 0, (("astlib/ast_405.ml", 556, 19087, 19089), ("astlib/ast_405.ml", 560, 19237, 19244), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 71)), 2, 0); Tag1 (("class_type_field", 7016), (0, 0, [[(("pctf_desc", 839), 0, (Tag3 ((("class_type_field_desc", 7017)), 0, (0)), 100000000, 0, -2476), (("astlib/ast_405.ml", 567, 19410, 19417), ("astlib/ast_405.ml", 567, 19410, 19450), 0), 0, Tag1 ("Astlib__Ast_405", 236)); (("pctf_loc", 840), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2477), (("astlib/ast_405.ml", 568, 19451, 19458), ("astlib/ast_405.ml", 568, 19451, 19479), 0), 0, Tag1 ("Astlib__Ast_405", 237)); (("pctf_attributes", 841), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2478), (("astlib/ast_405.ml", 569, 19480, 19487), ("astlib/ast_405.ml", 569, 19480, 19515), 0), 0, Tag1 ("Astlib__Ast_405", 238))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -2475)), 0, 0, 0, 0, (("astlib/ast_405.ml", 565, 19332, 19334), ("astlib/ast_405.ml", 570, 19542, 19549), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 72)), 2, 0); Tag1 (("class_type_field_desc", 7017), (0, 0, Tag1 ([(("Pctf_inherit", 842), ([(Tag3 ((("class_type", 7013)), 0, (0)), 100000000, 0, -2457)]), 0, (("astlib/ast_405.ml", 573, 19631, 19635), ("astlib/ast_405.ml", 573, 19631, 19663), 0), 0, Tag1 ("Astlib__Ast_405", 239)); (("Pctf_val", 843), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2460)], (0)), 100000000, 0, -2459); (Tag3 (Tag1 ((("Asttypes", 6975)), "mutable_flag"), 0, (0)), 100000000, 0, -2461); (Tag3 (Tag1 ((("Asttypes", 6975)), "virtual_flag"), 0, (0)), 100000000, 0, -2462); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2463)]), 100000000, 0, -2458)]), 0, (("astlib/ast_405.ml", 575, 19691, 19695), ("astlib/ast_405.ml", 575, 19691, 19763), 0), 0, Tag1 ("Astlib__Ast_405", 240)); (("Pctf_method", 844), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2466)], (0)), 100000000, 0, -2465); (Tag3 (Tag1 ((("Asttypes", 6975)), "private_flag"), 0, (0)), 100000000, 0, -2467); (Tag3 (Tag1 ((("Asttypes", 6975)), "virtual_flag"), 0, (0)), 100000000, 0, -2468); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2469)]), 100000000, 0, -2464)]), 0, (("astlib/ast_405.ml", 577, 19789, 19793), ("astlib/ast_405.ml", 577, 19789, 19865), 0), 0, Tag1 ("Astlib__Ast_405", 241)); (("Pctf_constraint", 845), ([(Tag2 ([(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2471); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2472)]), 100000000, 0, -2470)]), 0, (("astlib/ast_405.ml", 582, 19947, 19951), ("astlib/ast_405.ml", 582, 19947, 19996), 0), 0, Tag1 ("Astlib__Ast_405", 242)); (("Pctf_attribute", 846), ([(Tag3 ((("attribute", 6991)), 0, (0)), 100000000, 0, -2473)]), 0, (("astlib/ast_405.ml", 584, 20032, 20036), ("astlib/ast_405.ml", 584, 20032, 20065), 0), 0, Tag1 ("Astlib__Ast_405", 243)); (("Pctf_extension", 847), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2474)]), 0, (("astlib/ast_405.ml", 586, 20090, 20094), ("astlib/ast_405.ml", 586, 20090, 20123), 0), 0, Tag1 ("Astlib__Ast_405", 244))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -2456)), 0, 0, 0, 0, (("astlib/ast_405.ml", 572, 19551, 19553), ("astlib/ast_405.ml", 586, 20090, 20123), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 73)), 2, 0); Tag1 (("class_infos", 7018), ([((("a")), 100000000, 0, -2446)], 1, [[(("pci_virt", 848), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "virtual_flag"), 0, (0)), 100000000, 0, -2447), (("astlib/ast_405.ml", 591, 20222, 20229), ("astlib/ast_405.ml", 591, 20222, 20252), 0), 0, Tag1 ("Astlib__Ast_405", 245)); (("pci_params", 849), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2450); (Tag3 (Tag1 ((("Asttypes", 6975)), "variance"), 0, (0)), 100000000, 0, -2451)]), 100000000, 0, -2449)], (0)), 100000000, 0, -2448), (("astlib/ast_405.ml", 592, 20253, 20260), ("astlib/ast_405.ml", 592, 20253, 20300), 0), 0, Tag1 ("Astlib__Ast_405", 246)); (("pci_name", 850), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2453)], (0)), 100000000, 0, -2452), (("astlib/ast_405.ml", 593, 20301, 20308), ("astlib/ast_405.ml", 593, 20301, 20329), 0), 0, Tag1 ("Astlib__Ast_405", 247)); (("pci_expr", 851), 0, ((("a")), 100000000, 0, -2446), (("astlib/ast_405.ml", 594, 20330, 20337), ("astlib/ast_405.ml", 594, 20330, 20350), 0), 0, Tag1 ("Astlib__Ast_405", 248)); (("pci_loc", 852), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2454), (("astlib/ast_405.ml", 595, 20351, 20358), ("astlib/ast_405.ml", 595, 20351, 20378), 0), 0, Tag1 ("Astlib__Ast_405", 249)); (("pci_attributes", 853), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2455), (("astlib/ast_405.ml", 596, 20379, 20386), ("astlib/ast_405.ml", 596, 20379, 20413), 0), 0, Tag1 ("Astlib__Ast_405", 250))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -2446)], (0)), 100000000, 0, -2445)), [25], [0], 0, 0, (("astlib/ast_405.ml", 589, 20148, 20150), ("astlib/ast_405.ml", 597, 20441, 20448), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 74)), 2, 0); Tag1 (("class_description", 7019), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7018)), [(Tag3 ((("class_type", 7013)), 0, (0)), 100000000, 0, -2444)], (0)), 100000000, 0, -2443)), 0, 0, 0, 0, (("astlib/ast_405.ml", 605, 20580, 20582), ("astlib/ast_405.ml", 605, 20580, 20628), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 75)), 2, 0); Tag1 (("class_type_declaration", 7020), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7018)), [(Tag3 ((("class_type", 7013)), 0, (0)), 100000000, 0, -2442)], (0)), 100000000, 0, -2441)), 0, 0, 0, 0, (("astlib/ast_405.ml", 607, 20630, 20632), ("astlib/ast_405.ml", 607, 20630, 20683), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 76)), 2, 0); Tag1 (("class_expr", 7021), (0, 0, [[(("pcl_desc", 854), 0, (Tag3 ((("class_expr_desc", 7022)), 0, (0)), 100000000, 0, -2438), (("astlib/ast_405.ml", 613, 20801, 20808), ("astlib/ast_405.ml", 613, 20801, 20834), 0), 0, Tag1 ("Astlib__Ast_405", 251)); (("pcl_loc", 855), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2439), (("astlib/ast_405.ml", 614, 20835, 20842), ("astlib/ast_405.ml", 614, 20835, 20862), 0), 0, Tag1 ("Astlib__Ast_405", 252)); (("pcl_attributes", 856), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2440), (("astlib/ast_405.ml", 615, 20863, 20870), ("astlib/ast_405.ml", 615, 20863, 20897), 0), 0, Tag1 ("Astlib__Ast_405", 253))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -2437)), 0, 0, 0, 0, (("astlib/ast_405.ml", 611, 20735, 20737), ("astlib/ast_405.ml", 616, 20922, 20929), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 77)), 2, 0); Tag1 (("class_expr_desc", 7022), (0, 0, Tag1 ([(("Pcl_constr", 857), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2416)], (0)), 100000000, 0, -2415); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2418)], (0)), 100000000, 0, -2417)]), 0, (("astlib/ast_405.ml", 619, 20999, 21003), ("astlib/ast_405.ml", 619, 20999, 21051), 0), 0, Tag1 ("Astlib__Ast_405", 254)); (("Pcl_structure", 858), ([(Tag3 ((("class_structure", 7023)), 0, (0)), 100000000, 0, -2419)]), 0, (("astlib/ast_405.ml", 622, 21101, 21105), ("astlib/ast_405.ml", 622, 21101, 21139), 0), 0, Tag1 ("Astlib__Ast_405", 255)); (("Pcl_fun", 859), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "arg_label"), 0, (0)), 100000000, 0, -2420); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2422)], (0)), 100000000, 0, -2421); (Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2423); (Tag3 ((("class_expr", 7021)), 0, (0)), 100000000, 0, -2424)]), 0, (("astlib/ast_405.ml", 624, 21171, 21175), ("astlib/ast_405.ml", 624, 21171, 21240), 0), 0, Tag1 ("Astlib__Ast_405", 256)); (("Pcl_apply", 860), ([(Tag3 ((("class_expr", 7021)), 0, (0)), 100000000, 0, -2425); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "arg_label"), 0, (0)), 100000000, 0, -2428); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2429)]), 100000000, 0, -2427)], (0)), 100000000, 0, -2426)]), 0, (("astlib/ast_405.ml", 630, 21530, 21534), ("astlib/ast_405.ml", 630, 21530, 21591), 0), 0, Tag1 ("Astlib__Ast_405", 257)); (("Pcl_let", 861), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "rec_flag"), 0, (0)), 100000000, 0, -2430); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7045)), 0, (0)), 100000000, 0, -2432)], (0)), 100000000, 0, -2431); (Tag3 ((("class_expr", 7021)), 0, (0)), 100000000, 0, -2433)]), 0, (("astlib/ast_405.ml", 637, 21775, 21779), ("astlib/ast_405.ml", 637, 21775, 21834), 0), 0, Tag1 ("Astlib__Ast_405", 258)); (("Pcl_constraint", 862), ([(Tag3 ((("class_expr", 7021)), 0, (0)), 100000000, 0, -2434); (Tag3 ((("class_type", 7013)), 0, (0)), 100000000, 0, -2435)]), 0, (("astlib/ast_405.ml", 641, 22002, 22006), ("astlib/ast_405.ml", 641, 22002, 22049), 0), 0, Tag1 ("Astlib__Ast_405", 259)); (("Pcl_extension", 863), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2436)]), 0, (("astlib/ast_405.ml", 643, 22076, 22080), ("astlib/ast_405.ml", 643, 22076, 22108), 0), 0, Tag1 ("Astlib__Ast_405", 260))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -2414)), 0, 0, 0, 0, (("astlib/ast_405.ml", 618, 20931, 20933), ("astlib/ast_405.ml", 643, 22076, 22108), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 78)), 2, 0); Tag1 (("class_structure", 7023), (0, 0, [[(("pcstr_self", 864), 0, (Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2411), (("astlib/ast_405.ml", 648, 22208, 22215), ("astlib/ast_405.ml", 648, 22208, 22235), 0), 0, Tag1 ("Astlib__Ast_405", 261)); (("pcstr_fields", 865), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7024)), 0, (0)), 100000000, 0, -2413)], (0)), 100000000, 0, -2412), (("astlib/ast_405.ml", 649, 22236, 22243), ("astlib/ast_405.ml", 649, 22236, 22274), 0), 0, Tag1 ("Astlib__Ast_405", 262))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -2410)), 0, 0, 0, 0, (("astlib/ast_405.ml", 646, 22132, 22134), ("astlib/ast_405.ml", 650, 22275, 22282), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 79)), 2, 0); Tag1 (("class_field", 7024), (0, 0, [[(("pcf_desc", 866), 0, (Tag3 ((("class_field_desc", 7025)), 0, (0)), 100000000, 0, -2407), (("astlib/ast_405.ml", 657, 22435, 22442), ("astlib/ast_405.ml", 657, 22435, 22469), 0), 0, Tag1 ("Astlib__Ast_405", 263)); (("pcf_loc", 867), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2408), (("astlib/ast_405.ml", 658, 22470, 22477), ("astlib/ast_405.ml", 658, 22470, 22497), 0), 0, Tag1 ("Astlib__Ast_405", 264)); (("pcf_attributes", 868), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2409), (("astlib/ast_405.ml", 659, 22498, 22505), ("astlib/ast_405.ml", 659, 22498, 22532), 0), 0, Tag1 ("Astlib__Ast_405", 265))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -2406)), 0, 0, 0, 0, (("astlib/ast_405.ml", 655, 22367, 22369), ("astlib/ast_405.ml", 660, 22559, 22566), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 80)), 2, 0); Tag1 (("class_field_desc", 7025), (0, 0, Tag1 ([(("Pcf_inherit", 869), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "override_flag"), 0, (0)), 100000000, 0, -2385); (Tag3 ((("class_expr", 7021)), 0, (0)), 100000000, 0, -2386); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2389)], (0)), 100000000, 0, -2388)], (0)), 100000000, 0, -2387)]), 0, (("astlib/ast_405.ml", 663, 22638, 22642), ("astlib/ast_405.ml", 663, 22638, 22705), 0), 0, Tag1 ("Astlib__Ast_405", 266)); (("Pcf_val", 870), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2392)], (0)), 100000000, 0, -2391); (Tag3 (Tag1 ((("Asttypes", 6975)), "mutable_flag"), 0, (0)), 100000000, 0, -2393); (Tag3 ((("class_field_kind", 7026)), 0, (0)), 100000000, 0, -2394)]), 100000000, 0, -2390)]), 0, (("astlib/ast_405.ml", 669, 22828, 22832), ("astlib/ast_405.ml", 669, 22828, 22891), 0), 0, Tag1 ("Astlib__Ast_405", 267)); (("Pcf_method", 871), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2397)], (0)), 100000000, 0, -2396); (Tag3 (Tag1 ((("Asttypes", 6975)), "private_flag"), 0, (0)), 100000000, 0, -2398); (Tag3 ((("class_field_kind", 7026)), 0, (0)), 100000000, 0, -2399)]), 100000000, 0, -2395)]), 0, (("astlib/ast_405.ml", 673, 22959, 22963), ("astlib/ast_405.ml", 673, 22959, 23025), 0), 0, Tag1 ("Astlib__Ast_405", 268)); (("Pcf_constraint", 872), ([(Tag2 ([(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2401); (Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2402)]), 100000000, 0, -2400)]), 0, (("astlib/ast_405.ml", 677, 23160, 23164), ("astlib/ast_405.ml", 677, 23160, 23207), 0), 0, Tag1 ("Astlib__Ast_405", 269)); (("Pcf_initializer", 873), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2403)]), 0, (("astlib/ast_405.ml", 679, 23243, 23247), ("astlib/ast_405.ml", 679, 23243, 23278), 0), 0, Tag1 ("Astlib__Ast_405", 270)); (("Pcf_attribute", 874), ([(Tag3 ((("attribute", 6991)), 0, (0)), 100000000, 0, -2404)]), 0, (("astlib/ast_405.ml", 681, 23309, 23313), ("astlib/ast_405.ml", 681, 23309, 23341), 0), 0, Tag1 ("Astlib__Ast_405", 271)); (("Pcf_extension", 875), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2405)]), 0, (("astlib/ast_405.ml", 683, 23366, 23370), ("astlib/ast_405.ml", 683, 23366, 23398), 0), 0, Tag1 ("Astlib__Ast_405", 272))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -2384)), 0, 0, 0, 0, (("astlib/ast_405.ml", 662, 22568, 22570), ("astlib/ast_405.ml", 683, 23366, 23398), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 81)), 2, 0); Tag1 (("class_field_kind", 7026), (0, 0, Tag1 ([(("Cfk_virtual", 876), ([(Tag3 ((("core_type", 6995)), 0, (0)), 100000000, 0, -2381)]), 0, (("astlib/ast_405.ml", 687, 23493, 23497), ("astlib/ast_405.ml", 687, 23493, 23523), 0), 0, Tag1 ("Astlib__Ast_405", 273)); (("Cfk_concrete", 877), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "override_flag"), 0, (0)), 100000000, 0, -2382); (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2383)]), 0, (("astlib/ast_405.ml", 688, 23524, 23528), ("astlib/ast_405.ml", 688, 23524, 23572), 0), 0, Tag1 ("Astlib__Ast_405", 274))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -2380)), 0, 0, 0, 0, (("astlib/ast_405.ml", 686, 23423, 23425), ("astlib/ast_405.ml", 688, 23524, 23572), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 82)), 2, 0); Tag1 (("class_declaration", 7027), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7018)), [(Tag3 ((("class_expr", 7021)), 0, (0)), 100000000, 0, -2379)], (0)), 100000000, 0, -2378)), 0, 0, 0, 0, (("astlib/ast_405.ml", 690, 23574, 23576), ("astlib/ast_405.ml", 690, 23574, 23622), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 83)), 2, 0); Tag1 (("module_type", 7028), (0, 0, [[(("pmty_desc", 878), 0, (Tag3 ((("module_type_desc", 7029)), 0, (0)), 100000000, 0, -2375), (("astlib/ast_405.ml", 698, 23772, 23779), ("astlib/ast_405.ml", 698, 23772, 23807), 0), 0, Tag1 ("Astlib__Ast_405", 275)); (("pmty_loc", 879), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2376), (("astlib/ast_405.ml", 699, 23808, 23815), ("astlib/ast_405.ml", 699, 23808, 23836), 0), 0, Tag1 ("Astlib__Ast_405", 276)); (("pmty_attributes", 880), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2377), (("astlib/ast_405.ml", 700, 23837, 23844), ("astlib/ast_405.ml", 700, 23837, 23872), 0), 0, Tag1 ("Astlib__Ast_405", 277))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -2374)), 0, 0, 0, 0, (("astlib/ast_405.ml", 696, 23704, 23706), ("astlib/ast_405.ml", 701, 23897, 23904), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 84)), 2, 0); Tag1 (("module_type_desc", 7029), (0, 0, Tag1 ([(("Pmty_ident", 881), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2360)], (0)), 100000000, 0, -2359)]), 0, (("astlib/ast_405.ml", 704, 23976, 23980), ("astlib/ast_405.ml", 704, 23976, 24011), 0), 0, Tag1 ("Astlib__Ast_405", 278)); (("Pmty_signature", 882), ([(Tag3 ((("signature", 7030)), 0, (0)), 100000000, 0, -2361)]), 0, (("astlib/ast_405.ml", 706, 24030, 24034), ("astlib/ast_405.ml", 706, 24030, 24063), 0), 0, Tag1 ("Astlib__Ast_405", 279)); (("Pmty_functor", 883), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2363)], (0)), 100000000, 0, -2362); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7028)), 0, (0)), 100000000, 0, -2365)], (0)), 100000000, 0, -2364); (Tag3 ((("module_type", 7028)), 0, (0)), 100000000, 0, -2366)]), 0, (("astlib/ast_405.ml", 708, 24092, 24096), ("astlib/ast_405.ml", 708, 24092, 24159), 0), 0, Tag1 ("Astlib__Ast_405", 280)); (("Pmty_with", 884), ([(Tag3 ((("module_type", 7028)), 0, (0)), 100000000, 0, -2367); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7039)), 0, (0)), 100000000, 0, -2369)], (0)), 100000000, 0, -2368)]), 0, (("astlib/ast_405.ml", 710, 24200, 24204), ("astlib/ast_405.ml", 710, 24200, 24253), 0), 0, Tag1 ("Astlib__Ast_405", 281)); (("Pmty_typeof", 885), ([(Tag3 ((("module_expr", 7040)), 0, (0)), 100000000, 0, -2370)]), 0, (("astlib/ast_405.ml", 712, 24282, 24286), ("astlib/ast_405.ml", 712, 24282, 24314), 0), 0, Tag1 ("Astlib__Ast_405", 282)); (("Pmty_extension", 886), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2371)]), 0, (("astlib/ast_405.ml", 714, 24349, 24353), ("astlib/ast_405.ml", 714, 24349, 24382), 0), 0, Tag1 ("Astlib__Ast_405", 283)); (("Pmty_alias", 887), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2373)], (0)), 100000000, 0, -2372)]), 0, (("astlib/ast_405.ml", 716, 24405, 24409), ("astlib/ast_405.ml", 716, 24405, 24440), 0), 0, Tag1 ("Astlib__Ast_405", 284))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -2358)), 0, 0, 0, 0, (("astlib/ast_405.ml", 703, 23906, 23908), ("astlib/ast_405.ml", 716, 24405, 24440), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 85)), 2, 0); Tag1 (("signature", 7030), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7031)), 0, (0)), 100000000, 0, -2357)], (0)), 100000000, 0, -2356)), 0, 0, 0, 0, (("astlib/ast_405.ml", 719, 24469, 24471), ("astlib/ast_405.ml", 719, 24469, 24506), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 86)), 2, 0); Tag1 (("signature_item", 7031), (0, 0, [[(("psig_desc", 888), 0, (Tag3 ((("signature_item_desc", 7032)), 0, (0)), 100000000, 0, -2354), (("astlib/ast_405.ml", 723, 24582, 24589), ("astlib/ast_405.ml", 723, 24582, 24620), 0), 0, Tag1 ("Astlib__Ast_405", 285)); (("psig_loc", 889), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2355), (("astlib/ast_405.ml", 724, 24621, 24628), ("astlib/ast_405.ml", 724, 24621, 24649), 0), 0, Tag1 ("Astlib__Ast_405", 286))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -2353)), 0, 0, 0, 0, (("astlib/ast_405.ml", 721, 24508, 24510), ("astlib/ast_405.ml", 725, 24650, 24657), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 87)), 2, 0); Tag1 (("signature_item_desc", 7032), (0, 0, Tag1 ([(("Psig_value", 890), ([(Tag3 ((("value_description", 7004)), 0, (0)), 100000000, 0, -2334)]), 0, (("astlib/ast_405.ml", 728, 24735, 24739), ("astlib/ast_405.ml", 728, 24735, 24772), 0), 0, Tag1 ("Astlib__Ast_405", 287)); (("Psig_type", 891), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "rec_flag"), 0, (0)), 100000000, 0, -2335); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7005)), 0, (0)), 100000000, 0, -2337)], (0)), 100000000, 0, -2336)]), 0, (("astlib/ast_405.ml", 733, 24863, 24867), ("astlib/ast_405.ml", 733, 24863, 24914), 0), 0, Tag1 ("Astlib__Ast_405", 288)); (("Psig_typext", 892), ([(Tag3 ((("type_extension", 7010)), 0, (0)), 100000000, 0, -2338)]), 0, (("astlib/ast_405.ml", 735, 24966, 24970), ("astlib/ast_405.ml", 735, 24966, 25001), 0), 0, Tag1 ("Astlib__Ast_405", 289)); (("Psig_exception", 893), ([(Tag3 ((("extension_constructor", 7011)), 0, (0)), 100000000, 0, -2339)]), 0, (("astlib/ast_405.ml", 737, 25033, 25037), ("astlib/ast_405.ml", 737, 25033, 25078), 0), 0, Tag1 ("Astlib__Ast_405", 290)); (("Psig_module", 894), ([(Tag3 ((("module_declaration", 7033)), 0, (0)), 100000000, 0, -2340)]), 0, (("astlib/ast_405.ml", 739, 25112, 25116), ("astlib/ast_405.ml", 739, 25112, 25151), 0), 0, Tag1 ("Astlib__Ast_405", 291)); (("Psig_recmodule", 895), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7033)), 0, (0)), 100000000, 0, -2342)], (0)), 100000000, 0, -2341)]), 0, (("astlib/ast_405.ml", 741, 25182, 25186), ("astlib/ast_405.ml", 741, 25182, 25229), 0), 0, Tag1 ("Astlib__Ast_405", 292)); (("Psig_modtype", 896), ([(Tag3 ((("module_type_declaration", 7034)), 0, (0)), 100000000, 0, -2343)]), 0, (("astlib/ast_405.ml", 743, 25287, 25291), ("astlib/ast_405.ml", 743, 25287, 25332), 0), 0, Tag1 ("Astlib__Ast_405", 293)); (("Psig_open", 897), ([(Tag3 ((("open_description", 7035)), 0, (0)), 100000000, 0, -2344)]), 0, (("astlib/ast_405.ml", 746, 25395, 25399), ("astlib/ast_405.ml", 746, 25395, 25430), 0), 0, Tag1 ("Astlib__Ast_405", 294)); (("Psig_include", 898), ([(Tag3 ((("include_description", 7037)), 0, (0)), 100000000, 0, -2345)]), 0, (("astlib/ast_405.ml", 748, 25454, 25458), ("astlib/ast_405.ml", 748, 25454, 25495), 0), 0, Tag1 ("Astlib__Ast_405", 295)); (("Psig_class", 899), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7019)), 0, (0)), 100000000, 0, -2347)], (0)), 100000000, 0, -2346)]), 0, (("astlib/ast_405.ml", 750, 25523, 25527), ("astlib/ast_405.ml", 750, 25523, 25565), 0), 0, Tag1 ("Astlib__Ast_405", 296)); (("Psig_class_type", 900), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7020)), 0, (0)), 100000000, 0, -2349)], (0)), 100000000, 0, -2348)]), 0, (("astlib/ast_405.ml", 752, 25618, 25622), ("astlib/ast_405.ml", 752, 25618, 25670), 0), 0, Tag1 ("Astlib__Ast_405", 297)); (("Psig_attribute", 901), ([(Tag3 ((("attribute", 6991)), 0, (0)), 100000000, 0, -2350)]), 0, (("astlib/ast_405.ml", 754, 25730, 25734), ("astlib/ast_405.ml", 754, 25730, 25763), 0), 0, Tag1 ("Astlib__Ast_405", 298)); (("Psig_extension", 902), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2351); (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2352)]), 0, (("astlib/ast_405.ml", 756, 25788, 25792), ("astlib/ast_405.ml", 756, 25788, 25834), 0), 0, Tag1 ("Astlib__Ast_405", 299))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -2333)), 0, 0, 0, 0, (("astlib/ast_405.ml", 727, 24659, 24661), ("astlib/ast_405.ml", 756, 25788, 25834), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 88)), 2, 0); Tag1 (("module_declaration", 7033), (0, 0, [[(("pmd_name", 903), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2329)], (0)), 100000000, 0, -2328), (("astlib/ast_405.ml", 761, 25941, 25948), ("astlib/ast_405.ml", 761, 25941, 25969), 0), 0, Tag1 ("Astlib__Ast_405", 300)); (("pmd_type", 904), 0, (Tag3 ((("module_type", 7028)), 0, (0)), 100000000, 0, -2330), (("astlib/ast_405.ml", 762, 25970, 25977), ("astlib/ast_405.ml", 762, 25970, 25999), 0), 0, Tag1 ("Astlib__Ast_405", 301)); (("pmd_attributes", 905), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2331), (("astlib/ast_405.ml", 763, 26000, 26007), ("astlib/ast_405.ml", 763, 26000, 26034), 0), 0, Tag1 ("Astlib__Ast_405", 302)); (("pmd_loc", 906), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2332), (("astlib/ast_405.ml", 764, 26061, 26068), ("astlib/ast_405.ml", 764, 26061, 26088), 0), 0, Tag1 ("Astlib__Ast_405", 303))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -2327)), 0, 0, 0, 0, (("astlib/ast_405.ml", 759, 25859, 25861), ("astlib/ast_405.ml", 765, 26089, 26096), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 89)), 2, 0); Tag1 (("module_type_declaration", 7034), (0, 0, [[(("pmtd_name", 907), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2322)], (0)), 100000000, 0, -2321), (("astlib/ast_405.ml", 770, 26205, 26212), ("astlib/ast_405.ml", 770, 26205, 26234), 0), 0, Tag1 ("Astlib__Ast_405", 304)); (("pmtd_type", 908), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7028)), 0, (0)), 100000000, 0, -2324)], (0)), 100000000, 0, -2323), (("astlib/ast_405.ml", 771, 26235, 26242), ("astlib/ast_405.ml", 771, 26235, 26272), 0), 0, Tag1 ("Astlib__Ast_405", 305)); (("pmtd_attributes", 909), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2325), (("astlib/ast_405.ml", 772, 26273, 26280), ("astlib/ast_405.ml", 772, 26273, 26308), 0), 0, Tag1 ("Astlib__Ast_405", 306)); (("pmtd_loc", 910), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2326), (("astlib/ast_405.ml", 773, 26335, 26342), ("astlib/ast_405.ml", 773, 26335, 26363), 0), 0, Tag1 ("Astlib__Ast_405", 307))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -2320)), 0, 0, 0, 0, (("astlib/ast_405.ml", 768, 26113, 26115), ("astlib/ast_405.ml", 774, 26364, 26371), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 90)), 2, 0); Tag1 (("open_description", 7035), (0, 0, [[(("popen_lid", 911), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2316)], (0)), 100000000, 0, -2315), (("astlib/ast_405.ml", 781, 26534, 26541), ("astlib/ast_405.ml", 781, 26534, 26568), 0), 0, Tag1 ("Astlib__Ast_405", 308)); (("popen_override", 912), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "override_flag"), 0, (0)), 100000000, 0, -2317), (("astlib/ast_405.ml", 782, 26569, 26576), ("astlib/ast_405.ml", 782, 26569, 26606), 0), 0, Tag1 ("Astlib__Ast_405", 309)); (("popen_loc", 913), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2318), (("astlib/ast_405.ml", 783, 26607, 26614), ("astlib/ast_405.ml", 783, 26607, 26636), 0), 0, Tag1 ("Astlib__Ast_405", 310)); (("popen_attributes", 914), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2319), (("astlib/ast_405.ml", 784, 26637, 26644), ("astlib/ast_405.ml", 784, 26637, 26673), 0), 0, Tag1 ("Astlib__Ast_405", 311))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "open_description"), 0, (0)), 100000000, 0, -2314)), 0, 0, 0, 0, (("astlib/ast_405.ml", 779, 26456, 26458), ("astlib/ast_405.ml", 785, 26674, 26681), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 91)), 2, 0); Tag1 (("include_infos", 7036), ([((("a")), 100000000, 0, -2311)], 1, [[(("pincl_mod", 915), 0, ((("a")), 100000000, 0, -2311), (("astlib/ast_405.ml", 793, 26929, 26936), ("astlib/ast_405.ml", 793, 26929, 26950), 0), 0, Tag1 ("Astlib__Ast_405", 312)); (("pincl_loc", 916), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2312), (("astlib/ast_405.ml", 794, 26951, 26958), ("astlib/ast_405.ml", 794, 26951, 26980), 0), 0, Tag1 ("Astlib__Ast_405", 313)); (("pincl_attributes", 917), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2313), (("astlib/ast_405.ml", 795, 26981, 26988), ("astlib/ast_405.ml", 795, 26981, 27017), 0), 0, Tag1 ("Astlib__Ast_405", 314))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -2311)], (0)), 100000000, 0, -2310)), [25], [0], 0, 0, (("astlib/ast_405.ml", 791, 26851, 26853), ("astlib/ast_405.ml", 796, 27018, 27025), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 92)), 2, 0); Tag1 (("include_description", 7037), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7036)), [(Tag3 ((("module_type", 7028)), 0, (0)), 100000000, 0, -2309)], (0)), 100000000, 0, -2308)), 0, 0, 0, 0, (("astlib/ast_405.ml", 798, 27027, 27029), ("astlib/ast_405.ml", 798, 27027, 27080), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 93)), 2, 0); Tag1 (("include_declaration", 7038), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7036)), [(Tag3 ((("module_expr", 7040)), 0, (0)), 100000000, 0, -2307)], (0)), 100000000, 0, -2306)), 0, 0, 0, 0, (("astlib/ast_405.ml", 801, 27101, 27103), ("astlib/ast_405.ml", 801, 27101, 27154), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 94)), 2, 0); Tag1 (("with_constraint", 7039), (0, 0, Tag1 ([(("Pwith_type", 918), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2295)], (0)), 100000000, 0, -2294); (Tag3 ((("type_declaration", 7005)), 0, (0)), 100000000, 0, -2296)]), 0, (("astlib/ast_405.ml", 805, 27243, 27247), ("astlib/ast_405.ml", 805, 27243, 27297), 0), 0, Tag1 ("Astlib__Ast_405", 315)); (("Pwith_module", 919), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2298)], (0)), 100000000, 0, -2297); (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2300)], (0)), 100000000, 0, -2299)]), 0, (("astlib/ast_405.ml", 810, 27448, 27452), ("astlib/ast_405.ml", 810, 27448, 27503), 0), 0, Tag1 ("Astlib__Ast_405", 316)); (("Pwith_typesubst", 920), ([(Tag3 ((("type_declaration", 7005)), 0, (0)), 100000000, 0, -2301)]), 0, (("astlib/ast_405.ml", 812, 27540, 27544), ("astlib/ast_405.ml", 812, 27540, 27581), 0), 0, Tag1 ("Astlib__Ast_405", 317)); (("Pwith_modsubst", 921), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2303)], (0)), 100000000, 0, -2302); (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2305)], (0)), 100000000, 0, -2304)]), 0, (("astlib/ast_405.ml", 814, 27617, 27621), ("astlib/ast_405.ml", 814, 27617, 27669), 0), 0, Tag1 ("Astlib__Ast_405", 318))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -2293)), 0, 0, 0, 0, (("astlib/ast_405.ml", 804, 27175, 27177), ("astlib/ast_405.ml", 814, 27617, 27669), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 95)), 2, 0); Tag1 (("module_expr", 7040), (0, 0, [[(("pmod_desc", 922), 0, (Tag3 ((("module_expr_desc", 7041)), 0, (0)), 100000000, 0, -2290), (("astlib/ast_405.ml", 821, 27825, 27832), ("astlib/ast_405.ml", 821, 27825, 27860), 0), 0, Tag1 ("Astlib__Ast_405", 319)); (("pmod_loc", 923), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2291), (("astlib/ast_405.ml", 822, 27861, 27868), ("astlib/ast_405.ml", 822, 27861, 27889), 0), 0, Tag1 ("Astlib__Ast_405", 320)); (("pmod_attributes", 924), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2292), (("astlib/ast_405.ml", 823, 27890, 27897), ("astlib/ast_405.ml", 823, 27890, 27925), 0), 0, Tag1 ("Astlib__Ast_405", 321))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -2289)), 0, 0, 0, 0, (("astlib/ast_405.ml", 819, 27757, 27759), ("astlib/ast_405.ml", 824, 27950, 27957), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 96)), 2, 0); Tag1 (("module_expr_desc", 7041), (0, 0, Tag1 ([(("Pmod_ident", 925), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2276)], (0)), 100000000, 0, -2275)]), 0, (("astlib/ast_405.ml", 827, 28029, 28033), ("astlib/ast_405.ml", 827, 28029, 28064), 0), 0, Tag1 ("Astlib__Ast_405", 322)); (("Pmod_structure", 926), ([(Tag3 ((("structure", 7042)), 0, (0)), 100000000, 0, -2277)]), 0, (("astlib/ast_405.ml", 829, 28083, 28087), ("astlib/ast_405.ml", 829, 28083, 28116), 0), 0, Tag1 ("Astlib__Ast_405", 323)); (("Pmod_functor", 927), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2279)], (0)), 100000000, 0, -2278); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7028)), 0, (0)), 100000000, 0, -2281)], (0)), 100000000, 0, -2280); (Tag3 ((("module_expr", 7040)), 0, (0)), 100000000, 0, -2282)]), 0, (("astlib/ast_405.ml", 831, 28148, 28152), ("astlib/ast_405.ml", 831, 28148, 28215), 0), 0, Tag1 ("Astlib__Ast_405", 324)); (("Pmod_apply", 928), ([(Tag3 ((("module_expr", 7040)), 0, (0)), 100000000, 0, -2283); (Tag3 ((("module_expr", 7040)), 0, (0)), 100000000, 0, -2284)]), 0, (("astlib/ast_405.ml", 833, 28255, 28259), ("astlib/ast_405.ml", 833, 28255, 28300), 0), 0, Tag1 ("Astlib__Ast_405", 325)); (("Pmod_constraint", 929), ([(Tag3 ((("module_expr", 7040)), 0, (0)), 100000000, 0, -2285); (Tag3 ((("module_type", 7028)), 0, (0)), 100000000, 0, -2286)]), 0, (("astlib/ast_405.ml", 835, 28326, 28330), ("astlib/ast_405.ml", 835, 28326, 28376), 0), 0, Tag1 ("Astlib__Ast_405", 326)); (("Pmod_unpack", 930), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2287)]), 0, (("astlib/ast_405.ml", 837, 28403, 28407), ("astlib/ast_405.ml", 837, 28403, 28434), 0), 0, Tag1 ("Astlib__Ast_405", 327)); (("Pmod_extension", 931), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2288)]), 0, (("astlib/ast_405.ml", 839, 28459, 28463), ("astlib/ast_405.ml", 839, 28459, 28492), 0), 0, Tag1 ("Astlib__Ast_405", 328))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -2274)), 0, 0, 0, 0, (("astlib/ast_405.ml", 826, 27959, 27961), ("astlib/ast_405.ml", 839, 28459, 28492), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 97)), 2, 0); Tag1 (("structure", 7042), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7043)), 0, (0)), 100000000, 0, -2273)], (0)), 100000000, 0, -2272)), 0, 0, 0, 0, (("astlib/ast_405.ml", 842, 28516, 28518), ("astlib/ast_405.ml", 842, 28516, 28553), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 98)), 2, 0); Tag1 (("structure_item", 7043), (0, 0, [[(("pstr_desc", 932), 0, (Tag3 ((("structure_item_desc", 7044)), 0, (0)), 100000000, 0, -2270), (("astlib/ast_405.ml", 846, 28629, 28636), ("astlib/ast_405.ml", 846, 28629, 28667), 0), 0, Tag1 ("Astlib__Ast_405", 329)); (("pstr_loc", 933), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2271), (("astlib/ast_405.ml", 847, 28668, 28675), ("astlib/ast_405.ml", 847, 28668, 28696), 0), 0, Tag1 ("Astlib__Ast_405", 330))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -2269)), 0, 0, 0, 0, (("astlib/ast_405.ml", 844, 28555, 28557), ("astlib/ast_405.ml", 848, 28697, 28704), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 99)), 2, 0); Tag1 (("structure_item_desc", 7044), (0, 0, Tag1 ([(("Pstr_eval", 934), ([(Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2245); (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2246)]), 0, (("astlib/ast_405.ml", 851, 28782, 28786), ("astlib/ast_405.ml", 851, 28782, 28824), 0), 0, Tag1 ("Astlib__Ast_405", 331)); (("Pstr_value", 935), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "rec_flag"), 0, (0)), 100000000, 0, -2247); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7045)), 0, (0)), 100000000, 0, -2249)], (0)), 100000000, 0, -2248)]), 0, (("astlib/ast_405.ml", 853, 28843, 28847), ("astlib/ast_405.ml", 853, 28843, 28892), 0), 0, Tag1 ("Astlib__Ast_405", 332)); (("Pstr_primitive", 936), ([(Tag3 ((("value_description", 7004)), 0, (0)), 100000000, 0, -2250)]), 0, (("astlib/ast_405.ml", 857, 29050, 29054), ("astlib/ast_405.ml", 857, 29050, 29091), 0), 0, Tag1 ("Astlib__Ast_405", 333)); (("Pstr_type", 937), ([(Tag3 (Tag1 ((("Asttypes", 6975)), "rec_flag"), 0, (0)), 100000000, 0, -2251); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7005)), 0, (0)), 100000000, 0, -2253)], (0)), 100000000, 0, -2252)]), 0, (("astlib/ast_405.ml", 860, 29162, 29166), ("astlib/ast_405.ml", 860, 29162, 29213), 0), 0, Tag1 ("Astlib__Ast_405", 334)); (("Pstr_typext", 938), ([(Tag3 ((("type_extension", 7010)), 0, (0)), 100000000, 0, -2254)]), 0, (("astlib/ast_405.ml", 862, 29265, 29269), ("astlib/ast_405.ml", 862, 29265, 29300), 0), 0, Tag1 ("Astlib__Ast_405", 335)); (("Pstr_exception", 939), ([(Tag3 ((("extension_constructor", 7011)), 0, (0)), 100000000, 0, -2255)]), 0, (("astlib/ast_405.ml", 864, 29332, 29336), ("astlib/ast_405.ml", 864, 29332, 29377), 0), 0, Tag1 ("Astlib__Ast_405", 336)); (("Pstr_module", 940), ([(Tag3 ((("module_binding", 7046)), 0, (0)), 100000000, 0, -2256)]), 0, (("astlib/ast_405.ml", 867, 29442, 29446), ("astlib/ast_405.ml", 867, 29442, 29477), 0), 0, Tag1 ("Astlib__Ast_405", 337)); (("Pstr_recmodule", 941), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7046)), 0, (0)), 100000000, 0, -2258)], (0)), 100000000, 0, -2257)]), 0, (("astlib/ast_405.ml", 869, 29508, 29512), ("astlib/ast_405.ml", 869, 29508, 29551), 0), 0, Tag1 ("Astlib__Ast_405", 338)); (("Pstr_modtype", 942), ([(Tag3 ((("module_type_declaration", 7034)), 0, (0)), 100000000, 0, -2259)]), 0, (("astlib/ast_405.ml", 871, 29609, 29613), ("astlib/ast_405.ml", 871, 29609, 29654), 0), 0, Tag1 ("Astlib__Ast_405", 339)); (("Pstr_open", 943), ([(Tag3 ((("open_description", 7035)), 0, (0)), 100000000, 0, -2260)]), 0, (("astlib/ast_405.ml", 873, 29690, 29694), ("astlib/ast_405.ml", 873, 29690, 29725), 0), 0, Tag1 ("Astlib__Ast_405", 340)); (("Pstr_class", 944), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7027)), 0, (0)), 100000000, 0, -2262)], (0)), 100000000, 0, -2261)]), 0, (("astlib/ast_405.ml", 875, 29749, 29753), ("astlib/ast_405.ml", 875, 29749, 29791), 0), 0, Tag1 ("Astlib__Ast_405", 341)); (("Pstr_class_type", 945), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7020)), 0, (0)), 100000000, 0, -2264)], (0)), 100000000, 0, -2263)]), 0, (("astlib/ast_405.ml", 877, 29844, 29848), ("astlib/ast_405.ml", 877, 29844, 29896), 0), 0, Tag1 ("Astlib__Ast_405", 342)); (("Pstr_include", 946), ([(Tag3 ((("include_declaration", 7038)), 0, (0)), 100000000, 0, -2265)]), 0, (("astlib/ast_405.ml", 879, 29956, 29960), ("astlib/ast_405.ml", 879, 29956, 29997), 0), 0, Tag1 ("Astlib__Ast_405", 343)); (("Pstr_attribute", 947), ([(Tag3 ((("attribute", 6991)), 0, (0)), 100000000, 0, -2266)]), 0, (("astlib/ast_405.ml", 881, 30025, 30029), ("astlib/ast_405.ml", 881, 30025, 30058), 0), 0, Tag1 ("Astlib__Ast_405", 344)); (("Pstr_extension", 948), ([(Tag3 ((("extension", 6992)), 0, (0)), 100000000, 0, -2267); (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2268)]), 0, (("astlib/ast_405.ml", 883, 30083, 30087), ("astlib/ast_405.ml", 883, 30083, 30129), 0), 0, Tag1 ("Astlib__Ast_405", 345))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -2244)), 0, 0, 0, 0, (("astlib/ast_405.ml", 850, 28706, 28708), ("astlib/ast_405.ml", 883, 30083, 30129), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 100)), 2, 0); Tag1 (("value_binding", 7045), (0, 0, [[(("pvb_pat", 949), 0, (Tag3 ((("pattern", 6999)), 0, (0)), 100000000, 0, -2240), (("astlib/ast_405.ml", 888, 30224, 30230), ("astlib/ast_405.ml", 888, 30224, 30247), 0), 0, Tag1 ("Astlib__Ast_405", 346)); (("pvb_expr", 950), 0, (Tag3 ((("expression", 7001)), 0, (0)), 100000000, 0, -2241), (("astlib/ast_405.ml", 889, 30248, 30254), ("astlib/ast_405.ml", 889, 30248, 30275), 0), 0, Tag1 ("Astlib__Ast_405", 347)); (("pvb_attributes", 951), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2242), (("astlib/ast_405.ml", 890, 30276, 30282), ("astlib/ast_405.ml", 890, 30276, 30309), 0), 0, Tag1 ("Astlib__Ast_405", 348)); (("pvb_loc", 952), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2243), (("astlib/ast_405.ml", 891, 30310, 30316), ("astlib/ast_405.ml", 891, 30310, 30336), 0), 0, Tag1 ("Astlib__Ast_405", 349))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -2239)), 0, 0, 0, 0, (("astlib/ast_405.ml", 886, 30154, 30156), ("astlib/ast_405.ml", 892, 30337, 30342), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 101)), 2, 0); Tag1 (("module_binding", 7046), (0, 0, [[(("pmb_name", 953), 0, (Tag3 (Tag1 ((("Asttypes", 6975)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2235)], (0)), 100000000, 0, -2234), (("astlib/ast_405.ml", 896, 30418, 30425), ("astlib/ast_405.ml", 896, 30418, 30446), 0), 0, Tag1 ("Astlib__Ast_405", 350)); (("pmb_expr", 954), 0, (Tag3 ((("module_expr", 7040)), 0, (0)), 100000000, 0, -2236), (("astlib/ast_405.ml", 897, 30447, 30454), ("astlib/ast_405.ml", 897, 30447, 30476), 0), 0, Tag1 ("Astlib__Ast_405", 351)); (("pmb_attributes", 955), 0, (Tag3 ((("attributes", 6993)), 0, (0)), 100000000, 0, -2237), (("astlib/ast_405.ml", 898, 30477, 30484), ("astlib/ast_405.ml", 898, 30477, 30511), 0), 0, Tag1 ("Astlib__Ast_405", 352)); (("pmb_loc", 956), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2238), (("astlib/ast_405.ml", 899, 30512, 30519), ("astlib/ast_405.ml", 899, 30512, 30539), 0), 0, Tag1 ("Astlib__Ast_405", 353))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -2233)), 0, 0, 0, 0, (("astlib/ast_405.ml", 894, 30344, 30346), ("astlib/ast_405.ml", 900, 30540, 30547), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 102)), 2, 0); Tag1 (("toplevel_phrase", 7047), (0, 0, Tag1 ([(("Ptop_def", 969), ([(Tag3 ((("structure", 7042)), 0, (0)), 100000000, 0, -2230)]), 0, (("astlib/ast_405.ml", 908, 30682, 30686), ("astlib/ast_405.ml", 908, 30682, 30709), 0), 0, Tag1 ("Astlib__Ast_405", 356)); (("Ptop_dir", 970), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2231); (Tag3 ((("directive_argument", 7048)), 0, (0)), 100000000, 0, -2232)]), 0, (("astlib/ast_405.ml", 909, 30710, 30714), ("astlib/ast_405.ml", 909, 30710, 30755), 0), 0, Tag1 ("Astlib__Ast_405", 357))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -2229)), 0, 0, 0, 0, (("astlib/ast_405.ml", 907, 30613, 30615), ("astlib/ast_405.ml", 909, 30710, 30755), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 354)), 1, 0); Tag1 (("directive_argument", 7048), (0, 0, Tag1 ([(("Pdir_none", 971), (0), 0, (("astlib/ast_405.ml", 913, 30860, 30864), ("astlib/ast_405.ml", 913, 30860, 30875), 0), 0, Tag1 ("Astlib__Ast_405", 358)); (("Pdir_string", 972), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2223)]), 0, (("astlib/ast_405.ml", 914, 30876, 30880), ("astlib/ast_405.ml", 914, 30876, 30903), 0), 0, Tag1 ("Astlib__Ast_405", 359)); (("Pdir_int", 973), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2224); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2226)], (0)), 100000000, 0, -2225)]), 0, (("astlib/ast_405.ml", 915, 30904, 30908), ("astlib/ast_405.ml", 915, 30904, 30942), 0), 0, Tag1 ("Astlib__Ast_405", 360)); (("Pdir_ident", 974), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2227)]), 0, (("astlib/ast_405.ml", 916, 30943, 30947), ("astlib/ast_405.ml", 916, 30943, 30974), 0), 0, Tag1 ("Astlib__Ast_405", 361)); (("Pdir_bool", 975), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2228)]), 0, (("astlib/ast_405.ml", 917, 30975, 30979), ("astlib/ast_405.ml", 917, 30975, 30998), 0), 0, Tag1 ("Astlib__Ast_405", 362))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_405")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -2222)), 0, 0, 0, 0, (("astlib/ast_405.ml", 912, 30786, 30788), ("astlib/ast_405.ml", 917, 30975, 30998), 0), 0, 0, 0, Tag1 ("Astlib__Ast_405", 355)), 2, 0)]), 0, (("astlib/ast_405.ml", 66, 2762, 2762), ("astlib/ast_405.ml", 919, 31000, 31003), 0), Tag1 ("Astlib__Ast_405", 363)), 0, 0); Tag3 (("Config", 6977), 0, (Tag1 ([(("ast_impl_magic_number", 7049), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2812), 0, (("astlib/ast_405.ml", 922, 31028, 31034), ("astlib/ast_405.ml", 922, 31028, 31055), 0), 0, Tag1 ("Astlib__Ast_405", 364)), 0); (("ast_intf_magic_number", 7050), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2811), 0, (("astlib/ast_405.ml", 923, 31073, 31079), ("astlib/ast_405.ml", 923, 31073, 31100), 0), 0, Tag1 ("Astlib__Ast_405", 365)), 0)]), 0, (("astlib/ast_405.ml", 921, 31005, 31005), ("astlib/ast_405.ml", 924, 31118, 31121), 0), Tag1 ("Astlib__Ast_405", 366)), 0, 0)]), 0, (("astlib/astlib.ml", 28, 1438, 1438), ("astlib/astlib.ml", 28, 1438, 1462), 0), Tag1 ("Astlib", 3)), 0, 0); (("version", 6970), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2196), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 6971), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2195), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 6972), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -2176), 0), 100000000, 0, -2175), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -2192), 0), 100000000, 0, -2191), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -2194), 0), 100000000, 0, -2193), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -2186), 0), 100000000, 0, -2185), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -2158), 0), 100000000, 0, -2157), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -2172), 0), 100000000, 0, -2171), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -2162), 0), 100000000, 0, -2161), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -2184), 0), 100000000, 0, -2183), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -2170), 0), 100000000, 0, -2169), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -2168), 0), 100000000, 0, -2167), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -2166), 0), 100000000, 0, -2165), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -2164), 0), 100000000, 0, -2163), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -2180), 0), 100000000, 0, -2179), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -2188), 0), 100000000, 0, -2187), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -2182), 0), 100000000, 0, -2181), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -2160), 0), 100000000, 0, -2159), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -2174), 0), 100000000, 0, -2173), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -2190), 0), 100000000, 0, -2189), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 6969)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -2178), 0), 100000000, 0, -2177), (0, 100000000, 0, -2156)), 100000000, 0, 412)), 100000000, 0, 413)), 100000000, 0, 414)), 100000000, 0, 415)), 100000000, 0, 416)), 100000000, 0, 417)), 100000000, 0, 418)), 100000000, 0, 419)), 100000000, 0, 420)), 100000000, 0, 421)), 100000000, 0, 422)), 100000000, 0, 423)), 100000000, 0, 424)), 100000000, 0, 425)), 100000000, 0, 426)), 100000000, 0, 427)), 100000000, 0, 428)), 100000000, 0, 429)), 100000000, 0, -2137), (0)), 100000000, 0, -2136)], (0)), 100000000, 0, -2135)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 6973), ((("witnesses", 6673)), [((("_")), 100000000, 0, -2134)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 6972)), 0, (0)), 100000000, 0, -2133)], (0)), 100000000, 0, -2132)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 6974), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 6972)), 0, (0)), 100000000, 0, -2131)], (0)), 100000000, 0, -2130), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 148, 5346, 5346), ("ast/versions.mli", 148, 5346, 5411), 0), Tag1 ("Ppxlib_ast__Versions", 37)), 0, 0); Tag3 (("OCaml_406", 6680), 0, (Tag1 ([Tag3 (("Ast", 7051), 0, (Tag1 ([Tag3 (("Asttypes", 7057), 0, (Tag1 ([Tag1 (("constant", 7060), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2896)]), 0, (("astlib/ast_406.ml", 33, 1888, 1894), ("astlib/ast_406.ml", 33, 1888, 1910), 0), 0, Tag1 ("Astlib__Ast_406", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2897)]), 0, (("astlib/ast_406.ml", 34, 1911, 1915), ("astlib/ast_406.ml", 34, 1911, 1935), 0), 0, Tag1 ("Astlib__Ast_406", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2898); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2900)], (0)), 100000000, 0, -2899)]), 0, (("astlib/ast_406.ml", 35, 1936, 1940), ("astlib/ast_406.ml", 35, 1936, 1980), 0), 0, Tag1 ("Astlib__Ast_406", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2901)]), 0, (("astlib/ast_406.ml", 36, 1981, 1985), ("astlib/ast_406.ml", 36, 1981, 2008), 0), 0, Tag1 ("Astlib__Ast_406", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -2902)]), 0, (("astlib/ast_406.ml", 37, 2009, 2013), ("astlib/ast_406.ml", 37, 2009, 2035), 0), 0, Tag1 ("Astlib__Ast_406", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -2903)]), 0, (("astlib/ast_406.ml", 38, 2036, 2040), ("astlib/ast_406.ml", 38, 2036, 2062), 0), 0, Tag1 ("Astlib__Ast_406", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -2904)]), 0, (("astlib/ast_406.ml", 39, 2063, 2067), ("astlib/ast_406.ml", 39, 2063, 2097), 0), 0, Tag1 ("Astlib__Ast_406", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -2895)), 0, 0, 0, 0, (("astlib/ast_406.ml", 32, 1834, 1836), ("astlib/ast_406.ml", 39, 2063, 2097), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 0)), 1, 0); Tag1 (("rec_flag", 7061), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_406.ml", 41, 2099, 2153), ("astlib/ast_406.ml", 41, 2099, 2165), 0), 0, Tag1 ("Astlib__Ast_406", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_406.ml", 41, 2099, 2166), ("astlib/ast_406.ml", 41, 2099, 2177), 0), 0, Tag1 ("Astlib__Ast_406", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -2894)), 0, 0, 0, 0, (("astlib/ast_406.ml", 41, 2099, 2101), ("astlib/ast_406.ml", 41, 2099, 2177), 0), 0, 1, 0, Tag1 ("Astlib__Ast_406", 8)), 1, 0); Tag1 (("direction_flag", 7062), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_406.ml", 43, 2179, 2245), ("astlib/ast_406.ml", 43, 2179, 2249), 0), 0, Tag1 ("Astlib__Ast_406", 12)); (("Downto", 333), (0), 0, (("astlib/ast_406.ml", 43, 2179, 2250), ("astlib/ast_406.ml", 43, 2179, 2258), 0), 0, Tag1 ("Astlib__Ast_406", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -2893)), 0, 0, 0, 0, (("astlib/ast_406.ml", 43, 2179, 2181), ("astlib/ast_406.ml", 43, 2179, 2258), 0), 0, 1, 0, Tag1 ("Astlib__Ast_406", 11)), 1, 0); Tag1 (("private_flag", 7063), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_406.ml", 46, 2314, 2376), ("astlib/ast_406.ml", 46, 2314, 2383), 0), 0, Tag1 ("Astlib__Ast_406", 15)); (("Public", 336), (0), 0, (("astlib/ast_406.ml", 46, 2314, 2384), ("astlib/ast_406.ml", 46, 2314, 2392), 0), 0, Tag1 ("Astlib__Ast_406", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -2892)), 0, 0, 0, 0, (("astlib/ast_406.ml", 46, 2314, 2316), ("astlib/ast_406.ml", 46, 2314, 2392), 0), 0, 1, 0, Tag1 ("Astlib__Ast_406", 14)), 1, 0); Tag1 (("mutable_flag", 7064), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_406.ml", 48, 2394, 2456), ("astlib/ast_406.ml", 48, 2394, 2465), 0), 0, Tag1 ("Astlib__Ast_406", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_406.ml", 48, 2394, 2466), ("astlib/ast_406.ml", 48, 2394, 2475), 0), 0, Tag1 ("Astlib__Ast_406", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -2891)), 0, 0, 0, 0, (("astlib/ast_406.ml", 48, 2394, 2396), ("astlib/ast_406.ml", 48, 2394, 2475), 0), 0, 1, 0, Tag1 ("Astlib__Ast_406", 17)), 1, 0); Tag1 (("virtual_flag", 7065), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_406.ml", 50, 2477, 2539), ("astlib/ast_406.ml", 50, 2477, 2546), 0), 0, Tag1 ("Astlib__Ast_406", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_406.ml", 50, 2477, 2547), ("astlib/ast_406.ml", 50, 2477, 2557), 0), 0, Tag1 ("Astlib__Ast_406", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -2890)), 0, 0, 0, 0, (("astlib/ast_406.ml", 50, 2477, 2479), ("astlib/ast_406.ml", 50, 2477, 2557), 0), 0, 1, 0, Tag1 ("Astlib__Ast_406", 20)), 1, 0); Tag1 (("override_flag", 7066), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_406.ml", 52, 2559, 2623), ("astlib/ast_406.ml", 52, 2559, 2631), 0), 0, Tag1 ("Astlib__Ast_406", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_406.ml", 52, 2559, 2632), ("astlib/ast_406.ml", 52, 2559, 2639), 0), 0, Tag1 ("Astlib__Ast_406", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -2889)), 0, 0, 0, 0, (("astlib/ast_406.ml", 52, 2559, 2561), ("astlib/ast_406.ml", 52, 2559, 2639), 0), 0, 1, 0, Tag1 ("Astlib__Ast_406", 23)), 1, 0); Tag1 (("closed_flag", 7067), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_406.ml", 54, 2641, 2701), ("astlib/ast_406.ml", 54, 2641, 2707), 0), 0, Tag1 ("Astlib__Ast_406", 27)); (("Open", 348), (0), 0, (("astlib/ast_406.ml", 54, 2641, 2708), ("astlib/ast_406.ml", 54, 2641, 2714), 0), 0, Tag1 ("Astlib__Ast_406", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -2888)), 0, 0, 0, 0, (("astlib/ast_406.ml", 54, 2641, 2643), ("astlib/ast_406.ml", 54, 2641, 2714), 0), 0, 1, 0, Tag1 ("Astlib__Ast_406", 26)), 1, 0); Tag1 (("label", 7068), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2887)), 0, 0, 0, 0, (("astlib/ast_406.ml", 56, 2716, 2718), ("astlib/ast_406.ml", 56, 2716, 2737), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 29)), 1, 0); Tag1 (("arg_label", 7069), (0, 0, Tag1 ([(("Nolabel", 351), (0), 0, (("astlib/ast_406.ml", 59, 2795, 2801), ("astlib/ast_406.ml", 59, 2795, 2808), 0), 0, Tag1 ("Astlib__Ast_406", 31)); (("Labelled", 352), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2885)]), 0, (("astlib/ast_406.ml", 60, 2809, 2813), ("astlib/ast_406.ml", 60, 2809, 2833), 0), 0, Tag1 ("Astlib__Ast_406", 32)); (("Optional", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2886)]), 0, (("astlib/ast_406.ml", 61, 2856, 2860), ("astlib/ast_406.ml", 61, 2856, 2880), 0), 0, Tag1 ("Astlib__Ast_406", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -2884)), 0, 0, 0, 0, (("astlib/ast_406.ml", 58, 2739, 2741), ("astlib/ast_406.ml", 61, 2856, 2880), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 30)), 1, 0); Tag1 (("loc", 7070), ([((("a")), 100000000, 0, -2882)], 1, [[(("txt", 355), 0, ((("a")), 100000000, 0, -2882), (("astlib/ast_406.ml", 64, 2940, 2944), ("astlib/ast_406.ml", 64, 2940, 2953), 0), 0, Tag1 ("Astlib__Ast_406", 35)); (("loc", 365), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2883), (("astlib/ast_406.ml", 65, 2954, 2958), ("astlib/ast_406.ml", 65, 2954, 2975), 0), 0, Tag1 ("Astlib__Ast_406", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -2882)], (0)), 100000000, 0, -2881)), [25], [0], 0, 0, (("astlib/ast_406.ml", 63, 2904, 2906), ("astlib/ast_406.ml", 66, 2976, 2979), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 34)), 1, 0); Tag1 (("variance", 7071), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_406.ml", 70, 3036, 3040), ("astlib/ast_406.ml", 70, 3036, 3051), 0), 0, Tag1 ("Astlib__Ast_406", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_406.ml", 71, 3052, 3056), ("astlib/ast_406.ml", 71, 3052, 3071), 0), 0, Tag1 ("Astlib__Ast_406", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_406.ml", 72, 3072, 3076), ("astlib/ast_406.ml", 72, 3072, 3087), 0), 0, Tag1 ("Astlib__Ast_406", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -2880)), 0, 0, 0, 0, (("astlib/ast_406.ml", 69, 2982, 2984), ("astlib/ast_406.ml", 72, 3072, 3087), 0), 0, 1, 0, Tag1 ("Astlib__Ast_406", 37)), 1, 0)]), 0, (("astlib/ast_406.ml", 29, 1746, 1746), ("astlib/ast_406.ml", 73, 3088, 3091), 0), Tag1 ("Astlib__Ast_406", 41)), 0, 0); Tag3 (("Parsetree", 7058), 0, (Tag1 ([Tag1 (("constant", 7072), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3497); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -3499)], (0)), 100000000, 0, -3498)]), 0, (("astlib/ast_406.ml", 81, 3242, 3248), ("astlib/ast_406.ml", 81, 3242, 3286), 0), 0, Tag1 ("Astlib__Ast_406", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -3500)]), 0, (("astlib/ast_406.ml", 87, 3440, 3444), ("astlib/ast_406.ml", 87, 3440, 3465), 0), 0, Tag1 ("Astlib__Ast_406", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3501); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3503)], (0)), 100000000, 0, -3502)]), 0, (("astlib/ast_406.ml", 89, 3480, 3484), ("astlib/ast_406.ml", 89, 3480, 3525), 0), 0, Tag1 ("Astlib__Ast_406", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3504); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -3506)], (0)), 100000000, 0, -3505)]), 0, (("astlib/ast_406.ml", 93, 3587, 3591), ("astlib/ast_406.ml", 93, 3587, 3629), 0), 0, Tag1 ("Astlib__Ast_406", 46))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -3496)), 0, 0, 0, 0, (("astlib/ast_406.ml", 80, 3187, 3189), ("astlib/ast_406.ml", 93, 3587, 3629), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 42)), 1, 0); Tag1 (("attribute", 7073), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3494)], (0)), 100000000, 0, -3493); (Tag3 ((("payload", 7076)), 0, (0)), 100000000, 0, -3495)]), 100000000, 0, -3492)), 0, 0, 0, 0, (("astlib/ast_406.ml", 102, 3796, 3798), ("astlib/ast_406.ml", 102, 3796, 3835), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 47)), 1, 0); Tag1 (("extension", 7074), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3490)], (0)), 100000000, 0, -3489); (Tag3 ((("payload", 7076)), 0, (0)), 100000000, 0, -3491)]), 100000000, 0, -3488)), 0, 0, 0, 0, (("astlib/ast_406.ml", 110, 4010, 4012), ("astlib/ast_406.ml", 110, 4010, 4048), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 48)), 2, 0); Tag1 (("attributes", 7075), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 7073)), 0, (0)), 100000000, 0, -3487)], (0)), 100000000, 0, -3486)), 0, 0, 0, 0, (("astlib/ast_406.ml", 117, 4173, 4175), ("astlib/ast_406.ml", 117, 4173, 4206), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 49)), 2, 0); Tag1 (("payload", 7076), (0, 0, Tag1 ([(("PStr", 704), ([(Tag3 ((("structure", 7125)), 0, (0)), 100000000, 0, -3480)]), 0, (("astlib/ast_406.ml", 120, 4260, 4264), ("astlib/ast_406.ml", 120, 4260, 4283), 0), 0, Tag1 ("Astlib__Ast_406", 104)); (("PSig", 705), ([(Tag3 ((("signature", 7113)), 0, (0)), 100000000, 0, -3481)]), 0, (("astlib/ast_406.ml", 121, 4284, 4288), ("astlib/ast_406.ml", 121, 4284, 4307), 0), 0, Tag1 ("Astlib__Ast_406", 105)); (("PTyp", 706), ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3482)]), 0, (("astlib/ast_406.ml", 122, 4320, 4324), ("astlib/ast_406.ml", 122, 4320, 4343), 0), 0, Tag1 ("Astlib__Ast_406", 106)); (("PPat", 707), ([(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3483); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3485)], (0)), 100000000, 0, -3484)]), 0, (("astlib/ast_406.ml", 123, 4355, 4359), ("astlib/ast_406.ml", 123, 4355, 4396), 0), 0, Tag1 ("Astlib__Ast_406", 107))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -3479)), 0, 0, 0, 0, (("astlib/ast_406.ml", 119, 4208, 4210), ("astlib/ast_406.ml", 123, 4355, 4396), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 50)), 2, 0); Tag1 (("core_type", 7077), (0, 0, [[(("ptyp_desc", 708), 0, (Tag3 ((("core_type_desc", 7078)), 0, (0)), 100000000, 0, -3476), (("astlib/ast_406.ml", 131, 4543, 4550), ("astlib/ast_406.ml", 131, 4543, 4576), 0), 0, Tag1 ("Astlib__Ast_406", 108)); (("ptyp_loc", 709), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3477), (("astlib/ast_406.ml", 132, 4577, 4584), ("astlib/ast_406.ml", 132, 4577, 4605), 0), 0, Tag1 ("Astlib__Ast_406", 109)); (("ptyp_attributes", 710), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3478), (("astlib/ast_406.ml", 133, 4606, 4613), ("astlib/ast_406.ml", 133, 4606, 4641), 0), 0, Tag1 ("Astlib__Ast_406", 110))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -3475)), 0, 0, 0, 0, (("astlib/ast_406.ml", 129, 4479, 4481), ("astlib/ast_406.ml", 134, 4666, 4673), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 51)), 2, 0); Tag1 (("core_type_desc", 7078), (0, 0, Tag1 ([(("Ptyp_any", 711), (0), 0, (("astlib/ast_406.ml", 137, 4741, 4745), ("astlib/ast_406.ml", 137, 4741, 4755), 0), 0, Tag1 ("Astlib__Ast_406", 111)); (("Ptyp_var", 712), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3444)]), 0, (("astlib/ast_406.ml", 139, 4775, 4779), ("astlib/ast_406.ml", 139, 4775, 4799), 0), 0, Tag1 ("Astlib__Ast_406", 112)); (("Ptyp_arrow", 713), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "arg_label"), 0, (0)), 100000000, 0, -3445); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3446); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3447)]), 0, (("astlib/ast_406.ml", 141, 4819, 4823), ("astlib/ast_406.ml", 141, 4819, 4872), 0), 0, Tag1 ("Astlib__Ast_406", 113)); (("Ptyp_tuple", 714), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3449)], (0)), 100000000, 0, -3448)]), 0, (("astlib/ast_406.ml", 146, 4996, 5000), ("astlib/ast_406.ml", 146, 4996, 5030), 0), 0, Tag1 ("Astlib__Ast_406", 114)); (("Ptyp_constr", 715), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3451)], (0)), 100000000, 0, -3450); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3453)], (0)), 100000000, 0, -3452)]), 0, (("astlib/ast_406.ml", 151, 5103, 5107), ("astlib/ast_406.ml", 151, 5103, 5156), 0), 0, Tag1 ("Astlib__Ast_406", 115)); (("Ptyp_object", 719), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 7081)), 0, (0)), 100000000, 0, -3455)], (0)), 100000000, 0, -3454); (Tag3 (Tag1 ((("Asttypes", 7057)), "closed_flag"), 0, (0)), 100000000, 0, -3456)]), 0, (("astlib/ast_406.ml", 156, 5250, 5254), ("astlib/ast_406.ml", 156, 5250, 5302), 0), 0, Tag1 ("Astlib__Ast_406", 116)); (("Ptyp_class", 720), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3458)], (0)), 100000000, 0, -3457); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3460)], (0)), 100000000, 0, -3459)]), 0, (("astlib/ast_406.ml", 160, 5425, 5429), ("astlib/ast_406.ml", 160, 5425, 5477), 0), 0, Tag1 ("Astlib__Ast_406", 117)); (("Ptyp_alias", 721), ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3461); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3462)]), 0, (("astlib/ast_406.ml", 165, 5574, 5578), ("astlib/ast_406.ml", 165, 5574, 5612), 0), 0, Tag1 ("Astlib__Ast_406", 118)); (("Ptyp_variant", 722), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 7080)), 0, (0)), 100000000, 0, -3464)], (0)), 100000000, 0, -3463); (Tag3 (Tag1 ((("Asttypes", 7057)), "closed_flag"), 0, (0)), 100000000, 0, -3465); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3468)], (0)), 100000000, 0, -3467)], (0)), 100000000, 0, -3466)]), 0, (("astlib/ast_406.ml", 167, 5637, 5641), ("astlib/ast_406.ml", 167, 5637, 5707), 0), 0, Tag1 ("Astlib__Ast_406", 119)); (("Ptyp_poly", 723), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3471)], (0)), 100000000, 0, -3470)], (0)), 100000000, 0, -3469); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3472)]), 0, (("astlib/ast_406.ml", 173, 5983, 5987), ("astlib/ast_406.ml", 173, 5983, 6029), 0), 0, Tag1 ("Astlib__Ast_406", 120)); (("Ptyp_package", 724), ([(Tag3 ((("package_type", 7079)), 0, (0)), 100000000, 0, -3473)]), 0, (("astlib/ast_406.ml", 193, 6583, 6587), ("astlib/ast_406.ml", 193, 6583, 6617), 0), 0, Tag1 ("Astlib__Ast_406", 121)); (("Ptyp_extension", 725), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -3474)]), 0, (("astlib/ast_406.ml", 195, 6645, 6649), ("astlib/ast_406.ml", 195, 6645, 6678), 0), 0, Tag1 ("Astlib__Ast_406", 122))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -3443)), 0, 0, 0, 0, (("astlib/ast_406.ml", 136, 4675, 4677), ("astlib/ast_406.ml", 195, 6645, 6678), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 52)), 2, 0); Tag1 (("package_type", 7079), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3437)], (0)), 100000000, 0, -3436); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3441)], (0)), 100000000, 0, -3440); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3442)]), 100000000, 0, -3439)], (0)), 100000000, 0, -3438)]), 100000000, 0, -3435)), 0, 0, 0, 0, (("astlib/ast_406.ml", 198, 6702, 6704), ("astlib/ast_406.ml", 198, 6702, 6775), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 53)), 2, 0); Tag1 (("row_field", 7080), (0, 0, Tag1 ([(("Rtag", 726), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3429)], (0)), 100000000, 0, -3428); (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3430); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3431); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3433)], (0)), 100000000, 0, -3432)]), 0, (("astlib/ast_406.ml", 205, 6936, 6940), ("astlib/ast_406.ml", 205, 6936, 6996), 0), 0, Tag1 ("Astlib__Ast_406", 123)); (("Rinherit", 727), ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3434)]), 0, (("astlib/ast_406.ml", 218, 7520, 7524), ("astlib/ast_406.ml", 218, 7520, 7547), 0), 0, Tag1 ("Astlib__Ast_406", 124))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -3427)), 0, 0, 0, 0, (("astlib/ast_406.ml", 204, 6880, 6882), ("astlib/ast_406.ml", 218, 7520, 7547), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 54)), 2, 0); Tag1 (("object_field", 7081), (0, 0, Tag1 ([(("Otag", 728), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3423)], (0)), 100000000, 0, -3422); (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3424); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3425)]), 0, (("astlib/ast_406.ml", 222, 7633, 7637), ("astlib/ast_406.ml", 222, 7633, 7681), 0), 0, Tag1 ("Astlib__Ast_406", 125)); (("Oinherit", 729), ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3426)]), 0, (("astlib/ast_406.ml", 223, 7682, 7686), ("astlib/ast_406.ml", 223, 7682, 7709), 0), 0, Tag1 ("Astlib__Ast_406", 126))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "object_field"), 0, (0)), 100000000, 0, -3421)), 0, 0, 0, 0, (("astlib/ast_406.ml", 221, 7571, 7573), ("astlib/ast_406.ml", 223, 7682, 7709), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 55)), 2, 0); Tag1 (("pattern", 7082), (0, 0, [[(("ppat_desc", 730), 0, (Tag3 ((("pattern_desc", 7083)), 0, (0)), 100000000, 0, -3418), (("astlib/ast_406.ml", 229, 7789, 7796), ("astlib/ast_406.ml", 229, 7789, 7820), 0), 0, Tag1 ("Astlib__Ast_406", 127)); (("ppat_loc", 731), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3419), (("astlib/ast_406.ml", 230, 7821, 7828), ("astlib/ast_406.ml", 230, 7821, 7849), 0), 0, Tag1 ("Astlib__Ast_406", 128)); (("ppat_attributes", 732), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3420), (("astlib/ast_406.ml", 231, 7850, 7857), ("astlib/ast_406.ml", 231, 7850, 7885), 0), 0, Tag1 ("Astlib__Ast_406", 129))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -3417)), 0, 0, 0, 0, (("astlib/ast_406.ml", 227, 7729, 7731), ("astlib/ast_406.ml", 232, 7910, 7917), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 56)), 2, 0); Tag1 (("pattern_desc", 7083), (0, 0, Tag1 ([(("Ppat_any", 733), (0), 0, (("astlib/ast_406.ml", 235, 7981, 7985), ("astlib/ast_406.ml", 235, 7981, 7995), 0), 0, Tag1 ("Astlib__Ast_406", 130)); (("Ppat_var", 734), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3379)], (0)), 100000000, 0, -3378)]), 0, (("astlib/ast_406.ml", 237, 8014, 8018), ("astlib/ast_406.ml", 237, 8014, 8042), 0), 0, Tag1 ("Astlib__Ast_406", 131)); (("Ppat_alias", 735), ([(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3380); (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3382)], (0)), 100000000, 0, -3381)]), 0, (("astlib/ast_406.ml", 239, 8061, 8065), ("astlib/ast_406.ml", 239, 8061, 8101), 0), 0, Tag1 ("Astlib__Ast_406", 132)); (("Ppat_constant", 736), ([(Tag3 ((("constant", 7072)), 0, (0)), 100000000, 0, -3383)]), 0, (("astlib/ast_406.ml", 241, 8126, 8130), ("astlib/ast_406.ml", 241, 8126, 8157), 0), 0, Tag1 ("Astlib__Ast_406", 133)); (("Ppat_interval", 737), ([(Tag3 ((("constant", 7072)), 0, (0)), 100000000, 0, -3384); (Tag3 ((("constant", 7072)), 0, (0)), 100000000, 0, -3385)]), 0, (("astlib/ast_406.ml", 243, 8206, 8210), ("astlib/ast_406.ml", 243, 8206, 8248), 0), 0, Tag1 ("Astlib__Ast_406", 134)); (("Ppat_tuple", 738), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3387)], (0)), 100000000, 0, -3386)]), 0, (("astlib/ast_406.ml", 248, 8388, 8392), ("astlib/ast_406.ml", 248, 8388, 8420), 0), 0, Tag1 ("Astlib__Ast_406", 135)); (("Ppat_construct", 739), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3389)], (0)), 100000000, 0, -3388); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3391)], (0)), 100000000, 0, -3390)]), 0, (("astlib/ast_406.ml", 253, 8493, 8497), ("astlib/ast_406.ml", 253, 8493, 8549), 0), 0, Tag1 ("Astlib__Ast_406", 136)); (("Ppat_variant", 740), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3392); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3394)], (0)), 100000000, 0, -3393)]), 0, (("astlib/ast_406.ml", 258, 8698, 8702), ("astlib/ast_406.ml", 258, 8698, 8742), 0), 0, Tag1 ("Astlib__Ast_406", 137)); (("Ppat_record", 741), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3398)], (0)), 100000000, 0, -3397); (Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3399)]), 100000000, 0, -3396)], (0)), 100000000, 0, -3395); (Tag3 (Tag1 ((("Asttypes", 7057)), "closed_flag"), 0, (0)), 100000000, 0, -3400)]), 0, (("astlib/ast_406.ml", 262, 8829, 8833), ("astlib/ast_406.ml", 262, 8829, 8896), 0), 0, Tag1 ("Astlib__Ast_406", 138)); (("Ppat_array", 742), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3402)], (0)), 100000000, 0, -3401)]), 0, (("astlib/ast_406.ml", 268, 9050, 9054), ("astlib/ast_406.ml", 268, 9050, 9082), 0), 0, Tag1 ("Astlib__Ast_406", 139)); (("Ppat_or", 743), ([(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3403); (Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3404)]), 0, (("astlib/ast_406.ml", 270, 9117, 9121), ("astlib/ast_406.ml", 270, 9117, 9151), 0), 0, Tag1 ("Astlib__Ast_406", 140)); (("Ppat_constraint", 744), ([(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3405); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3406)]), 0, (("astlib/ast_406.ml", 272, 9176, 9180), ("astlib/ast_406.ml", 272, 9176, 9220), 0), 0, Tag1 ("Astlib__Ast_406", 141)); (("Ppat_type", 745), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3408)], (0)), 100000000, 0, -3407)]), 0, (("astlib/ast_406.ml", 274, 9245, 9249), ("astlib/ast_406.ml", 274, 9245, 9279), 0), 0, Tag1 ("Astlib__Ast_406", 142)); (("Ppat_lazy", 746), ([(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3409)]), 0, (("astlib/ast_406.ml", 276, 9304, 9308), ("astlib/ast_406.ml", 276, 9304, 9330), 0), 0, Tag1 ("Astlib__Ast_406", 143)); (("Ppat_unpack", 747), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3411)], (0)), 100000000, 0, -3410)]), 0, (("astlib/ast_406.ml", 278, 9354, 9358), ("astlib/ast_406.ml", 278, 9354, 9385), 0), 0, Tag1 ("Astlib__Ast_406", 144)); (("Ppat_exception", 748), ([(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3412)]), 0, (("astlib/ast_406.ml", 283, 9532, 9536), ("astlib/ast_406.ml", 283, 9532, 9563), 0), 0, Tag1 ("Astlib__Ast_406", 145)); (("Ppat_extension", 749), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -3413)]), 0, (("astlib/ast_406.ml", 285, 9592, 9596), ("astlib/ast_406.ml", 285, 9592, 9625), 0), 0, Tag1 ("Astlib__Ast_406", 146)); (("Ppat_open", 750), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3415)], (0)), 100000000, 0, -3414); (Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3416)]), 0, (("astlib/ast_406.ml", 287, 9648, 9652), ("astlib/ast_406.ml", 287, 9648, 9692), 0), 0, Tag1 ("Astlib__Ast_406", 147))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -3377)), 0, 0, 0, 0, (("astlib/ast_406.ml", 234, 7919, 7921), ("astlib/ast_406.ml", 287, 9648, 9692), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 57)), 2, 0); Tag1 (("expression", 7084), (0, 0, [[(("pexp_desc", 751), 0, (Tag3 ((("expression_desc", 7085)), 0, (0)), 100000000, 0, -3374), (("astlib/ast_406.ml", 294, 9809, 9816), ("astlib/ast_406.ml", 294, 9809, 9843), 0), 0, Tag1 ("Astlib__Ast_406", 148)); (("pexp_loc", 752), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3375), (("astlib/ast_406.ml", 295, 9844, 9851), ("astlib/ast_406.ml", 295, 9844, 9872), 0), 0, Tag1 ("Astlib__Ast_406", 149)); (("pexp_attributes", 753), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3376), (("astlib/ast_406.ml", 296, 9873, 9880), ("astlib/ast_406.ml", 296, 9873, 9908), 0), 0, Tag1 ("Astlib__Ast_406", 150))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -3373)), 0, 0, 0, 0, (("astlib/ast_406.ml", 292, 9743, 9745), ("astlib/ast_406.ml", 297, 9933, 9940), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 58)), 2, 0); Tag1 (("expression_desc", 7085), (0, 0, Tag1 ([(("Pexp_ident", 754), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3271)], (0)), 100000000, 0, -3270)]), 0, (("astlib/ast_406.ml", 300, 10010, 10014), ("astlib/ast_406.ml", 300, 10010, 10045), 0), 0, Tag1 ("Astlib__Ast_406", 151)); (("Pexp_constant", 755), ([(Tag3 ((("constant", 7072)), 0, (0)), 100000000, 0, -3272)]), 0, (("astlib/ast_406.ml", 304, 10092, 10096), ("astlib/ast_406.ml", 304, 10092, 10123), 0), 0, Tag1 ("Astlib__Ast_406", 152)); (("Pexp_let", 756), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "rec_flag"), 0, (0)), 100000000, 0, -3273); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7128)), 0, (0)), 100000000, 0, -3275)], (0)), 100000000, 0, -3274); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3276)]), 0, (("astlib/ast_406.ml", 306, 10172, 10176), ("astlib/ast_406.ml", 306, 10172, 10232), 0), 0, Tag1 ("Astlib__Ast_406", 153)); (("Pexp_function", 757), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7086)), 0, (0)), 100000000, 0, -3278)], (0)), 100000000, 0, -3277)]), 0, (("astlib/ast_406.ml", 310, 10400, 10404), ("astlib/ast_406.ml", 310, 10400, 10432), 0), 0, Tag1 ("Astlib__Ast_406", 154)); (("Pexp_fun", 758), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "arg_label"), 0, (0)), 100000000, 0, -3279); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3281)], (0)), 100000000, 0, -3280); (Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3282); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3283)]), 0, (("astlib/ast_406.ml", 312, 10484, 10488), ("astlib/ast_406.ml", 312, 10484, 10554), 0), 0, Tag1 ("Astlib__Ast_406", 155)); (("Pexp_apply", 759), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3284); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "arg_label"), 0, (0)), 100000000, 0, -3287); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3288)]), 100000000, 0, -3286)], (0)), 100000000, 0, -3285)]), 0, (("astlib/ast_406.ml", 323, 11059, 11063), ("astlib/ast_406.ml", 323, 11059, 11121), 0), 0, Tag1 ("Astlib__Ast_406", 156)); (("Pexp_match", 760), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3289); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7086)), 0, (0)), 100000000, 0, -3291)], (0)), 100000000, 0, -3290)]), 0, (("astlib/ast_406.ml", 330, 11305, 11309), ("astlib/ast_406.ml", 330, 11305, 11347), 0), 0, Tag1 ("Astlib__Ast_406", 157)); (("Pexp_try", 761), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3292); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7086)), 0, (0)), 100000000, 0, -3294)], (0)), 100000000, 0, -3293)]), 0, (("astlib/ast_406.ml", 332, 11404, 11408), ("astlib/ast_406.ml", 332, 11404, 11444), 0), 0, Tag1 ("Astlib__Ast_406", 158)); (("Pexp_tuple", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3296)], (0)), 100000000, 0, -3295)]), 0, (("astlib/ast_406.ml", 334, 11499, 11503), ("astlib/ast_406.ml", 334, 11499, 11534), 0), 0, Tag1 ("Astlib__Ast_406", 159)); (("Pexp_construct", 763), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3298)], (0)), 100000000, 0, -3297); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3300)], (0)), 100000000, 0, -3299)]), 0, (("astlib/ast_406.ml", 339, 11607, 11611), ("astlib/ast_406.ml", 339, 11607, 11666), 0), 0, Tag1 ("Astlib__Ast_406", 160)); (("Pexp_variant", 764), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3301); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3303)], (0)), 100000000, 0, -3302)]), 0, (("astlib/ast_406.ml", 344, 11811, 11815), ("astlib/ast_406.ml", 344, 11811, 11858), 0), 0, Tag1 ("Astlib__Ast_406", 161)); (("Pexp_record", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3307)], (0)), 100000000, 0, -3306); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3308)]), 100000000, 0, -3305)], (0)), 100000000, 0, -3304); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3310)], (0)), 100000000, 0, -3309)]), 0, (("astlib/ast_406.ml", 348, 11945, 11949), ("astlib/ast_406.ml", 348, 11945, 12021), 0), 0, Tag1 ("Astlib__Ast_406", 162)); (("Pexp_field", 766), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3311); (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3313)], (0)), 100000000, 0, -3312)]), 0, (("astlib/ast_406.ml", 354, 12168, 12172), ("astlib/ast_406.ml", 354, 12168, 12216), 0), 0, Tag1 ("Astlib__Ast_406", 163)); (("Pexp_setfield", 767), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3314); (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3316)], (0)), 100000000, 0, -3315); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3317)]), 0, (("astlib/ast_406.ml", 356, 12237, 12241), ("astlib/ast_406.ml", 356, 12237, 12301), 0), 0, Tag1 ("Astlib__Ast_406", 164)); (("Pexp_array", 768), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3319)], (0)), 100000000, 0, -3318)]), 0, (("astlib/ast_406.ml", 358, 12329, 12333), ("astlib/ast_406.ml", 358, 12329, 12364), 0), 0, Tag1 ("Astlib__Ast_406", 165)); (("Pexp_ifthenelse", 769), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3320); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3321); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3323)], (0)), 100000000, 0, -3322)]), 0, (("astlib/ast_406.ml", 360, 12399, 12403), ("astlib/ast_406.ml", 360, 12399, 12467), 0), 0, Tag1 ("Astlib__Ast_406", 166)); (("Pexp_sequence", 770), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3324); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3325)]), 0, (("astlib/ast_406.ml", 362, 12506, 12510), ("astlib/ast_406.ml", 362, 12506, 12552), 0), 0, Tag1 ("Astlib__Ast_406", 167)); (("Pexp_while", 771), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3326); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3327)]), 0, (("astlib/ast_406.ml", 364, 12576, 12580), ("astlib/ast_406.ml", 364, 12576, 12619), 0), 0, Tag1 ("Astlib__Ast_406", 168)); (("Pexp_for", 772), ([(Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3328); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3329); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3330); (Tag3 (Tag1 ((("Asttypes", 7057)), "direction_flag"), 0, (0)), 100000000, 0, -3331); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3332)]), 0, (("astlib/ast_406.ml", 366, 12656, 12660), ("astlib/ast_406.ml", 367, 12674, 12746), 0), 0, Tag1 ("Astlib__Ast_406", 169)); (("Pexp_constraint", 773), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3333); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3334)]), 0, (("astlib/ast_406.ml", 371, 12883, 12887), ("astlib/ast_406.ml", 371, 12883, 12930), 0), 0, Tag1 ("Astlib__Ast_406", 170)); (("Pexp_coerce", 774), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3335); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3337)], (0)), 100000000, 0, -3336); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3338)]), 0, (("astlib/ast_406.ml", 373, 12955, 12959), ("astlib/ast_406.ml", 373, 12955, 13017), 0), 0, Tag1 ("Astlib__Ast_406", 171)); (("Pexp_send", 775), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3339); (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3341)], (0)), 100000000, 0, -3340)]), 0, (("astlib/ast_406.ml", 377, 13113, 13117), ("astlib/ast_406.ml", 377, 13113, 13154), 0), 0, Tag1 ("Astlib__Ast_406", 172)); (("Pexp_new", 776), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3343)], (0)), 100000000, 0, -3342)]), 0, (("astlib/ast_406.ml", 379, 13178, 13182), ("astlib/ast_406.ml", 379, 13178, 13211), 0), 0, Tag1 ("Astlib__Ast_406", 173)); (("Pexp_setinstvar", 777), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3345)], (0)), 100000000, 0, -3344); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3346)]), 0, (("astlib/ast_406.ml", 381, 13236, 13240), ("astlib/ast_406.ml", 381, 13236, 13283), 0), 0, Tag1 ("Astlib__Ast_406", 174)); (("Pexp_override", 778), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3350)], (0)), 100000000, 0, -3349); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3351)]), 100000000, 0, -3348)], (0)), 100000000, 0, -3347)]), 0, (("astlib/ast_406.ml", 383, 13307, 13311), ("astlib/ast_406.ml", 383, 13307, 13359), 0), 0, Tag1 ("Astlib__Ast_406", 175)); (("Pexp_letmodule", 779), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3353)], (0)), 100000000, 0, -3352); (Tag3 ((("module_expr", 7123)), 0, (0)), 100000000, 0, -3354); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3355)]), 0, (("astlib/ast_406.ml", 385, 13404, 13408), ("astlib/ast_406.ml", 385, 13404, 13465), 0), 0, Tag1 ("Astlib__Ast_406", 176)); (("Pexp_letexception", 780), ([(Tag3 ((("extension_constructor", 7094)), 0, (0)), 100000000, 0, -3356); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3357)]), 0, (("astlib/ast_406.ml", 387, 13505, 13509), ("astlib/ast_406.ml", 387, 13505, 13566), 0), 0, Tag1 ("Astlib__Ast_406", 177)); (("Pexp_assert", 781), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3358)]), 0, (("astlib/ast_406.ml", 389, 13604, 13608), ("astlib/ast_406.ml", 389, 13604, 13635), 0), 0, Tag1 ("Astlib__Ast_406", 178)); (("Pexp_lazy", 782), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3359)]), 0, (("astlib/ast_406.ml", 393, 13757, 13761), ("astlib/ast_406.ml", 393, 13757, 13786), 0), 0, Tag1 ("Astlib__Ast_406", 179)); (("Pexp_poly", 783), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3360); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3362)], (0)), 100000000, 0, -3361)]), 0, (("astlib/ast_406.ml", 395, 13810, 13814), ("astlib/ast_406.ml", 395, 13810, 13858), 0), 0, Tag1 ("Astlib__Ast_406", 180)); (("Pexp_object", 784), ([(Tag3 ((("class_structure", 7106)), 0, (0)), 100000000, 0, -3363)]), 0, (("astlib/ast_406.ml", 400, 14006, 14010), ("astlib/ast_406.ml", 400, 14006, 14042), 0), 0, Tag1 ("Astlib__Ast_406", 181)); (("Pexp_newtype", 785), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3365)], (0)), 100000000, 0, -3364); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3366)]), 0, (("astlib/ast_406.ml", 402, 14074, 14078), ("astlib/ast_406.ml", 402, 14074, 14119), 0), 0, Tag1 ("Astlib__Ast_406", 182)); (("Pexp_pack", 786), ([(Tag3 ((("module_expr", 7123)), 0, (0)), 100000000, 0, -3367)]), 0, (("astlib/ast_406.ml", 404, 14154, 14158), ("astlib/ast_406.ml", 404, 14154, 14184), 0), 0, Tag1 ("Astlib__Ast_406", 183)); (("Pexp_open", 787), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "override_flag"), 0, (0)), 100000000, 0, -3368); (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3370)], (0)), 100000000, 0, -3369); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3371)]), 0, (("astlib/ast_406.ml", 409, 14317, 14321), ("astlib/ast_406.ml", 409, 14317, 14380), 0), 0, Tag1 ("Astlib__Ast_406", 184)); (("Pexp_extension", 788), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -3372)]), 0, (("astlib/ast_406.ml", 413, 14462, 14466), ("astlib/ast_406.ml", 413, 14462, 14495), 0), 0, Tag1 ("Astlib__Ast_406", 185)); (("Pexp_unreachable", 789), (0), 0, (("astlib/ast_406.ml", 415, 14518, 14522), ("astlib/ast_406.ml", 415, 14518, 14540), 0), 0, Tag1 ("Astlib__Ast_406", 186))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -3269)), 0, 0, 0, 0, (("astlib/ast_406.ml", 299, 9942, 9944), ("astlib/ast_406.ml", 415, 14518, 14540), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 59)), 2, 0); Tag1 (("case", 7086), (0, 0, [[(("pc_lhs", 790), 0, (Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3265), (("astlib/ast_406.ml", 420, 14651, 14658), ("astlib/ast_406.ml", 420, 14651, 14674), 0), 0, Tag1 ("Astlib__Ast_406", 187)); (("pc_guard", 791), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3267)], (0)), 100000000, 0, -3266), (("astlib/ast_406.ml", 421, 14675, 14682), ("astlib/ast_406.ml", 421, 14675, 14710), 0), 0, Tag1 ("Astlib__Ast_406", 188)); (("pc_rhs", 792), 0, (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3268), (("astlib/ast_406.ml", 422, 14711, 14718), ("astlib/ast_406.ml", 422, 14711, 14737), 0), 0, Tag1 ("Astlib__Ast_406", 189))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -3264)), 0, 0, 0, 0, (("astlib/ast_406.ml", 418, 14560, 14562), ("astlib/ast_406.ml", 423, 14738, 14745), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 60)), 2, 0); Tag1 (("value_description", 7087), (0, 0, [[(("pval_name", 793), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3258)], (0)), 100000000, 0, -3257), (("astlib/ast_406.ml", 429, 14855, 14862), ("astlib/ast_406.ml", 429, 14855, 14884), 0), 0, Tag1 ("Astlib__Ast_406", 190)); (("pval_type", 794), 0, (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3259), (("astlib/ast_406.ml", 430, 14885, 14892), ("astlib/ast_406.ml", 430, 14885, 14913), 0), 0, Tag1 ("Astlib__Ast_406", 191)); (("pval_prim", 795), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3261)], (0)), 100000000, 0, -3260), (("astlib/ast_406.ml", 431, 14914, 14921), ("astlib/ast_406.ml", 431, 14914, 14944), 0), 0, Tag1 ("Astlib__Ast_406", 192)); (("pval_attributes", 796), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3262), (("astlib/ast_406.ml", 432, 14945, 14952), ("astlib/ast_406.ml", 432, 14945, 14980), 0), 0, Tag1 ("Astlib__Ast_406", 193)); (("pval_loc", 797), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3263), (("astlib/ast_406.ml", 433, 15008, 15015), ("astlib/ast_406.ml", 433, 15008, 15036), 0), 0, Tag1 ("Astlib__Ast_406", 194))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -3256)), 0, 0, 0, 0, (("astlib/ast_406.ml", 427, 14775, 14777), ("astlib/ast_406.ml", 434, 15037, 15044), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 61)), 2, 0); Tag1 (("type_declaration", 7088), (0, 0, [[(("ptype_name", 798), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3240)], (0)), 100000000, 0, -3239), (("astlib/ast_406.ml", 445, 15278, 15285), ("astlib/ast_406.ml", 445, 15278, 15308), 0), 0, Tag1 ("Astlib__Ast_406", 195)); (("ptype_params", 799), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3243); (Tag3 (Tag1 ((("Asttypes", 7057)), "variance"), 0, (0)), 100000000, 0, -3244)]), 100000000, 0, -3242)], (0)), 100000000, 0, -3241), (("astlib/ast_406.ml", 446, 15309, 15316), ("astlib/ast_406.ml", 446, 15309, 15358), 0), 0, Tag1 ("Astlib__Ast_406", 196)); (("ptype_cstrs", 800), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3247); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3248); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3249)]), 100000000, 0, -3246)], (0)), 100000000, 0, -3245), (("astlib/ast_406.ml", 448, 15412, 15419), ("astlib/ast_406.ml", 448, 15412, 15474), 0), 0, Tag1 ("Astlib__Ast_406", 197)); (("ptype_kind", 801), 0, (Tag3 ((("type_kind", 7089)), 0, (0)), 100000000, 0, -3250), (("astlib/ast_406.ml", 450, 15539, 15546), ("astlib/ast_406.ml", 450, 15539, 15568), 0), 0, Tag1 ("Astlib__Ast_406", 198)); (("ptype_private", 802), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "private_flag"), 0, (0)), 100000000, 0, -3251), (("astlib/ast_406.ml", 451, 15569, 15576), ("astlib/ast_406.ml", 451, 15569, 15604), 0), 0, Tag1 ("Astlib__Ast_406", 199)); (("ptype_manifest", 803), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3253)], (0)), 100000000, 0, -3252), (("astlib/ast_406.ml", 452, 15627, 15634), ("astlib/ast_406.ml", 452, 15627, 15667), 0), 0, Tag1 ("Astlib__Ast_406", 200)); (("ptype_attributes", 804), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3254), (("astlib/ast_406.ml", 453, 15679, 15686), ("astlib/ast_406.ml", 453, 15679, 15715), 0), 0, Tag1 ("Astlib__Ast_406", 201)); (("ptype_loc", 805), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3255), (("astlib/ast_406.ml", 454, 15744, 15751), ("astlib/ast_406.ml", 454, 15744, 15773), 0), 0, Tag1 ("Astlib__Ast_406", 202))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -3238)), 0, 0, 0, 0, (("astlib/ast_406.ml", 443, 15200, 15202), ("astlib/ast_406.ml", 455, 15774, 15781), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 62)), 2, 0); Tag1 (("type_kind", 7089), (0, 0, Tag1 ([(("Ptype_abstract", 806), (0), 0, (("astlib/ast_406.ml", 468, 16235, 16239), ("astlib/ast_406.ml", 468, 16235, 16255), 0), 0, Tag1 ("Astlib__Ast_406", 203)); (("Ptype_variant", 807), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7091)), 0, (0)), 100000000, 0, -3235)], (0)), 100000000, 0, -3234)]), 0, (("astlib/ast_406.ml", 469, 16256, 16260), ("astlib/ast_406.ml", 469, 16256, 16307), 0), 0, Tag1 ("Astlib__Ast_406", 204)); (("Ptype_record", 808), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7090)), 0, (0)), 100000000, 0, -3237)], (0)), 100000000, 0, -3236)]), 0, (("astlib/ast_406.ml", 471, 16350, 16354), ("astlib/ast_406.ml", 471, 16350, 16394), 0), 0, Tag1 ("Astlib__Ast_406", 205)); (("Ptype_open", 809), (0), 0, (("astlib/ast_406.ml", 473, 16437, 16441), ("astlib/ast_406.ml", 473, 16437, 16453), 0), 0, Tag1 ("Astlib__Ast_406", 206))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -3233)), 0, 0, 0, 0, (("astlib/ast_406.ml", 467, 16179, 16181), ("astlib/ast_406.ml", 473, 16437, 16453), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 63)), 2, 0); Tag1 (("label_declaration", 7090), (0, 0, [[(("pld_name", 810), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3228)], (0)), 100000000, 0, -3227), (("astlib/ast_406.ml", 477, 16535, 16542), ("astlib/ast_406.ml", 477, 16535, 16563), 0), 0, Tag1 ("Astlib__Ast_406", 207)); (("pld_mutable", 811), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "mutable_flag"), 0, (0)), 100000000, 0, -3229), (("astlib/ast_406.ml", 478, 16564, 16571), ("astlib/ast_406.ml", 478, 16564, 16597), 0), 0, Tag1 ("Astlib__Ast_406", 208)); (("pld_type", 812), 0, (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3230), (("astlib/ast_406.ml", 479, 16598, 16605), ("astlib/ast_406.ml", 479, 16598, 16625), 0), 0, Tag1 ("Astlib__Ast_406", 209)); (("pld_loc", 813), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3231), (("astlib/ast_406.ml", 480, 16626, 16633), ("astlib/ast_406.ml", 480, 16626, 16653), 0), 0, Tag1 ("Astlib__Ast_406", 210)); (("pld_attributes", 814), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3232), (("astlib/ast_406.ml", 481, 16654, 16661), ("astlib/ast_406.ml", 481, 16654, 16688), 0), 0, Tag1 ("Astlib__Ast_406", 211))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -3226)), 0, 0, 0, 0, (("astlib/ast_406.ml", 475, 16455, 16457), ("astlib/ast_406.ml", 482, 16715, 16722), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 64)), 2, 0); Tag1 (("constructor_declaration", 7091), (0, 0, [[(("pcd_name", 815), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3220)], (0)), 100000000, 0, -3219), (("astlib/ast_406.ml", 492, 16967, 16974), ("astlib/ast_406.ml", 492, 16967, 16995), 0), 0, Tag1 ("Astlib__Ast_406", 212)); (("pcd_args", 816), 0, (Tag3 ((("constructor_arguments", 7092)), 0, (0)), 100000000, 0, -3221), (("astlib/ast_406.ml", 493, 16996, 17003), ("astlib/ast_406.ml", 493, 16996, 17035), 0), 0, Tag1 ("Astlib__Ast_406", 213)); (("pcd_res", 817), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3223)], (0)), 100000000, 0, -3222), (("astlib/ast_406.ml", 494, 17036, 17043), ("astlib/ast_406.ml", 494, 17036, 17069), 0), 0, Tag1 ("Astlib__Ast_406", 214)); (("pcd_loc", 818), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3224), (("astlib/ast_406.ml", 495, 17070, 17077), ("astlib/ast_406.ml", 495, 17070, 17097), 0), 0, Tag1 ("Astlib__Ast_406", 215)); (("pcd_attributes", 819), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3225), (("astlib/ast_406.ml", 496, 17098, 17105), ("astlib/ast_406.ml", 496, 17098, 17132), 0), 0, Tag1 ("Astlib__Ast_406", 216))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -3218)), 0, 0, 0, 0, (("astlib/ast_406.ml", 490, 16875, 16877), ("astlib/ast_406.ml", 497, 17162, 17169), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 65)), 2, 0); Tag1 (("constructor_arguments", 7092), (0, 0, Tag1 ([(("Pcstr_tuple", 820), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3215)], (0)), 100000000, 0, -3214)]), 0, (("astlib/ast_406.ml", 500, 17251, 17255), ("astlib/ast_406.ml", 500, 17251, 17286), 0), 0, Tag1 ("Astlib__Ast_406", 217)); (("Pcstr_record", 821), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7090)), 0, (0)), 100000000, 0, -3217)], (0)), 100000000, 0, -3216)]), 0, (("astlib/ast_406.ml", 501, 17287, 17291), ("astlib/ast_406.ml", 501, 17287, 17331), 0), 0, Tag1 ("Astlib__Ast_406", 218))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -3213)), 0, 0, 0, 0, (("astlib/ast_406.ml", 499, 17171, 17173), ("astlib/ast_406.ml", 501, 17287, 17331), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 66)), 2, 0); Tag1 (("type_extension", 7093), (0, 0, [[(("ptyext_path", 822), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3204)], (0)), 100000000, 0, -3203), (("astlib/ast_406.ml", 514, 17805, 17812), ("astlib/ast_406.ml", 514, 17805, 17841), 0), 0, Tag1 ("Astlib__Ast_406", 219)); (("ptyext_params", 823), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3207); (Tag3 (Tag1 ((("Asttypes", 7057)), "variance"), 0, (0)), 100000000, 0, -3208)]), 100000000, 0, -3206)], (0)), 100000000, 0, -3205), (("astlib/ast_406.ml", 515, 17842, 17849), ("astlib/ast_406.ml", 515, 17842, 17892), 0), 0, Tag1 ("Astlib__Ast_406", 220)); (("ptyext_constructors", 824), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7094)), 0, (0)), 100000000, 0, -3210)], (0)), 100000000, 0, -3209), (("astlib/ast_406.ml", 516, 17893, 17900), ("astlib/ast_406.ml", 516, 17893, 17948), 0), 0, Tag1 ("Astlib__Ast_406", 221)); (("ptyext_private", 825), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "private_flag"), 0, (0)), 100000000, 0, -3211), (("astlib/ast_406.ml", 517, 17949, 17956), ("astlib/ast_406.ml", 517, 17949, 17985), 0), 0, Tag1 ("Astlib__Ast_406", 222)); (("ptyext_attributes", 826), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3212), (("astlib/ast_406.ml", 518, 17986, 17993), ("astlib/ast_406.ml", 518, 17986, 18023), 0), 0, Tag1 ("Astlib__Ast_406", 223))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -3202)), 0, 0, 0, 0, (("astlib/ast_406.ml", 512, 17731, 17733), ("astlib/ast_406.ml", 519, 18052, 18059), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 67)), 2, 0); Tag1 (("extension_constructor", 7094), (0, 0, [[(("pext_name", 827), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3198)], (0)), 100000000, 0, -3197), (("astlib/ast_406.ml", 526, 18177, 18184), ("astlib/ast_406.ml", 526, 18177, 18206), 0), 0, Tag1 ("Astlib__Ast_406", 224)); (("pext_kind", 828), 0, (Tag3 ((("extension_constructor_kind", 7095)), 0, (0)), 100000000, 0, -3199), (("astlib/ast_406.ml", 527, 18207, 18214), ("astlib/ast_406.ml", 527, 18207, 18253), 0), 0, Tag1 ("Astlib__Ast_406", 225)); (("pext_loc", 829), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3200), (("astlib/ast_406.ml", 528, 18254, 18261), ("astlib/ast_406.ml", 528, 18254, 18283), 0), 0, Tag1 ("Astlib__Ast_406", 226)); (("pext_attributes", 830), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3201), (("astlib/ast_406.ml", 529, 18284, 18291), ("astlib/ast_406.ml", 529, 18284, 18319), 0), 0, Tag1 ("Astlib__Ast_406", 227))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -3196)), 0, 0, 0, 0, (("astlib/ast_406.ml", 524, 18089, 18091), ("astlib/ast_406.ml", 530, 18349, 18356), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 68)), 2, 0); Tag1 (("extension_constructor_kind", 7095), (0, 0, Tag1 ([(("Pext_decl", 831), ([(Tag3 ((("constructor_arguments", 7092)), 0, (0)), 100000000, 0, -3191); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3193)], (0)), 100000000, 0, -3192)]), 0, (("astlib/ast_406.ml", 533, 18448, 18454), ("astlib/ast_406.ml", 533, 18448, 18507), 0), 0, Tag1 ("Astlib__Ast_406", 228)); (("Pext_rebind", 832), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3195)], (0)), 100000000, 0, -3194)]), 0, (("astlib/ast_406.ml", 539, 18700, 18704), ("astlib/ast_406.ml", 539, 18700, 18736), 0), 0, Tag1 ("Astlib__Ast_406", 229))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -3190)), 0, 0, 0, 0, (("astlib/ast_406.ml", 532, 18358, 18360), ("astlib/ast_406.ml", 539, 18700, 18736), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 69)), 2, 0); Tag1 (("class_type", 7096), (0, 0, [[(("pcty_desc", 833), 0, (Tag3 ((("class_type_desc", 7097)), 0, (0)), 100000000, 0, -3187), (("astlib/ast_406.ml", 550, 18924, 18931), ("astlib/ast_406.ml", 550, 18924, 18958), 0), 0, Tag1 ("Astlib__Ast_406", 230)); (("pcty_loc", 834), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3188), (("astlib/ast_406.ml", 551, 18959, 18966), ("astlib/ast_406.ml", 551, 18959, 18987), 0), 0, Tag1 ("Astlib__Ast_406", 231)); (("pcty_attributes", 835), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3189), (("astlib/ast_406.ml", 552, 18988, 18995), ("astlib/ast_406.ml", 552, 18988, 19023), 0), 0, Tag1 ("Astlib__Ast_406", 232))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -3186)), 0, 0, 0, 0, (("astlib/ast_406.ml", 548, 18858, 18860), ("astlib/ast_406.ml", 553, 19048, 19055), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 70)), 2, 0); Tag1 (("class_type_desc", 7097), (0, 0, Tag1 ([(("Pcty_constr", 836), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3174)], (0)), 100000000, 0, -3173); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3176)], (0)), 100000000, 0, -3175)]), 0, (("astlib/ast_406.ml", 556, 19125, 19129), ("astlib/ast_406.ml", 556, 19125, 19178), 0), 0, Tag1 ("Astlib__Ast_406", 233)); (("Pcty_signature", 837), ([(Tag3 ((("class_signature", 7098)), 0, (0)), 100000000, 0, -3177)]), 0, (("astlib/ast_406.ml", 559, 19228, 19232), ("astlib/ast_406.ml", 559, 19228, 19267), 0), 0, Tag1 ("Astlib__Ast_406", 234)); (("Pcty_arrow", 838), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "arg_label"), 0, (0)), 100000000, 0, -3178); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3179); (Tag3 ((("class_type", 7096)), 0, (0)), 100000000, 0, -3180)]), 0, (("astlib/ast_406.ml", 561, 19299, 19303), ("astlib/ast_406.ml", 561, 19299, 19353), 0), 0, Tag1 ("Astlib__Ast_406", 235)); (("Pcty_extension", 839), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -3181)]), 0, (("astlib/ast_406.ml", 566, 19478, 19482), ("astlib/ast_406.ml", 566, 19478, 19511), 0), 0, Tag1 ("Astlib__Ast_406", 236)); (("Pcty_open", 840), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "override_flag"), 0, (0)), 100000000, 0, -3182); (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3184)], (0)), 100000000, 0, -3183); (Tag3 ((("class_type", 7096)), 0, (0)), 100000000, 0, -3185)]), 0, (("astlib/ast_406.ml", 568, 19534, 19538), ("astlib/ast_406.ml", 568, 19534, 19597), 0), 0, Tag1 ("Astlib__Ast_406", 237))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -3172)), 0, 0, 0, 0, (("astlib/ast_406.ml", 555, 19057, 19059), ("astlib/ast_406.ml", 568, 19534, 19597), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 71)), 2, 0); Tag1 (("class_signature", 7098), (0, 0, [[(("pcsig_self", 841), 0, (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3169), (("astlib/ast_406.ml", 574, 19709, 19716), ("astlib/ast_406.ml", 574, 19709, 19738), 0), 0, Tag1 ("Astlib__Ast_406", 238)); (("pcsig_fields", 842), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7099)), 0, (0)), 100000000, 0, -3171)], (0)), 100000000, 0, -3170), (("astlib/ast_406.ml", 575, 19739, 19746), ("astlib/ast_406.ml", 575, 19739, 19782), 0), 0, Tag1 ("Astlib__Ast_406", 239))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -3168)), 0, 0, 0, 0, (("astlib/ast_406.ml", 572, 19633, 19635), ("astlib/ast_406.ml", 576, 19783, 19790), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 72)), 2, 0); Tag1 (("class_type_field", 7099), (0, 0, [[(("pctf_desc", 843), 0, (Tag3 ((("class_type_field_desc", 7100)), 0, (0)), 100000000, 0, -3165), (("astlib/ast_406.ml", 583, 19956, 19963), ("astlib/ast_406.ml", 583, 19956, 19996), 0), 0, Tag1 ("Astlib__Ast_406", 240)); (("pctf_loc", 844), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3166), (("astlib/ast_406.ml", 584, 19997, 20004), ("astlib/ast_406.ml", 584, 19997, 20025), 0), 0, Tag1 ("Astlib__Ast_406", 241)); (("pctf_attributes", 845), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3167), (("astlib/ast_406.ml", 585, 20026, 20033), ("astlib/ast_406.ml", 585, 20026, 20061), 0), 0, Tag1 ("Astlib__Ast_406", 242))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -3164)), 0, 0, 0, 0, (("astlib/ast_406.ml", 581, 19878, 19880), ("astlib/ast_406.ml", 586, 20088, 20095), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 73)), 2, 0); Tag1 (("class_type_field_desc", 7100), (0, 0, Tag1 ([(("Pctf_inherit", 846), ([(Tag3 ((("class_type", 7096)), 0, (0)), 100000000, 0, -3146)]), 0, (("astlib/ast_406.ml", 589, 20177, 20181), ("astlib/ast_406.ml", 589, 20177, 20209), 0), 0, Tag1 ("Astlib__Ast_406", 243)); (("Pctf_val", 847), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3149)], (0)), 100000000, 0, -3148); (Tag3 (Tag1 ((("Asttypes", 7057)), "mutable_flag"), 0, (0)), 100000000, 0, -3150); (Tag3 (Tag1 ((("Asttypes", 7057)), "virtual_flag"), 0, (0)), 100000000, 0, -3151); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3152)]), 100000000, 0, -3147)]), 0, (("astlib/ast_406.ml", 591, 20237, 20241), ("astlib/ast_406.ml", 591, 20237, 20308), 0), 0, Tag1 ("Astlib__Ast_406", 244)); (("Pctf_method", 848), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3155)], (0)), 100000000, 0, -3154); (Tag3 (Tag1 ((("Asttypes", 7057)), "private_flag"), 0, (0)), 100000000, 0, -3156); (Tag3 (Tag1 ((("Asttypes", 7057)), "virtual_flag"), 0, (0)), 100000000, 0, -3157); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3158)]), 100000000, 0, -3153)]), 0, (("astlib/ast_406.ml", 593, 20334, 20338), ("astlib/ast_406.ml", 593, 20334, 20409), 0), 0, Tag1 ("Astlib__Ast_406", 245)); (("Pctf_constraint", 849), ([(Tag2 ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3160); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3161)]), 100000000, 0, -3159)]), 0, (("astlib/ast_406.ml", 598, 20491, 20495), ("astlib/ast_406.ml", 598, 20491, 20540), 0), 0, Tag1 ("Astlib__Ast_406", 246)); (("Pctf_attribute", 850), ([(Tag3 ((("attribute", 7073)), 0, (0)), 100000000, 0, -3162)]), 0, (("astlib/ast_406.ml", 600, 20576, 20580), ("astlib/ast_406.ml", 600, 20576, 20609), 0), 0, Tag1 ("Astlib__Ast_406", 247)); (("Pctf_extension", 851), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -3163)]), 0, (("astlib/ast_406.ml", 602, 20634, 20638), ("astlib/ast_406.ml", 602, 20634, 20667), 0), 0, Tag1 ("Astlib__Ast_406", 248))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -3145)), 0, 0, 0, 0, (("astlib/ast_406.ml", 588, 20097, 20099), ("astlib/ast_406.ml", 602, 20634, 20667), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 74)), 2, 0); Tag1 (("class_infos", 7101), ([((("a")), 100000000, 0, -3135)], 1, [[(("pci_virt", 852), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "virtual_flag"), 0, (0)), 100000000, 0, -3136), (("astlib/ast_406.ml", 607, 20766, 20773), ("astlib/ast_406.ml", 607, 20766, 20796), 0), 0, Tag1 ("Astlib__Ast_406", 249)); (("pci_params", 853), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3139); (Tag3 (Tag1 ((("Asttypes", 7057)), "variance"), 0, (0)), 100000000, 0, -3140)]), 100000000, 0, -3138)], (0)), 100000000, 0, -3137), (("astlib/ast_406.ml", 608, 20797, 20804), ("astlib/ast_406.ml", 608, 20797, 20844), 0), 0, Tag1 ("Astlib__Ast_406", 250)); (("pci_name", 854), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3142)], (0)), 100000000, 0, -3141), (("astlib/ast_406.ml", 609, 20845, 20852), ("astlib/ast_406.ml", 609, 20845, 20873), 0), 0, Tag1 ("Astlib__Ast_406", 251)); (("pci_expr", 855), 0, ((("a")), 100000000, 0, -3135), (("astlib/ast_406.ml", 610, 20874, 20881), ("astlib/ast_406.ml", 610, 20874, 20894), 0), 0, Tag1 ("Astlib__Ast_406", 252)); (("pci_loc", 856), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3143), (("astlib/ast_406.ml", 611, 20895, 20902), ("astlib/ast_406.ml", 611, 20895, 20922), 0), 0, Tag1 ("Astlib__Ast_406", 253)); (("pci_attributes", 857), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3144), (("astlib/ast_406.ml", 612, 20923, 20930), ("astlib/ast_406.ml", 612, 20923, 20957), 0), 0, Tag1 ("Astlib__Ast_406", 254))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -3135)], (0)), 100000000, 0, -3134)), [25], [0], 0, 0, (("astlib/ast_406.ml", 605, 20692, 20694), ("astlib/ast_406.ml", 613, 20985, 20992), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 75)), 2, 0); Tag1 (("class_description", 7102), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7101)), [(Tag3 ((("class_type", 7096)), 0, (0)), 100000000, 0, -3133)], (0)), 100000000, 0, -3132)), 0, 0, 0, 0, (("astlib/ast_406.ml", 621, 21124, 21126), ("astlib/ast_406.ml", 621, 21124, 21172), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 76)), 2, 0); Tag1 (("class_type_declaration", 7103), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7101)), [(Tag3 ((("class_type", 7096)), 0, (0)), 100000000, 0, -3131)], (0)), 100000000, 0, -3130)), 0, 0, 0, 0, (("astlib/ast_406.ml", 623, 21174, 21176), ("astlib/ast_406.ml", 623, 21174, 21227), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 77)), 2, 0); Tag1 (("class_expr", 7104), (0, 0, [[(("pcl_desc", 858), 0, (Tag3 ((("class_expr_desc", 7105)), 0, (0)), 100000000, 0, -3127), (("astlib/ast_406.ml", 629, 21345, 21352), ("astlib/ast_406.ml", 629, 21345, 21378), 0), 0, Tag1 ("Astlib__Ast_406", 255)); (("pcl_loc", 859), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3128), (("astlib/ast_406.ml", 630, 21379, 21386), ("astlib/ast_406.ml", 630, 21379, 21406), 0), 0, Tag1 ("Astlib__Ast_406", 256)); (("pcl_attributes", 860), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3129), (("astlib/ast_406.ml", 631, 21407, 21414), ("astlib/ast_406.ml", 631, 21407, 21441), 0), 0, Tag1 ("Astlib__Ast_406", 257))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -3126)), 0, 0, 0, 0, (("astlib/ast_406.ml", 627, 21279, 21281), ("astlib/ast_406.ml", 632, 21466, 21473), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 78)), 2, 0); Tag1 (("class_expr_desc", 7105), (0, 0, Tag1 ([(("Pcl_constr", 861), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3101)], (0)), 100000000, 0, -3100); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3103)], (0)), 100000000, 0, -3102)]), 0, (("astlib/ast_406.ml", 635, 21543, 21547), ("astlib/ast_406.ml", 635, 21543, 21595), 0), 0, Tag1 ("Astlib__Ast_406", 258)); (("Pcl_structure", 862), ([(Tag3 ((("class_structure", 7106)), 0, (0)), 100000000, 0, -3104)]), 0, (("astlib/ast_406.ml", 638, 21645, 21649), ("astlib/ast_406.ml", 638, 21645, 21683), 0), 0, Tag1 ("Astlib__Ast_406", 259)); (("Pcl_fun", 863), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "arg_label"), 0, (0)), 100000000, 0, -3105); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3107)], (0)), 100000000, 0, -3106); (Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3108); (Tag3 ((("class_expr", 7104)), 0, (0)), 100000000, 0, -3109)]), 0, (("astlib/ast_406.ml", 640, 21715, 21719), ("astlib/ast_406.ml", 640, 21715, 21784), 0), 0, Tag1 ("Astlib__Ast_406", 260)); (("Pcl_apply", 864), ([(Tag3 ((("class_expr", 7104)), 0, (0)), 100000000, 0, -3110); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "arg_label"), 0, (0)), 100000000, 0, -3113); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3114)]), 100000000, 0, -3112)], (0)), 100000000, 0, -3111)]), 0, (("astlib/ast_406.ml", 646, 22074, 22078), ("astlib/ast_406.ml", 646, 22074, 22135), 0), 0, Tag1 ("Astlib__Ast_406", 261)); (("Pcl_let", 865), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "rec_flag"), 0, (0)), 100000000, 0, -3115); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7128)), 0, (0)), 100000000, 0, -3117)], (0)), 100000000, 0, -3116); (Tag3 ((("class_expr", 7104)), 0, (0)), 100000000, 0, -3118)]), 0, (("astlib/ast_406.ml", 653, 22319, 22323), ("astlib/ast_406.ml", 653, 22319, 22378), 0), 0, Tag1 ("Astlib__Ast_406", 262)); (("Pcl_constraint", 866), ([(Tag3 ((("class_expr", 7104)), 0, (0)), 100000000, 0, -3119); (Tag3 ((("class_type", 7096)), 0, (0)), 100000000, 0, -3120)]), 0, (("astlib/ast_406.ml", 657, 22546, 22550), ("astlib/ast_406.ml", 657, 22546, 22593), 0), 0, Tag1 ("Astlib__Ast_406", 263)); (("Pcl_extension", 867), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -3121)]), 0, (("astlib/ast_406.ml", 659, 22620, 22624), ("astlib/ast_406.ml", 659, 22620, 22652), 0), 0, Tag1 ("Astlib__Ast_406", 264)); (("Pcl_open", 868), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "override_flag"), 0, (0)), 100000000, 0, -3122); (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3124)], (0)), 100000000, 0, -3123); (Tag3 ((("class_expr", 7104)), 0, (0)), 100000000, 0, -3125)]), 0, (("astlib/ast_406.ml", 661, 22669, 22673), ("astlib/ast_406.ml", 661, 22669, 22731), 0), 0, Tag1 ("Astlib__Ast_406", 265))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -3099)), 0, 0, 0, 0, (("astlib/ast_406.ml", 634, 21475, 21477), ("astlib/ast_406.ml", 661, 22669, 22731), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 79)), 2, 0); Tag1 (("class_structure", 7106), (0, 0, [[(("pcstr_self", 869), 0, (Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -3096), (("astlib/ast_406.ml", 667, 22837, 22844), ("astlib/ast_406.ml", 667, 22837, 22864), 0), 0, Tag1 ("Astlib__Ast_406", 266)); (("pcstr_fields", 870), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7107)), 0, (0)), 100000000, 0, -3098)], (0)), 100000000, 0, -3097), (("astlib/ast_406.ml", 668, 22865, 22872), ("astlib/ast_406.ml", 668, 22865, 22903), 0), 0, Tag1 ("Astlib__Ast_406", 267))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -3095)), 0, 0, 0, 0, (("astlib/ast_406.ml", 665, 22761, 22763), ("astlib/ast_406.ml", 669, 22904, 22911), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 80)), 2, 0); Tag1 (("class_field", 7107), (0, 0, [[(("pcf_desc", 871), 0, (Tag3 ((("class_field_desc", 7108)), 0, (0)), 100000000, 0, -3092), (("astlib/ast_406.ml", 676, 23064, 23071), ("astlib/ast_406.ml", 676, 23064, 23098), 0), 0, Tag1 ("Astlib__Ast_406", 268)); (("pcf_loc", 872), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3093), (("astlib/ast_406.ml", 677, 23099, 23106), ("astlib/ast_406.ml", 677, 23099, 23126), 0), 0, Tag1 ("Astlib__Ast_406", 269)); (("pcf_attributes", 873), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3094), (("astlib/ast_406.ml", 678, 23127, 23134), ("astlib/ast_406.ml", 678, 23127, 23161), 0), 0, Tag1 ("Astlib__Ast_406", 270))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -3091)), 0, 0, 0, 0, (("astlib/ast_406.ml", 674, 22996, 22998), ("astlib/ast_406.ml", 679, 23188, 23195), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 81)), 2, 0); Tag1 (("class_field_desc", 7108), (0, 0, Tag1 ([(("Pcf_inherit", 874), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "override_flag"), 0, (0)), 100000000, 0, -3070); (Tag3 ((("class_expr", 7104)), 0, (0)), 100000000, 0, -3071); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3074)], (0)), 100000000, 0, -3073)], (0)), 100000000, 0, -3072)]), 0, (("astlib/ast_406.ml", 682, 23267, 23271), ("astlib/ast_406.ml", 682, 23267, 23334), 0), 0, Tag1 ("Astlib__Ast_406", 271)); (("Pcf_val", 875), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3077)], (0)), 100000000, 0, -3076); (Tag3 (Tag1 ((("Asttypes", 7057)), "mutable_flag"), 0, (0)), 100000000, 0, -3078); (Tag3 ((("class_field_kind", 7109)), 0, (0)), 100000000, 0, -3079)]), 100000000, 0, -3075)]), 0, (("astlib/ast_406.ml", 688, 23457, 23461), ("astlib/ast_406.ml", 688, 23457, 23519), 0), 0, Tag1 ("Astlib__Ast_406", 272)); (("Pcf_method", 876), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7057)), "label"), 0, (0)), 100000000, 0, -3082)], (0)), 100000000, 0, -3081); (Tag3 (Tag1 ((("Asttypes", 7057)), "private_flag"), 0, (0)), 100000000, 0, -3083); (Tag3 ((("class_field_kind", 7109)), 0, (0)), 100000000, 0, -3084)]), 100000000, 0, -3080)]), 0, (("astlib/ast_406.ml", 692, 23587, 23591), ("astlib/ast_406.ml", 692, 23587, 23652), 0), 0, Tag1 ("Astlib__Ast_406", 273)); (("Pcf_constraint", 877), ([(Tag2 ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3086); (Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3087)]), 100000000, 0, -3085)]), 0, (("astlib/ast_406.ml", 696, 23787, 23791), ("astlib/ast_406.ml", 696, 23787, 23834), 0), 0, Tag1 ("Astlib__Ast_406", 274)); (("Pcf_initializer", 878), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3088)]), 0, (("astlib/ast_406.ml", 698, 23870, 23874), ("astlib/ast_406.ml", 698, 23870, 23905), 0), 0, Tag1 ("Astlib__Ast_406", 275)); (("Pcf_attribute", 879), ([(Tag3 ((("attribute", 7073)), 0, (0)), 100000000, 0, -3089)]), 0, (("astlib/ast_406.ml", 700, 23936, 23940), ("astlib/ast_406.ml", 700, 23936, 23968), 0), 0, Tag1 ("Astlib__Ast_406", 276)); (("Pcf_extension", 880), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -3090)]), 0, (("astlib/ast_406.ml", 702, 23993, 23997), ("astlib/ast_406.ml", 702, 23993, 24025), 0), 0, Tag1 ("Astlib__Ast_406", 277))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -3069)), 0, 0, 0, 0, (("astlib/ast_406.ml", 681, 23197, 23199), ("astlib/ast_406.ml", 702, 23993, 24025), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 82)), 2, 0); Tag1 (("class_field_kind", 7109), (0, 0, Tag1 ([(("Cfk_virtual", 881), ([(Tag3 ((("core_type", 7077)), 0, (0)), 100000000, 0, -3066)]), 0, (("astlib/ast_406.ml", 706, 24120, 24124), ("astlib/ast_406.ml", 706, 24120, 24150), 0), 0, Tag1 ("Astlib__Ast_406", 278)); (("Cfk_concrete", 882), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "override_flag"), 0, (0)), 100000000, 0, -3067); (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -3068)]), 0, (("astlib/ast_406.ml", 707, 24151, 24155), ("astlib/ast_406.ml", 707, 24151, 24199), 0), 0, Tag1 ("Astlib__Ast_406", 279))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -3065)), 0, 0, 0, 0, (("astlib/ast_406.ml", 705, 24050, 24052), ("astlib/ast_406.ml", 707, 24151, 24199), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 83)), 2, 0); Tag1 (("class_declaration", 7110), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7101)), [(Tag3 ((("class_expr", 7104)), 0, (0)), 100000000, 0, -3064)], (0)), 100000000, 0, -3063)), 0, 0, 0, 0, (("astlib/ast_406.ml", 709, 24201, 24203), ("astlib/ast_406.ml", 709, 24201, 24249), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 84)), 2, 0); Tag1 (("module_type", 7111), (0, 0, [[(("pmty_desc", 883), 0, (Tag3 ((("module_type_desc", 7112)), 0, (0)), 100000000, 0, -3060), (("astlib/ast_406.ml", 717, 24399, 24406), ("astlib/ast_406.ml", 717, 24399, 24434), 0), 0, Tag1 ("Astlib__Ast_406", 280)); (("pmty_loc", 884), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3061), (("astlib/ast_406.ml", 718, 24435, 24442), ("astlib/ast_406.ml", 718, 24435, 24463), 0), 0, Tag1 ("Astlib__Ast_406", 281)); (("pmty_attributes", 885), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3062), (("astlib/ast_406.ml", 719, 24464, 24471), ("astlib/ast_406.ml", 719, 24464, 24499), 0), 0, Tag1 ("Astlib__Ast_406", 282))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -3059)), 0, 0, 0, 0, (("astlib/ast_406.ml", 715, 24331, 24333), ("astlib/ast_406.ml", 720, 24524, 24531), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 85)), 2, 0); Tag1 (("module_type_desc", 7112), (0, 0, Tag1 ([(("Pmty_ident", 886), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3045)], (0)), 100000000, 0, -3044)]), 0, (("astlib/ast_406.ml", 723, 24603, 24607), ("astlib/ast_406.ml", 723, 24603, 24638), 0), 0, Tag1 ("Astlib__Ast_406", 283)); (("Pmty_signature", 887), ([(Tag3 ((("signature", 7113)), 0, (0)), 100000000, 0, -3046)]), 0, (("astlib/ast_406.ml", 725, 24657, 24661), ("astlib/ast_406.ml", 725, 24657, 24690), 0), 0, Tag1 ("Astlib__Ast_406", 284)); (("Pmty_functor", 888), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3048)], (0)), 100000000, 0, -3047); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7111)), 0, (0)), 100000000, 0, -3050)], (0)), 100000000, 0, -3049); (Tag3 ((("module_type", 7111)), 0, (0)), 100000000, 0, -3051)]), 0, (("astlib/ast_406.ml", 727, 24719, 24723), ("astlib/ast_406.ml", 727, 24719, 24786), 0), 0, Tag1 ("Astlib__Ast_406", 285)); (("Pmty_with", 889), ([(Tag3 ((("module_type", 7111)), 0, (0)), 100000000, 0, -3052); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7122)), 0, (0)), 100000000, 0, -3054)], (0)), 100000000, 0, -3053)]), 0, (("astlib/ast_406.ml", 729, 24827, 24831), ("astlib/ast_406.ml", 729, 24827, 24880), 0), 0, Tag1 ("Astlib__Ast_406", 286)); (("Pmty_typeof", 890), ([(Tag3 ((("module_expr", 7123)), 0, (0)), 100000000, 0, -3055)]), 0, (("astlib/ast_406.ml", 731, 24909, 24913), ("astlib/ast_406.ml", 731, 24909, 24941), 0), 0, Tag1 ("Astlib__Ast_406", 287)); (("Pmty_extension", 891), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -3056)]), 0, (("astlib/ast_406.ml", 733, 24976, 24980), ("astlib/ast_406.ml", 733, 24976, 25009), 0), 0, Tag1 ("Astlib__Ast_406", 288)); (("Pmty_alias", 892), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3058)], (0)), 100000000, 0, -3057)]), 0, (("astlib/ast_406.ml", 735, 25032, 25036), ("astlib/ast_406.ml", 735, 25032, 25067), 0), 0, Tag1 ("Astlib__Ast_406", 289))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -3043)), 0, 0, 0, 0, (("astlib/ast_406.ml", 722, 24533, 24535), ("astlib/ast_406.ml", 735, 25032, 25067), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 86)), 2, 0); Tag1 (("signature", 7113), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7114)), 0, (0)), 100000000, 0, -3042)], (0)), 100000000, 0, -3041)), 0, 0, 0, 0, (("astlib/ast_406.ml", 738, 25096, 25098), ("astlib/ast_406.ml", 738, 25096, 25133), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 87)), 2, 0); Tag1 (("signature_item", 7114), (0, 0, [[(("psig_desc", 893), 0, (Tag3 ((("signature_item_desc", 7115)), 0, (0)), 100000000, 0, -3039), (("astlib/ast_406.ml", 742, 25209, 25216), ("astlib/ast_406.ml", 742, 25209, 25247), 0), 0, Tag1 ("Astlib__Ast_406", 290)); (("psig_loc", 894), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3040), (("astlib/ast_406.ml", 743, 25248, 25255), ("astlib/ast_406.ml", 743, 25248, 25276), 0), 0, Tag1 ("Astlib__Ast_406", 291))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -3038)), 0, 0, 0, 0, (("astlib/ast_406.ml", 740, 25135, 25137), ("astlib/ast_406.ml", 744, 25277, 25284), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 88)), 2, 0); Tag1 (("signature_item_desc", 7115), (0, 0, Tag1 ([(("Psig_value", 895), ([(Tag3 ((("value_description", 7087)), 0, (0)), 100000000, 0, -3019)]), 0, (("astlib/ast_406.ml", 747, 25362, 25366), ("astlib/ast_406.ml", 747, 25362, 25399), 0), 0, Tag1 ("Astlib__Ast_406", 292)); (("Psig_type", 896), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "rec_flag"), 0, (0)), 100000000, 0, -3020); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7088)), 0, (0)), 100000000, 0, -3022)], (0)), 100000000, 0, -3021)]), 0, (("astlib/ast_406.ml", 752, 25490, 25494), ("astlib/ast_406.ml", 752, 25490, 25541), 0), 0, Tag1 ("Astlib__Ast_406", 293)); (("Psig_typext", 897), ([(Tag3 ((("type_extension", 7093)), 0, (0)), 100000000, 0, -3023)]), 0, (("astlib/ast_406.ml", 754, 25593, 25597), ("astlib/ast_406.ml", 754, 25593, 25628), 0), 0, Tag1 ("Astlib__Ast_406", 294)); (("Psig_exception", 898), ([(Tag3 ((("extension_constructor", 7094)), 0, (0)), 100000000, 0, -3024)]), 0, (("astlib/ast_406.ml", 756, 25660, 25664), ("astlib/ast_406.ml", 756, 25660, 25705), 0), 0, Tag1 ("Astlib__Ast_406", 295)); (("Psig_module", 899), ([(Tag3 ((("module_declaration", 7116)), 0, (0)), 100000000, 0, -3025)]), 0, (("astlib/ast_406.ml", 758, 25739, 25743), ("astlib/ast_406.ml", 758, 25739, 25778), 0), 0, Tag1 ("Astlib__Ast_406", 296)); (("Psig_recmodule", 900), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7116)), 0, (0)), 100000000, 0, -3027)], (0)), 100000000, 0, -3026)]), 0, (("astlib/ast_406.ml", 760, 25809, 25813), ("astlib/ast_406.ml", 760, 25809, 25856), 0), 0, Tag1 ("Astlib__Ast_406", 297)); (("Psig_modtype", 901), ([(Tag3 ((("module_type_declaration", 7117)), 0, (0)), 100000000, 0, -3028)]), 0, (("astlib/ast_406.ml", 762, 25914, 25918), ("astlib/ast_406.ml", 762, 25914, 25959), 0), 0, Tag1 ("Astlib__Ast_406", 298)); (("Psig_open", 902), ([(Tag3 ((("open_description", 7118)), 0, (0)), 100000000, 0, -3029)]), 0, (("astlib/ast_406.ml", 765, 26022, 26026), ("astlib/ast_406.ml", 765, 26022, 26057), 0), 0, Tag1 ("Astlib__Ast_406", 299)); (("Psig_include", 903), ([(Tag3 ((("include_description", 7120)), 0, (0)), 100000000, 0, -3030)]), 0, (("astlib/ast_406.ml", 767, 26081, 26085), ("astlib/ast_406.ml", 767, 26081, 26122), 0), 0, Tag1 ("Astlib__Ast_406", 300)); (("Psig_class", 904), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7102)), 0, (0)), 100000000, 0, -3032)], (0)), 100000000, 0, -3031)]), 0, (("astlib/ast_406.ml", 769, 26150, 26154), ("astlib/ast_406.ml", 769, 26150, 26192), 0), 0, Tag1 ("Astlib__Ast_406", 301)); (("Psig_class_type", 905), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7103)), 0, (0)), 100000000, 0, -3034)], (0)), 100000000, 0, -3033)]), 0, (("astlib/ast_406.ml", 771, 26245, 26249), ("astlib/ast_406.ml", 771, 26245, 26297), 0), 0, Tag1 ("Astlib__Ast_406", 302)); (("Psig_attribute", 906), ([(Tag3 ((("attribute", 7073)), 0, (0)), 100000000, 0, -3035)]), 0, (("astlib/ast_406.ml", 773, 26357, 26361), ("astlib/ast_406.ml", 773, 26357, 26390), 0), 0, Tag1 ("Astlib__Ast_406", 303)); (("Psig_extension", 907), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -3036); (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3037)]), 0, (("astlib/ast_406.ml", 775, 26415, 26419), ("astlib/ast_406.ml", 775, 26415, 26461), 0), 0, Tag1 ("Astlib__Ast_406", 304))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -3018)), 0, 0, 0, 0, (("astlib/ast_406.ml", 746, 25286, 25288), ("astlib/ast_406.ml", 775, 26415, 26461), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 89)), 2, 0); Tag1 (("module_declaration", 7116), (0, 0, [[(("pmd_name", 908), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3014)], (0)), 100000000, 0, -3013), (("astlib/ast_406.ml", 780, 26568, 26575), ("astlib/ast_406.ml", 780, 26568, 26596), 0), 0, Tag1 ("Astlib__Ast_406", 305)); (("pmd_type", 909), 0, (Tag3 ((("module_type", 7111)), 0, (0)), 100000000, 0, -3015), (("astlib/ast_406.ml", 781, 26597, 26604), ("astlib/ast_406.ml", 781, 26597, 26626), 0), 0, Tag1 ("Astlib__Ast_406", 306)); (("pmd_attributes", 910), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3016), (("astlib/ast_406.ml", 782, 26627, 26634), ("astlib/ast_406.ml", 782, 26627, 26661), 0), 0, Tag1 ("Astlib__Ast_406", 307)); (("pmd_loc", 911), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3017), (("astlib/ast_406.ml", 783, 26688, 26695), ("astlib/ast_406.ml", 783, 26688, 26715), 0), 0, Tag1 ("Astlib__Ast_406", 308))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -3012)), 0, 0, 0, 0, (("astlib/ast_406.ml", 778, 26486, 26488), ("astlib/ast_406.ml", 784, 26716, 26723), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 90)), 2, 0); Tag1 (("module_type_declaration", 7117), (0, 0, [[(("pmtd_name", 912), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3007)], (0)), 100000000, 0, -3006), (("astlib/ast_406.ml", 789, 26832, 26839), ("astlib/ast_406.ml", 789, 26832, 26861), 0), 0, Tag1 ("Astlib__Ast_406", 309)); (("pmtd_type", 913), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7111)), 0, (0)), 100000000, 0, -3009)], (0)), 100000000, 0, -3008), (("astlib/ast_406.ml", 790, 26862, 26869), ("astlib/ast_406.ml", 790, 26862, 26899), 0), 0, Tag1 ("Astlib__Ast_406", 310)); (("pmtd_attributes", 914), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3010), (("astlib/ast_406.ml", 791, 26900, 26907), ("astlib/ast_406.ml", 791, 26900, 26935), 0), 0, Tag1 ("Astlib__Ast_406", 311)); (("pmtd_loc", 915), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3011), (("astlib/ast_406.ml", 792, 26962, 26969), ("astlib/ast_406.ml", 792, 26962, 26990), 0), 0, Tag1 ("Astlib__Ast_406", 312))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -3005)), 0, 0, 0, 0, (("astlib/ast_406.ml", 787, 26740, 26742), ("astlib/ast_406.ml", 793, 26991, 26998), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 91)), 2, 0); Tag1 (("open_description", 7118), (0, 0, [[(("popen_lid", 916), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3001)], (0)), 100000000, 0, -3000), (("astlib/ast_406.ml", 800, 27161, 27168), ("astlib/ast_406.ml", 800, 27161, 27195), 0), 0, Tag1 ("Astlib__Ast_406", 313)); (("popen_override", 917), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "override_flag"), 0, (0)), 100000000, 0, -3002), (("astlib/ast_406.ml", 801, 27196, 27203), ("astlib/ast_406.ml", 801, 27196, 27233), 0), 0, Tag1 ("Astlib__Ast_406", 314)); (("popen_loc", 918), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3003), (("astlib/ast_406.ml", 802, 27234, 27241), ("astlib/ast_406.ml", 802, 27234, 27263), 0), 0, Tag1 ("Astlib__Ast_406", 315)); (("popen_attributes", 919), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -3004), (("astlib/ast_406.ml", 803, 27264, 27271), ("astlib/ast_406.ml", 803, 27264, 27300), 0), 0, Tag1 ("Astlib__Ast_406", 316))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "open_description"), 0, (0)), 100000000, 0, -2999)), 0, 0, 0, 0, (("astlib/ast_406.ml", 798, 27083, 27085), ("astlib/ast_406.ml", 804, 27301, 27308), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 92)), 2, 0); Tag1 (("include_infos", 7119), ([((("a")), 100000000, 0, -2996)], 1, [[(("pincl_mod", 920), 0, ((("a")), 100000000, 0, -2996), (("astlib/ast_406.ml", 812, 27556, 27563), ("astlib/ast_406.ml", 812, 27556, 27577), 0), 0, Tag1 ("Astlib__Ast_406", 317)); (("pincl_loc", 921), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2997), (("astlib/ast_406.ml", 813, 27578, 27585), ("astlib/ast_406.ml", 813, 27578, 27607), 0), 0, Tag1 ("Astlib__Ast_406", 318)); (("pincl_attributes", 922), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -2998), (("astlib/ast_406.ml", 814, 27608, 27615), ("astlib/ast_406.ml", 814, 27608, 27644), 0), 0, Tag1 ("Astlib__Ast_406", 319))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -2996)], (0)), 100000000, 0, -2995)), [25], [0], 0, 0, (("astlib/ast_406.ml", 810, 27478, 27480), ("astlib/ast_406.ml", 815, 27645, 27652), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 93)), 2, 0); Tag1 (("include_description", 7120), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7119)), [(Tag3 ((("module_type", 7111)), 0, (0)), 100000000, 0, -2994)], (0)), 100000000, 0, -2993)), 0, 0, 0, 0, (("astlib/ast_406.ml", 817, 27654, 27656), ("astlib/ast_406.ml", 817, 27654, 27707), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 94)), 2, 0); Tag1 (("include_declaration", 7121), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7119)), [(Tag3 ((("module_expr", 7123)), 0, (0)), 100000000, 0, -2992)], (0)), 100000000, 0, -2991)), 0, 0, 0, 0, (("astlib/ast_406.ml", 820, 27728, 27730), ("astlib/ast_406.ml", 820, 27728, 27781), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 95)), 2, 0); Tag1 (("with_constraint", 7122), (0, 0, Tag1 ([(("Pwith_type", 923), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2978)], (0)), 100000000, 0, -2977); (Tag3 ((("type_declaration", 7088)), 0, (0)), 100000000, 0, -2979)]), 0, (("astlib/ast_406.ml", 824, 27870, 27874), ("astlib/ast_406.ml", 824, 27870, 27924), 0), 0, Tag1 ("Astlib__Ast_406", 320)); (("Pwith_module", 924), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2981)], (0)), 100000000, 0, -2980); (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2983)], (0)), 100000000, 0, -2982)]), 0, (("astlib/ast_406.ml", 829, 28075, 28079), ("astlib/ast_406.ml", 829, 28075, 28130), 0), 0, Tag1 ("Astlib__Ast_406", 321)); (("Pwith_typesubst", 925), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2985)], (0)), 100000000, 0, -2984); (Tag3 ((("type_declaration", 7088)), 0, (0)), 100000000, 0, -2986)]), 0, (("astlib/ast_406.ml", 831, 28167, 28171), ("astlib/ast_406.ml", 831, 28167, 28226), 0), 0, Tag1 ("Astlib__Ast_406", 322)); (("Pwith_modsubst", 926), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2988)], (0)), 100000000, 0, -2987); (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2990)], (0)), 100000000, 0, -2989)]), 0, (("astlib/ast_406.ml", 833, 28293, 28297), ("astlib/ast_406.ml", 833, 28293, 28350), 0), 0, Tag1 ("Astlib__Ast_406", 323))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -2976)), 0, 0, 0, 0, (("astlib/ast_406.ml", 823, 27802, 27804), ("astlib/ast_406.ml", 833, 28293, 28350), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 96)), 2, 0); Tag1 (("module_expr", 7123), (0, 0, [[(("pmod_desc", 927), 0, (Tag3 ((("module_expr_desc", 7124)), 0, (0)), 100000000, 0, -2973), (("astlib/ast_406.ml", 840, 28508, 28515), ("astlib/ast_406.ml", 840, 28508, 28543), 0), 0, Tag1 ("Astlib__Ast_406", 324)); (("pmod_loc", 928), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2974), (("astlib/ast_406.ml", 841, 28544, 28551), ("astlib/ast_406.ml", 841, 28544, 28572), 0), 0, Tag1 ("Astlib__Ast_406", 325)); (("pmod_attributes", 929), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -2975), (("astlib/ast_406.ml", 842, 28573, 28580), ("astlib/ast_406.ml", 842, 28573, 28608), 0), 0, Tag1 ("Astlib__Ast_406", 326))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -2972)), 0, 0, 0, 0, (("astlib/ast_406.ml", 838, 28440, 28442), ("astlib/ast_406.ml", 843, 28633, 28640), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 97)), 2, 0); Tag1 (("module_expr_desc", 7124), (0, 0, Tag1 ([(("Pmod_ident", 930), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2959)], (0)), 100000000, 0, -2958)]), 0, (("astlib/ast_406.ml", 846, 28712, 28716), ("astlib/ast_406.ml", 846, 28712, 28747), 0), 0, Tag1 ("Astlib__Ast_406", 327)); (("Pmod_structure", 931), ([(Tag3 ((("structure", 7125)), 0, (0)), 100000000, 0, -2960)]), 0, (("astlib/ast_406.ml", 848, 28766, 28770), ("astlib/ast_406.ml", 848, 28766, 28799), 0), 0, Tag1 ("Astlib__Ast_406", 328)); (("Pmod_functor", 932), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2962)], (0)), 100000000, 0, -2961); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7111)), 0, (0)), 100000000, 0, -2964)], (0)), 100000000, 0, -2963); (Tag3 ((("module_expr", 7123)), 0, (0)), 100000000, 0, -2965)]), 0, (("astlib/ast_406.ml", 850, 28831, 28835), ("astlib/ast_406.ml", 850, 28831, 28898), 0), 0, Tag1 ("Astlib__Ast_406", 329)); (("Pmod_apply", 933), ([(Tag3 ((("module_expr", 7123)), 0, (0)), 100000000, 0, -2966); (Tag3 ((("module_expr", 7123)), 0, (0)), 100000000, 0, -2967)]), 0, (("astlib/ast_406.ml", 852, 28938, 28942), ("astlib/ast_406.ml", 852, 28938, 28983), 0), 0, Tag1 ("Astlib__Ast_406", 330)); (("Pmod_constraint", 934), ([(Tag3 ((("module_expr", 7123)), 0, (0)), 100000000, 0, -2968); (Tag3 ((("module_type", 7111)), 0, (0)), 100000000, 0, -2969)]), 0, (("astlib/ast_406.ml", 854, 29009, 29013), ("astlib/ast_406.ml", 854, 29009, 29059), 0), 0, Tag1 ("Astlib__Ast_406", 331)); (("Pmod_unpack", 935), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -2970)]), 0, (("astlib/ast_406.ml", 856, 29086, 29090), ("astlib/ast_406.ml", 856, 29086, 29117), 0), 0, Tag1 ("Astlib__Ast_406", 332)); (("Pmod_extension", 936), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -2971)]), 0, (("astlib/ast_406.ml", 858, 29142, 29146), ("astlib/ast_406.ml", 858, 29142, 29175), 0), 0, Tag1 ("Astlib__Ast_406", 333))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -2957)), 0, 0, 0, 0, (("astlib/ast_406.ml", 845, 28642, 28644), ("astlib/ast_406.ml", 858, 29142, 29175), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 98)), 2, 0); Tag1 (("structure", 7125), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7126)), 0, (0)), 100000000, 0, -2956)], (0)), 100000000, 0, -2955)), 0, 0, 0, 0, (("astlib/ast_406.ml", 861, 29199, 29201), ("astlib/ast_406.ml", 861, 29199, 29236), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 99)), 2, 0); Tag1 (("structure_item", 7126), (0, 0, [[(("pstr_desc", 937), 0, (Tag3 ((("structure_item_desc", 7127)), 0, (0)), 100000000, 0, -2953), (("astlib/ast_406.ml", 865, 29312, 29319), ("astlib/ast_406.ml", 865, 29312, 29350), 0), 0, Tag1 ("Astlib__Ast_406", 334)); (("pstr_loc", 938), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2954), (("astlib/ast_406.ml", 866, 29351, 29358), ("astlib/ast_406.ml", 866, 29351, 29379), 0), 0, Tag1 ("Astlib__Ast_406", 335))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -2952)), 0, 0, 0, 0, (("astlib/ast_406.ml", 863, 29238, 29240), ("astlib/ast_406.ml", 867, 29380, 29387), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 100)), 2, 0); Tag1 (("structure_item_desc", 7127), (0, 0, Tag1 ([(("Pstr_eval", 939), ([(Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -2928); (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -2929)]), 0, (("astlib/ast_406.ml", 870, 29465, 29469), ("astlib/ast_406.ml", 870, 29465, 29507), 0), 0, Tag1 ("Astlib__Ast_406", 336)); (("Pstr_value", 940), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "rec_flag"), 0, (0)), 100000000, 0, -2930); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7128)), 0, (0)), 100000000, 0, -2932)], (0)), 100000000, 0, -2931)]), 0, (("astlib/ast_406.ml", 872, 29526, 29530), ("astlib/ast_406.ml", 872, 29526, 29575), 0), 0, Tag1 ("Astlib__Ast_406", 337)); (("Pstr_primitive", 941), ([(Tag3 ((("value_description", 7087)), 0, (0)), 100000000, 0, -2933)]), 0, (("astlib/ast_406.ml", 876, 29733, 29737), ("astlib/ast_406.ml", 876, 29733, 29774), 0), 0, Tag1 ("Astlib__Ast_406", 338)); (("Pstr_type", 942), ([(Tag3 (Tag1 ((("Asttypes", 7057)), "rec_flag"), 0, (0)), 100000000, 0, -2934); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7088)), 0, (0)), 100000000, 0, -2936)], (0)), 100000000, 0, -2935)]), 0, (("astlib/ast_406.ml", 879, 29845, 29849), ("astlib/ast_406.ml", 879, 29845, 29896), 0), 0, Tag1 ("Astlib__Ast_406", 339)); (("Pstr_typext", 943), ([(Tag3 ((("type_extension", 7093)), 0, (0)), 100000000, 0, -2937)]), 0, (("astlib/ast_406.ml", 881, 29948, 29952), ("astlib/ast_406.ml", 881, 29948, 29983), 0), 0, Tag1 ("Astlib__Ast_406", 340)); (("Pstr_exception", 944), ([(Tag3 ((("extension_constructor", 7094)), 0, (0)), 100000000, 0, -2938)]), 0, (("astlib/ast_406.ml", 883, 30015, 30019), ("astlib/ast_406.ml", 883, 30015, 30060), 0), 0, Tag1 ("Astlib__Ast_406", 341)); (("Pstr_module", 945), ([(Tag3 ((("module_binding", 7129)), 0, (0)), 100000000, 0, -2939)]), 0, (("astlib/ast_406.ml", 886, 30125, 30129), ("astlib/ast_406.ml", 886, 30125, 30160), 0), 0, Tag1 ("Astlib__Ast_406", 342)); (("Pstr_recmodule", 946), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7129)), 0, (0)), 100000000, 0, -2941)], (0)), 100000000, 0, -2940)]), 0, (("astlib/ast_406.ml", 888, 30191, 30195), ("astlib/ast_406.ml", 888, 30191, 30234), 0), 0, Tag1 ("Astlib__Ast_406", 343)); (("Pstr_modtype", 947), ([(Tag3 ((("module_type_declaration", 7117)), 0, (0)), 100000000, 0, -2942)]), 0, (("astlib/ast_406.ml", 890, 30292, 30296), ("astlib/ast_406.ml", 890, 30292, 30337), 0), 0, Tag1 ("Astlib__Ast_406", 344)); (("Pstr_open", 948), ([(Tag3 ((("open_description", 7118)), 0, (0)), 100000000, 0, -2943)]), 0, (("astlib/ast_406.ml", 892, 30373, 30377), ("astlib/ast_406.ml", 892, 30373, 30408), 0), 0, Tag1 ("Astlib__Ast_406", 345)); (("Pstr_class", 949), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7110)), 0, (0)), 100000000, 0, -2945)], (0)), 100000000, 0, -2944)]), 0, (("astlib/ast_406.ml", 894, 30432, 30436), ("astlib/ast_406.ml", 894, 30432, 30474), 0), 0, Tag1 ("Astlib__Ast_406", 346)); (("Pstr_class_type", 950), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7103)), 0, (0)), 100000000, 0, -2947)], (0)), 100000000, 0, -2946)]), 0, (("astlib/ast_406.ml", 896, 30527, 30531), ("astlib/ast_406.ml", 896, 30527, 30579), 0), 0, Tag1 ("Astlib__Ast_406", 347)); (("Pstr_include", 951), ([(Tag3 ((("include_declaration", 7121)), 0, (0)), 100000000, 0, -2948)]), 0, (("astlib/ast_406.ml", 898, 30639, 30643), ("astlib/ast_406.ml", 898, 30639, 30680), 0), 0, Tag1 ("Astlib__Ast_406", 348)); (("Pstr_attribute", 952), ([(Tag3 ((("attribute", 7073)), 0, (0)), 100000000, 0, -2949)]), 0, (("astlib/ast_406.ml", 900, 30708, 30712), ("astlib/ast_406.ml", 900, 30708, 30741), 0), 0, Tag1 ("Astlib__Ast_406", 349)); (("Pstr_extension", 953), ([(Tag3 ((("extension", 7074)), 0, (0)), 100000000, 0, -2950); (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -2951)]), 0, (("astlib/ast_406.ml", 902, 30766, 30770), ("astlib/ast_406.ml", 902, 30766, 30812), 0), 0, Tag1 ("Astlib__Ast_406", 350))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -2927)), 0, 0, 0, 0, (("astlib/ast_406.ml", 869, 29389, 29391), ("astlib/ast_406.ml", 902, 30766, 30812), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 101)), 2, 0); Tag1 (("value_binding", 7128), (0, 0, [[(("pvb_pat", 954), 0, (Tag3 ((("pattern", 7082)), 0, (0)), 100000000, 0, -2923), (("astlib/ast_406.ml", 907, 30907, 30913), ("astlib/ast_406.ml", 907, 30907, 30930), 0), 0, Tag1 ("Astlib__Ast_406", 351)); (("pvb_expr", 955), 0, (Tag3 ((("expression", 7084)), 0, (0)), 100000000, 0, -2924), (("astlib/ast_406.ml", 908, 30931, 30937), ("astlib/ast_406.ml", 908, 30931, 30958), 0), 0, Tag1 ("Astlib__Ast_406", 352)); (("pvb_attributes", 956), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -2925), (("astlib/ast_406.ml", 909, 30959, 30965), ("astlib/ast_406.ml", 909, 30959, 30992), 0), 0, Tag1 ("Astlib__Ast_406", 353)); (("pvb_loc", 957), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2926), (("astlib/ast_406.ml", 910, 30993, 30999), ("astlib/ast_406.ml", 910, 30993, 31019), 0), 0, Tag1 ("Astlib__Ast_406", 354))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -2922)), 0, 0, 0, 0, (("astlib/ast_406.ml", 905, 30837, 30839), ("astlib/ast_406.ml", 911, 31020, 31025), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 102)), 2, 0); Tag1 (("module_binding", 7129), (0, 0, [[(("pmb_name", 958), 0, (Tag3 (Tag1 ((("Asttypes", 7057)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2918)], (0)), 100000000, 0, -2917), (("astlib/ast_406.ml", 915, 31101, 31108), ("astlib/ast_406.ml", 915, 31101, 31129), 0), 0, Tag1 ("Astlib__Ast_406", 355)); (("pmb_expr", 959), 0, (Tag3 ((("module_expr", 7123)), 0, (0)), 100000000, 0, -2919), (("astlib/ast_406.ml", 916, 31130, 31137), ("astlib/ast_406.ml", 916, 31130, 31159), 0), 0, Tag1 ("Astlib__Ast_406", 356)); (("pmb_attributes", 960), 0, (Tag3 ((("attributes", 7075)), 0, (0)), 100000000, 0, -2920), (("astlib/ast_406.ml", 917, 31160, 31167), ("astlib/ast_406.ml", 917, 31160, 31194), 0), 0, Tag1 ("Astlib__Ast_406", 357)); (("pmb_loc", 961), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -2921), (("astlib/ast_406.ml", 918, 31195, 31202), ("astlib/ast_406.ml", 918, 31195, 31222), 0), 0, Tag1 ("Astlib__Ast_406", 358))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -2916)), 0, 0, 0, 0, (("astlib/ast_406.ml", 913, 31027, 31029), ("astlib/ast_406.ml", 919, 31223, 31230), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 103)), 2, 0); Tag1 (("toplevel_phrase", 7130), (0, 0, Tag1 ([(("Ptop_def", 974), ([(Tag3 ((("structure", 7125)), 0, (0)), 100000000, 0, -2913)]), 0, (("astlib/ast_406.ml", 927, 31365, 31369), ("astlib/ast_406.ml", 927, 31365, 31392), 0), 0, Tag1 ("Astlib__Ast_406", 361)); (("Ptop_dir", 975), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2914); (Tag3 ((("directive_argument", 7131)), 0, (0)), 100000000, 0, -2915)]), 0, (("astlib/ast_406.ml", 928, 31393, 31397), ("astlib/ast_406.ml", 928, 31393, 31438), 0), 0, Tag1 ("Astlib__Ast_406", 362))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -2912)), 0, 0, 0, 0, (("astlib/ast_406.ml", 926, 31296, 31298), ("astlib/ast_406.ml", 928, 31393, 31438), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 359)), 1, 0); Tag1 (("directive_argument", 7131), (0, 0, Tag1 ([(("Pdir_none", 976), (0), 0, (("astlib/ast_406.ml", 932, 31543, 31547), ("astlib/ast_406.ml", 932, 31543, 31558), 0), 0, Tag1 ("Astlib__Ast_406", 363)); (("Pdir_string", 977), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2906)]), 0, (("astlib/ast_406.ml", 933, 31559, 31563), ("astlib/ast_406.ml", 933, 31559, 31586), 0), 0, Tag1 ("Astlib__Ast_406", 364)); (("Pdir_int", 978), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2907); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -2909)], (0)), 100000000, 0, -2908)]), 0, (("astlib/ast_406.ml", 934, 31587, 31591), ("astlib/ast_406.ml", 934, 31587, 31625), 0), 0, Tag1 ("Astlib__Ast_406", 365)); (("Pdir_ident", 979), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -2910)]), 0, (("astlib/ast_406.ml", 935, 31626, 31630), ("astlib/ast_406.ml", 935, 31626, 31657), 0), 0, Tag1 ("Astlib__Ast_406", 366)); (("Pdir_bool", 980), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -2911)]), 0, (("astlib/ast_406.ml", 936, 31658, 31662), ("astlib/ast_406.ml", 936, 31658, 31681), 0), 0, Tag1 ("Astlib__Ast_406", 367))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_406")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -2905)), 0, 0, 0, 0, (("astlib/ast_406.ml", 931, 31469, 31471), ("astlib/ast_406.ml", 936, 31658, 31681), 0), 0, 0, 0, Tag1 ("Astlib__Ast_406", 360)), 2, 0)]), 0, (("astlib/ast_406.ml", 75, 3093, 3093), ("astlib/ast_406.ml", 938, 31683, 31686), 0), Tag1 ("Astlib__Ast_406", 368)), 0, 0); Tag3 (("Config", 7059), 0, (Tag1 ([(("ast_impl_magic_number", 7132), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3508), 0, (("astlib/ast_406.ml", 941, 31711, 31717), ("astlib/ast_406.ml", 941, 31711, 31738), 0), 0, Tag1 ("Astlib__Ast_406", 369)), 0); (("ast_intf_magic_number", 7133), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3507), 0, (("astlib/ast_406.ml", 942, 31756, 31762), ("astlib/ast_406.ml", 942, 31756, 31783), 0), 0, Tag1 ("Astlib__Ast_406", 370)), 0)]), 0, (("astlib/ast_406.ml", 940, 31688, 31688), ("astlib/ast_406.ml", 943, 31801, 31804), 0), Tag1 ("Astlib__Ast_406", 371)), 0, 0)]), 0, (("astlib/astlib.ml", 29, 1463, 1463), ("astlib/astlib.ml", 29, 1463, 1487), 0), Tag1 ("Astlib", 4)), 0, 0); (("version", 7052), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -2879), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7053), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -2878), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7054), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -2859), 0), 100000000, 0, -2858), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -2875), 0), 100000000, 0, -2874), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -2877), 0), 100000000, 0, -2876), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -2869), 0), 100000000, 0, -2868), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -2841), 0), 100000000, 0, -2840), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -2855), 0), 100000000, 0, -2854), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -2845), 0), 100000000, 0, -2844), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -2867), 0), 100000000, 0, -2866), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -2853), 0), 100000000, 0, -2852), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -2851), 0), 100000000, 0, -2850), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -2849), 0), 100000000, 0, -2848), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -2847), 0), 100000000, 0, -2846), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -2863), 0), 100000000, 0, -2862), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -2871), 0), 100000000, 0, -2870), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -2865), 0), 100000000, 0, -2864), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -2843), 0), 100000000, 0, -2842), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -2857), 0), 100000000, 0, -2856), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -2873), 0), 100000000, 0, -2872), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7051)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -2861), 0), 100000000, 0, -2860), (0, 100000000, 0, -2839)), 100000000, 0, 492)), 100000000, 0, 493)), 100000000, 0, 494)), 100000000, 0, 495)), 100000000, 0, 496)), 100000000, 0, 497)), 100000000, 0, 498)), 100000000, 0, 499)), 100000000, 0, 500)), 100000000, 0, 501)), 100000000, 0, 502)), 100000000, 0, 503)), 100000000, 0, 504)), 100000000, 0, 505)), 100000000, 0, 506)), 100000000, 0, 507)), 100000000, 0, 508)), 100000000, 0, 509)), 100000000, 0, -2820), (0)), 100000000, 0, -2819)], (0)), 100000000, 0, -2818)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7055), ((("witnesses", 6673)), [((("_")), 100000000, 0, -2817)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7054)), 0, (0)), 100000000, 0, -2816)], (0)), 100000000, 0, -2815)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7056), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7054)), 0, (0)), 100000000, 0, -2814)], (0)), 100000000, 0, -2813), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 149, 5412, 5412), ("ast/versions.mli", 149, 5412, 5477), 0), Tag1 ("Ppxlib_ast__Versions", 38)), 0, 0); Tag3 (("OCaml_407", 6681), 0, (Tag1 ([Tag3 (("Ast", 7134), 0, (Tag1 ([Tag3 (("Asttypes", 7140), 0, (Tag1 ([Tag1 (("constant", 7143), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3592)]), 0, (("astlib/ast_407.ml", 33, 1846, 1852), ("astlib/ast_407.ml", 33, 1846, 1868), 0), 0, Tag1 ("Astlib__Ast_407", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -3593)]), 0, (("astlib/ast_407.ml", 34, 1869, 1873), ("astlib/ast_407.ml", 34, 1869, 1893), 0), 0, Tag1 ("Astlib__Ast_407", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3594); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3596)], (0)), 100000000, 0, -3595)]), 0, (("astlib/ast_407.ml", 35, 1894, 1898), ("astlib/ast_407.ml", 35, 1894, 1938), 0), 0, Tag1 ("Astlib__Ast_407", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3597)]), 0, (("astlib/ast_407.ml", 36, 1939, 1943), ("astlib/ast_407.ml", 36, 1939, 1966), 0), 0, Tag1 ("Astlib__Ast_407", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -3598)]), 0, (("astlib/ast_407.ml", 37, 1967, 1971), ("astlib/ast_407.ml", 37, 1967, 1993), 0), 0, Tag1 ("Astlib__Ast_407", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -3599)]), 0, (("astlib/ast_407.ml", 38, 1994, 1998), ("astlib/ast_407.ml", 38, 1994, 2020), 0), 0, Tag1 ("Astlib__Ast_407", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -3600)]), 0, (("astlib/ast_407.ml", 39, 2021, 2025), ("astlib/ast_407.ml", 39, 2021, 2055), 0), 0, Tag1 ("Astlib__Ast_407", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -3591)), 0, 0, 0, 0, (("astlib/ast_407.ml", 32, 1792, 1794), ("astlib/ast_407.ml", 39, 2021, 2055), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 0)), 1, 0); Tag1 (("rec_flag", 7144), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_407.ml", 41, 2057, 2111), ("astlib/ast_407.ml", 41, 2057, 2123), 0), 0, Tag1 ("Astlib__Ast_407", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_407.ml", 41, 2057, 2124), ("astlib/ast_407.ml", 41, 2057, 2135), 0), 0, Tag1 ("Astlib__Ast_407", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -3590)), 0, 0, 0, 0, (("astlib/ast_407.ml", 41, 2057, 2059), ("astlib/ast_407.ml", 41, 2057, 2135), 0), 0, 1, 0, Tag1 ("Astlib__Ast_407", 8)), 1, 0); Tag1 (("direction_flag", 7145), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_407.ml", 43, 2137, 2203), ("astlib/ast_407.ml", 43, 2137, 2207), 0), 0, Tag1 ("Astlib__Ast_407", 12)); (("Downto", 333), (0), 0, (("astlib/ast_407.ml", 43, 2137, 2208), ("astlib/ast_407.ml", 43, 2137, 2216), 0), 0, Tag1 ("Astlib__Ast_407", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -3589)), 0, 0, 0, 0, (("astlib/ast_407.ml", 43, 2137, 2139), ("astlib/ast_407.ml", 43, 2137, 2216), 0), 0, 1, 0, Tag1 ("Astlib__Ast_407", 11)), 1, 0); Tag1 (("private_flag", 7146), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_407.ml", 46, 2272, 2334), ("astlib/ast_407.ml", 46, 2272, 2341), 0), 0, Tag1 ("Astlib__Ast_407", 15)); (("Public", 336), (0), 0, (("astlib/ast_407.ml", 46, 2272, 2342), ("astlib/ast_407.ml", 46, 2272, 2350), 0), 0, Tag1 ("Astlib__Ast_407", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -3588)), 0, 0, 0, 0, (("astlib/ast_407.ml", 46, 2272, 2274), ("astlib/ast_407.ml", 46, 2272, 2350), 0), 0, 1, 0, Tag1 ("Astlib__Ast_407", 14)), 1, 0); Tag1 (("mutable_flag", 7147), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_407.ml", 48, 2352, 2414), ("astlib/ast_407.ml", 48, 2352, 2423), 0), 0, Tag1 ("Astlib__Ast_407", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_407.ml", 48, 2352, 2424), ("astlib/ast_407.ml", 48, 2352, 2433), 0), 0, Tag1 ("Astlib__Ast_407", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -3587)), 0, 0, 0, 0, (("astlib/ast_407.ml", 48, 2352, 2354), ("astlib/ast_407.ml", 48, 2352, 2433), 0), 0, 1, 0, Tag1 ("Astlib__Ast_407", 17)), 1, 0); Tag1 (("virtual_flag", 7148), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_407.ml", 50, 2435, 2497), ("astlib/ast_407.ml", 50, 2435, 2504), 0), 0, Tag1 ("Astlib__Ast_407", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_407.ml", 50, 2435, 2505), ("astlib/ast_407.ml", 50, 2435, 2515), 0), 0, Tag1 ("Astlib__Ast_407", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -3586)), 0, 0, 0, 0, (("astlib/ast_407.ml", 50, 2435, 2437), ("astlib/ast_407.ml", 50, 2435, 2515), 0), 0, 1, 0, Tag1 ("Astlib__Ast_407", 20)), 1, 0); Tag1 (("override_flag", 7149), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_407.ml", 52, 2517, 2581), ("astlib/ast_407.ml", 52, 2517, 2589), 0), 0, Tag1 ("Astlib__Ast_407", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_407.ml", 52, 2517, 2590), ("astlib/ast_407.ml", 52, 2517, 2597), 0), 0, Tag1 ("Astlib__Ast_407", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -3585)), 0, 0, 0, 0, (("astlib/ast_407.ml", 52, 2517, 2519), ("astlib/ast_407.ml", 52, 2517, 2597), 0), 0, 1, 0, Tag1 ("Astlib__Ast_407", 23)), 1, 0); Tag1 (("closed_flag", 7150), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_407.ml", 54, 2599, 2659), ("astlib/ast_407.ml", 54, 2599, 2665), 0), 0, Tag1 ("Astlib__Ast_407", 27)); (("Open", 348), (0), 0, (("astlib/ast_407.ml", 54, 2599, 2666), ("astlib/ast_407.ml", 54, 2599, 2672), 0), 0, Tag1 ("Astlib__Ast_407", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -3584)), 0, 0, 0, 0, (("astlib/ast_407.ml", 54, 2599, 2601), ("astlib/ast_407.ml", 54, 2599, 2672), 0), 0, 1, 0, Tag1 ("Astlib__Ast_407", 26)), 1, 0); Tag1 (("label", 7151), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3583)), 0, 0, 0, 0, (("astlib/ast_407.ml", 56, 2674, 2676), ("astlib/ast_407.ml", 56, 2674, 2695), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 29)), 1, 0); Tag1 (("arg_label", 7152), (0, 0, Tag1 ([(("Nolabel", 351), (0), 0, (("astlib/ast_407.ml", 59, 2753, 2759), ("astlib/ast_407.ml", 59, 2753, 2766), 0), 0, Tag1 ("Astlib__Ast_407", 31)); (("Labelled", 352), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3581)]), 0, (("astlib/ast_407.ml", 60, 2767, 2771), ("astlib/ast_407.ml", 60, 2767, 2791), 0), 0, Tag1 ("Astlib__Ast_407", 32)); (("Optional", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3582)]), 0, (("astlib/ast_407.ml", 61, 2814, 2818), ("astlib/ast_407.ml", 61, 2814, 2838), 0), 0, Tag1 ("Astlib__Ast_407", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -3580)), 0, 0, 0, 0, (("astlib/ast_407.ml", 58, 2697, 2699), ("astlib/ast_407.ml", 61, 2814, 2838), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 30)), 1, 0); Tag1 (("loc", 7153), ([((("a")), 100000000, 0, -3578)], 1, [[(("txt", 355), 0, ((("a")), 100000000, 0, -3578), (("astlib/ast_407.ml", 64, 2898, 2902), ("astlib/ast_407.ml", 64, 2898, 2911), 0), 0, Tag1 ("Astlib__Ast_407", 35)); (("loc", 365), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3579), (("astlib/ast_407.ml", 65, 2912, 2916), ("astlib/ast_407.ml", 65, 2912, 2933), 0), 0, Tag1 ("Astlib__Ast_407", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -3578)], (0)), 100000000, 0, -3577)), [25], [0], 0, 0, (("astlib/ast_407.ml", 63, 2862, 2864), ("astlib/ast_407.ml", 66, 2934, 2937), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 34)), 1, 0); Tag1 (("variance", 7154), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_407.ml", 70, 2994, 2998), ("astlib/ast_407.ml", 70, 2994, 3009), 0), 0, Tag1 ("Astlib__Ast_407", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_407.ml", 71, 3010, 3014), ("astlib/ast_407.ml", 71, 3010, 3029), 0), 0, Tag1 ("Astlib__Ast_407", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_407.ml", 72, 3030, 3034), ("astlib/ast_407.ml", 72, 3030, 3045), 0), 0, Tag1 ("Astlib__Ast_407", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -3576)), 0, 0, 0, 0, (("astlib/ast_407.ml", 69, 2940, 2942), ("astlib/ast_407.ml", 72, 3030, 3045), 0), 0, 1, 0, Tag1 ("Astlib__Ast_407", 37)), 1, 0)]), 0, (("astlib/ast_407.ml", 29, 1704, 1704), ("astlib/ast_407.ml", 73, 3046, 3049), 0), Tag1 ("Astlib__Ast_407", 41)), 0, 0); Tag3 (("Parsetree", 7141), 0, (Tag1 ([Tag1 (("constant", 7155), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4193); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -4195)], (0)), 100000000, 0, -4194)]), 0, (("astlib/ast_407.ml", 81, 3200, 3206), ("astlib/ast_407.ml", 81, 3200, 3244), 0), 0, Tag1 ("Astlib__Ast_407", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -4196)]), 0, (("astlib/ast_407.ml", 87, 3398, 3402), ("astlib/ast_407.ml", 87, 3398, 3423), 0), 0, Tag1 ("Astlib__Ast_407", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4197); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4199)], (0)), 100000000, 0, -4198)]), 0, (("astlib/ast_407.ml", 89, 3438, 3442), ("astlib/ast_407.ml", 89, 3438, 3483), 0), 0, Tag1 ("Astlib__Ast_407", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4200); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -4202)], (0)), 100000000, 0, -4201)]), 0, (("astlib/ast_407.ml", 93, 3545, 3549), ("astlib/ast_407.ml", 93, 3545, 3587), 0), 0, Tag1 ("Astlib__Ast_407", 46))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -4192)), 0, 0, 0, 0, (("astlib/ast_407.ml", 80, 3145, 3147), ("astlib/ast_407.ml", 93, 3545, 3587), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 42)), 1, 0); Tag1 (("attribute", 7156), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4190)], (0)), 100000000, 0, -4189); (Tag3 ((("payload", 7159)), 0, (0)), 100000000, 0, -4191)]), 100000000, 0, -4188)), 0, 0, 0, 0, (("astlib/ast_407.ml", 102, 3754, 3756), ("astlib/ast_407.ml", 102, 3754, 3793), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 47)), 1, 0); Tag1 (("extension", 7157), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4186)], (0)), 100000000, 0, -4185); (Tag3 ((("payload", 7159)), 0, (0)), 100000000, 0, -4187)]), 100000000, 0, -4184)), 0, 0, 0, 0, (("astlib/ast_407.ml", 110, 3968, 3970), ("astlib/ast_407.ml", 110, 3968, 4006), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 48)), 2, 0); Tag1 (("attributes", 7158), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 7156)), 0, (0)), 100000000, 0, -4183)], (0)), 100000000, 0, -4182)), 0, 0, 0, 0, (("astlib/ast_407.ml", 117, 4131, 4133), ("astlib/ast_407.ml", 117, 4131, 4164), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 49)), 2, 0); Tag1 (("payload", 7159), (0, 0, Tag1 ([(("PStr", 704), ([(Tag3 ((("structure", 7208)), 0, (0)), 100000000, 0, -4176)]), 0, (("astlib/ast_407.ml", 120, 4218, 4222), ("astlib/ast_407.ml", 120, 4218, 4241), 0), 0, Tag1 ("Astlib__Ast_407", 104)); (("PSig", 705), ([(Tag3 ((("signature", 7196)), 0, (0)), 100000000, 0, -4177)]), 0, (("astlib/ast_407.ml", 121, 4242, 4246), ("astlib/ast_407.ml", 121, 4242, 4265), 0), 0, Tag1 ("Astlib__Ast_407", 105)); (("PTyp", 706), ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4178)]), 0, (("astlib/ast_407.ml", 122, 4278, 4282), ("astlib/ast_407.ml", 122, 4278, 4301), 0), 0, Tag1 ("Astlib__Ast_407", 106)); (("PPat", 707), ([(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4179); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4181)], (0)), 100000000, 0, -4180)]), 0, (("astlib/ast_407.ml", 123, 4313, 4317), ("astlib/ast_407.ml", 123, 4313, 4354), 0), 0, Tag1 ("Astlib__Ast_407", 107))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -4175)), 0, 0, 0, 0, (("astlib/ast_407.ml", 119, 4166, 4168), ("astlib/ast_407.ml", 123, 4313, 4354), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 50)), 2, 0); Tag1 (("core_type", 7160), (0, 0, [[(("ptyp_desc", 708), 0, (Tag3 ((("core_type_desc", 7161)), 0, (0)), 100000000, 0, -4172), (("astlib/ast_407.ml", 131, 4501, 4508), ("astlib/ast_407.ml", 131, 4501, 4534), 0), 0, Tag1 ("Astlib__Ast_407", 108)); (("ptyp_loc", 709), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4173), (("astlib/ast_407.ml", 132, 4535, 4542), ("astlib/ast_407.ml", 132, 4535, 4563), 0), 0, Tag1 ("Astlib__Ast_407", 109)); (("ptyp_attributes", 710), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -4174), (("astlib/ast_407.ml", 133, 4564, 4571), ("astlib/ast_407.ml", 133, 4564, 4599), 0), 0, Tag1 ("Astlib__Ast_407", 110))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -4171)), 0, 0, 0, 0, (("astlib/ast_407.ml", 129, 4437, 4439), ("astlib/ast_407.ml", 134, 4624, 4631), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 51)), 2, 0); Tag1 (("core_type_desc", 7161), (0, 0, Tag1 ([(("Ptyp_any", 711), (0), 0, (("astlib/ast_407.ml", 137, 4699, 4703), ("astlib/ast_407.ml", 137, 4699, 4713), 0), 0, Tag1 ("Astlib__Ast_407", 111)); (("Ptyp_var", 712), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4140)]), 0, (("astlib/ast_407.ml", 139, 4733, 4737), ("astlib/ast_407.ml", 139, 4733, 4757), 0), 0, Tag1 ("Astlib__Ast_407", 112)); (("Ptyp_arrow", 713), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "arg_label"), 0, (0)), 100000000, 0, -4141); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4142); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4143)]), 0, (("astlib/ast_407.ml", 141, 4777, 4781), ("astlib/ast_407.ml", 141, 4777, 4830), 0), 0, Tag1 ("Astlib__Ast_407", 113)); (("Ptyp_tuple", 714), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4145)], (0)), 100000000, 0, -4144)]), 0, (("astlib/ast_407.ml", 146, 4954, 4958), ("astlib/ast_407.ml", 146, 4954, 4988), 0), 0, Tag1 ("Astlib__Ast_407", 114)); (("Ptyp_constr", 715), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4147)], (0)), 100000000, 0, -4146); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4149)], (0)), 100000000, 0, -4148)]), 0, (("astlib/ast_407.ml", 151, 5061, 5065), ("astlib/ast_407.ml", 151, 5061, 5114), 0), 0, Tag1 ("Astlib__Ast_407", 115)); (("Ptyp_object", 719), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 7164)), 0, (0)), 100000000, 0, -4151)], (0)), 100000000, 0, -4150); (Tag3 (Tag1 ((("Asttypes", 7140)), "closed_flag"), 0, (0)), 100000000, 0, -4152)]), 0, (("astlib/ast_407.ml", 156, 5208, 5212), ("astlib/ast_407.ml", 156, 5208, 5260), 0), 0, Tag1 ("Astlib__Ast_407", 116)); (("Ptyp_class", 720), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4154)], (0)), 100000000, 0, -4153); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4156)], (0)), 100000000, 0, -4155)]), 0, (("astlib/ast_407.ml", 160, 5383, 5387), ("astlib/ast_407.ml", 160, 5383, 5435), 0), 0, Tag1 ("Astlib__Ast_407", 117)); (("Ptyp_alias", 721), ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4157); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4158)]), 0, (("astlib/ast_407.ml", 165, 5532, 5536), ("astlib/ast_407.ml", 165, 5532, 5570), 0), 0, Tag1 ("Astlib__Ast_407", 118)); (("Ptyp_variant", 722), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 7163)), 0, (0)), 100000000, 0, -4160)], (0)), 100000000, 0, -4159); (Tag3 (Tag1 ((("Asttypes", 7140)), "closed_flag"), 0, (0)), 100000000, 0, -4161); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -4164)], (0)), 100000000, 0, -4163)], (0)), 100000000, 0, -4162)]), 0, (("astlib/ast_407.ml", 167, 5595, 5599), ("astlib/ast_407.ml", 167, 5595, 5665), 0), 0, Tag1 ("Astlib__Ast_407", 119)); (("Ptyp_poly", 723), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4167)], (0)), 100000000, 0, -4166)], (0)), 100000000, 0, -4165); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4168)]), 0, (("astlib/ast_407.ml", 173, 5941, 5945), ("astlib/ast_407.ml", 173, 5941, 5987), 0), 0, Tag1 ("Astlib__Ast_407", 120)); (("Ptyp_package", 724), ([(Tag3 ((("package_type", 7162)), 0, (0)), 100000000, 0, -4169)]), 0, (("astlib/ast_407.ml", 193, 6541, 6545), ("astlib/ast_407.ml", 193, 6541, 6575), 0), 0, Tag1 ("Astlib__Ast_407", 121)); (("Ptyp_extension", 725), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -4170)]), 0, (("astlib/ast_407.ml", 195, 6603, 6607), ("astlib/ast_407.ml", 195, 6603, 6636), 0), 0, Tag1 ("Astlib__Ast_407", 122))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -4139)), 0, 0, 0, 0, (("astlib/ast_407.ml", 136, 4633, 4635), ("astlib/ast_407.ml", 195, 6603, 6636), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 52)), 2, 0); Tag1 (("package_type", 7162), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4133)], (0)), 100000000, 0, -4132); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4137)], (0)), 100000000, 0, -4136); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4138)]), 100000000, 0, -4135)], (0)), 100000000, 0, -4134)]), 100000000, 0, -4131)), 0, 0, 0, 0, (("astlib/ast_407.ml", 198, 6660, 6662), ("astlib/ast_407.ml", 198, 6660, 6733), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 53)), 2, 0); Tag1 (("row_field", 7163), (0, 0, Tag1 ([(("Rtag", 726), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -4125)], (0)), 100000000, 0, -4124); (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -4126); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4127); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4129)], (0)), 100000000, 0, -4128)]), 0, (("astlib/ast_407.ml", 205, 6894, 6898), ("astlib/ast_407.ml", 205, 6894, 6954), 0), 0, Tag1 ("Astlib__Ast_407", 123)); (("Rinherit", 727), ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4130)]), 0, (("astlib/ast_407.ml", 218, 7478, 7482), ("astlib/ast_407.ml", 218, 7478, 7505), 0), 0, Tag1 ("Astlib__Ast_407", 124))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -4123)), 0, 0, 0, 0, (("astlib/ast_407.ml", 204, 6838, 6840), ("astlib/ast_407.ml", 218, 7478, 7505), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 54)), 2, 0); Tag1 (("object_field", 7164), (0, 0, Tag1 ([(("Otag", 728), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -4119)], (0)), 100000000, 0, -4118); (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -4120); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4121)]), 0, (("astlib/ast_407.ml", 222, 7591, 7595), ("astlib/ast_407.ml", 222, 7591, 7639), 0), 0, Tag1 ("Astlib__Ast_407", 125)); (("Oinherit", 729), ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4122)]), 0, (("astlib/ast_407.ml", 223, 7640, 7644), ("astlib/ast_407.ml", 223, 7640, 7667), 0), 0, Tag1 ("Astlib__Ast_407", 126))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "object_field"), 0, (0)), 100000000, 0, -4117)), 0, 0, 0, 0, (("astlib/ast_407.ml", 221, 7529, 7531), ("astlib/ast_407.ml", 223, 7640, 7667), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 55)), 2, 0); Tag1 (("pattern", 7165), (0, 0, [[(("ppat_desc", 730), 0, (Tag3 ((("pattern_desc", 7166)), 0, (0)), 100000000, 0, -4114), (("astlib/ast_407.ml", 229, 7747, 7754), ("astlib/ast_407.ml", 229, 7747, 7778), 0), 0, Tag1 ("Astlib__Ast_407", 127)); (("ppat_loc", 731), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4115), (("astlib/ast_407.ml", 230, 7779, 7786), ("astlib/ast_407.ml", 230, 7779, 7807), 0), 0, Tag1 ("Astlib__Ast_407", 128)); (("ppat_attributes", 732), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -4116), (("astlib/ast_407.ml", 231, 7808, 7815), ("astlib/ast_407.ml", 231, 7808, 7843), 0), 0, Tag1 ("Astlib__Ast_407", 129))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -4113)), 0, 0, 0, 0, (("astlib/ast_407.ml", 227, 7687, 7689), ("astlib/ast_407.ml", 232, 7868, 7875), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 56)), 2, 0); Tag1 (("pattern_desc", 7166), (0, 0, Tag1 ([(("Ppat_any", 733), (0), 0, (("astlib/ast_407.ml", 235, 7939, 7943), ("astlib/ast_407.ml", 235, 7939, 7953), 0), 0, Tag1 ("Astlib__Ast_407", 130)); (("Ppat_var", 734), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4075)], (0)), 100000000, 0, -4074)]), 0, (("astlib/ast_407.ml", 237, 7972, 7976), ("astlib/ast_407.ml", 237, 7972, 8000), 0), 0, Tag1 ("Astlib__Ast_407", 131)); (("Ppat_alias", 735), ([(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4076); (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4078)], (0)), 100000000, 0, -4077)]), 0, (("astlib/ast_407.ml", 239, 8019, 8023), ("astlib/ast_407.ml", 239, 8019, 8059), 0), 0, Tag1 ("Astlib__Ast_407", 132)); (("Ppat_constant", 736), ([(Tag3 ((("constant", 7155)), 0, (0)), 100000000, 0, -4079)]), 0, (("astlib/ast_407.ml", 241, 8084, 8088), ("astlib/ast_407.ml", 241, 8084, 8115), 0), 0, Tag1 ("Astlib__Ast_407", 133)); (("Ppat_interval", 737), ([(Tag3 ((("constant", 7155)), 0, (0)), 100000000, 0, -4080); (Tag3 ((("constant", 7155)), 0, (0)), 100000000, 0, -4081)]), 0, (("astlib/ast_407.ml", 243, 8164, 8168), ("astlib/ast_407.ml", 243, 8164, 8206), 0), 0, Tag1 ("Astlib__Ast_407", 134)); (("Ppat_tuple", 738), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4083)], (0)), 100000000, 0, -4082)]), 0, (("astlib/ast_407.ml", 248, 8346, 8350), ("astlib/ast_407.ml", 248, 8346, 8378), 0), 0, Tag1 ("Astlib__Ast_407", 135)); (("Ppat_construct", 739), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4085)], (0)), 100000000, 0, -4084); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4087)], (0)), 100000000, 0, -4086)]), 0, (("astlib/ast_407.ml", 253, 8451, 8455), ("astlib/ast_407.ml", 253, 8451, 8507), 0), 0, Tag1 ("Astlib__Ast_407", 136)); (("Ppat_variant", 740), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -4088); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4090)], (0)), 100000000, 0, -4089)]), 0, (("astlib/ast_407.ml", 258, 8656, 8660), ("astlib/ast_407.ml", 258, 8656, 8700), 0), 0, Tag1 ("Astlib__Ast_407", 137)); (("Ppat_record", 741), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4094)], (0)), 100000000, 0, -4093); (Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4095)]), 100000000, 0, -4092)], (0)), 100000000, 0, -4091); (Tag3 (Tag1 ((("Asttypes", 7140)), "closed_flag"), 0, (0)), 100000000, 0, -4096)]), 0, (("astlib/ast_407.ml", 262, 8787, 8791), ("astlib/ast_407.ml", 262, 8787, 8854), 0), 0, Tag1 ("Astlib__Ast_407", 138)); (("Ppat_array", 742), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4098)], (0)), 100000000, 0, -4097)]), 0, (("astlib/ast_407.ml", 268, 9008, 9012), ("astlib/ast_407.ml", 268, 9008, 9040), 0), 0, Tag1 ("Astlib__Ast_407", 139)); (("Ppat_or", 743), ([(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4099); (Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4100)]), 0, (("astlib/ast_407.ml", 270, 9075, 9079), ("astlib/ast_407.ml", 270, 9075, 9109), 0), 0, Tag1 ("Astlib__Ast_407", 140)); (("Ppat_constraint", 744), ([(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4101); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4102)]), 0, (("astlib/ast_407.ml", 272, 9134, 9138), ("astlib/ast_407.ml", 272, 9134, 9178), 0), 0, Tag1 ("Astlib__Ast_407", 141)); (("Ppat_type", 745), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4104)], (0)), 100000000, 0, -4103)]), 0, (("astlib/ast_407.ml", 274, 9203, 9207), ("astlib/ast_407.ml", 274, 9203, 9237), 0), 0, Tag1 ("Astlib__Ast_407", 142)); (("Ppat_lazy", 746), ([(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4105)]), 0, (("astlib/ast_407.ml", 276, 9262, 9266), ("astlib/ast_407.ml", 276, 9262, 9288), 0), 0, Tag1 ("Astlib__Ast_407", 143)); (("Ppat_unpack", 747), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4107)], (0)), 100000000, 0, -4106)]), 0, (("astlib/ast_407.ml", 278, 9312, 9316), ("astlib/ast_407.ml", 278, 9312, 9343), 0), 0, Tag1 ("Astlib__Ast_407", 144)); (("Ppat_exception", 748), ([(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4108)]), 0, (("astlib/ast_407.ml", 283, 9490, 9494), ("astlib/ast_407.ml", 283, 9490, 9521), 0), 0, Tag1 ("Astlib__Ast_407", 145)); (("Ppat_extension", 749), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -4109)]), 0, (("astlib/ast_407.ml", 285, 9550, 9554), ("astlib/ast_407.ml", 285, 9550, 9583), 0), 0, Tag1 ("Astlib__Ast_407", 146)); (("Ppat_open", 750), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4111)], (0)), 100000000, 0, -4110); (Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4112)]), 0, (("astlib/ast_407.ml", 287, 9606, 9610), ("astlib/ast_407.ml", 287, 9606, 9650), 0), 0, Tag1 ("Astlib__Ast_407", 147))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -4073)), 0, 0, 0, 0, (("astlib/ast_407.ml", 234, 7877, 7879), ("astlib/ast_407.ml", 287, 9606, 9650), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 57)), 2, 0); Tag1 (("expression", 7167), (0, 0, [[(("pexp_desc", 751), 0, (Tag3 ((("expression_desc", 7168)), 0, (0)), 100000000, 0, -4070), (("astlib/ast_407.ml", 294, 9767, 9774), ("astlib/ast_407.ml", 294, 9767, 9801), 0), 0, Tag1 ("Astlib__Ast_407", 148)); (("pexp_loc", 752), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4071), (("astlib/ast_407.ml", 295, 9802, 9809), ("astlib/ast_407.ml", 295, 9802, 9830), 0), 0, Tag1 ("Astlib__Ast_407", 149)); (("pexp_attributes", 753), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -4072), (("astlib/ast_407.ml", 296, 9831, 9838), ("astlib/ast_407.ml", 296, 9831, 9866), 0), 0, Tag1 ("Astlib__Ast_407", 150))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -4069)), 0, 0, 0, 0, (("astlib/ast_407.ml", 292, 9701, 9703), ("astlib/ast_407.ml", 297, 9891, 9898), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 58)), 2, 0); Tag1 (("expression_desc", 7168), (0, 0, Tag1 ([(("Pexp_ident", 754), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3967)], (0)), 100000000, 0, -3966)]), 0, (("astlib/ast_407.ml", 300, 9968, 9972), ("astlib/ast_407.ml", 300, 9968, 10003), 0), 0, Tag1 ("Astlib__Ast_407", 151)); (("Pexp_constant", 755), ([(Tag3 ((("constant", 7155)), 0, (0)), 100000000, 0, -3968)]), 0, (("astlib/ast_407.ml", 304, 10050, 10054), ("astlib/ast_407.ml", 304, 10050, 10081), 0), 0, Tag1 ("Astlib__Ast_407", 152)); (("Pexp_let", 756), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "rec_flag"), 0, (0)), 100000000, 0, -3969); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7211)), 0, (0)), 100000000, 0, -3971)], (0)), 100000000, 0, -3970); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3972)]), 0, (("astlib/ast_407.ml", 306, 10130, 10134), ("astlib/ast_407.ml", 306, 10130, 10190), 0), 0, Tag1 ("Astlib__Ast_407", 153)); (("Pexp_function", 757), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7169)), 0, (0)), 100000000, 0, -3974)], (0)), 100000000, 0, -3973)]), 0, (("astlib/ast_407.ml", 310, 10358, 10362), ("astlib/ast_407.ml", 310, 10358, 10390), 0), 0, Tag1 ("Astlib__Ast_407", 154)); (("Pexp_fun", 758), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "arg_label"), 0, (0)), 100000000, 0, -3975); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3977)], (0)), 100000000, 0, -3976); (Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -3978); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3979)]), 0, (("astlib/ast_407.ml", 312, 10442, 10446), ("astlib/ast_407.ml", 312, 10442, 10512), 0), 0, Tag1 ("Astlib__Ast_407", 155)); (("Pexp_apply", 759), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3980); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "arg_label"), 0, (0)), 100000000, 0, -3983); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3984)]), 100000000, 0, -3982)], (0)), 100000000, 0, -3981)]), 0, (("astlib/ast_407.ml", 323, 11017, 11021), ("astlib/ast_407.ml", 323, 11017, 11079), 0), 0, Tag1 ("Astlib__Ast_407", 156)); (("Pexp_match", 760), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3985); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7169)), 0, (0)), 100000000, 0, -3987)], (0)), 100000000, 0, -3986)]), 0, (("astlib/ast_407.ml", 330, 11263, 11267), ("astlib/ast_407.ml", 330, 11263, 11305), 0), 0, Tag1 ("Astlib__Ast_407", 157)); (("Pexp_try", 761), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3988); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7169)), 0, (0)), 100000000, 0, -3990)], (0)), 100000000, 0, -3989)]), 0, (("astlib/ast_407.ml", 332, 11362, 11366), ("astlib/ast_407.ml", 332, 11362, 11402), 0), 0, Tag1 ("Astlib__Ast_407", 158)); (("Pexp_tuple", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3992)], (0)), 100000000, 0, -3991)]), 0, (("astlib/ast_407.ml", 334, 11457, 11461), ("astlib/ast_407.ml", 334, 11457, 11492), 0), 0, Tag1 ("Astlib__Ast_407", 159)); (("Pexp_construct", 763), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3994)], (0)), 100000000, 0, -3993); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3996)], (0)), 100000000, 0, -3995)]), 0, (("astlib/ast_407.ml", 339, 11565, 11569), ("astlib/ast_407.ml", 339, 11565, 11624), 0), 0, Tag1 ("Astlib__Ast_407", 160)); (("Pexp_variant", 764), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -3997); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3999)], (0)), 100000000, 0, -3998)]), 0, (("astlib/ast_407.ml", 344, 11769, 11773), ("astlib/ast_407.ml", 344, 11769, 11816), 0), 0, Tag1 ("Astlib__Ast_407", 161)); (("Pexp_record", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4003)], (0)), 100000000, 0, -4002); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4004)]), 100000000, 0, -4001)], (0)), 100000000, 0, -4000); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4006)], (0)), 100000000, 0, -4005)]), 0, (("astlib/ast_407.ml", 348, 11903, 11907), ("astlib/ast_407.ml", 348, 11903, 11979), 0), 0, Tag1 ("Astlib__Ast_407", 162)); (("Pexp_field", 766), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4007); (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4009)], (0)), 100000000, 0, -4008)]), 0, (("astlib/ast_407.ml", 354, 12126, 12130), ("astlib/ast_407.ml", 354, 12126, 12174), 0), 0, Tag1 ("Astlib__Ast_407", 163)); (("Pexp_setfield", 767), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4010); (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4012)], (0)), 100000000, 0, -4011); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4013)]), 0, (("astlib/ast_407.ml", 356, 12195, 12199), ("astlib/ast_407.ml", 356, 12195, 12259), 0), 0, Tag1 ("Astlib__Ast_407", 164)); (("Pexp_array", 768), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4015)], (0)), 100000000, 0, -4014)]), 0, (("astlib/ast_407.ml", 358, 12287, 12291), ("astlib/ast_407.ml", 358, 12287, 12322), 0), 0, Tag1 ("Astlib__Ast_407", 165)); (("Pexp_ifthenelse", 769), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4016); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4017); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4019)], (0)), 100000000, 0, -4018)]), 0, (("astlib/ast_407.ml", 360, 12357, 12361), ("astlib/ast_407.ml", 360, 12357, 12425), 0), 0, Tag1 ("Astlib__Ast_407", 166)); (("Pexp_sequence", 770), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4020); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4021)]), 0, (("astlib/ast_407.ml", 362, 12464, 12468), ("astlib/ast_407.ml", 362, 12464, 12510), 0), 0, Tag1 ("Astlib__Ast_407", 167)); (("Pexp_while", 771), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4022); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4023)]), 0, (("astlib/ast_407.ml", 364, 12534, 12538), ("astlib/ast_407.ml", 364, 12534, 12577), 0), 0, Tag1 ("Astlib__Ast_407", 168)); (("Pexp_for", 772), ([(Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -4024); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4025); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4026); (Tag3 (Tag1 ((("Asttypes", 7140)), "direction_flag"), 0, (0)), 100000000, 0, -4027); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4028)]), 0, (("astlib/ast_407.ml", 366, 12614, 12618), ("astlib/ast_407.ml", 367, 12632, 12704), 0), 0, Tag1 ("Astlib__Ast_407", 169)); (("Pexp_constraint", 773), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4029); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4030)]), 0, (("astlib/ast_407.ml", 371, 12841, 12845), ("astlib/ast_407.ml", 371, 12841, 12888), 0), 0, Tag1 ("Astlib__Ast_407", 170)); (("Pexp_coerce", 774), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4031); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4033)], (0)), 100000000, 0, -4032); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4034)]), 0, (("astlib/ast_407.ml", 373, 12913, 12917), ("astlib/ast_407.ml", 373, 12913, 12975), 0), 0, Tag1 ("Astlib__Ast_407", 171)); (("Pexp_send", 775), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4035); (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -4037)], (0)), 100000000, 0, -4036)]), 0, (("astlib/ast_407.ml", 377, 13071, 13075), ("astlib/ast_407.ml", 377, 13071, 13112), 0), 0, Tag1 ("Astlib__Ast_407", 172)); (("Pexp_new", 776), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4039)], (0)), 100000000, 0, -4038)]), 0, (("astlib/ast_407.ml", 379, 13136, 13140), ("astlib/ast_407.ml", 379, 13136, 13169), 0), 0, Tag1 ("Astlib__Ast_407", 173)); (("Pexp_setinstvar", 777), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -4041)], (0)), 100000000, 0, -4040); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4042)]), 0, (("astlib/ast_407.ml", 381, 13194, 13198), ("astlib/ast_407.ml", 381, 13194, 13241), 0), 0, Tag1 ("Astlib__Ast_407", 174)); (("Pexp_override", 778), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -4046)], (0)), 100000000, 0, -4045); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4047)]), 100000000, 0, -4044)], (0)), 100000000, 0, -4043)]), 0, (("astlib/ast_407.ml", 383, 13265, 13269), ("astlib/ast_407.ml", 383, 13265, 13317), 0), 0, Tag1 ("Astlib__Ast_407", 175)); (("Pexp_letmodule", 779), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4049)], (0)), 100000000, 0, -4048); (Tag3 ((("module_expr", 7206)), 0, (0)), 100000000, 0, -4050); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4051)]), 0, (("astlib/ast_407.ml", 385, 13362, 13366), ("astlib/ast_407.ml", 385, 13362, 13423), 0), 0, Tag1 ("Astlib__Ast_407", 176)); (("Pexp_letexception", 780), ([(Tag3 ((("extension_constructor", 7177)), 0, (0)), 100000000, 0, -4052); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4053)]), 0, (("astlib/ast_407.ml", 387, 13463, 13467), ("astlib/ast_407.ml", 387, 13463, 13524), 0), 0, Tag1 ("Astlib__Ast_407", 177)); (("Pexp_assert", 781), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4054)]), 0, (("astlib/ast_407.ml", 389, 13562, 13566), ("astlib/ast_407.ml", 389, 13562, 13593), 0), 0, Tag1 ("Astlib__Ast_407", 178)); (("Pexp_lazy", 782), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4055)]), 0, (("astlib/ast_407.ml", 393, 13715, 13719), ("astlib/ast_407.ml", 393, 13715, 13744), 0), 0, Tag1 ("Astlib__Ast_407", 179)); (("Pexp_poly", 783), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4056); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -4058)], (0)), 100000000, 0, -4057)]), 0, (("astlib/ast_407.ml", 395, 13768, 13772), ("astlib/ast_407.ml", 395, 13768, 13816), 0), 0, Tag1 ("Astlib__Ast_407", 180)); (("Pexp_object", 784), ([(Tag3 ((("class_structure", 7189)), 0, (0)), 100000000, 0, -4059)]), 0, (("astlib/ast_407.ml", 400, 13964, 13968), ("astlib/ast_407.ml", 400, 13964, 14000), 0), 0, Tag1 ("Astlib__Ast_407", 181)); (("Pexp_newtype", 785), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4061)], (0)), 100000000, 0, -4060); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4062)]), 0, (("astlib/ast_407.ml", 402, 14032, 14036), ("astlib/ast_407.ml", 402, 14032, 14077), 0), 0, Tag1 ("Astlib__Ast_407", 182)); (("Pexp_pack", 786), ([(Tag3 ((("module_expr", 7206)), 0, (0)), 100000000, 0, -4063)]), 0, (("astlib/ast_407.ml", 404, 14112, 14116), ("astlib/ast_407.ml", 404, 14112, 14142), 0), 0, Tag1 ("Astlib__Ast_407", 183)); (("Pexp_open", 787), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "override_flag"), 0, (0)), 100000000, 0, -4064); (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4066)], (0)), 100000000, 0, -4065); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -4067)]), 0, (("astlib/ast_407.ml", 409, 14275, 14279), ("astlib/ast_407.ml", 409, 14275, 14338), 0), 0, Tag1 ("Astlib__Ast_407", 184)); (("Pexp_extension", 788), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -4068)]), 0, (("astlib/ast_407.ml", 413, 14420, 14424), ("astlib/ast_407.ml", 413, 14420, 14453), 0), 0, Tag1 ("Astlib__Ast_407", 185)); (("Pexp_unreachable", 789), (0), 0, (("astlib/ast_407.ml", 415, 14476, 14480), ("astlib/ast_407.ml", 415, 14476, 14498), 0), 0, Tag1 ("Astlib__Ast_407", 186))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -3965)), 0, 0, 0, 0, (("astlib/ast_407.ml", 299, 9900, 9902), ("astlib/ast_407.ml", 415, 14476, 14498), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 59)), 2, 0); Tag1 (("case", 7169), (0, 0, [[(("pc_lhs", 790), 0, (Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -3961), (("astlib/ast_407.ml", 420, 14609, 14616), ("astlib/ast_407.ml", 420, 14609, 14632), 0), 0, Tag1 ("Astlib__Ast_407", 187)); (("pc_guard", 791), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3963)], (0)), 100000000, 0, -3962), (("astlib/ast_407.ml", 421, 14633, 14640), ("astlib/ast_407.ml", 421, 14633, 14668), 0), 0, Tag1 ("Astlib__Ast_407", 188)); (("pc_rhs", 792), 0, (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3964), (("astlib/ast_407.ml", 422, 14669, 14676), ("astlib/ast_407.ml", 422, 14669, 14695), 0), 0, Tag1 ("Astlib__Ast_407", 189))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -3960)), 0, 0, 0, 0, (("astlib/ast_407.ml", 418, 14518, 14520), ("astlib/ast_407.ml", 423, 14696, 14703), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 60)), 2, 0); Tag1 (("value_description", 7170), (0, 0, [[(("pval_name", 793), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3954)], (0)), 100000000, 0, -3953), (("astlib/ast_407.ml", 429, 14813, 14820), ("astlib/ast_407.ml", 429, 14813, 14842), 0), 0, Tag1 ("Astlib__Ast_407", 190)); (("pval_type", 794), 0, (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3955), (("astlib/ast_407.ml", 430, 14843, 14850), ("astlib/ast_407.ml", 430, 14843, 14871), 0), 0, Tag1 ("Astlib__Ast_407", 191)); (("pval_prim", 795), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3957)], (0)), 100000000, 0, -3956), (("astlib/ast_407.ml", 431, 14872, 14879), ("astlib/ast_407.ml", 431, 14872, 14902), 0), 0, Tag1 ("Astlib__Ast_407", 192)); (("pval_attributes", 796), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3958), (("astlib/ast_407.ml", 432, 14903, 14910), ("astlib/ast_407.ml", 432, 14903, 14938), 0), 0, Tag1 ("Astlib__Ast_407", 193)); (("pval_loc", 797), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3959), (("astlib/ast_407.ml", 433, 14966, 14973), ("astlib/ast_407.ml", 433, 14966, 14994), 0), 0, Tag1 ("Astlib__Ast_407", 194))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -3952)), 0, 0, 0, 0, (("astlib/ast_407.ml", 427, 14733, 14735), ("astlib/ast_407.ml", 434, 14995, 15002), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 61)), 2, 0); Tag1 (("type_declaration", 7171), (0, 0, [[(("ptype_name", 798), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3936)], (0)), 100000000, 0, -3935), (("astlib/ast_407.ml", 445, 15236, 15243), ("astlib/ast_407.ml", 445, 15236, 15266), 0), 0, Tag1 ("Astlib__Ast_407", 195)); (("ptype_params", 799), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3939); (Tag3 (Tag1 ((("Asttypes", 7140)), "variance"), 0, (0)), 100000000, 0, -3940)]), 100000000, 0, -3938)], (0)), 100000000, 0, -3937), (("astlib/ast_407.ml", 446, 15267, 15274), ("astlib/ast_407.ml", 446, 15267, 15316), 0), 0, Tag1 ("Astlib__Ast_407", 196)); (("ptype_cstrs", 800), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3943); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3944); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3945)]), 100000000, 0, -3942)], (0)), 100000000, 0, -3941), (("astlib/ast_407.ml", 448, 15370, 15377), ("astlib/ast_407.ml", 448, 15370, 15432), 0), 0, Tag1 ("Astlib__Ast_407", 197)); (("ptype_kind", 801), 0, (Tag3 ((("type_kind", 7172)), 0, (0)), 100000000, 0, -3946), (("astlib/ast_407.ml", 450, 15497, 15504), ("astlib/ast_407.ml", 450, 15497, 15526), 0), 0, Tag1 ("Astlib__Ast_407", 198)); (("ptype_private", 802), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "private_flag"), 0, (0)), 100000000, 0, -3947), (("astlib/ast_407.ml", 451, 15527, 15534), ("astlib/ast_407.ml", 451, 15527, 15562), 0), 0, Tag1 ("Astlib__Ast_407", 199)); (("ptype_manifest", 803), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3949)], (0)), 100000000, 0, -3948), (("astlib/ast_407.ml", 452, 15585, 15592), ("astlib/ast_407.ml", 452, 15585, 15625), 0), 0, Tag1 ("Astlib__Ast_407", 200)); (("ptype_attributes", 804), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3950), (("astlib/ast_407.ml", 453, 15637, 15644), ("astlib/ast_407.ml", 453, 15637, 15673), 0), 0, Tag1 ("Astlib__Ast_407", 201)); (("ptype_loc", 805), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3951), (("astlib/ast_407.ml", 454, 15702, 15709), ("astlib/ast_407.ml", 454, 15702, 15731), 0), 0, Tag1 ("Astlib__Ast_407", 202))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -3934)), 0, 0, 0, 0, (("astlib/ast_407.ml", 443, 15158, 15160), ("astlib/ast_407.ml", 455, 15732, 15739), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 62)), 2, 0); Tag1 (("type_kind", 7172), (0, 0, Tag1 ([(("Ptype_abstract", 806), (0), 0, (("astlib/ast_407.ml", 468, 16193, 16197), ("astlib/ast_407.ml", 468, 16193, 16213), 0), 0, Tag1 ("Astlib__Ast_407", 203)); (("Ptype_variant", 807), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7174)), 0, (0)), 100000000, 0, -3931)], (0)), 100000000, 0, -3930)]), 0, (("astlib/ast_407.ml", 469, 16214, 16218), ("astlib/ast_407.ml", 469, 16214, 16265), 0), 0, Tag1 ("Astlib__Ast_407", 204)); (("Ptype_record", 808), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7173)), 0, (0)), 100000000, 0, -3933)], (0)), 100000000, 0, -3932)]), 0, (("astlib/ast_407.ml", 470, 16266, 16270), ("astlib/ast_407.ml", 470, 16266, 16310), 0), 0, Tag1 ("Astlib__Ast_407", 205)); (("Ptype_open", 809), (0), 0, (("astlib/ast_407.ml", 472, 16353, 16357), ("astlib/ast_407.ml", 472, 16353, 16369), 0), 0, Tag1 ("Astlib__Ast_407", 206))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -3929)), 0, 0, 0, 0, (("astlib/ast_407.ml", 467, 16137, 16139), ("astlib/ast_407.ml", 472, 16353, 16369), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 63)), 2, 0); Tag1 (("label_declaration", 7173), (0, 0, [[(("pld_name", 810), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3924)], (0)), 100000000, 0, -3923), (("astlib/ast_407.ml", 476, 16451, 16458), ("astlib/ast_407.ml", 476, 16451, 16479), 0), 0, Tag1 ("Astlib__Ast_407", 207)); (("pld_mutable", 811), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "mutable_flag"), 0, (0)), 100000000, 0, -3925), (("astlib/ast_407.ml", 477, 16480, 16487), ("astlib/ast_407.ml", 477, 16480, 16513), 0), 0, Tag1 ("Astlib__Ast_407", 208)); (("pld_type", 812), 0, (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3926), (("astlib/ast_407.ml", 478, 16514, 16521), ("astlib/ast_407.ml", 478, 16514, 16541), 0), 0, Tag1 ("Astlib__Ast_407", 209)); (("pld_loc", 813), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3927), (("astlib/ast_407.ml", 479, 16542, 16549), ("astlib/ast_407.ml", 479, 16542, 16569), 0), 0, Tag1 ("Astlib__Ast_407", 210)); (("pld_attributes", 814), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3928), (("astlib/ast_407.ml", 480, 16570, 16577), ("astlib/ast_407.ml", 480, 16570, 16604), 0), 0, Tag1 ("Astlib__Ast_407", 211))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -3922)), 0, 0, 0, 0, (("astlib/ast_407.ml", 474, 16371, 16373), ("astlib/ast_407.ml", 481, 16631, 16638), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 64)), 2, 0); Tag1 (("constructor_declaration", 7174), (0, 0, [[(("pcd_name", 815), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3916)], (0)), 100000000, 0, -3915), (("astlib/ast_407.ml", 491, 16883, 16890), ("astlib/ast_407.ml", 491, 16883, 16911), 0), 0, Tag1 ("Astlib__Ast_407", 212)); (("pcd_args", 816), 0, (Tag3 ((("constructor_arguments", 7175)), 0, (0)), 100000000, 0, -3917), (("astlib/ast_407.ml", 492, 16912, 16919), ("astlib/ast_407.ml", 492, 16912, 16951), 0), 0, Tag1 ("Astlib__Ast_407", 213)); (("pcd_res", 817), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3919)], (0)), 100000000, 0, -3918), (("astlib/ast_407.ml", 493, 16952, 16959), ("astlib/ast_407.ml", 493, 16952, 16985), 0), 0, Tag1 ("Astlib__Ast_407", 214)); (("pcd_loc", 818), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3920), (("astlib/ast_407.ml", 494, 16986, 16993), ("astlib/ast_407.ml", 494, 16986, 17013), 0), 0, Tag1 ("Astlib__Ast_407", 215)); (("pcd_attributes", 819), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3921), (("astlib/ast_407.ml", 495, 17014, 17021), ("astlib/ast_407.ml", 495, 17014, 17048), 0), 0, Tag1 ("Astlib__Ast_407", 216))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -3914)), 0, 0, 0, 0, (("astlib/ast_407.ml", 489, 16791, 16793), ("astlib/ast_407.ml", 496, 17078, 17085), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 65)), 2, 0); Tag1 (("constructor_arguments", 7175), (0, 0, Tag1 ([(("Pcstr_tuple", 820), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3911)], (0)), 100000000, 0, -3910)]), 0, (("astlib/ast_407.ml", 499, 17167, 17171), ("astlib/ast_407.ml", 499, 17167, 17202), 0), 0, Tag1 ("Astlib__Ast_407", 217)); (("Pcstr_record", 821), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7173)), 0, (0)), 100000000, 0, -3913)], (0)), 100000000, 0, -3912)]), 0, (("astlib/ast_407.ml", 500, 17203, 17207), ("astlib/ast_407.ml", 500, 17203, 17247), 0), 0, Tag1 ("Astlib__Ast_407", 218))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -3909)), 0, 0, 0, 0, (("astlib/ast_407.ml", 498, 17087, 17089), ("astlib/ast_407.ml", 500, 17203, 17247), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 66)), 2, 0); Tag1 (("type_extension", 7176), (0, 0, [[(("ptyext_path", 822), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3900)], (0)), 100000000, 0, -3899), (("astlib/ast_407.ml", 513, 17721, 17728), ("astlib/ast_407.ml", 513, 17721, 17757), 0), 0, Tag1 ("Astlib__Ast_407", 219)); (("ptyext_params", 823), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3903); (Tag3 (Tag1 ((("Asttypes", 7140)), "variance"), 0, (0)), 100000000, 0, -3904)]), 100000000, 0, -3902)], (0)), 100000000, 0, -3901), (("astlib/ast_407.ml", 514, 17758, 17765), ("astlib/ast_407.ml", 514, 17758, 17808), 0), 0, Tag1 ("Astlib__Ast_407", 220)); (("ptyext_constructors", 824), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7177)), 0, (0)), 100000000, 0, -3906)], (0)), 100000000, 0, -3905), (("astlib/ast_407.ml", 515, 17809, 17816), ("astlib/ast_407.ml", 515, 17809, 17864), 0), 0, Tag1 ("Astlib__Ast_407", 221)); (("ptyext_private", 825), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "private_flag"), 0, (0)), 100000000, 0, -3907), (("astlib/ast_407.ml", 516, 17865, 17872), ("astlib/ast_407.ml", 516, 17865, 17901), 0), 0, Tag1 ("Astlib__Ast_407", 222)); (("ptyext_attributes", 826), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3908), (("astlib/ast_407.ml", 517, 17902, 17909), ("astlib/ast_407.ml", 517, 17902, 17939), 0), 0, Tag1 ("Astlib__Ast_407", 223))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -3898)), 0, 0, 0, 0, (("astlib/ast_407.ml", 511, 17647, 17649), ("astlib/ast_407.ml", 518, 17968, 17975), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 67)), 2, 0); Tag1 (("extension_constructor", 7177), (0, 0, [[(("pext_name", 827), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3894)], (0)), 100000000, 0, -3893), (("astlib/ast_407.ml", 525, 18093, 18100), ("astlib/ast_407.ml", 525, 18093, 18122), 0), 0, Tag1 ("Astlib__Ast_407", 224)); (("pext_kind", 828), 0, (Tag3 ((("extension_constructor_kind", 7178)), 0, (0)), 100000000, 0, -3895), (("astlib/ast_407.ml", 526, 18123, 18130), ("astlib/ast_407.ml", 526, 18123, 18169), 0), 0, Tag1 ("Astlib__Ast_407", 225)); (("pext_loc", 829), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3896), (("astlib/ast_407.ml", 527, 18170, 18177), ("astlib/ast_407.ml", 527, 18170, 18199), 0), 0, Tag1 ("Astlib__Ast_407", 226)); (("pext_attributes", 830), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3897), (("astlib/ast_407.ml", 528, 18200, 18207), ("astlib/ast_407.ml", 528, 18200, 18235), 0), 0, Tag1 ("Astlib__Ast_407", 227))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -3892)), 0, 0, 0, 0, (("astlib/ast_407.ml", 523, 18005, 18007), ("astlib/ast_407.ml", 529, 18265, 18272), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 68)), 2, 0); Tag1 (("extension_constructor_kind", 7178), (0, 0, Tag1 ([(("Pext_decl", 831), ([(Tag3 ((("constructor_arguments", 7175)), 0, (0)), 100000000, 0, -3887); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3889)], (0)), 100000000, 0, -3888)]), 0, (("astlib/ast_407.ml", 532, 18364, 18370), ("astlib/ast_407.ml", 532, 18364, 18423), 0), 0, Tag1 ("Astlib__Ast_407", 228)); (("Pext_rebind", 832), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3891)], (0)), 100000000, 0, -3890)]), 0, (("astlib/ast_407.ml", 538, 18616, 18620), ("astlib/ast_407.ml", 538, 18616, 18652), 0), 0, Tag1 ("Astlib__Ast_407", 229))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -3886)), 0, 0, 0, 0, (("astlib/ast_407.ml", 531, 18274, 18276), ("astlib/ast_407.ml", 538, 18616, 18652), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 69)), 2, 0); Tag1 (("class_type", 7179), (0, 0, [[(("pcty_desc", 833), 0, (Tag3 ((("class_type_desc", 7180)), 0, (0)), 100000000, 0, -3883), (("astlib/ast_407.ml", 549, 18840, 18847), ("astlib/ast_407.ml", 549, 18840, 18874), 0), 0, Tag1 ("Astlib__Ast_407", 230)); (("pcty_loc", 834), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3884), (("astlib/ast_407.ml", 550, 18875, 18882), ("astlib/ast_407.ml", 550, 18875, 18903), 0), 0, Tag1 ("Astlib__Ast_407", 231)); (("pcty_attributes", 835), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3885), (("astlib/ast_407.ml", 551, 18904, 18911), ("astlib/ast_407.ml", 551, 18904, 18939), 0), 0, Tag1 ("Astlib__Ast_407", 232))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -3882)), 0, 0, 0, 0, (("astlib/ast_407.ml", 547, 18774, 18776), ("astlib/ast_407.ml", 552, 18964, 18971), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 70)), 2, 0); Tag1 (("class_type_desc", 7180), (0, 0, Tag1 ([(("Pcty_constr", 836), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3870)], (0)), 100000000, 0, -3869); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3872)], (0)), 100000000, 0, -3871)]), 0, (("astlib/ast_407.ml", 555, 19041, 19045), ("astlib/ast_407.ml", 555, 19041, 19094), 0), 0, Tag1 ("Astlib__Ast_407", 233)); (("Pcty_signature", 837), ([(Tag3 ((("class_signature", 7181)), 0, (0)), 100000000, 0, -3873)]), 0, (("astlib/ast_407.ml", 558, 19144, 19148), ("astlib/ast_407.ml", 558, 19144, 19183), 0), 0, Tag1 ("Astlib__Ast_407", 234)); (("Pcty_arrow", 838), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "arg_label"), 0, (0)), 100000000, 0, -3874); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3875); (Tag3 ((("class_type", 7179)), 0, (0)), 100000000, 0, -3876)]), 0, (("astlib/ast_407.ml", 560, 19215, 19219), ("astlib/ast_407.ml", 560, 19215, 19269), 0), 0, Tag1 ("Astlib__Ast_407", 235)); (("Pcty_extension", 839), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -3877)]), 0, (("astlib/ast_407.ml", 565, 19394, 19398), ("astlib/ast_407.ml", 565, 19394, 19427), 0), 0, Tag1 ("Astlib__Ast_407", 236)); (("Pcty_open", 840), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "override_flag"), 0, (0)), 100000000, 0, -3878); (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3880)], (0)), 100000000, 0, -3879); (Tag3 ((("class_type", 7179)), 0, (0)), 100000000, 0, -3881)]), 0, (("astlib/ast_407.ml", 567, 19450, 19454), ("astlib/ast_407.ml", 567, 19450, 19513), 0), 0, Tag1 ("Astlib__Ast_407", 237))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -3868)), 0, 0, 0, 0, (("astlib/ast_407.ml", 554, 18973, 18975), ("astlib/ast_407.ml", 567, 19450, 19513), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 71)), 2, 0); Tag1 (("class_signature", 7181), (0, 0, [[(("pcsig_self", 841), 0, (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3865), (("astlib/ast_407.ml", 572, 19624, 19631), ("astlib/ast_407.ml", 572, 19624, 19653), 0), 0, Tag1 ("Astlib__Ast_407", 238)); (("pcsig_fields", 842), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7182)), 0, (0)), 100000000, 0, -3867)], (0)), 100000000, 0, -3866), (("astlib/ast_407.ml", 573, 19654, 19661), ("astlib/ast_407.ml", 573, 19654, 19697), 0), 0, Tag1 ("Astlib__Ast_407", 239))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -3864)), 0, 0, 0, 0, (("astlib/ast_407.ml", 570, 19548, 19550), ("astlib/ast_407.ml", 574, 19698, 19705), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 72)), 2, 0); Tag1 (("class_type_field", 7182), (0, 0, [[(("pctf_desc", 843), 0, (Tag3 ((("class_type_field_desc", 7183)), 0, (0)), 100000000, 0, -3861), (("astlib/ast_407.ml", 581, 19871, 19878), ("astlib/ast_407.ml", 581, 19871, 19911), 0), 0, Tag1 ("Astlib__Ast_407", 240)); (("pctf_loc", 844), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3862), (("astlib/ast_407.ml", 582, 19912, 19919), ("astlib/ast_407.ml", 582, 19912, 19940), 0), 0, Tag1 ("Astlib__Ast_407", 241)); (("pctf_attributes", 845), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3863), (("astlib/ast_407.ml", 583, 19941, 19948), ("astlib/ast_407.ml", 583, 19941, 19976), 0), 0, Tag1 ("Astlib__Ast_407", 242))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -3860)), 0, 0, 0, 0, (("astlib/ast_407.ml", 579, 19793, 19795), ("astlib/ast_407.ml", 584, 20003, 20010), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 73)), 2, 0); Tag1 (("class_type_field_desc", 7183), (0, 0, Tag1 ([(("Pctf_inherit", 846), ([(Tag3 ((("class_type", 7179)), 0, (0)), 100000000, 0, -3842)]), 0, (("astlib/ast_407.ml", 587, 20092, 20096), ("astlib/ast_407.ml", 587, 20092, 20124), 0), 0, Tag1 ("Astlib__Ast_407", 243)); (("Pctf_val", 847), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -3845)], (0)), 100000000, 0, -3844); (Tag3 (Tag1 ((("Asttypes", 7140)), "mutable_flag"), 0, (0)), 100000000, 0, -3846); (Tag3 (Tag1 ((("Asttypes", 7140)), "virtual_flag"), 0, (0)), 100000000, 0, -3847); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3848)]), 100000000, 0, -3843)]), 0, (("astlib/ast_407.ml", 589, 20152, 20156), ("astlib/ast_407.ml", 589, 20152, 20223), 0), 0, Tag1 ("Astlib__Ast_407", 244)); (("Pctf_method", 848), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -3851)], (0)), 100000000, 0, -3850); (Tag3 (Tag1 ((("Asttypes", 7140)), "private_flag"), 0, (0)), 100000000, 0, -3852); (Tag3 (Tag1 ((("Asttypes", 7140)), "virtual_flag"), 0, (0)), 100000000, 0, -3853); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3854)]), 100000000, 0, -3849)]), 0, (("astlib/ast_407.ml", 591, 20249, 20253), ("astlib/ast_407.ml", 591, 20249, 20324), 0), 0, Tag1 ("Astlib__Ast_407", 245)); (("Pctf_constraint", 849), ([(Tag2 ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3856); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3857)]), 100000000, 0, -3855)]), 0, (("astlib/ast_407.ml", 596, 20406, 20410), ("astlib/ast_407.ml", 596, 20406, 20455), 0), 0, Tag1 ("Astlib__Ast_407", 246)); (("Pctf_attribute", 850), ([(Tag3 ((("attribute", 7156)), 0, (0)), 100000000, 0, -3858)]), 0, (("astlib/ast_407.ml", 598, 20491, 20495), ("astlib/ast_407.ml", 598, 20491, 20524), 0), 0, Tag1 ("Astlib__Ast_407", 247)); (("Pctf_extension", 851), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -3859)]), 0, (("astlib/ast_407.ml", 600, 20549, 20553), ("astlib/ast_407.ml", 600, 20549, 20582), 0), 0, Tag1 ("Astlib__Ast_407", 248))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -3841)), 0, 0, 0, 0, (("astlib/ast_407.ml", 586, 20012, 20014), ("astlib/ast_407.ml", 600, 20549, 20582), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 74)), 2, 0); Tag1 (("class_infos", 7184), ([((("a")), 100000000, 0, -3831)], 1, [[(("pci_virt", 852), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "virtual_flag"), 0, (0)), 100000000, 0, -3832), (("astlib/ast_407.ml", 605, 20681, 20688), ("astlib/ast_407.ml", 605, 20681, 20711), 0), 0, Tag1 ("Astlib__Ast_407", 249)); (("pci_params", 853), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3835); (Tag3 (Tag1 ((("Asttypes", 7140)), "variance"), 0, (0)), 100000000, 0, -3836)]), 100000000, 0, -3834)], (0)), 100000000, 0, -3833), (("astlib/ast_407.ml", 606, 20712, 20719), ("astlib/ast_407.ml", 606, 20712, 20759), 0), 0, Tag1 ("Astlib__Ast_407", 250)); (("pci_name", 854), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3838)], (0)), 100000000, 0, -3837), (("astlib/ast_407.ml", 607, 20760, 20767), ("astlib/ast_407.ml", 607, 20760, 20788), 0), 0, Tag1 ("Astlib__Ast_407", 251)); (("pci_expr", 855), 0, ((("a")), 100000000, 0, -3831), (("astlib/ast_407.ml", 608, 20789, 20796), ("astlib/ast_407.ml", 608, 20789, 20809), 0), 0, Tag1 ("Astlib__Ast_407", 252)); (("pci_loc", 856), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3839), (("astlib/ast_407.ml", 609, 20810, 20817), ("astlib/ast_407.ml", 609, 20810, 20837), 0), 0, Tag1 ("Astlib__Ast_407", 253)); (("pci_attributes", 857), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3840), (("astlib/ast_407.ml", 610, 20838, 20845), ("astlib/ast_407.ml", 610, 20838, 20872), 0), 0, Tag1 ("Astlib__Ast_407", 254))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -3831)], (0)), 100000000, 0, -3830)), [25], [0], 0, 0, (("astlib/ast_407.ml", 603, 20607, 20609), ("astlib/ast_407.ml", 611, 20900, 20907), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 75)), 2, 0); Tag1 (("class_description", 7185), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7184)), [(Tag3 ((("class_type", 7179)), 0, (0)), 100000000, 0, -3829)], (0)), 100000000, 0, -3828)), 0, 0, 0, 0, (("astlib/ast_407.ml", 619, 21039, 21041), ("astlib/ast_407.ml", 619, 21039, 21087), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 76)), 2, 0); Tag1 (("class_type_declaration", 7186), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7184)), [(Tag3 ((("class_type", 7179)), 0, (0)), 100000000, 0, -3827)], (0)), 100000000, 0, -3826)), 0, 0, 0, 0, (("astlib/ast_407.ml", 621, 21089, 21091), ("astlib/ast_407.ml", 621, 21089, 21142), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 77)), 2, 0); Tag1 (("class_expr", 7187), (0, 0, [[(("pcl_desc", 858), 0, (Tag3 ((("class_expr_desc", 7188)), 0, (0)), 100000000, 0, -3823), (("astlib/ast_407.ml", 627, 21260, 21267), ("astlib/ast_407.ml", 627, 21260, 21293), 0), 0, Tag1 ("Astlib__Ast_407", 255)); (("pcl_loc", 859), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3824), (("astlib/ast_407.ml", 628, 21294, 21301), ("astlib/ast_407.ml", 628, 21294, 21321), 0), 0, Tag1 ("Astlib__Ast_407", 256)); (("pcl_attributes", 860), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3825), (("astlib/ast_407.ml", 629, 21322, 21329), ("astlib/ast_407.ml", 629, 21322, 21356), 0), 0, Tag1 ("Astlib__Ast_407", 257))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -3822)), 0, 0, 0, 0, (("astlib/ast_407.ml", 625, 21194, 21196), ("astlib/ast_407.ml", 630, 21381, 21388), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 78)), 2, 0); Tag1 (("class_expr_desc", 7188), (0, 0, Tag1 ([(("Pcl_constr", 861), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3797)], (0)), 100000000, 0, -3796); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3799)], (0)), 100000000, 0, -3798)]), 0, (("astlib/ast_407.ml", 633, 21458, 21462), ("astlib/ast_407.ml", 633, 21458, 21510), 0), 0, Tag1 ("Astlib__Ast_407", 258)); (("Pcl_structure", 862), ([(Tag3 ((("class_structure", 7189)), 0, (0)), 100000000, 0, -3800)]), 0, (("astlib/ast_407.ml", 636, 21560, 21564), ("astlib/ast_407.ml", 636, 21560, 21598), 0), 0, Tag1 ("Astlib__Ast_407", 259)); (("Pcl_fun", 863), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "arg_label"), 0, (0)), 100000000, 0, -3801); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3803)], (0)), 100000000, 0, -3802); (Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -3804); (Tag3 ((("class_expr", 7187)), 0, (0)), 100000000, 0, -3805)]), 0, (("astlib/ast_407.ml", 638, 21630, 21634), ("astlib/ast_407.ml", 638, 21630, 21699), 0), 0, Tag1 ("Astlib__Ast_407", 260)); (("Pcl_apply", 864), ([(Tag3 ((("class_expr", 7187)), 0, (0)), 100000000, 0, -3806); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "arg_label"), 0, (0)), 100000000, 0, -3809); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3810)]), 100000000, 0, -3808)], (0)), 100000000, 0, -3807)]), 0, (("astlib/ast_407.ml", 644, 21989, 21993), ("astlib/ast_407.ml", 644, 21989, 22050), 0), 0, Tag1 ("Astlib__Ast_407", 261)); (("Pcl_let", 865), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "rec_flag"), 0, (0)), 100000000, 0, -3811); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7211)), 0, (0)), 100000000, 0, -3813)], (0)), 100000000, 0, -3812); (Tag3 ((("class_expr", 7187)), 0, (0)), 100000000, 0, -3814)]), 0, (("astlib/ast_407.ml", 651, 22234, 22238), ("astlib/ast_407.ml", 651, 22234, 22293), 0), 0, Tag1 ("Astlib__Ast_407", 262)); (("Pcl_constraint", 866), ([(Tag3 ((("class_expr", 7187)), 0, (0)), 100000000, 0, -3815); (Tag3 ((("class_type", 7179)), 0, (0)), 100000000, 0, -3816)]), 0, (("astlib/ast_407.ml", 655, 22461, 22465), ("astlib/ast_407.ml", 655, 22461, 22508), 0), 0, Tag1 ("Astlib__Ast_407", 263)); (("Pcl_extension", 867), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -3817)]), 0, (("astlib/ast_407.ml", 657, 22535, 22539), ("astlib/ast_407.ml", 657, 22535, 22567), 0), 0, Tag1 ("Astlib__Ast_407", 264)); (("Pcl_open", 868), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "override_flag"), 0, (0)), 100000000, 0, -3818); (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3820)], (0)), 100000000, 0, -3819); (Tag3 ((("class_expr", 7187)), 0, (0)), 100000000, 0, -3821)]), 0, (("astlib/ast_407.ml", 659, 22584, 22588), ("astlib/ast_407.ml", 659, 22584, 22646), 0), 0, Tag1 ("Astlib__Ast_407", 265))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -3795)), 0, 0, 0, 0, (("astlib/ast_407.ml", 632, 21390, 21392), ("astlib/ast_407.ml", 659, 22584, 22646), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 79)), 2, 0); Tag1 (("class_structure", 7189), (0, 0, [[(("pcstr_self", 869), 0, (Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -3792), (("astlib/ast_407.ml", 665, 22752, 22759), ("astlib/ast_407.ml", 665, 22752, 22779), 0), 0, Tag1 ("Astlib__Ast_407", 266)); (("pcstr_fields", 870), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7190)), 0, (0)), 100000000, 0, -3794)], (0)), 100000000, 0, -3793), (("astlib/ast_407.ml", 666, 22780, 22787), ("astlib/ast_407.ml", 666, 22780, 22818), 0), 0, Tag1 ("Astlib__Ast_407", 267))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -3791)), 0, 0, 0, 0, (("astlib/ast_407.ml", 663, 22676, 22678), ("astlib/ast_407.ml", 667, 22819, 22826), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 80)), 2, 0); Tag1 (("class_field", 7190), (0, 0, [[(("pcf_desc", 871), 0, (Tag3 ((("class_field_desc", 7191)), 0, (0)), 100000000, 0, -3788), (("astlib/ast_407.ml", 674, 22979, 22986), ("astlib/ast_407.ml", 674, 22979, 23013), 0), 0, Tag1 ("Astlib__Ast_407", 268)); (("pcf_loc", 872), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3789), (("astlib/ast_407.ml", 675, 23014, 23021), ("astlib/ast_407.ml", 675, 23014, 23041), 0), 0, Tag1 ("Astlib__Ast_407", 269)); (("pcf_attributes", 873), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3790), (("astlib/ast_407.ml", 676, 23042, 23049), ("astlib/ast_407.ml", 676, 23042, 23076), 0), 0, Tag1 ("Astlib__Ast_407", 270))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -3787)), 0, 0, 0, 0, (("astlib/ast_407.ml", 672, 22911, 22913), ("astlib/ast_407.ml", 677, 23103, 23110), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 81)), 2, 0); Tag1 (("class_field_desc", 7191), (0, 0, Tag1 ([(("Pcf_inherit", 874), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "override_flag"), 0, (0)), 100000000, 0, -3766); (Tag3 ((("class_expr", 7187)), 0, (0)), 100000000, 0, -3767); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3770)], (0)), 100000000, 0, -3769)], (0)), 100000000, 0, -3768)]), 0, (("astlib/ast_407.ml", 680, 23182, 23186), ("astlib/ast_407.ml", 680, 23182, 23249), 0), 0, Tag1 ("Astlib__Ast_407", 271)); (("Pcf_val", 875), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -3773)], (0)), 100000000, 0, -3772); (Tag3 (Tag1 ((("Asttypes", 7140)), "mutable_flag"), 0, (0)), 100000000, 0, -3774); (Tag3 ((("class_field_kind", 7192)), 0, (0)), 100000000, 0, -3775)]), 100000000, 0, -3771)]), 0, (("astlib/ast_407.ml", 686, 23372, 23376), ("astlib/ast_407.ml", 686, 23372, 23434), 0), 0, Tag1 ("Astlib__Ast_407", 272)); (("Pcf_method", 876), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7140)), "label"), 0, (0)), 100000000, 0, -3778)], (0)), 100000000, 0, -3777); (Tag3 (Tag1 ((("Asttypes", 7140)), "private_flag"), 0, (0)), 100000000, 0, -3779); (Tag3 ((("class_field_kind", 7192)), 0, (0)), 100000000, 0, -3780)]), 100000000, 0, -3776)]), 0, (("astlib/ast_407.ml", 690, 23502, 23506), ("astlib/ast_407.ml", 690, 23502, 23567), 0), 0, Tag1 ("Astlib__Ast_407", 273)); (("Pcf_constraint", 877), ([(Tag2 ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3782); (Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3783)]), 100000000, 0, -3781)]), 0, (("astlib/ast_407.ml", 694, 23702, 23706), ("astlib/ast_407.ml", 694, 23702, 23749), 0), 0, Tag1 ("Astlib__Ast_407", 274)); (("Pcf_initializer", 878), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3784)]), 0, (("astlib/ast_407.ml", 696, 23785, 23789), ("astlib/ast_407.ml", 696, 23785, 23820), 0), 0, Tag1 ("Astlib__Ast_407", 275)); (("Pcf_attribute", 879), ([(Tag3 ((("attribute", 7156)), 0, (0)), 100000000, 0, -3785)]), 0, (("astlib/ast_407.ml", 698, 23851, 23855), ("astlib/ast_407.ml", 698, 23851, 23883), 0), 0, Tag1 ("Astlib__Ast_407", 276)); (("Pcf_extension", 880), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -3786)]), 0, (("astlib/ast_407.ml", 700, 23908, 23912), ("astlib/ast_407.ml", 700, 23908, 23940), 0), 0, Tag1 ("Astlib__Ast_407", 277))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -3765)), 0, 0, 0, 0, (("astlib/ast_407.ml", 679, 23112, 23114), ("astlib/ast_407.ml", 700, 23908, 23940), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 82)), 2, 0); Tag1 (("class_field_kind", 7192), (0, 0, Tag1 ([(("Cfk_virtual", 881), ([(Tag3 ((("core_type", 7160)), 0, (0)), 100000000, 0, -3762)]), 0, (("astlib/ast_407.ml", 704, 24035, 24039), ("astlib/ast_407.ml", 704, 24035, 24065), 0), 0, Tag1 ("Astlib__Ast_407", 278)); (("Cfk_concrete", 882), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "override_flag"), 0, (0)), 100000000, 0, -3763); (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3764)]), 0, (("astlib/ast_407.ml", 705, 24066, 24070), ("astlib/ast_407.ml", 705, 24066, 24114), 0), 0, Tag1 ("Astlib__Ast_407", 279))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -3761)), 0, 0, 0, 0, (("astlib/ast_407.ml", 703, 23965, 23967), ("astlib/ast_407.ml", 705, 24066, 24114), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 83)), 2, 0); Tag1 (("class_declaration", 7193), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7184)), [(Tag3 ((("class_expr", 7187)), 0, (0)), 100000000, 0, -3760)], (0)), 100000000, 0, -3759)), 0, 0, 0, 0, (("astlib/ast_407.ml", 707, 24116, 24118), ("astlib/ast_407.ml", 707, 24116, 24164), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 84)), 2, 0); Tag1 (("module_type", 7194), (0, 0, [[(("pmty_desc", 883), 0, (Tag3 ((("module_type_desc", 7195)), 0, (0)), 100000000, 0, -3756), (("astlib/ast_407.ml", 715, 24314, 24321), ("astlib/ast_407.ml", 715, 24314, 24349), 0), 0, Tag1 ("Astlib__Ast_407", 280)); (("pmty_loc", 884), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3757), (("astlib/ast_407.ml", 716, 24350, 24357), ("astlib/ast_407.ml", 716, 24350, 24378), 0), 0, Tag1 ("Astlib__Ast_407", 281)); (("pmty_attributes", 885), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3758), (("astlib/ast_407.ml", 717, 24379, 24386), ("astlib/ast_407.ml", 717, 24379, 24414), 0), 0, Tag1 ("Astlib__Ast_407", 282))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -3755)), 0, 0, 0, 0, (("astlib/ast_407.ml", 713, 24246, 24248), ("astlib/ast_407.ml", 718, 24439, 24446), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 85)), 2, 0); Tag1 (("module_type_desc", 7195), (0, 0, Tag1 ([(("Pmty_ident", 886), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3741)], (0)), 100000000, 0, -3740)]), 0, (("astlib/ast_407.ml", 721, 24518, 24522), ("astlib/ast_407.ml", 721, 24518, 24553), 0), 0, Tag1 ("Astlib__Ast_407", 283)); (("Pmty_signature", 887), ([(Tag3 ((("signature", 7196)), 0, (0)), 100000000, 0, -3742)]), 0, (("astlib/ast_407.ml", 723, 24572, 24576), ("astlib/ast_407.ml", 723, 24572, 24605), 0), 0, Tag1 ("Astlib__Ast_407", 284)); (("Pmty_functor", 888), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3744)], (0)), 100000000, 0, -3743); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7194)), 0, (0)), 100000000, 0, -3746)], (0)), 100000000, 0, -3745); (Tag3 ((("module_type", 7194)), 0, (0)), 100000000, 0, -3747)]), 0, (("astlib/ast_407.ml", 725, 24634, 24638), ("astlib/ast_407.ml", 725, 24634, 24701), 0), 0, Tag1 ("Astlib__Ast_407", 285)); (("Pmty_with", 889), ([(Tag3 ((("module_type", 7194)), 0, (0)), 100000000, 0, -3748); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7205)), 0, (0)), 100000000, 0, -3750)], (0)), 100000000, 0, -3749)]), 0, (("astlib/ast_407.ml", 727, 24742, 24746), ("astlib/ast_407.ml", 727, 24742, 24795), 0), 0, Tag1 ("Astlib__Ast_407", 286)); (("Pmty_typeof", 890), ([(Tag3 ((("module_expr", 7206)), 0, (0)), 100000000, 0, -3751)]), 0, (("astlib/ast_407.ml", 729, 24824, 24828), ("astlib/ast_407.ml", 729, 24824, 24856), 0), 0, Tag1 ("Astlib__Ast_407", 287)); (("Pmty_extension", 891), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -3752)]), 0, (("astlib/ast_407.ml", 731, 24891, 24895), ("astlib/ast_407.ml", 731, 24891, 24924), 0), 0, Tag1 ("Astlib__Ast_407", 288)); (("Pmty_alias", 892), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3754)], (0)), 100000000, 0, -3753)]), 0, (("astlib/ast_407.ml", 733, 24947, 24951), ("astlib/ast_407.ml", 733, 24947, 24982), 0), 0, Tag1 ("Astlib__Ast_407", 289))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -3739)), 0, 0, 0, 0, (("astlib/ast_407.ml", 720, 24448, 24450), ("astlib/ast_407.ml", 733, 24947, 24982), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 86)), 2, 0); Tag1 (("signature", 7196), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7197)), 0, (0)), 100000000, 0, -3738)], (0)), 100000000, 0, -3737)), 0, 0, 0, 0, (("astlib/ast_407.ml", 736, 25011, 25013), ("astlib/ast_407.ml", 736, 25011, 25048), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 87)), 2, 0); Tag1 (("signature_item", 7197), (0, 0, [[(("psig_desc", 893), 0, (Tag3 ((("signature_item_desc", 7198)), 0, (0)), 100000000, 0, -3735), (("astlib/ast_407.ml", 740, 25124, 25131), ("astlib/ast_407.ml", 740, 25124, 25162), 0), 0, Tag1 ("Astlib__Ast_407", 290)); (("psig_loc", 894), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3736), (("astlib/ast_407.ml", 741, 25163, 25170), ("astlib/ast_407.ml", 741, 25163, 25191), 0), 0, Tag1 ("Astlib__Ast_407", 291))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -3734)), 0, 0, 0, 0, (("astlib/ast_407.ml", 738, 25050, 25052), ("astlib/ast_407.ml", 742, 25192, 25199), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 88)), 2, 0); Tag1 (("signature_item_desc", 7198), (0, 0, Tag1 ([(("Psig_value", 895), ([(Tag3 ((("value_description", 7170)), 0, (0)), 100000000, 0, -3715)]), 0, (("astlib/ast_407.ml", 745, 25277, 25281), ("astlib/ast_407.ml", 745, 25277, 25314), 0), 0, Tag1 ("Astlib__Ast_407", 292)); (("Psig_type", 896), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "rec_flag"), 0, (0)), 100000000, 0, -3716); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7171)), 0, (0)), 100000000, 0, -3718)], (0)), 100000000, 0, -3717)]), 0, (("astlib/ast_407.ml", 750, 25405, 25409), ("astlib/ast_407.ml", 750, 25405, 25456), 0), 0, Tag1 ("Astlib__Ast_407", 293)); (("Psig_typext", 897), ([(Tag3 ((("type_extension", 7176)), 0, (0)), 100000000, 0, -3719)]), 0, (("astlib/ast_407.ml", 752, 25508, 25512), ("astlib/ast_407.ml", 752, 25508, 25543), 0), 0, Tag1 ("Astlib__Ast_407", 294)); (("Psig_exception", 898), ([(Tag3 ((("extension_constructor", 7177)), 0, (0)), 100000000, 0, -3720)]), 0, (("astlib/ast_407.ml", 754, 25575, 25579), ("astlib/ast_407.ml", 754, 25575, 25620), 0), 0, Tag1 ("Astlib__Ast_407", 295)); (("Psig_module", 899), ([(Tag3 ((("module_declaration", 7199)), 0, (0)), 100000000, 0, -3721)]), 0, (("astlib/ast_407.ml", 756, 25654, 25658), ("astlib/ast_407.ml", 756, 25654, 25693), 0), 0, Tag1 ("Astlib__Ast_407", 296)); (("Psig_recmodule", 900), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7199)), 0, (0)), 100000000, 0, -3723)], (0)), 100000000, 0, -3722)]), 0, (("astlib/ast_407.ml", 758, 25724, 25728), ("astlib/ast_407.ml", 758, 25724, 25771), 0), 0, Tag1 ("Astlib__Ast_407", 297)); (("Psig_modtype", 901), ([(Tag3 ((("module_type_declaration", 7200)), 0, (0)), 100000000, 0, -3724)]), 0, (("astlib/ast_407.ml", 760, 25829, 25833), ("astlib/ast_407.ml", 760, 25829, 25874), 0), 0, Tag1 ("Astlib__Ast_407", 298)); (("Psig_open", 902), ([(Tag3 ((("open_description", 7201)), 0, (0)), 100000000, 0, -3725)]), 0, (("astlib/ast_407.ml", 763, 25937, 25941), ("astlib/ast_407.ml", 763, 25937, 25972), 0), 0, Tag1 ("Astlib__Ast_407", 299)); (("Psig_include", 903), ([(Tag3 ((("include_description", 7203)), 0, (0)), 100000000, 0, -3726)]), 0, (("astlib/ast_407.ml", 765, 25996, 26000), ("astlib/ast_407.ml", 765, 25996, 26037), 0), 0, Tag1 ("Astlib__Ast_407", 300)); (("Psig_class", 904), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7185)), 0, (0)), 100000000, 0, -3728)], (0)), 100000000, 0, -3727)]), 0, (("astlib/ast_407.ml", 767, 26065, 26069), ("astlib/ast_407.ml", 767, 26065, 26107), 0), 0, Tag1 ("Astlib__Ast_407", 301)); (("Psig_class_type", 905), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7186)), 0, (0)), 100000000, 0, -3730)], (0)), 100000000, 0, -3729)]), 0, (("astlib/ast_407.ml", 769, 26160, 26164), ("astlib/ast_407.ml", 769, 26160, 26212), 0), 0, Tag1 ("Astlib__Ast_407", 302)); (("Psig_attribute", 906), ([(Tag3 ((("attribute", 7156)), 0, (0)), 100000000, 0, -3731)]), 0, (("astlib/ast_407.ml", 771, 26272, 26276), ("astlib/ast_407.ml", 771, 26272, 26305), 0), 0, Tag1 ("Astlib__Ast_407", 303)); (("Psig_extension", 907), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -3732); (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3733)]), 0, (("astlib/ast_407.ml", 773, 26330, 26334), ("astlib/ast_407.ml", 773, 26330, 26376), 0), 0, Tag1 ("Astlib__Ast_407", 304))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -3714)), 0, 0, 0, 0, (("astlib/ast_407.ml", 744, 25201, 25203), ("astlib/ast_407.ml", 773, 26330, 26376), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 89)), 2, 0); Tag1 (("module_declaration", 7199), (0, 0, [[(("pmd_name", 908), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3710)], (0)), 100000000, 0, -3709), (("astlib/ast_407.ml", 778, 26483, 26490), ("astlib/ast_407.ml", 778, 26483, 26511), 0), 0, Tag1 ("Astlib__Ast_407", 305)); (("pmd_type", 909), 0, (Tag3 ((("module_type", 7194)), 0, (0)), 100000000, 0, -3711), (("astlib/ast_407.ml", 779, 26512, 26519), ("astlib/ast_407.ml", 779, 26512, 26541), 0), 0, Tag1 ("Astlib__Ast_407", 306)); (("pmd_attributes", 910), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3712), (("astlib/ast_407.ml", 780, 26542, 26549), ("astlib/ast_407.ml", 780, 26542, 26576), 0), 0, Tag1 ("Astlib__Ast_407", 307)); (("pmd_loc", 911), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3713), (("astlib/ast_407.ml", 781, 26603, 26610), ("astlib/ast_407.ml", 781, 26603, 26630), 0), 0, Tag1 ("Astlib__Ast_407", 308))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -3708)), 0, 0, 0, 0, (("astlib/ast_407.ml", 776, 26401, 26403), ("astlib/ast_407.ml", 782, 26631, 26638), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 90)), 2, 0); Tag1 (("module_type_declaration", 7200), (0, 0, [[(("pmtd_name", 912), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3703)], (0)), 100000000, 0, -3702), (("astlib/ast_407.ml", 787, 26747, 26754), ("astlib/ast_407.ml", 787, 26747, 26776), 0), 0, Tag1 ("Astlib__Ast_407", 309)); (("pmtd_type", 913), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7194)), 0, (0)), 100000000, 0, -3705)], (0)), 100000000, 0, -3704), (("astlib/ast_407.ml", 788, 26777, 26784), ("astlib/ast_407.ml", 788, 26777, 26814), 0), 0, Tag1 ("Astlib__Ast_407", 310)); (("pmtd_attributes", 914), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3706), (("astlib/ast_407.ml", 789, 26815, 26822), ("astlib/ast_407.ml", 789, 26815, 26850), 0), 0, Tag1 ("Astlib__Ast_407", 311)); (("pmtd_loc", 915), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3707), (("astlib/ast_407.ml", 790, 26877, 26884), ("astlib/ast_407.ml", 790, 26877, 26905), 0), 0, Tag1 ("Astlib__Ast_407", 312))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -3701)), 0, 0, 0, 0, (("astlib/ast_407.ml", 785, 26655, 26657), ("astlib/ast_407.ml", 791, 26906, 26913), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 91)), 2, 0); Tag1 (("open_description", 7201), (0, 0, [[(("popen_lid", 916), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3697)], (0)), 100000000, 0, -3696), (("astlib/ast_407.ml", 798, 27076, 27083), ("astlib/ast_407.ml", 798, 27076, 27110), 0), 0, Tag1 ("Astlib__Ast_407", 313)); (("popen_override", 917), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "override_flag"), 0, (0)), 100000000, 0, -3698), (("astlib/ast_407.ml", 799, 27111, 27118), ("astlib/ast_407.ml", 799, 27111, 27148), 0), 0, Tag1 ("Astlib__Ast_407", 314)); (("popen_loc", 918), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3699), (("astlib/ast_407.ml", 800, 27149, 27156), ("astlib/ast_407.ml", 800, 27149, 27178), 0), 0, Tag1 ("Astlib__Ast_407", 315)); (("popen_attributes", 919), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3700), (("astlib/ast_407.ml", 801, 27179, 27186), ("astlib/ast_407.ml", 801, 27179, 27215), 0), 0, Tag1 ("Astlib__Ast_407", 316))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "open_description"), 0, (0)), 100000000, 0, -3695)), 0, 0, 0, 0, (("astlib/ast_407.ml", 796, 26998, 27000), ("astlib/ast_407.ml", 802, 27216, 27223), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 92)), 2, 0); Tag1 (("include_infos", 7202), ([((("a")), 100000000, 0, -3692)], 1, [[(("pincl_mod", 920), 0, ((("a")), 100000000, 0, -3692), (("astlib/ast_407.ml", 810, 27471, 27478), ("astlib/ast_407.ml", 810, 27471, 27492), 0), 0, Tag1 ("Astlib__Ast_407", 317)); (("pincl_loc", 921), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3693), (("astlib/ast_407.ml", 811, 27493, 27500), ("astlib/ast_407.ml", 811, 27493, 27522), 0), 0, Tag1 ("Astlib__Ast_407", 318)); (("pincl_attributes", 922), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3694), (("astlib/ast_407.ml", 812, 27523, 27530), ("astlib/ast_407.ml", 812, 27523, 27559), 0), 0, Tag1 ("Astlib__Ast_407", 319))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -3692)], (0)), 100000000, 0, -3691)), [25], [0], 0, 0, (("astlib/ast_407.ml", 808, 27393, 27395), ("astlib/ast_407.ml", 813, 27560, 27567), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 93)), 2, 0); Tag1 (("include_description", 7203), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7202)), [(Tag3 ((("module_type", 7194)), 0, (0)), 100000000, 0, -3690)], (0)), 100000000, 0, -3689)), 0, 0, 0, 0, (("astlib/ast_407.ml", 815, 27569, 27571), ("astlib/ast_407.ml", 815, 27569, 27622), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 94)), 2, 0); Tag1 (("include_declaration", 7204), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7202)), [(Tag3 ((("module_expr", 7206)), 0, (0)), 100000000, 0, -3688)], (0)), 100000000, 0, -3687)), 0, 0, 0, 0, (("astlib/ast_407.ml", 818, 27643, 27645), ("astlib/ast_407.ml", 818, 27643, 27696), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 95)), 2, 0); Tag1 (("with_constraint", 7205), (0, 0, Tag1 ([(("Pwith_type", 923), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3674)], (0)), 100000000, 0, -3673); (Tag3 ((("type_declaration", 7171)), 0, (0)), 100000000, 0, -3675)]), 0, (("astlib/ast_407.ml", 822, 27785, 27789), ("astlib/ast_407.ml", 822, 27785, 27839), 0), 0, Tag1 ("Astlib__Ast_407", 320)); (("Pwith_module", 924), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3677)], (0)), 100000000, 0, -3676); (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3679)], (0)), 100000000, 0, -3678)]), 0, (("astlib/ast_407.ml", 827, 27990, 27994), ("astlib/ast_407.ml", 827, 27990, 28045), 0), 0, Tag1 ("Astlib__Ast_407", 321)); (("Pwith_typesubst", 925), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3681)], (0)), 100000000, 0, -3680); (Tag3 ((("type_declaration", 7171)), 0, (0)), 100000000, 0, -3682)]), 0, (("astlib/ast_407.ml", 829, 28082, 28086), ("astlib/ast_407.ml", 829, 28082, 28141), 0), 0, Tag1 ("Astlib__Ast_407", 322)); (("Pwith_modsubst", 926), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3684)], (0)), 100000000, 0, -3683); (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3686)], (0)), 100000000, 0, -3685)]), 0, (("astlib/ast_407.ml", 831, 28208, 28212), ("astlib/ast_407.ml", 831, 28208, 28265), 0), 0, Tag1 ("Astlib__Ast_407", 323))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -3672)), 0, 0, 0, 0, (("astlib/ast_407.ml", 821, 27717, 27719), ("astlib/ast_407.ml", 831, 28208, 28265), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 96)), 2, 0); Tag1 (("module_expr", 7206), (0, 0, [[(("pmod_desc", 927), 0, (Tag3 ((("module_expr_desc", 7207)), 0, (0)), 100000000, 0, -3669), (("astlib/ast_407.ml", 838, 28423, 28430), ("astlib/ast_407.ml", 838, 28423, 28458), 0), 0, Tag1 ("Astlib__Ast_407", 324)); (("pmod_loc", 928), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3670), (("astlib/ast_407.ml", 839, 28459, 28466), ("astlib/ast_407.ml", 839, 28459, 28487), 0), 0, Tag1 ("Astlib__Ast_407", 325)); (("pmod_attributes", 929), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3671), (("astlib/ast_407.ml", 840, 28488, 28495), ("astlib/ast_407.ml", 840, 28488, 28523), 0), 0, Tag1 ("Astlib__Ast_407", 326))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -3668)), 0, 0, 0, 0, (("astlib/ast_407.ml", 836, 28355, 28357), ("astlib/ast_407.ml", 841, 28548, 28555), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 97)), 2, 0); Tag1 (("module_expr_desc", 7207), (0, 0, Tag1 ([(("Pmod_ident", 930), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3655)], (0)), 100000000, 0, -3654)]), 0, (("astlib/ast_407.ml", 844, 28627, 28631), ("astlib/ast_407.ml", 844, 28627, 28662), 0), 0, Tag1 ("Astlib__Ast_407", 327)); (("Pmod_structure", 931), ([(Tag3 ((("structure", 7208)), 0, (0)), 100000000, 0, -3656)]), 0, (("astlib/ast_407.ml", 846, 28681, 28685), ("astlib/ast_407.ml", 846, 28681, 28714), 0), 0, Tag1 ("Astlib__Ast_407", 328)); (("Pmod_functor", 932), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3658)], (0)), 100000000, 0, -3657); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7194)), 0, (0)), 100000000, 0, -3660)], (0)), 100000000, 0, -3659); (Tag3 ((("module_expr", 7206)), 0, (0)), 100000000, 0, -3661)]), 0, (("astlib/ast_407.ml", 848, 28746, 28750), ("astlib/ast_407.ml", 848, 28746, 28813), 0), 0, Tag1 ("Astlib__Ast_407", 329)); (("Pmod_apply", 933), ([(Tag3 ((("module_expr", 7206)), 0, (0)), 100000000, 0, -3662); (Tag3 ((("module_expr", 7206)), 0, (0)), 100000000, 0, -3663)]), 0, (("astlib/ast_407.ml", 850, 28853, 28857), ("astlib/ast_407.ml", 850, 28853, 28898), 0), 0, Tag1 ("Astlib__Ast_407", 330)); (("Pmod_constraint", 934), ([(Tag3 ((("module_expr", 7206)), 0, (0)), 100000000, 0, -3664); (Tag3 ((("module_type", 7194)), 0, (0)), 100000000, 0, -3665)]), 0, (("astlib/ast_407.ml", 852, 28924, 28928), ("astlib/ast_407.ml", 852, 28924, 28974), 0), 0, Tag1 ("Astlib__Ast_407", 331)); (("Pmod_unpack", 935), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3666)]), 0, (("astlib/ast_407.ml", 854, 29001, 29005), ("astlib/ast_407.ml", 854, 29001, 29032), 0), 0, Tag1 ("Astlib__Ast_407", 332)); (("Pmod_extension", 936), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -3667)]), 0, (("astlib/ast_407.ml", 856, 29057, 29061), ("astlib/ast_407.ml", 856, 29057, 29090), 0), 0, Tag1 ("Astlib__Ast_407", 333))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -3653)), 0, 0, 0, 0, (("astlib/ast_407.ml", 843, 28557, 28559), ("astlib/ast_407.ml", 856, 29057, 29090), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 98)), 2, 0); Tag1 (("structure", 7208), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7209)), 0, (0)), 100000000, 0, -3652)], (0)), 100000000, 0, -3651)), 0, 0, 0, 0, (("astlib/ast_407.ml", 859, 29114, 29116), ("astlib/ast_407.ml", 859, 29114, 29151), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 99)), 2, 0); Tag1 (("structure_item", 7209), (0, 0, [[(("pstr_desc", 937), 0, (Tag3 ((("structure_item_desc", 7210)), 0, (0)), 100000000, 0, -3649), (("astlib/ast_407.ml", 863, 29227, 29234), ("astlib/ast_407.ml", 863, 29227, 29265), 0), 0, Tag1 ("Astlib__Ast_407", 334)); (("pstr_loc", 938), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3650), (("astlib/ast_407.ml", 864, 29266, 29273), ("astlib/ast_407.ml", 864, 29266, 29294), 0), 0, Tag1 ("Astlib__Ast_407", 335))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -3648)), 0, 0, 0, 0, (("astlib/ast_407.ml", 861, 29153, 29155), ("astlib/ast_407.ml", 865, 29295, 29302), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 100)), 2, 0); Tag1 (("structure_item_desc", 7210), (0, 0, Tag1 ([(("Pstr_eval", 939), ([(Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3624); (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3625)]), 0, (("astlib/ast_407.ml", 868, 29380, 29384), ("astlib/ast_407.ml", 868, 29380, 29422), 0), 0, Tag1 ("Astlib__Ast_407", 336)); (("Pstr_value", 940), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "rec_flag"), 0, (0)), 100000000, 0, -3626); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7211)), 0, (0)), 100000000, 0, -3628)], (0)), 100000000, 0, -3627)]), 0, (("astlib/ast_407.ml", 870, 29441, 29445), ("astlib/ast_407.ml", 870, 29441, 29490), 0), 0, Tag1 ("Astlib__Ast_407", 337)); (("Pstr_primitive", 941), ([(Tag3 ((("value_description", 7170)), 0, (0)), 100000000, 0, -3629)]), 0, (("astlib/ast_407.ml", 874, 29648, 29652), ("astlib/ast_407.ml", 874, 29648, 29689), 0), 0, Tag1 ("Astlib__Ast_407", 338)); (("Pstr_type", 942), ([(Tag3 (Tag1 ((("Asttypes", 7140)), "rec_flag"), 0, (0)), 100000000, 0, -3630); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7171)), 0, (0)), 100000000, 0, -3632)], (0)), 100000000, 0, -3631)]), 0, (("astlib/ast_407.ml", 877, 29760, 29764), ("astlib/ast_407.ml", 877, 29760, 29811), 0), 0, Tag1 ("Astlib__Ast_407", 339)); (("Pstr_typext", 943), ([(Tag3 ((("type_extension", 7176)), 0, (0)), 100000000, 0, -3633)]), 0, (("astlib/ast_407.ml", 879, 29863, 29867), ("astlib/ast_407.ml", 879, 29863, 29898), 0), 0, Tag1 ("Astlib__Ast_407", 340)); (("Pstr_exception", 944), ([(Tag3 ((("extension_constructor", 7177)), 0, (0)), 100000000, 0, -3634)]), 0, (("astlib/ast_407.ml", 881, 29930, 29934), ("astlib/ast_407.ml", 881, 29930, 29975), 0), 0, Tag1 ("Astlib__Ast_407", 341)); (("Pstr_module", 945), ([(Tag3 ((("module_binding", 7212)), 0, (0)), 100000000, 0, -3635)]), 0, (("astlib/ast_407.ml", 884, 30040, 30044), ("astlib/ast_407.ml", 884, 30040, 30075), 0), 0, Tag1 ("Astlib__Ast_407", 342)); (("Pstr_recmodule", 946), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7212)), 0, (0)), 100000000, 0, -3637)], (0)), 100000000, 0, -3636)]), 0, (("astlib/ast_407.ml", 886, 30106, 30110), ("astlib/ast_407.ml", 886, 30106, 30149), 0), 0, Tag1 ("Astlib__Ast_407", 343)); (("Pstr_modtype", 947), ([(Tag3 ((("module_type_declaration", 7200)), 0, (0)), 100000000, 0, -3638)]), 0, (("astlib/ast_407.ml", 888, 30207, 30211), ("astlib/ast_407.ml", 888, 30207, 30252), 0), 0, Tag1 ("Astlib__Ast_407", 344)); (("Pstr_open", 948), ([(Tag3 ((("open_description", 7201)), 0, (0)), 100000000, 0, -3639)]), 0, (("astlib/ast_407.ml", 890, 30288, 30292), ("astlib/ast_407.ml", 890, 30288, 30323), 0), 0, Tag1 ("Astlib__Ast_407", 345)); (("Pstr_class", 949), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7193)), 0, (0)), 100000000, 0, -3641)], (0)), 100000000, 0, -3640)]), 0, (("astlib/ast_407.ml", 892, 30347, 30351), ("astlib/ast_407.ml", 892, 30347, 30389), 0), 0, Tag1 ("Astlib__Ast_407", 346)); (("Pstr_class_type", 950), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7186)), 0, (0)), 100000000, 0, -3643)], (0)), 100000000, 0, -3642)]), 0, (("astlib/ast_407.ml", 894, 30442, 30446), ("astlib/ast_407.ml", 894, 30442, 30494), 0), 0, Tag1 ("Astlib__Ast_407", 347)); (("Pstr_include", 951), ([(Tag3 ((("include_declaration", 7204)), 0, (0)), 100000000, 0, -3644)]), 0, (("astlib/ast_407.ml", 896, 30554, 30558), ("astlib/ast_407.ml", 896, 30554, 30595), 0), 0, Tag1 ("Astlib__Ast_407", 348)); (("Pstr_attribute", 952), ([(Tag3 ((("attribute", 7156)), 0, (0)), 100000000, 0, -3645)]), 0, (("astlib/ast_407.ml", 898, 30623, 30627), ("astlib/ast_407.ml", 898, 30623, 30656), 0), 0, Tag1 ("Astlib__Ast_407", 349)); (("Pstr_extension", 953), ([(Tag3 ((("extension", 7157)), 0, (0)), 100000000, 0, -3646); (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3647)]), 0, (("astlib/ast_407.ml", 900, 30681, 30685), ("astlib/ast_407.ml", 900, 30681, 30727), 0), 0, Tag1 ("Astlib__Ast_407", 350))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -3623)), 0, 0, 0, 0, (("astlib/ast_407.ml", 867, 29304, 29306), ("astlib/ast_407.ml", 900, 30681, 30727), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 101)), 2, 0); Tag1 (("value_binding", 7211), (0, 0, [[(("pvb_pat", 954), 0, (Tag3 ((("pattern", 7165)), 0, (0)), 100000000, 0, -3619), (("astlib/ast_407.ml", 905, 30822, 30828), ("astlib/ast_407.ml", 905, 30822, 30845), 0), 0, Tag1 ("Astlib__Ast_407", 351)); (("pvb_expr", 955), 0, (Tag3 ((("expression", 7167)), 0, (0)), 100000000, 0, -3620), (("astlib/ast_407.ml", 906, 30846, 30852), ("astlib/ast_407.ml", 906, 30846, 30873), 0), 0, Tag1 ("Astlib__Ast_407", 352)); (("pvb_attributes", 956), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3621), (("astlib/ast_407.ml", 907, 30874, 30880), ("astlib/ast_407.ml", 907, 30874, 30907), 0), 0, Tag1 ("Astlib__Ast_407", 353)); (("pvb_loc", 957), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3622), (("astlib/ast_407.ml", 908, 30908, 30914), ("astlib/ast_407.ml", 908, 30908, 30934), 0), 0, Tag1 ("Astlib__Ast_407", 354))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -3618)), 0, 0, 0, 0, (("astlib/ast_407.ml", 903, 30752, 30754), ("astlib/ast_407.ml", 909, 30935, 30940), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 102)), 2, 0); Tag1 (("module_binding", 7212), (0, 0, [[(("pmb_name", 958), 0, (Tag3 (Tag1 ((("Asttypes", 7140)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3614)], (0)), 100000000, 0, -3613), (("astlib/ast_407.ml", 913, 31016, 31023), ("astlib/ast_407.ml", 913, 31016, 31044), 0), 0, Tag1 ("Astlib__Ast_407", 355)); (("pmb_expr", 959), 0, (Tag3 ((("module_expr", 7206)), 0, (0)), 100000000, 0, -3615), (("astlib/ast_407.ml", 914, 31045, 31052), ("astlib/ast_407.ml", 914, 31045, 31074), 0), 0, Tag1 ("Astlib__Ast_407", 356)); (("pmb_attributes", 960), 0, (Tag3 ((("attributes", 7158)), 0, (0)), 100000000, 0, -3616), (("astlib/ast_407.ml", 915, 31075, 31082), ("astlib/ast_407.ml", 915, 31075, 31109), 0), 0, Tag1 ("Astlib__Ast_407", 357)); (("pmb_loc", 961), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -3617), (("astlib/ast_407.ml", 916, 31110, 31117), ("astlib/ast_407.ml", 916, 31110, 31137), 0), 0, Tag1 ("Astlib__Ast_407", 358))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -3612)), 0, 0, 0, 0, (("astlib/ast_407.ml", 911, 30942, 30944), ("astlib/ast_407.ml", 917, 31138, 31145), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 103)), 2, 0); Tag1 (("toplevel_phrase", 7213), (0, 0, Tag1 ([(("Ptop_def", 974), ([(Tag3 ((("structure", 7208)), 0, (0)), 100000000, 0, -3609)]), 0, (("astlib/ast_407.ml", 925, 31280, 31284), ("astlib/ast_407.ml", 925, 31280, 31307), 0), 0, Tag1 ("Astlib__Ast_407", 361)); (("Ptop_dir", 975), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3610); (Tag3 ((("directive_argument", 7214)), 0, (0)), 100000000, 0, -3611)]), 0, (("astlib/ast_407.ml", 926, 31308, 31312), ("astlib/ast_407.ml", 926, 31308, 31353), 0), 0, Tag1 ("Astlib__Ast_407", 362))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -3608)), 0, 0, 0, 0, (("astlib/ast_407.ml", 924, 31211, 31213), ("astlib/ast_407.ml", 926, 31308, 31353), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 359)), 1, 0); Tag1 (("directive_argument", 7214), (0, 0, Tag1 ([(("Pdir_none", 976), (0), 0, (("astlib/ast_407.ml", 930, 31458, 31462), ("astlib/ast_407.ml", 930, 31458, 31473), 0), 0, Tag1 ("Astlib__Ast_407", 363)); (("Pdir_string", 977), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3602)]), 0, (("astlib/ast_407.ml", 931, 31474, 31478), ("astlib/ast_407.ml", 931, 31474, 31501), 0), 0, Tag1 ("Astlib__Ast_407", 364)); (("Pdir_int", 978), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3603); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -3605)], (0)), 100000000, 0, -3604)]), 0, (("astlib/ast_407.ml", 932, 31502, 31506), ("astlib/ast_407.ml", 932, 31502, 31540), 0), 0, Tag1 ("Astlib__Ast_407", 365)); (("Pdir_ident", 979), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -3606)]), 0, (("astlib/ast_407.ml", 933, 31541, 31545), ("astlib/ast_407.ml", 933, 31541, 31572), 0), 0, Tag1 ("Astlib__Ast_407", 366)); (("Pdir_bool", 980), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -3607)]), 0, (("astlib/ast_407.ml", 934, 31573, 31577), ("astlib/ast_407.ml", 934, 31573, 31596), 0), 0, Tag1 ("Astlib__Ast_407", 367))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_407")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -3601)), 0, 0, 0, 0, (("astlib/ast_407.ml", 929, 31384, 31386), ("astlib/ast_407.ml", 934, 31573, 31596), 0), 0, 0, 0, Tag1 ("Astlib__Ast_407", 360)), 2, 0)]), 0, (("astlib/ast_407.ml", 75, 3051, 3051), ("astlib/ast_407.ml", 936, 31598, 31601), 0), Tag1 ("Astlib__Ast_407", 368)), 0, 0); Tag3 (("Config", 7142), 0, (Tag1 ([(("ast_impl_magic_number", 7215), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4204), 0, (("astlib/ast_407.ml", 939, 31626, 31632), ("astlib/ast_407.ml", 939, 31626, 31653), 0), 0, Tag1 ("Astlib__Ast_407", 369)), 0); (("ast_intf_magic_number", 7216), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4203), 0, (("astlib/ast_407.ml", 940, 31671, 31677), ("astlib/ast_407.ml", 940, 31671, 31698), 0), 0, Tag1 ("Astlib__Ast_407", 370)), 0)]), 0, (("astlib/ast_407.ml", 938, 31603, 31603), ("astlib/ast_407.ml", 941, 31716, 31719), 0), Tag1 ("Astlib__Ast_407", 371)), 0, 0)]), 0, (("astlib/astlib.ml", 30, 1488, 1488), ("astlib/astlib.ml", 30, 1488, 1512), 0), Tag1 ("Astlib", 5)), 0, 0); (("version", 7135), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -3575), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7136), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -3574), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7137), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -3555), 0), 100000000, 0, -3554), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -3571), 0), 100000000, 0, -3570), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -3573), 0), 100000000, 0, -3572), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -3565), 0), 100000000, 0, -3564), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -3537), 0), 100000000, 0, -3536), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -3551), 0), 100000000, 0, -3550), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -3541), 0), 100000000, 0, -3540), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -3563), 0), 100000000, 0, -3562), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -3549), 0), 100000000, 0, -3548), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -3547), 0), 100000000, 0, -3546), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -3545), 0), 100000000, 0, -3544), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -3543), 0), 100000000, 0, -3542), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -3559), 0), 100000000, 0, -3558), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -3567), 0), 100000000, 0, -3566), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -3561), 0), 100000000, 0, -3560), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -3539), 0), 100000000, 0, -3538), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -3553), 0), 100000000, 0, -3552), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -3569), 0), 100000000, 0, -3568), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7134)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -3557), 0), 100000000, 0, -3556), (0, 100000000, 0, -3535)), 100000000, 0, 572)), 100000000, 0, 573)), 100000000, 0, 574)), 100000000, 0, 575)), 100000000, 0, 576)), 100000000, 0, 577)), 100000000, 0, 578)), 100000000, 0, 579)), 100000000, 0, 580)), 100000000, 0, 581)), 100000000, 0, 582)), 100000000, 0, 583)), 100000000, 0, 584)), 100000000, 0, 585)), 100000000, 0, 586)), 100000000, 0, 587)), 100000000, 0, 588)), 100000000, 0, 589)), 100000000, 0, -3516), (0)), 100000000, 0, -3515)], (0)), 100000000, 0, -3514)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7138), ((("witnesses", 6673)), [((("_")), 100000000, 0, -3513)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7137)), 0, (0)), 100000000, 0, -3512)], (0)), 100000000, 0, -3511)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7139), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7137)), 0, (0)), 100000000, 0, -3510)], (0)), 100000000, 0, -3509), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 150, 5478, 5478), ("ast/versions.mli", 150, 5478, 5543), 0), Tag1 ("Ppxlib_ast__Versions", 39)), 0, 0); Tag3 (("OCaml_408", 6682), 0, (Tag1 ([Tag3 (("Ast", 7217), 0, (Tag1 ([Tag3 (("Asttypes", 7223), 0, (Tag1 ([Tag1 (("constant", 7226), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4288)]), 0, (("astlib/ast_408.ml", 34, 1850, 1856), ("astlib/ast_408.ml", 34, 1850, 1872), 0), 0, Tag1 ("Astlib__Ast_408", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -4289)]), 0, (("astlib/ast_408.ml", 35, 1873, 1877), ("astlib/ast_408.ml", 35, 1873, 1897), 0), 0, Tag1 ("Astlib__Ast_408", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4290); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4292)], (0)), 100000000, 0, -4291)]), 0, (("astlib/ast_408.ml", 36, 1898, 1902), ("astlib/ast_408.ml", 36, 1898, 1942), 0), 0, Tag1 ("Astlib__Ast_408", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4293)]), 0, (("astlib/ast_408.ml", 37, 1943, 1947), ("astlib/ast_408.ml", 37, 1943, 1970), 0), 0, Tag1 ("Astlib__Ast_408", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -4294)]), 0, (("astlib/ast_408.ml", 38, 1971, 1975), ("astlib/ast_408.ml", 38, 1971, 1997), 0), 0, Tag1 ("Astlib__Ast_408", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -4295)]), 0, (("astlib/ast_408.ml", 39, 1998, 2002), ("astlib/ast_408.ml", 39, 1998, 2024), 0), 0, Tag1 ("Astlib__Ast_408", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -4296)]), 0, (("astlib/ast_408.ml", 40, 2025, 2029), ("astlib/ast_408.ml", 40, 2025, 2059), 0), 0, Tag1 ("Astlib__Ast_408", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -4287)), 0, 0, 0, 0, (("astlib/ast_408.ml", 33, 1796, 1798), ("astlib/ast_408.ml", 40, 2025, 2059), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 0)), 1, 0); Tag1 (("rec_flag", 7227), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_408.ml", 42, 2061, 2115), ("astlib/ast_408.ml", 42, 2061, 2127), 0), 0, Tag1 ("Astlib__Ast_408", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_408.ml", 42, 2061, 2128), ("astlib/ast_408.ml", 42, 2061, 2139), 0), 0, Tag1 ("Astlib__Ast_408", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -4286)), 0, 0, 0, 0, (("astlib/ast_408.ml", 42, 2061, 2063), ("astlib/ast_408.ml", 42, 2061, 2139), 0), 0, 1, 0, Tag1 ("Astlib__Ast_408", 8)), 1, 0); Tag1 (("direction_flag", 7228), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_408.ml", 44, 2141, 2207), ("astlib/ast_408.ml", 44, 2141, 2211), 0), 0, Tag1 ("Astlib__Ast_408", 12)); (("Downto", 333), (0), 0, (("astlib/ast_408.ml", 44, 2141, 2212), ("astlib/ast_408.ml", 44, 2141, 2220), 0), 0, Tag1 ("Astlib__Ast_408", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -4285)), 0, 0, 0, 0, (("astlib/ast_408.ml", 44, 2141, 2143), ("astlib/ast_408.ml", 44, 2141, 2220), 0), 0, 1, 0, Tag1 ("Astlib__Ast_408", 11)), 1, 0); Tag1 (("private_flag", 7229), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_408.ml", 47, 2276, 2338), ("astlib/ast_408.ml", 47, 2276, 2345), 0), 0, Tag1 ("Astlib__Ast_408", 15)); (("Public", 336), (0), 0, (("astlib/ast_408.ml", 47, 2276, 2346), ("astlib/ast_408.ml", 47, 2276, 2354), 0), 0, Tag1 ("Astlib__Ast_408", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -4284)), 0, 0, 0, 0, (("astlib/ast_408.ml", 47, 2276, 2278), ("astlib/ast_408.ml", 47, 2276, 2354), 0), 0, 1, 0, Tag1 ("Astlib__Ast_408", 14)), 1, 0); Tag1 (("mutable_flag", 7230), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_408.ml", 49, 2356, 2418), ("astlib/ast_408.ml", 49, 2356, 2427), 0), 0, Tag1 ("Astlib__Ast_408", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_408.ml", 49, 2356, 2428), ("astlib/ast_408.ml", 49, 2356, 2437), 0), 0, Tag1 ("Astlib__Ast_408", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -4283)), 0, 0, 0, 0, (("astlib/ast_408.ml", 49, 2356, 2358), ("astlib/ast_408.ml", 49, 2356, 2437), 0), 0, 1, 0, Tag1 ("Astlib__Ast_408", 17)), 1, 0); Tag1 (("virtual_flag", 7231), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_408.ml", 51, 2439, 2501), ("astlib/ast_408.ml", 51, 2439, 2508), 0), 0, Tag1 ("Astlib__Ast_408", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_408.ml", 51, 2439, 2509), ("astlib/ast_408.ml", 51, 2439, 2519), 0), 0, Tag1 ("Astlib__Ast_408", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -4282)), 0, 0, 0, 0, (("astlib/ast_408.ml", 51, 2439, 2441), ("astlib/ast_408.ml", 51, 2439, 2519), 0), 0, 1, 0, Tag1 ("Astlib__Ast_408", 20)), 1, 0); Tag1 (("override_flag", 7232), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_408.ml", 53, 2521, 2585), ("astlib/ast_408.ml", 53, 2521, 2593), 0), 0, Tag1 ("Astlib__Ast_408", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_408.ml", 53, 2521, 2594), ("astlib/ast_408.ml", 53, 2521, 2601), 0), 0, Tag1 ("Astlib__Ast_408", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -4281)), 0, 0, 0, 0, (("astlib/ast_408.ml", 53, 2521, 2523), ("astlib/ast_408.ml", 53, 2521, 2601), 0), 0, 1, 0, Tag1 ("Astlib__Ast_408", 23)), 1, 0); Tag1 (("closed_flag", 7233), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_408.ml", 55, 2603, 2663), ("astlib/ast_408.ml", 55, 2603, 2669), 0), 0, Tag1 ("Astlib__Ast_408", 27)); (("Open", 348), (0), 0, (("astlib/ast_408.ml", 55, 2603, 2670), ("astlib/ast_408.ml", 55, 2603, 2676), 0), 0, Tag1 ("Astlib__Ast_408", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -4280)), 0, 0, 0, 0, (("astlib/ast_408.ml", 55, 2603, 2605), ("astlib/ast_408.ml", 55, 2603, 2676), 0), 0, 1, 0, Tag1 ("Astlib__Ast_408", 26)), 1, 0); Tag1 (("label", 7234), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4279)), 0, 0, 0, 0, (("astlib/ast_408.ml", 57, 2678, 2680), ("astlib/ast_408.ml", 57, 2678, 2699), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 29)), 1, 0); Tag1 (("arg_label", 7235), (0, 0, Tag1 ([(("Nolabel", 351), (0), 0, (("astlib/ast_408.ml", 60, 2757, 2763), ("astlib/ast_408.ml", 60, 2757, 2770), 0), 0, Tag1 ("Astlib__Ast_408", 31)); (("Labelled", 352), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4277)]), 0, (("astlib/ast_408.ml", 61, 2771, 2775), ("astlib/ast_408.ml", 61, 2771, 2795), 0), 0, Tag1 ("Astlib__Ast_408", 32)); (("Optional", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4278)]), 0, (("astlib/ast_408.ml", 62, 2818, 2822), ("astlib/ast_408.ml", 62, 2818, 2842), 0), 0, Tag1 ("Astlib__Ast_408", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -4276)), 0, 0, 0, 0, (("astlib/ast_408.ml", 59, 2701, 2703), ("astlib/ast_408.ml", 62, 2818, 2842), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 30)), 1, 0); Tag1 (("loc", 7236), ([((("a")), 100000000, 0, -4274)], 1, [[(("txt", 355), 0, ((("a")), 100000000, 0, -4274), (("astlib/ast_408.ml", 65, 2902, 2906), ("astlib/ast_408.ml", 65, 2902, 2915), 0), 0, Tag1 ("Astlib__Ast_408", 35)); (("loc", 365), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4275), (("astlib/ast_408.ml", 66, 2916, 2920), ("astlib/ast_408.ml", 66, 2916, 2937), 0), 0, Tag1 ("Astlib__Ast_408", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -4274)], (0)), 100000000, 0, -4273)), [25], [0], 0, 0, (("astlib/ast_408.ml", 64, 2866, 2868), ("astlib/ast_408.ml", 67, 2938, 2941), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 34)), 1, 0); Tag1 (("variance", 7237), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_408.ml", 71, 2998, 3002), ("astlib/ast_408.ml", 71, 2998, 3013), 0), 0, Tag1 ("Astlib__Ast_408", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_408.ml", 72, 3014, 3018), ("astlib/ast_408.ml", 72, 3014, 3033), 0), 0, Tag1 ("Astlib__Ast_408", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_408.ml", 73, 3034, 3038), ("astlib/ast_408.ml", 73, 3034, 3049), 0), 0, Tag1 ("Astlib__Ast_408", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -4272)), 0, 0, 0, 0, (("astlib/ast_408.ml", 70, 2944, 2946), ("astlib/ast_408.ml", 73, 3034, 3049), 0), 0, 1, 0, Tag1 ("Astlib__Ast_408", 37)), 1, 0)]), 0, (("astlib/ast_408.ml", 31, 1770, 1770), ("astlib/ast_408.ml", 75, 3051, 3054), 0), Tag1 ("Astlib__Ast_408", 41)), 0, 0); Tag3 (("Parsetree", 7224), 0, (Tag1 ([Tag1 (("constant", 7238), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4937); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -4939)], (0)), 100000000, 0, -4938)]), 0, (("astlib/ast_408.ml", 82, 3155, 3161), ("astlib/ast_408.ml", 82, 3155, 3199), 0), 0, Tag1 ("Astlib__Ast_408", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -4940)]), 0, (("astlib/ast_408.ml", 88, 3353, 3357), ("astlib/ast_408.ml", 88, 3353, 3378), 0), 0, Tag1 ("Astlib__Ast_408", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4941); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4943)], (0)), 100000000, 0, -4942)]), 0, (("astlib/ast_408.ml", 90, 3393, 3397), ("astlib/ast_408.ml", 90, 3393, 3438), 0), 0, Tag1 ("Astlib__Ast_408", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4944); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -4946)], (0)), 100000000, 0, -4945)]), 0, (("astlib/ast_408.ml", 94, 3500, 3504), ("astlib/ast_408.ml", 94, 3500, 3542), 0), 0, Tag1 ("Astlib__Ast_408", 46))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -4936)), 0, 0, 0, 0, (("astlib/ast_408.ml", 81, 3100, 3102), ("astlib/ast_408.ml", 94, 3500, 3542), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 42)), 1, 0); Tag1 (("attribute", 7239), (0, 0, [[(("attr_name", 716), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4933)], (0)), 100000000, 0, -4932), (("astlib/ast_408.ml", 104, 3768, 3772), ("astlib/ast_408.ml", 104, 3768, 3795), 0), 0, Tag1 ("Astlib__Ast_408", 116)); (("attr_payload", 717), 0, (Tag3 ((("payload", 7242)), 0, (0)), 100000000, 0, -4934), (("astlib/ast_408.ml", 105, 3796, 3800), ("astlib/ast_408.ml", 105, 3796, 3823), 0), 0, Tag1 ("Astlib__Ast_408", 117)); (("attr_loc", 718), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4935), (("astlib/ast_408.ml", 106, 3824, 3828), ("astlib/ast_408.ml", 106, 3824, 3850), 0), 0, Tag1 ("Astlib__Ast_408", 118))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "attribute"), 0, (0)), 100000000, 0, -4931)), 0, 0, 0, 0, (("astlib/ast_408.ml", 103, 3709, 3711), ("astlib/ast_408.ml", 107, 3851, 3854), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 47)), 1, 0); Tag1 (("extension", 7240), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4929)], (0)), 100000000, 0, -4928); (Tag3 ((("payload", 7242)), 0, (0)), 100000000, 0, -4930)]), 100000000, 0, -4927)), 0, 0, 0, 0, (("astlib/ast_408.ml", 115, 3994, 3996), ("astlib/ast_408.ml", 115, 3994, 4032), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 48)), 2, 0); Tag1 (("attributes", 7241), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 7239)), 0, (0)), 100000000, 0, -4926)], (0)), 100000000, 0, -4925)), 0, 0, 0, 0, (("astlib/ast_408.ml", 122, 4133, 4135), ("astlib/ast_408.ml", 122, 4133, 4166), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 49)), 2, 0); Tag1 (("payload", 7242), (0, 0, Tag1 ([(("PStr", 719), ([(Tag3 ((("structure", 7303)), 0, (0)), 100000000, 0, -4919)]), 0, (("astlib/ast_408.ml", 125, 4220, 4224), ("astlib/ast_408.ml", 125, 4220, 4243), 0), 0, Tag1 ("Astlib__Ast_408", 119)); (("PSig", 720), ([(Tag3 ((("signature", 7288)), 0, (0)), 100000000, 0, -4920)]), 0, (("astlib/ast_408.ml", 126, 4244, 4248), ("astlib/ast_408.ml", 126, 4244, 4267), 0), 0, Tag1 ("Astlib__Ast_408", 120)); (("PTyp", 721), ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4921)]), 0, (("astlib/ast_408.ml", 127, 4280, 4284), ("astlib/ast_408.ml", 127, 4280, 4303), 0), 0, Tag1 ("Astlib__Ast_408", 121)); (("PPat", 722), ([(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4922); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4924)], (0)), 100000000, 0, -4923)]), 0, (("astlib/ast_408.ml", 128, 4315, 4319), ("astlib/ast_408.ml", 128, 4315, 4356), 0), 0, Tag1 ("Astlib__Ast_408", 122))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -4918)), 0, 0, 0, 0, (("astlib/ast_408.ml", 124, 4168, 4170), ("astlib/ast_408.ml", 128, 4315, 4356), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 50)), 2, 0); Tag1 (("core_type", 7243), (0, 0, [[(("ptyp_desc", 723), 0, (Tag3 ((("core_type_desc", 7245)), 0, (0)), 100000000, 0, -4913), (("astlib/ast_408.ml", 136, 4501, 4507), ("astlib/ast_408.ml", 136, 4501, 4533), 0), 0, Tag1 ("Astlib__Ast_408", 123)); (("ptyp_loc", 724), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4914), (("astlib/ast_408.ml", 137, 4534, 4540), ("astlib/ast_408.ml", 137, 4534, 4561), 0), 0, Tag1 ("Astlib__Ast_408", 124)); (("ptyp_loc_stack", 725), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4916)], (0)), 100000000, 0, -4915), (("astlib/ast_408.ml", 138, 4562, 4568), ("astlib/ast_408.ml", 138, 4562, 4600), 0), 0, Tag1 ("Astlib__Ast_408", 125)); (("ptyp_attributes", 726), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4917), (("astlib/ast_408.ml", 139, 4601, 4607), ("astlib/ast_408.ml", 139, 4601, 4635), 0), 0, Tag1 ("Astlib__Ast_408", 126))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -4912)), 0, 0, 0, 0, (("astlib/ast_408.ml", 134, 4439, 4441), ("astlib/ast_408.ml", 140, 4660, 4665), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 51)), 2, 0); Tag1 (("typ", 7244), (0, 0, 0, 1, ((Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4911)), 0, 0, 0, 0, (("astlib/ast_408.ml", 142, 4667, 4669), ("astlib/ast_408.ml", 142, 4667, 4688), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 52)), 2, 0); Tag1 (("core_type_desc", 7245), (0, 0, Tag1 ([(("Ptyp_any", 727), (0), 0, (("astlib/ast_408.ml", 145, 4756, 4760), ("astlib/ast_408.ml", 145, 4756, 4770), 0), 0, Tag1 ("Astlib__Ast_408", 127)); (("Ptyp_var", 728), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4880)]), 0, (("astlib/ast_408.ml", 147, 4784, 4788), ("astlib/ast_408.ml", 147, 4784, 4808), 0), 0, Tag1 ("Astlib__Ast_408", 128)); (("Ptyp_arrow", 729), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "arg_label"), 0, (0)), 100000000, 0, -4881); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4882); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4883)]), 0, (("astlib/ast_408.ml", 149, 4822, 4826), ("astlib/ast_408.ml", 149, 4822, 4875), 0), 0, Tag1 ("Astlib__Ast_408", 129)); (("Ptyp_tuple", 730), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4885)], (0)), 100000000, 0, -4884)]), 0, (("astlib/ast_408.ml", 154, 4974, 4978), ("astlib/ast_408.ml", 154, 4974, 5008), 0), 0, Tag1 ("Astlib__Ast_408", 130)); (("Ptyp_constr", 731), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4887)], (0)), 100000000, 0, -4886); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4889)], (0)), 100000000, 0, -4888)]), 0, (("astlib/ast_408.ml", 159, 5063, 5067), ("astlib/ast_408.ml", 159, 5063, 5116), 0), 0, Tag1 ("Astlib__Ast_408", 131)); (("Ptyp_object", 735), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 7249)), 0, (0)), 100000000, 0, -4891)], (0)), 100000000, 0, -4890); (Tag3 (Tag1 ((("Asttypes", 7223)), "closed_flag"), 0, (0)), 100000000, 0, -4892)]), 0, (("astlib/ast_408.ml", 164, 5185, 5189), ("astlib/ast_408.ml", 164, 5185, 5237), 0), 0, Tag1 ("Astlib__Ast_408", 132)); (("Ptyp_class", 736), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4894)], (0)), 100000000, 0, -4893); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4896)], (0)), 100000000, 0, -4895)]), 0, (("astlib/ast_408.ml", 168, 5341, 5345), ("astlib/ast_408.ml", 168, 5341, 5393), 0), 0, Tag1 ("Astlib__Ast_408", 133)); (("Ptyp_alias", 737), ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4897); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4898)]), 0, (("astlib/ast_408.ml", 173, 5465, 5469), ("astlib/ast_408.ml", 173, 5465, 5503), 0), 0, Tag1 ("Astlib__Ast_408", 134)); (("Ptyp_variant", 738), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 7247)), 0, (0)), 100000000, 0, -4900)], (0)), 100000000, 0, -4899); (Tag3 (Tag1 ((("Asttypes", 7223)), "closed_flag"), 0, (0)), 100000000, 0, -4901); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4904)], (0)), 100000000, 0, -4903)], (0)), 100000000, 0, -4902)]), 0, (("astlib/ast_408.ml", 175, 5522, 5526), ("astlib/ast_408.ml", 175, 5522, 5592), 0), 0, Tag1 ("Astlib__Ast_408", 135)); (("Ptyp_poly", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4907)], (0)), 100000000, 0, -4906)], (0)), 100000000, 0, -4905); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4908)]), 0, (("astlib/ast_408.ml", 181, 5837, 5841), ("astlib/ast_408.ml", 181, 5837, 5883), 0), 0, Tag1 ("Astlib__Ast_408", 136)); (("Ptyp_package", 740), ([(Tag3 ((("package_type", 7246)), 0, (0)), 100000000, 0, -4909)]), 0, (("astlib/ast_408.ml", 201, 6366, 6370), ("astlib/ast_408.ml", 201, 6366, 6400), 0), 0, Tag1 ("Astlib__Ast_408", 137)); (("Ptyp_extension", 741), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4910)]), 0, (("astlib/ast_408.ml", 203, 6422, 6426), ("astlib/ast_408.ml", 203, 6422, 6455), 0), 0, Tag1 ("Astlib__Ast_408", 138))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -4879)), 0, 0, 0, 0, (("astlib/ast_408.ml", 144, 4690, 4692), ("astlib/ast_408.ml", 203, 6422, 6455), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 53)), 2, 0); Tag1 (("package_type", 7246), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4873)], (0)), 100000000, 0, -4872); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4877)], (0)), 100000000, 0, -4876); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4878)]), 100000000, 0, -4875)], (0)), 100000000, 0, -4874)]), 100000000, 0, -4871)), 0, 0, 0, 0, (("astlib/ast_408.ml", 206, 6473, 6475), ("astlib/ast_408.ml", 206, 6473, 6546), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 54)), 2, 0); Tag1 (("row_field", 7247), (0, 0, [[(("prf_desc", 742), 0, (Tag3 ((("row_field_desc", 7248)), 0, (0)), 100000000, 0, -4868), (("astlib/ast_408.ml", 213, 6690, 6694), ("astlib/ast_408.ml", 213, 6690, 6720), 0), 0, Tag1 ("Astlib__Ast_408", 139)); (("prf_loc", 743), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4869), (("astlib/ast_408.ml", 214, 6721, 6725), ("astlib/ast_408.ml", 214, 6721, 6746), 0), 0, Tag1 ("Astlib__Ast_408", 140)); (("prf_attributes", 744), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4870), (("astlib/ast_408.ml", 215, 6747, 6751), ("astlib/ast_408.ml", 215, 6747, 6779), 0), 0, Tag1 ("Astlib__Ast_408", 141))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -4867)), 0, 0, 0, 0, (("astlib/ast_408.ml", 212, 6632, 6634), ("astlib/ast_408.ml", 216, 6780, 6783), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 55)), 2, 0); Tag1 (("row_field_desc", 7248), (0, 0, Tag1 ([(("Rtag", 745), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4862)], (0)), 100000000, 0, -4861); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4863); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4865)], (0)), 100000000, 0, -4864)]), 0, (("astlib/ast_408.ml", 219, 6851, 6855), ("astlib/ast_408.ml", 219, 6851, 6898), 0), 0, Tag1 ("Astlib__Ast_408", 142)); (("Rinherit", 746), ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4866)]), 0, (("astlib/ast_408.ml", 230, 7297, 7301), ("astlib/ast_408.ml", 230, 7297, 7324), 0), 0, Tag1 ("Astlib__Ast_408", 143))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "row_field_desc"), 0, (0)), 100000000, 0, -4860)), 0, 0, 0, 0, (("astlib/ast_408.ml", 218, 6785, 6787), ("astlib/ast_408.ml", 230, 7297, 7324), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 56)), 2, 0); Tag1 (("object_field", 7249), (0, 0, [[(("pof_desc", 747), 0, (Tag3 ((("object_field_desc", 7250)), 0, (0)), 100000000, 0, -4857), (("astlib/ast_408.ml", 234, 7406, 7410), ("astlib/ast_408.ml", 234, 7406, 7439), 0), 0, Tag1 ("Astlib__Ast_408", 144)); (("pof_loc", 748), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4858), (("astlib/ast_408.ml", 235, 7440, 7444), ("astlib/ast_408.ml", 235, 7440, 7465), 0), 0, Tag1 ("Astlib__Ast_408", 145)); (("pof_attributes", 749), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4859), (("astlib/ast_408.ml", 236, 7466, 7470), ("astlib/ast_408.ml", 236, 7466, 7498), 0), 0, Tag1 ("Astlib__Ast_408", 146))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "object_field"), 0, (0)), 100000000, 0, -4856)), 0, 0, 0, 0, (("astlib/ast_408.ml", 233, 7342, 7344), ("astlib/ast_408.ml", 237, 7499, 7502), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 57)), 2, 0); Tag1 (("object_field_desc", 7250), (0, 0, Tag1 ([(("Otag", 750), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4853)], (0)), 100000000, 0, -4852); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4854)]), 0, (("astlib/ast_408.ml", 240, 7576, 7580), ("astlib/ast_408.ml", 240, 7576, 7611), 0), 0, Tag1 ("Astlib__Ast_408", 147)); (("Oinherit", 751), ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4855)]), 0, (("astlib/ast_408.ml", 241, 7612, 7616), ("astlib/ast_408.ml", 241, 7612, 7639), 0), 0, Tag1 ("Astlib__Ast_408", 148))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "object_field_desc"), 0, (0)), 100000000, 0, -4851)), 0, 0, 0, 0, (("astlib/ast_408.ml", 239, 7504, 7506), ("astlib/ast_408.ml", 241, 7612, 7639), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 58)), 2, 0); Tag1 (("pattern", 7251), (0, 0, [[(("ppat_desc", 752), 0, (Tag3 ((("pattern_desc", 7253)), 0, (0)), 100000000, 0, -4846), (("astlib/ast_408.ml", 247, 7717, 7723), ("astlib/ast_408.ml", 247, 7717, 7747), 0), 0, Tag1 ("Astlib__Ast_408", 149)); (("ppat_loc", 753), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4847), (("astlib/ast_408.ml", 248, 7748, 7754), ("astlib/ast_408.ml", 248, 7748, 7775), 0), 0, Tag1 ("Astlib__Ast_408", 150)); (("ppat_loc_stack", 754), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4849)], (0)), 100000000, 0, -4848), (("astlib/ast_408.ml", 249, 7776, 7782), ("astlib/ast_408.ml", 249, 7776, 7814), 0), 0, Tag1 ("Astlib__Ast_408", 151)); (("ppat_attributes", 755), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4850), (("astlib/ast_408.ml", 250, 7815, 7821), ("astlib/ast_408.ml", 250, 7815, 7849), 0), 0, Tag1 ("Astlib__Ast_408", 152))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -4845)), 0, 0, 0, 0, (("astlib/ast_408.ml", 245, 7659, 7661), ("astlib/ast_408.ml", 251, 7874, 7879), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 59)), 2, 0); Tag1 (("pat", 7252), (0, 0, 0, 1, ((Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4844)), 0, 0, 0, 0, (("astlib/ast_408.ml", 253, 7881, 7883), ("astlib/ast_408.ml", 253, 7881, 7900), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 60)), 2, 0); Tag1 (("pattern_desc", 7253), (0, 0, Tag1 ([(("Ppat_any", 756), (0), 0, (("astlib/ast_408.ml", 256, 7964, 7968), ("astlib/ast_408.ml", 256, 7964, 7978), 0), 0, Tag1 ("Astlib__Ast_408", 153)); (("Ppat_var", 757), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4806)], (0)), 100000000, 0, -4805)]), 0, (("astlib/ast_408.ml", 258, 7991, 7995), ("astlib/ast_408.ml", 258, 7991, 8019), 0), 0, Tag1 ("Astlib__Ast_408", 154)); (("Ppat_alias", 758), ([(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4807); (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4809)], (0)), 100000000, 0, -4808)]), 0, (("astlib/ast_408.ml", 260, 8032, 8036), ("astlib/ast_408.ml", 260, 8032, 8072), 0), 0, Tag1 ("Astlib__Ast_408", 155)); (("Ppat_constant", 759), ([(Tag3 ((("constant", 7238)), 0, (0)), 100000000, 0, -4810)]), 0, (("astlib/ast_408.ml", 262, 8091, 8095), ("astlib/ast_408.ml", 262, 8091, 8122), 0), 0, Tag1 ("Astlib__Ast_408", 156)); (("Ppat_interval", 760), ([(Tag3 ((("constant", 7238)), 0, (0)), 100000000, 0, -4811); (Tag3 ((("constant", 7238)), 0, (0)), 100000000, 0, -4812)]), 0, (("astlib/ast_408.ml", 264, 8165, 8169), ("astlib/ast_408.ml", 264, 8165, 8207), 0), 0, Tag1 ("Astlib__Ast_408", 157)); (("Ppat_tuple", 761), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4814)], (0)), 100000000, 0, -4813)]), 0, (("astlib/ast_408.ml", 269, 8329, 8333), ("astlib/ast_408.ml", 269, 8329, 8361), 0), 0, Tag1 ("Astlib__Ast_408", 158)); (("Ppat_construct", 762), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4816)], (0)), 100000000, 0, -4815); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4818)], (0)), 100000000, 0, -4817)]), 0, (("astlib/ast_408.ml", 274, 8416, 8420), ("astlib/ast_408.ml", 274, 8416, 8472), 0), 0, Tag1 ("Astlib__Ast_408", 159)); (("Ppat_variant", 763), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4819); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4821)], (0)), 100000000, 0, -4820)]), 0, (("astlib/ast_408.ml", 279, 8596, 8600), ("astlib/ast_408.ml", 279, 8596, 8640), 0), 0, Tag1 ("Astlib__Ast_408", 160)); (("Ppat_record", 764), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4825)], (0)), 100000000, 0, -4824); (Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4826)]), 100000000, 0, -4823)], (0)), 100000000, 0, -4822); (Tag3 (Tag1 ((("Asttypes", 7223)), "closed_flag"), 0, (0)), 100000000, 0, -4827)]), 0, (("astlib/ast_408.ml", 283, 8708, 8712), ("astlib/ast_408.ml", 283, 8708, 8775), 0), 0, Tag1 ("Astlib__Ast_408", 161)); (("Ppat_array", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4829)], (0)), 100000000, 0, -4828)]), 0, (("astlib/ast_408.ml", 289, 8904, 8908), ("astlib/ast_408.ml", 289, 8904, 8936), 0), 0, Tag1 ("Astlib__Ast_408", 162)); (("Ppat_or", 766), ([(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4830); (Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4831)]), 0, (("astlib/ast_408.ml", 291, 8965, 8969), ("astlib/ast_408.ml", 291, 8965, 8999), 0), 0, Tag1 ("Astlib__Ast_408", 163)); (("Ppat_constraint", 767), ([(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4832); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4833)]), 0, (("astlib/ast_408.ml", 293, 9018, 9022), ("astlib/ast_408.ml", 293, 9018, 9062), 0), 0, Tag1 ("Astlib__Ast_408", 164)); (("Ppat_type", 768), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4835)], (0)), 100000000, 0, -4834)]), 0, (("astlib/ast_408.ml", 295, 9081, 9085), ("astlib/ast_408.ml", 295, 9081, 9115), 0), 0, Tag1 ("Astlib__Ast_408", 165)); (("Ppat_lazy", 769), ([(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4836)]), 0, (("astlib/ast_408.ml", 297, 9134, 9138), ("astlib/ast_408.ml", 297, 9134, 9160), 0), 0, Tag1 ("Astlib__Ast_408", 166)); (("Ppat_unpack", 770), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4838)], (0)), 100000000, 0, -4837)]), 0, (("astlib/ast_408.ml", 299, 9178, 9182), ("astlib/ast_408.ml", 299, 9178, 9209), 0), 0, Tag1 ("Astlib__Ast_408", 167)); (("Ppat_exception", 771), ([(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4839)]), 0, (("astlib/ast_408.ml", 304, 9331, 9335), ("astlib/ast_408.ml", 304, 9331, 9362), 0), 0, Tag1 ("Astlib__Ast_408", 168)); (("Ppat_extension", 772), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4840)]), 0, (("astlib/ast_408.ml", 306, 9385, 9389), ("astlib/ast_408.ml", 306, 9385, 9418), 0), 0, Tag1 ("Astlib__Ast_408", 169)); (("Ppat_open", 773), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4842)], (0)), 100000000, 0, -4841); (Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4843)]), 0, (("astlib/ast_408.ml", 308, 9435, 9439), ("astlib/ast_408.ml", 308, 9435, 9479), 0), 0, Tag1 ("Astlib__Ast_408", 170))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -4804)), 0, 0, 0, 0, (("astlib/ast_408.ml", 255, 7902, 7904), ("astlib/ast_408.ml", 308, 9435, 9479), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 61)), 2, 0); Tag1 (("expression", 7254), (0, 0, [[(("pexp_desc", 774), 0, (Tag3 ((("expression_desc", 7256)), 0, (0)), 100000000, 0, -4799), (("astlib/ast_408.ml", 315, 9588, 9594), ("astlib/ast_408.ml", 315, 9588, 9621), 0), 0, Tag1 ("Astlib__Ast_408", 171)); (("pexp_loc", 775), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4800), (("astlib/ast_408.ml", 316, 9622, 9628), ("astlib/ast_408.ml", 316, 9622, 9649), 0), 0, Tag1 ("Astlib__Ast_408", 172)); (("pexp_loc_stack", 776), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4802)], (0)), 100000000, 0, -4801), (("astlib/ast_408.ml", 317, 9650, 9656), ("astlib/ast_408.ml", 317, 9650, 9688), 0), 0, Tag1 ("Astlib__Ast_408", 173)); (("pexp_attributes", 777), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4803), (("astlib/ast_408.ml", 318, 9689, 9695), ("astlib/ast_408.ml", 318, 9689, 9723), 0), 0, Tag1 ("Astlib__Ast_408", 174))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -4798)), 0, 0, 0, 0, (("astlib/ast_408.ml", 313, 9524, 9526), ("astlib/ast_408.ml", 319, 9748, 9753), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 62)), 2, 0); Tag1 (("expr", 7255), (0, 0, 0, 1, ((Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4797)), 0, 0, 0, 0, (("astlib/ast_408.ml", 321, 9755, 9757), ("astlib/ast_408.ml", 321, 9755, 9778), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 63)), 2, 0); Tag1 (("expression_desc", 7256), (0, 0, Tag1 ([(("Pexp_ident", 778), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4699)], (0)), 100000000, 0, -4698)]), 0, (("astlib/ast_408.ml", 324, 9848, 9852), ("astlib/ast_408.ml", 324, 9848, 9883), 0), 0, Tag1 ("Astlib__Ast_408", 175)); (("Pexp_constant", 779), ([(Tag3 ((("constant", 7238)), 0, (0)), 100000000, 0, -4700)]), 0, (("astlib/ast_408.ml", 328, 9911, 9915), ("astlib/ast_408.ml", 328, 9911, 9942), 0), 0, Tag1 ("Astlib__Ast_408", 176)); (("Pexp_let", 780), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "rec_flag"), 0, (0)), 100000000, 0, -4701); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7306)), 0, (0)), 100000000, 0, -4703)], (0)), 100000000, 0, -4702); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4704)]), 0, (("astlib/ast_408.ml", 330, 9985, 9989), ("astlib/ast_408.ml", 330, 9985, 10045), 0), 0, Tag1 ("Astlib__Ast_408", 177)); (("Pexp_function", 781), ([(Tag3 ((("cases", 7258)), 0, (0)), 100000000, 0, -4705)]), 0, (("astlib/ast_408.ml", 334, 10194, 10198), ("astlib/ast_408.ml", 334, 10194, 10222), 0), 0, Tag1 ("Astlib__Ast_408", 178)); (("Pexp_fun", 782), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "arg_label"), 0, (0)), 100000000, 0, -4706); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4708)], (0)), 100000000, 0, -4707); (Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4709); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4710)]), 0, (("astlib/ast_408.ml", 336, 10268, 10272), ("astlib/ast_408.ml", 336, 10268, 10338), 0), 0, Tag1 ("Astlib__Ast_408", 179)); (("Pexp_apply", 783), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4711); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "arg_label"), 0, (0)), 100000000, 0, -4714); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4715)]), 100000000, 0, -4713)], (0)), 100000000, 0, -4712)]), 0, (("astlib/ast_408.ml", 347, 10788, 10792), ("astlib/ast_408.ml", 347, 10788, 10850), 0), 0, Tag1 ("Astlib__Ast_408", 180)); (("Pexp_match", 784), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4716); (Tag3 ((("cases", 7258)), 0, (0)), 100000000, 0, -4717)]), 0, (("astlib/ast_408.ml", 354, 11003, 11007), ("astlib/ast_408.ml", 354, 11003, 11041), 0), 0, Tag1 ("Astlib__Ast_408", 181)); (("Pexp_try", 785), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4718); (Tag3 ((("cases", 7258)), 0, (0)), 100000000, 0, -4719)]), 0, (("astlib/ast_408.ml", 356, 11092, 11096), ("astlib/ast_408.ml", 356, 11092, 11128), 0), 0, Tag1 ("Astlib__Ast_408", 182)); (("Pexp_tuple", 786), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4721)], (0)), 100000000, 0, -4720)]), 0, (("astlib/ast_408.ml", 358, 11177, 11181), ("astlib/ast_408.ml", 358, 11177, 11212), 0), 0, Tag1 ("Astlib__Ast_408", 183)); (("Pexp_construct", 787), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4723)], (0)), 100000000, 0, -4722); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4725)], (0)), 100000000, 0, -4724)]), 0, (("astlib/ast_408.ml", 363, 11267, 11271), ("astlib/ast_408.ml", 363, 11267, 11326), 0), 0, Tag1 ("Astlib__Ast_408", 184)); (("Pexp_variant", 788), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4726); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4728)], (0)), 100000000, 0, -4727)]), 0, (("astlib/ast_408.ml", 368, 11447, 11451), ("astlib/ast_408.ml", 368, 11447, 11494), 0), 0, Tag1 ("Astlib__Ast_408", 185)); (("Pexp_record", 789), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4732)], (0)), 100000000, 0, -4731); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4733)]), 100000000, 0, -4730)], (0)), 100000000, 0, -4729); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4735)], (0)), 100000000, 0, -4734)]), 0, (("astlib/ast_408.ml", 372, 11562, 11566), ("astlib/ast_408.ml", 372, 11562, 11638), 0), 0, Tag1 ("Astlib__Ast_408", 186)); (("Pexp_field", 790), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4736); (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4738)], (0)), 100000000, 0, -4737)]), 0, (("astlib/ast_408.ml", 378, 11760, 11764), ("astlib/ast_408.ml", 378, 11760, 11808), 0), 0, Tag1 ("Astlib__Ast_408", 187)); (("Pexp_setfield", 791), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4739); (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4741)], (0)), 100000000, 0, -4740); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4742)]), 0, (("astlib/ast_408.ml", 380, 11823, 11827), ("astlib/ast_408.ml", 380, 11823, 11887), 0), 0, Tag1 ("Astlib__Ast_408", 188)); (("Pexp_array", 792), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4744)], (0)), 100000000, 0, -4743)]), 0, (("astlib/ast_408.ml", 382, 11909, 11913), ("astlib/ast_408.ml", 382, 11909, 11944), 0), 0, Tag1 ("Astlib__Ast_408", 189)); (("Pexp_ifthenelse", 793), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4745); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4746); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4748)], (0)), 100000000, 0, -4747)]), 0, (("astlib/ast_408.ml", 384, 11973, 11977), ("astlib/ast_408.ml", 384, 11973, 12041), 0), 0, Tag1 ("Astlib__Ast_408", 190)); (("Pexp_sequence", 794), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4749); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4750)]), 0, (("astlib/ast_408.ml", 386, 12074, 12078), ("astlib/ast_408.ml", 386, 12074, 12120), 0), 0, Tag1 ("Astlib__Ast_408", 191)); (("Pexp_while", 795), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4751); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4752)]), 0, (("astlib/ast_408.ml", 388, 12138, 12142), ("astlib/ast_408.ml", 388, 12138, 12181), 0), 0, Tag1 ("Astlib__Ast_408", 192)); (("Pexp_for", 796), ([(Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4753); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4754); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4755); (Tag3 (Tag1 ((("Asttypes", 7223)), "direction_flag"), 0, (0)), 100000000, 0, -4756); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4757)]), 0, (("astlib/ast_408.ml", 390, 12212, 12216), ("astlib/ast_408.ml", 391, 12230, 12302), 0), 0, Tag1 ("Astlib__Ast_408", 193)); (("Pexp_constraint", 797), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4758); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4759)]), 0, (("astlib/ast_408.ml", 395, 12420, 12424), ("astlib/ast_408.ml", 395, 12420, 12467), 0), 0, Tag1 ("Astlib__Ast_408", 194)); (("Pexp_coerce", 798), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4760); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4762)], (0)), 100000000, 0, -4761); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4763)]), 0, (("astlib/ast_408.ml", 397, 12486, 12490), ("astlib/ast_408.ml", 397, 12486, 12548), 0), 0, Tag1 ("Astlib__Ast_408", 195)); (("Pexp_send", 799), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4764); (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4766)], (0)), 100000000, 0, -4765)]), 0, (("astlib/ast_408.ml", 401, 12625, 12629), ("astlib/ast_408.ml", 401, 12625, 12666), 0), 0, Tag1 ("Astlib__Ast_408", 196)); (("Pexp_new", 800), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4768)], (0)), 100000000, 0, -4767)]), 0, (("astlib/ast_408.ml", 403, 12684, 12688), ("astlib/ast_408.ml", 403, 12684, 12717), 0), 0, Tag1 ("Astlib__Ast_408", 197)); (("Pexp_setinstvar", 801), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4770)], (0)), 100000000, 0, -4769); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4771)]), 0, (("astlib/ast_408.ml", 405, 12736, 12740), ("astlib/ast_408.ml", 405, 12736, 12783), 0), 0, Tag1 ("Astlib__Ast_408", 198)); (("Pexp_override", 802), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4775)], (0)), 100000000, 0, -4774); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4776)]), 100000000, 0, -4773)], (0)), 100000000, 0, -4772)]), 0, (("astlib/ast_408.ml", 407, 12801, 12805), ("astlib/ast_408.ml", 407, 12801, 12853), 0), 0, Tag1 ("Astlib__Ast_408", 199)); (("Pexp_letmodule", 803), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4778)], (0)), 100000000, 0, -4777); (Tag3 ((("module_expr", 7301)), 0, (0)), 100000000, 0, -4779); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4780)]), 0, (("astlib/ast_408.ml", 409, 12892, 12896), ("astlib/ast_408.ml", 409, 12892, 12953), 0), 0, Tag1 ("Astlib__Ast_408", 200)); (("Pexp_letexception", 804), ([(Tag3 ((("extension_constructor", 7268)), 0, (0)), 100000000, 0, -4781); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4782)]), 0, (("astlib/ast_408.ml", 411, 12987, 12991), ("astlib/ast_408.ml", 411, 12987, 13048), 0), 0, Tag1 ("Astlib__Ast_408", 201)); (("Pexp_assert", 805), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4783)]), 0, (("astlib/ast_408.ml", 413, 13080, 13084), ("astlib/ast_408.ml", 413, 13080, 13111), 0), 0, Tag1 ("Astlib__Ast_408", 202)); (("Pexp_lazy", 806), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4784)]), 0, (("astlib/ast_408.ml", 417, 13215, 13219), ("astlib/ast_408.ml", 417, 13215, 13244), 0), 0, Tag1 ("Astlib__Ast_408", 203)); (("Pexp_poly", 807), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4785); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4787)], (0)), 100000000, 0, -4786)]), 0, (("astlib/ast_408.ml", 419, 13262, 13266), ("astlib/ast_408.ml", 419, 13262, 13310), 0), 0, Tag1 ("Astlib__Ast_408", 204)); (("Pexp_object", 808), ([(Tag3 ((("class_structure", 7281)), 0, (0)), 100000000, 0, -4788)]), 0, (("astlib/ast_408.ml", 424, 13440, 13444), ("astlib/ast_408.ml", 424, 13440, 13476), 0), 0, Tag1 ("Astlib__Ast_408", 205)); (("Pexp_newtype", 809), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4790)], (0)), 100000000, 0, -4789); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4791)]), 0, (("astlib/ast_408.ml", 426, 13502, 13506), ("astlib/ast_408.ml", 426, 13502, 13547), 0), 0, Tag1 ("Astlib__Ast_408", 206)); (("Pexp_pack", 810), ([(Tag3 ((("module_expr", 7301)), 0, (0)), 100000000, 0, -4792)]), 0, (("astlib/ast_408.ml", 428, 13576, 13580), ("astlib/ast_408.ml", 428, 13576, 13606), 0), 0, Tag1 ("Astlib__Ast_408", 207)); (("Pexp_open", 811), ([(Tag3 ((("open_declaration", 7296)), 0, (0)), 100000000, 0, -4793); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4794)]), 0, (("astlib/ast_408.ml", 433, 13721, 13725), ("astlib/ast_408.ml", 433, 13721, 13769), 0), 0, Tag1 ("Astlib__Ast_408", 208)); (("Pexp_letop", 812), ([(Tag3 ((("letop", 7259)), 0, (0)), 100000000, 0, -4795)]), 0, (("astlib/ast_408.ml", 437, 13833, 13837), ("astlib/ast_408.ml", 437, 13833, 13858), 0), 0, Tag1 ("Astlib__Ast_408", 209)); (("Pexp_extension", 813), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4796)]), 0, (("astlib/ast_408.ml", 440, 13919, 13923), ("astlib/ast_408.ml", 440, 13919, 13952), 0), 0, Tag1 ("Astlib__Ast_408", 210)); (("Pexp_unreachable", 814), (0), 0, (("astlib/ast_408.ml", 442, 13969, 13973), ("astlib/ast_408.ml", 442, 13969, 13991), 0), 0, Tag1 ("Astlib__Ast_408", 211))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -4697)), 0, 0, 0, 0, (("astlib/ast_408.ml", 323, 9780, 9782), ("astlib/ast_408.ml", 442, 13969, 13991), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 64)), 2, 0); Tag1 (("case", 7257), (0, 0, [[(("pc_lhs", 815), 0, (Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4693), (("astlib/ast_408.ml", 447, 14094, 14100), ("astlib/ast_408.ml", 447, 14094, 14116), 0), 0, Tag1 ("Astlib__Ast_408", 212)); (("pc_guard", 816), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4695)], (0)), 100000000, 0, -4694), (("astlib/ast_408.ml", 448, 14117, 14123), ("astlib/ast_408.ml", 448, 14117, 14151), 0), 0, Tag1 ("Astlib__Ast_408", 213)); (("pc_rhs", 817), 0, (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4696), (("astlib/ast_408.ml", 449, 14152, 14158), ("astlib/ast_408.ml", 449, 14152, 14177), 0), 0, Tag1 ("Astlib__Ast_408", 214))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -4692)), 0, 0, 0, 0, (("astlib/ast_408.ml", 445, 14005, 14007), ("astlib/ast_408.ml", 450, 14178, 14183), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 65)), 2, 0); Tag1 (("cases", 7258), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7257)), 0, (0)), 100000000, 0, -4691)], (0)), 100000000, 0, -4690)), 0, 0, 0, 0, (("astlib/ast_408.ml", 452, 14185, 14187), ("astlib/ast_408.ml", 452, 14185, 14208), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 66)), 2, 0); Tag1 (("letop", 7259), (0, 0, [[(("let_", 818), 0, (Tag3 ((("binding_op", 7260)), 0, (0)), 100000000, 0, -4686), (("astlib/ast_408.ml", 456, 14264, 14270), ("astlib/ast_408.ml", 456, 14264, 14288), 0), 0, Tag1 ("Astlib__Ast_408", 215)); (("ands", 819), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binding_op", 7260)), 0, (0)), 100000000, 0, -4688)], (0)), 100000000, 0, -4687), (("astlib/ast_408.ml", 457, 14289, 14295), ("astlib/ast_408.ml", 457, 14289, 14318), 0), 0, Tag1 ("Astlib__Ast_408", 216)); (("body", 820), 0, (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4689), (("astlib/ast_408.ml", 458, 14319, 14325), ("astlib/ast_408.ml", 458, 14319, 14343), 0), 0, Tag1 ("Astlib__Ast_408", 217))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "letop"), 0, (0)), 100000000, 0, -4685)), 0, 0, 0, 0, (("astlib/ast_408.ml", 454, 14210, 14212), ("astlib/ast_408.ml", 459, 14344, 14349), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 67)), 2, 0); Tag1 (("binding_op", 7260), (0, 0, [[(("pbop_op", 821), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4681)], (0)), 100000000, 0, -4680), (("astlib/ast_408.ml", 463, 14415, 14421), ("astlib/ast_408.ml", 463, 14415, 14442), 0), 0, Tag1 ("Astlib__Ast_408", 218)); (("pbop_pat", 822), 0, (Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4682), (("astlib/ast_408.ml", 464, 14443, 14449), ("astlib/ast_408.ml", 464, 14443, 14468), 0), 0, Tag1 ("Astlib__Ast_408", 219)); (("pbop_exp", 823), 0, (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4683), (("astlib/ast_408.ml", 465, 14469, 14475), ("astlib/ast_408.ml", 465, 14469, 14497), 0), 0, Tag1 ("Astlib__Ast_408", 220)); (("pbop_loc", 824), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4684), (("astlib/ast_408.ml", 466, 14498, 14504), ("astlib/ast_408.ml", 466, 14498, 14526), 0), 0, Tag1 ("Astlib__Ast_408", 221))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "binding_op"), 0, (0)), 100000000, 0, -4679)), 0, 0, 0, 0, (("astlib/ast_408.ml", 461, 14351, 14353), ("astlib/ast_408.ml", 467, 14527, 14532), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 68)), 2, 0); Tag1 (("value_description", 7261), (0, 0, [[(("pval_name", 825), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4673)], (0)), 100000000, 0, -4672), (("astlib/ast_408.ml", 473, 14640, 14646), ("astlib/ast_408.ml", 473, 14640, 14668), 0), 0, Tag1 ("Astlib__Ast_408", 222)); (("pval_type", 826), 0, (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4674), (("astlib/ast_408.ml", 474, 14669, 14675), ("astlib/ast_408.ml", 474, 14669, 14696), 0), 0, Tag1 ("Astlib__Ast_408", 223)); (("pval_prim", 827), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4676)], (0)), 100000000, 0, -4675), (("astlib/ast_408.ml", 475, 14697, 14703), ("astlib/ast_408.ml", 475, 14697, 14726), 0), 0, Tag1 ("Astlib__Ast_408", 224)); (("pval_attributes", 828), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4677), (("astlib/ast_408.ml", 476, 14727, 14733), ("astlib/ast_408.ml", 476, 14727, 14761), 0), 0, Tag1 ("Astlib__Ast_408", 225)); (("pval_loc", 829), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4678), (("astlib/ast_408.ml", 477, 14789, 14795), ("astlib/ast_408.ml", 477, 14789, 14816), 0), 0, Tag1 ("Astlib__Ast_408", 226))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -4671)), 0, 0, 0, 0, (("astlib/ast_408.ml", 471, 14562, 14564), ("astlib/ast_408.ml", 478, 14817, 14822), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 69)), 2, 0); Tag1 (("type_declaration", 7262), (0, 0, [[(("ptype_name", 830), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4655)], (0)), 100000000, 0, -4654), (("astlib/ast_408.ml", 489, 15054, 15060), ("astlib/ast_408.ml", 489, 15054, 15083), 0), 0, Tag1 ("Astlib__Ast_408", 227)); (("ptype_params", 831), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4658); (Tag3 (Tag1 ((("Asttypes", 7223)), "variance"), 0, (0)), 100000000, 0, -4659)]), 100000000, 0, -4657)], (0)), 100000000, 0, -4656), (("astlib/ast_408.ml", 490, 15084, 15090), ("astlib/ast_408.ml", 490, 15084, 15132), 0), 0, Tag1 ("Astlib__Ast_408", 228)); (("ptype_cstrs", 832), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4662); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4663); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4664)]), 100000000, 0, -4661)], (0)), 100000000, 0, -4660), (("astlib/ast_408.ml", 492, 15179, 15185), ("astlib/ast_408.ml", 492, 15179, 15240), 0), 0, Tag1 ("Astlib__Ast_408", 229)); (("ptype_kind", 833), 0, (Tag3 ((("type_kind", 7263)), 0, (0)), 100000000, 0, -4665), (("astlib/ast_408.ml", 494, 15298, 15304), ("astlib/ast_408.ml", 494, 15298, 15326), 0), 0, Tag1 ("Astlib__Ast_408", 230)); (("ptype_private", 834), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "private_flag"), 0, (0)), 100000000, 0, -4666), (("astlib/ast_408.ml", 495, 15327, 15333), ("astlib/ast_408.ml", 495, 15327, 15361), 0), 0, Tag1 ("Astlib__Ast_408", 231)); (("ptype_manifest", 835), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4668)], (0)), 100000000, 0, -4667), (("astlib/ast_408.ml", 496, 15384, 15390), ("astlib/ast_408.ml", 496, 15384, 15423), 0), 0, Tag1 ("Astlib__Ast_408", 232)); (("ptype_attributes", 836), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4669), (("astlib/ast_408.ml", 497, 15435, 15441), ("astlib/ast_408.ml", 497, 15435, 15470), 0), 0, Tag1 ("Astlib__Ast_408", 233)); (("ptype_loc", 837), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4670), (("astlib/ast_408.ml", 498, 15499, 15505), ("astlib/ast_408.ml", 498, 15499, 15527), 0), 0, Tag1 ("Astlib__Ast_408", 234))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -4653)), 0, 0, 0, 0, (("astlib/ast_408.ml", 487, 14978, 14980), ("astlib/ast_408.ml", 499, 15528, 15533), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 70)), 2, 0); Tag1 (("type_kind", 7263), (0, 0, Tag1 ([(("Ptype_abstract", 838), (0), 0, (("astlib/ast_408.ml", 512, 15992, 15996), ("astlib/ast_408.ml", 512, 15992, 16012), 0), 0, Tag1 ("Astlib__Ast_408", 235)); (("Ptype_variant", 839), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7265)), 0, (0)), 100000000, 0, -4650)], (0)), 100000000, 0, -4649)]), 0, (("astlib/ast_408.ml", 513, 16013, 16017), ("astlib/ast_408.ml", 513, 16013, 16064), 0), 0, Tag1 ("Astlib__Ast_408", 236)); (("Ptype_record", 840), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7264)), 0, (0)), 100000000, 0, -4652)], (0)), 100000000, 0, -4651)]), 0, (("astlib/ast_408.ml", 514, 16065, 16069), ("astlib/ast_408.ml", 514, 16065, 16109), 0), 0, Tag1 ("Astlib__Ast_408", 237)); (("Ptype_open", 841), (0), 0, (("astlib/ast_408.ml", 516, 16146, 16150), ("astlib/ast_408.ml", 516, 16146, 16162), 0), 0, Tag1 ("Astlib__Ast_408", 238))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -4648)), 0, 0, 0, 0, (("astlib/ast_408.ml", 511, 15936, 15938), ("astlib/ast_408.ml", 516, 16146, 16162), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 71)), 2, 0); Tag1 (("label_declaration", 7264), (0, 0, [[(("pld_name", 842), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4643)], (0)), 100000000, 0, -4642), (("astlib/ast_408.ml", 520, 16242, 16248), ("astlib/ast_408.ml", 520, 16242, 16269), 0), 0, Tag1 ("Astlib__Ast_408", 239)); (("pld_mutable", 843), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "mutable_flag"), 0, (0)), 100000000, 0, -4644), (("astlib/ast_408.ml", 521, 16270, 16276), ("astlib/ast_408.ml", 521, 16270, 16302), 0), 0, Tag1 ("Astlib__Ast_408", 240)); (("pld_type", 844), 0, (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4645), (("astlib/ast_408.ml", 522, 16303, 16309), ("astlib/ast_408.ml", 522, 16303, 16329), 0), 0, Tag1 ("Astlib__Ast_408", 241)); (("pld_loc", 845), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4646), (("astlib/ast_408.ml", 523, 16330, 16336), ("astlib/ast_408.ml", 523, 16330, 16356), 0), 0, Tag1 ("Astlib__Ast_408", 242)); (("pld_attributes", 846), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4647), (("astlib/ast_408.ml", 524, 16357, 16363), ("astlib/ast_408.ml", 524, 16357, 16390), 0), 0, Tag1 ("Astlib__Ast_408", 243))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -4641)), 0, 0, 0, 0, (("astlib/ast_408.ml", 518, 16164, 16166), ("astlib/ast_408.ml", 525, 16417, 16422), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 72)), 2, 0); Tag1 (("constructor_declaration", 7265), (0, 0, [[(("pcd_name", 847), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4635)], (0)), 100000000, 0, -4634), (("astlib/ast_408.ml", 535, 16665, 16671), ("astlib/ast_408.ml", 535, 16665, 16692), 0), 0, Tag1 ("Astlib__Ast_408", 244)); (("pcd_args", 848), 0, (Tag3 ((("constructor_arguments", 7266)), 0, (0)), 100000000, 0, -4636), (("astlib/ast_408.ml", 536, 16693, 16699), ("astlib/ast_408.ml", 536, 16693, 16731), 0), 0, Tag1 ("Astlib__Ast_408", 245)); (("pcd_res", 849), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4638)], (0)), 100000000, 0, -4637), (("astlib/ast_408.ml", 537, 16732, 16738), ("astlib/ast_408.ml", 537, 16732, 16764), 0), 0, Tag1 ("Astlib__Ast_408", 246)); (("pcd_loc", 850), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4639), (("astlib/ast_408.ml", 538, 16765, 16771), ("astlib/ast_408.ml", 538, 16765, 16791), 0), 0, Tag1 ("Astlib__Ast_408", 247)); (("pcd_attributes", 851), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4640), (("astlib/ast_408.ml", 539, 16792, 16798), ("astlib/ast_408.ml", 539, 16792, 16825), 0), 0, Tag1 ("Astlib__Ast_408", 248))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -4633)), 0, 0, 0, 0, (("astlib/ast_408.ml", 533, 16575, 16577), ("astlib/ast_408.ml", 540, 16855, 16860), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 73)), 2, 0); Tag1 (("constructor_arguments", 7266), (0, 0, Tag1 ([(("Pcstr_tuple", 852), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4630)], (0)), 100000000, 0, -4629)]), 0, (("astlib/ast_408.ml", 543, 16942, 16946), ("astlib/ast_408.ml", 543, 16942, 16977), 0), 0, Tag1 ("Astlib__Ast_408", 249)); (("Pcstr_record", 853), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7264)), 0, (0)), 100000000, 0, -4632)], (0)), 100000000, 0, -4631)]), 0, (("astlib/ast_408.ml", 544, 16978, 16982), ("astlib/ast_408.ml", 544, 16978, 17022), 0), 0, Tag1 ("Astlib__Ast_408", 250))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -4628)), 0, 0, 0, 0, (("astlib/ast_408.ml", 542, 16862, 16864), ("astlib/ast_408.ml", 544, 16978, 17022), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 74)), 2, 0); Tag1 (("type_extension", 7267), (0, 0, [[(("ptyext_path", 854), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4618)], (0)), 100000000, 0, -4617), (("astlib/ast_408.ml", 557, 17498, 17504), ("astlib/ast_408.ml", 557, 17498, 17533), 0), 0, Tag1 ("Astlib__Ast_408", 251)); (("ptyext_params", 855), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4621); (Tag3 (Tag1 ((("Asttypes", 7223)), "variance"), 0, (0)), 100000000, 0, -4622)]), 100000000, 0, -4620)], (0)), 100000000, 0, -4619), (("astlib/ast_408.ml", 558, 17534, 17540), ("astlib/ast_408.ml", 558, 17534, 17583), 0), 0, Tag1 ("Astlib__Ast_408", 252)); (("ptyext_constructors", 856), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7268)), 0, (0)), 100000000, 0, -4624)], (0)), 100000000, 0, -4623), (("astlib/ast_408.ml", 559, 17584, 17590), ("astlib/ast_408.ml", 559, 17584, 17638), 0), 0, Tag1 ("Astlib__Ast_408", 253)); (("ptyext_private", 857), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "private_flag"), 0, (0)), 100000000, 0, -4625), (("astlib/ast_408.ml", 560, 17639, 17645), ("astlib/ast_408.ml", 560, 17639, 17674), 0), 0, Tag1 ("Astlib__Ast_408", 254)); (("ptyext_loc", 858), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4626), (("astlib/ast_408.ml", 561, 17675, 17681), ("astlib/ast_408.ml", 561, 17675, 17704), 0), 0, Tag1 ("Astlib__Ast_408", 255)); (("ptyext_attributes", 859), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4627), (("astlib/ast_408.ml", 562, 17705, 17711), ("astlib/ast_408.ml", 562, 17705, 17741), 0), 0, Tag1 ("Astlib__Ast_408", 256))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -4616)), 0, 0, 0, 0, (("astlib/ast_408.ml", 555, 17426, 17428), ("astlib/ast_408.ml", 563, 17770, 17775), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 75)), 2, 0); Tag1 (("extension_constructor", 7268), (0, 0, [[(("pext_name", 860), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4612)], (0)), 100000000, 0, -4611), (("astlib/ast_408.ml", 570, 17890, 17896), ("astlib/ast_408.ml", 570, 17890, 17918), 0), 0, Tag1 ("Astlib__Ast_408", 257)); (("pext_kind", 861), 0, (Tag3 ((("extension_constructor_kind", 7270)), 0, (0)), 100000000, 0, -4613), (("astlib/ast_408.ml", 571, 17919, 17925), ("astlib/ast_408.ml", 571, 17919, 17964), 0), 0, Tag1 ("Astlib__Ast_408", 258)); (("pext_loc", 862), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4614), (("astlib/ast_408.ml", 572, 17965, 17971), ("astlib/ast_408.ml", 572, 17965, 17993), 0), 0, Tag1 ("Astlib__Ast_408", 259)); (("pext_attributes", 863), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4615), (("astlib/ast_408.ml", 573, 17994, 18000), ("astlib/ast_408.ml", 573, 17994, 18028), 0), 0, Tag1 ("Astlib__Ast_408", 260))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -4610)), 0, 0, 0, 0, (("astlib/ast_408.ml", 568, 17804, 17806), ("astlib/ast_408.ml", 574, 18058, 18063), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 76)), 2, 0); Tag1 (("type_exception", 7269), (0, 0, [[(("ptyexn_constructor", 864), 0, (Tag3 ((("extension_constructor", 7268)), 0, (0)), 100000000, 0, -4607), (("astlib/ast_408.ml", 579, 18157, 18163), ("astlib/ast_408.ml", 579, 18157, 18205), 0), 0, Tag1 ("Astlib__Ast_408", 261)); (("ptyexn_loc", 865), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4608), (("astlib/ast_408.ml", 580, 18206, 18212), ("astlib/ast_408.ml", 580, 18206, 18235), 0), 0, Tag1 ("Astlib__Ast_408", 262)); (("ptyexn_attributes", 866), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4609), (("astlib/ast_408.ml", 581, 18236, 18242), ("astlib/ast_408.ml", 581, 18236, 18272), 0), 0, Tag1 ("Astlib__Ast_408", 263))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "type_exception"), 0, (0)), 100000000, 0, -4606)), 0, 0, 0, 0, (("astlib/ast_408.ml", 577, 18085, 18087), ("astlib/ast_408.ml", 582, 18299, 18304), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 77)), 2, 0); Tag1 (("extension_constructor_kind", 7270), (0, 0, Tag1 ([(("Pext_decl", 867), ([(Tag3 ((("constructor_arguments", 7266)), 0, (0)), 100000000, 0, -4601); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4603)], (0)), 100000000, 0, -4602)]), 0, (("astlib/ast_408.ml", 585, 18396, 18402), ("astlib/ast_408.ml", 585, 18396, 18455), 0), 0, Tag1 ("Astlib__Ast_408", 264)); (("Pext_rebind", 868), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4605)], (0)), 100000000, 0, -4604)]), 0, (("astlib/ast_408.ml", 591, 18629, 18633), ("astlib/ast_408.ml", 591, 18629, 18665), 0), 0, Tag1 ("Astlib__Ast_408", 265))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -4600)), 0, 0, 0, 0, (("astlib/ast_408.ml", 584, 18306, 18308), ("astlib/ast_408.ml", 591, 18629, 18665), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 78)), 2, 0); Tag1 (("class_type", 7271), (0, 0, [[(("pcty_desc", 869), 0, (Tag3 ((("class_type_desc", 7272)), 0, (0)), 100000000, 0, -4597), (("astlib/ast_408.ml", 602, 18840, 18846), ("astlib/ast_408.ml", 602, 18840, 18873), 0), 0, Tag1 ("Astlib__Ast_408", 266)); (("pcty_loc", 870), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4598), (("astlib/ast_408.ml", 603, 18874, 18880), ("astlib/ast_408.ml", 603, 18874, 18901), 0), 0, Tag1 ("Astlib__Ast_408", 267)); (("pcty_attributes", 871), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4599), (("astlib/ast_408.ml", 604, 18902, 18908), ("astlib/ast_408.ml", 604, 18902, 18936), 0), 0, Tag1 ("Astlib__Ast_408", 268))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -4596)), 0, 0, 0, 0, (("astlib/ast_408.ml", 600, 18776, 18778), ("astlib/ast_408.ml", 605, 18961, 18966), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 79)), 2, 0); Tag1 (("class_type_desc", 7272), (0, 0, Tag1 ([(("Pcty_constr", 872), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4586)], (0)), 100000000, 0, -4585); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4588)], (0)), 100000000, 0, -4587)]), 0, (("astlib/ast_408.ml", 608, 19036, 19040), ("astlib/ast_408.ml", 608, 19036, 19089), 0), 0, Tag1 ("Astlib__Ast_408", 269)); (("Pcty_signature", 873), ([(Tag3 ((("class_signature", 7273)), 0, (0)), 100000000, 0, -4589)]), 0, (("astlib/ast_408.ml", 611, 19127, 19131), ("astlib/ast_408.ml", 611, 19127, 19166), 0), 0, Tag1 ("Astlib__Ast_408", 270)); (("Pcty_arrow", 874), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "arg_label"), 0, (0)), 100000000, 0, -4590); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4591); (Tag3 ((("class_type", 7271)), 0, (0)), 100000000, 0, -4592)]), 0, (("astlib/ast_408.ml", 613, 19192, 19196), ("astlib/ast_408.ml", 613, 19192, 19246), 0), 0, Tag1 ("Astlib__Ast_408", 271)); (("Pcty_extension", 875), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4593)]), 0, (("astlib/ast_408.ml", 618, 19346, 19350), ("astlib/ast_408.ml", 618, 19346, 19379), 0), 0, Tag1 ("Astlib__Ast_408", 272)); (("Pcty_open", 876), ([(Tag3 ((("open_description", 7295)), 0, (0)), 100000000, 0, -4594); (Tag3 ((("class_type", 7271)), 0, (0)), 100000000, 0, -4595)]), 0, (("astlib/ast_408.ml", 620, 19396, 19400), ("astlib/ast_408.ml", 620, 19396, 19444), 0), 0, Tag1 ("Astlib__Ast_408", 273))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -4584)), 0, 0, 0, 0, (("astlib/ast_408.ml", 607, 18968, 18970), ("astlib/ast_408.ml", 620, 19396, 19444), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 80)), 2, 0); Tag1 (("class_signature", 7273), (0, 0, [[(("pcsig_self", 877), 0, (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4581), (("astlib/ast_408.ml", 625, 19547, 19553), ("astlib/ast_408.ml", 625, 19547, 19575), 0), 0, Tag1 ("Astlib__Ast_408", 274)); (("pcsig_fields", 878), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7274)), 0, (0)), 100000000, 0, -4583)], (0)), 100000000, 0, -4582), (("astlib/ast_408.ml", 626, 19576, 19582), ("astlib/ast_408.ml", 626, 19576, 19618), 0), 0, Tag1 ("Astlib__Ast_408", 275))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -4580)), 0, 0, 0, 0, (("astlib/ast_408.ml", 623, 19473, 19475), ("astlib/ast_408.ml", 627, 19619, 19624), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 81)), 2, 0); Tag1 (("class_type_field", 7274), (0, 0, [[(("pctf_desc", 879), 0, (Tag3 ((("class_type_field_desc", 7275)), 0, (0)), 100000000, 0, -4577), (("astlib/ast_408.ml", 634, 19787, 19793), ("astlib/ast_408.ml", 634, 19787, 19826), 0), 0, Tag1 ("Astlib__Ast_408", 276)); (("pctf_loc", 880), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4578), (("astlib/ast_408.ml", 635, 19827, 19833), ("astlib/ast_408.ml", 635, 19827, 19854), 0), 0, Tag1 ("Astlib__Ast_408", 277)); (("pctf_attributes", 881), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4579), (("astlib/ast_408.ml", 636, 19855, 19861), ("astlib/ast_408.ml", 636, 19855, 19889), 0), 0, Tag1 ("Astlib__Ast_408", 278))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -4576)), 0, 0, 0, 0, (("astlib/ast_408.ml", 632, 19711, 19713), ("astlib/ast_408.ml", 637, 19916, 19921), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 82)), 2, 0); Tag1 (("class_type_field_desc", 7275), (0, 0, Tag1 ([(("Pctf_inherit", 882), ([(Tag3 ((("class_type", 7271)), 0, (0)), 100000000, 0, -4558)]), 0, (("astlib/ast_408.ml", 640, 20003, 20007), ("astlib/ast_408.ml", 640, 20003, 20035), 0), 0, Tag1 ("Astlib__Ast_408", 279)); (("Pctf_val", 883), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4561)], (0)), 100000000, 0, -4560); (Tag3 (Tag1 ((("Asttypes", 7223)), "mutable_flag"), 0, (0)), 100000000, 0, -4562); (Tag3 (Tag1 ((("Asttypes", 7223)), "virtual_flag"), 0, (0)), 100000000, 0, -4563); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4564)]), 100000000, 0, -4559)]), 0, (("astlib/ast_408.ml", 642, 20057, 20061), ("astlib/ast_408.ml", 642, 20057, 20128), 0), 0, Tag1 ("Astlib__Ast_408", 280)); (("Pctf_method", 884), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4567)], (0)), 100000000, 0, -4566); (Tag3 (Tag1 ((("Asttypes", 7223)), "private_flag"), 0, (0)), 100000000, 0, -4568); (Tag3 (Tag1 ((("Asttypes", 7223)), "virtual_flag"), 0, (0)), 100000000, 0, -4569); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4570)]), 100000000, 0, -4565)]), 0, (("astlib/ast_408.ml", 644, 20148, 20152), ("astlib/ast_408.ml", 644, 20148, 20223), 0), 0, Tag1 ("Astlib__Ast_408", 281)); (("Pctf_constraint", 885), ([(Tag2 ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4572); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4573)]), 100000000, 0, -4571)]), 0, (("astlib/ast_408.ml", 649, 20286, 20290), ("astlib/ast_408.ml", 649, 20286, 20335), 0), 0, Tag1 ("Astlib__Ast_408", 282)); (("Pctf_attribute", 886), ([(Tag3 ((("attribute", 7239)), 0, (0)), 100000000, 0, -4574)]), 0, (("astlib/ast_408.ml", 651, 20365, 20369), ("astlib/ast_408.ml", 651, 20365, 20398), 0), 0, Tag1 ("Astlib__Ast_408", 283)); (("Pctf_extension", 887), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4575)]), 0, (("astlib/ast_408.ml", 653, 20417, 20421), ("astlib/ast_408.ml", 653, 20417, 20450), 0), 0, Tag1 ("Astlib__Ast_408", 284))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -4557)), 0, 0, 0, 0, (("astlib/ast_408.ml", 639, 19923, 19925), ("astlib/ast_408.ml", 653, 20417, 20450), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 83)), 2, 0); Tag1 (("class_infos", 7276), ([((("a")), 100000000, 0, -4547)], 1, [[(("pci_virt", 888), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "virtual_flag"), 0, (0)), 100000000, 0, -4548), (("astlib/ast_408.ml", 658, 20541, 20547), ("astlib/ast_408.ml", 658, 20541, 20570), 0), 0, Tag1 ("Astlib__Ast_408", 285)); (("pci_params", 889), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4551); (Tag3 (Tag1 ((("Asttypes", 7223)), "variance"), 0, (0)), 100000000, 0, -4552)]), 100000000, 0, -4550)], (0)), 100000000, 0, -4549), (("astlib/ast_408.ml", 659, 20571, 20577), ("astlib/ast_408.ml", 659, 20571, 20617), 0), 0, Tag1 ("Astlib__Ast_408", 286)); (("pci_name", 890), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4554)], (0)), 100000000, 0, -4553), (("astlib/ast_408.ml", 660, 20618, 20624), ("astlib/ast_408.ml", 660, 20618, 20645), 0), 0, Tag1 ("Astlib__Ast_408", 287)); (("pci_expr", 891), 0, ((("a")), 100000000, 0, -4547), (("astlib/ast_408.ml", 661, 20646, 20652), ("astlib/ast_408.ml", 661, 20646, 20665), 0), 0, Tag1 ("Astlib__Ast_408", 288)); (("pci_loc", 892), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4555), (("astlib/ast_408.ml", 662, 20666, 20672), ("astlib/ast_408.ml", 662, 20666, 20692), 0), 0, Tag1 ("Astlib__Ast_408", 289)); (("pci_attributes", 893), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4556), (("astlib/ast_408.ml", 663, 20693, 20699), ("astlib/ast_408.ml", 663, 20693, 20726), 0), 0, Tag1 ("Astlib__Ast_408", 290))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -4547)], (0)), 100000000, 0, -4546)), [25], [0], 0, 0, (("astlib/ast_408.ml", 656, 20469, 20471), ("astlib/ast_408.ml", 664, 20754, 20759), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 84)), 2, 0); Tag1 (("class_description", 7277), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7276)), [(Tag3 ((("class_type", 7271)), 0, (0)), 100000000, 0, -4545)], (0)), 100000000, 0, -4544)), 0, 0, 0, 0, (("astlib/ast_408.ml", 672, 20891, 20893), ("astlib/ast_408.ml", 672, 20891, 20939), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 85)), 2, 0); Tag1 (("class_type_declaration", 7278), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7276)), [(Tag3 ((("class_type", 7271)), 0, (0)), 100000000, 0, -4543)], (0)), 100000000, 0, -4542)), 0, 0, 0, 0, (("astlib/ast_408.ml", 674, 20941, 20943), ("astlib/ast_408.ml", 674, 20941, 20994), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 86)), 2, 0); Tag1 (("class_expr", 7279), (0, 0, [[(("pcl_desc", 894), 0, (Tag3 ((("class_expr_desc", 7280)), 0, (0)), 100000000, 0, -4539), (("astlib/ast_408.ml", 680, 21110, 21116), ("astlib/ast_408.ml", 680, 21110, 21142), 0), 0, Tag1 ("Astlib__Ast_408", 291)); (("pcl_loc", 895), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4540), (("astlib/ast_408.ml", 681, 21143, 21149), ("astlib/ast_408.ml", 681, 21143, 21169), 0), 0, Tag1 ("Astlib__Ast_408", 292)); (("pcl_attributes", 896), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4541), (("astlib/ast_408.ml", 682, 21170, 21176), ("astlib/ast_408.ml", 682, 21170, 21203), 0), 0, Tag1 ("Astlib__Ast_408", 293))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -4538)), 0, 0, 0, 0, (("astlib/ast_408.ml", 678, 21046, 21048), ("astlib/ast_408.ml", 683, 21228, 21233), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 87)), 2, 0); Tag1 (("class_expr_desc", 7280), (0, 0, Tag1 ([(("Pcl_constr", 897), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4515)], (0)), 100000000, 0, -4514); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4517)], (0)), 100000000, 0, -4516)]), 0, (("astlib/ast_408.ml", 686, 21303, 21307), ("astlib/ast_408.ml", 686, 21303, 21355), 0), 0, Tag1 ("Astlib__Ast_408", 294)); (("Pcl_structure", 898), ([(Tag3 ((("class_structure", 7281)), 0, (0)), 100000000, 0, -4518)]), 0, (("astlib/ast_408.ml", 689, 21393, 21397), ("astlib/ast_408.ml", 689, 21393, 21431), 0), 0, Tag1 ("Astlib__Ast_408", 295)); (("Pcl_fun", 899), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "arg_label"), 0, (0)), 100000000, 0, -4519); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4521)], (0)), 100000000, 0, -4520); (Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4522); (Tag3 ((("class_expr", 7279)), 0, (0)), 100000000, 0, -4523)]), 0, (("astlib/ast_408.ml", 691, 21457, 21461), ("astlib/ast_408.ml", 691, 21457, 21526), 0), 0, Tag1 ("Astlib__Ast_408", 296)); (("Pcl_apply", 900), ([(Tag3 ((("class_expr", 7279)), 0, (0)), 100000000, 0, -4524); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "arg_label"), 0, (0)), 100000000, 0, -4527); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4528)]), 100000000, 0, -4526)], (0)), 100000000, 0, -4525)]), 0, (("astlib/ast_408.ml", 697, 21785, 21789), ("astlib/ast_408.ml", 697, 21785, 21846), 0), 0, Tag1 ("Astlib__Ast_408", 297)); (("Pcl_let", 901), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "rec_flag"), 0, (0)), 100000000, 0, -4529); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7306)), 0, (0)), 100000000, 0, -4531)], (0)), 100000000, 0, -4530); (Tag3 ((("class_expr", 7279)), 0, (0)), 100000000, 0, -4532)]), 0, (("astlib/ast_408.ml", 704, 21999, 22003), ("astlib/ast_408.ml", 704, 21999, 22058), 0), 0, Tag1 ("Astlib__Ast_408", 298)); (("Pcl_constraint", 902), ([(Tag3 ((("class_expr", 7279)), 0, (0)), 100000000, 0, -4533); (Tag3 ((("class_type", 7271)), 0, (0)), 100000000, 0, -4534)]), 0, (("astlib/ast_408.ml", 708, 22207, 22211), ("astlib/ast_408.ml", 708, 22207, 22254), 0), 0, Tag1 ("Astlib__Ast_408", 299)); (("Pcl_extension", 903), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4535)]), 0, (("astlib/ast_408.ml", 710, 22275, 22279), ("astlib/ast_408.ml", 710, 22275, 22307), 0), 0, Tag1 ("Astlib__Ast_408", 300)); (("Pcl_open", 904), ([(Tag3 ((("open_description", 7295)), 0, (0)), 100000000, 0, -4536); (Tag3 ((("class_expr", 7279)), 0, (0)), 100000000, 0, -4537)]), 0, (("astlib/ast_408.ml", 712, 22324, 22328), ("astlib/ast_408.ml", 712, 22324, 22371), 0), 0, Tag1 ("Astlib__Ast_408", 301))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -4513)), 0, 0, 0, 0, (("astlib/ast_408.ml", 685, 21235, 21237), ("astlib/ast_408.ml", 712, 22324, 22371), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 88)), 2, 0); Tag1 (("class_structure", 7281), (0, 0, [[(("pcstr_self", 905), 0, (Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4510), (("astlib/ast_408.ml", 718, 22475, 22481), ("astlib/ast_408.ml", 718, 22475, 22501), 0), 0, Tag1 ("Astlib__Ast_408", 302)); (("pcstr_fields", 906), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7282)), 0, (0)), 100000000, 0, -4512)], (0)), 100000000, 0, -4511), (("astlib/ast_408.ml", 719, 22502, 22508), ("astlib/ast_408.ml", 719, 22502, 22539), 0), 0, Tag1 ("Astlib__Ast_408", 303))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -4509)), 0, 0, 0, 0, (("astlib/ast_408.ml", 716, 22401, 22403), ("astlib/ast_408.ml", 720, 22540, 22545), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 89)), 2, 0); Tag1 (("class_field", 7282), (0, 0, [[(("pcf_desc", 907), 0, (Tag3 ((("class_field_desc", 7283)), 0, (0)), 100000000, 0, -4506), (("astlib/ast_408.ml", 727, 22695, 22701), ("astlib/ast_408.ml", 727, 22695, 22728), 0), 0, Tag1 ("Astlib__Ast_408", 304)); (("pcf_loc", 908), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4507), (("astlib/ast_408.ml", 728, 22729, 22735), ("astlib/ast_408.ml", 728, 22729, 22755), 0), 0, Tag1 ("Astlib__Ast_408", 305)); (("pcf_attributes", 909), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4508), (("astlib/ast_408.ml", 729, 22756, 22762), ("astlib/ast_408.ml", 729, 22756, 22789), 0), 0, Tag1 ("Astlib__Ast_408", 306))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -4505)), 0, 0, 0, 0, (("astlib/ast_408.ml", 725, 22629, 22631), ("astlib/ast_408.ml", 730, 22816, 22821), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 90)), 2, 0); Tag1 (("class_field_desc", 7283), (0, 0, Tag1 ([(("Pcf_inherit", 910), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "override_flag"), 0, (0)), 100000000, 0, -4484); (Tag3 ((("class_expr", 7279)), 0, (0)), 100000000, 0, -4485); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4488)], (0)), 100000000, 0, -4487)], (0)), 100000000, 0, -4486)]), 0, (("astlib/ast_408.ml", 733, 22893, 22897), ("astlib/ast_408.ml", 733, 22893, 22960), 0), 0, Tag1 ("Astlib__Ast_408", 307)); (("Pcf_val", 911), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4491)], (0)), 100000000, 0, -4490); (Tag3 (Tag1 ((("Asttypes", 7223)), "mutable_flag"), 0, (0)), 100000000, 0, -4492); (Tag3 ((("class_field_kind", 7284)), 0, (0)), 100000000, 0, -4493)]), 100000000, 0, -4489)]), 0, (("astlib/ast_408.ml", 739, 23052, 23056), ("astlib/ast_408.ml", 739, 23052, 23114), 0), 0, Tag1 ("Astlib__Ast_408", 308)); (("Pcf_method", 912), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7223)), "label"), 0, (0)), 100000000, 0, -4496)], (0)), 100000000, 0, -4495); (Tag3 (Tag1 ((("Asttypes", 7223)), "private_flag"), 0, (0)), 100000000, 0, -4497); (Tag3 ((("class_field_kind", 7284)), 0, (0)), 100000000, 0, -4498)]), 100000000, 0, -4494)]), 0, (("astlib/ast_408.ml", 743, 23163, 23167), ("astlib/ast_408.ml", 743, 23163, 23228), 0), 0, Tag1 ("Astlib__Ast_408", 309)); (("Pcf_constraint", 913), ([(Tag2 ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4500); (Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4501)]), 100000000, 0, -4499)]), 0, (("astlib/ast_408.ml", 747, 23344, 23348), ("astlib/ast_408.ml", 747, 23344, 23391), 0), 0, Tag1 ("Astlib__Ast_408", 310)); (("Pcf_initializer", 914), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4502)]), 0, (("astlib/ast_408.ml", 749, 23421, 23425), ("astlib/ast_408.ml", 749, 23421, 23456), 0), 0, Tag1 ("Astlib__Ast_408", 311)); (("Pcf_attribute", 915), ([(Tag3 ((("attribute", 7239)), 0, (0)), 100000000, 0, -4503)]), 0, (("astlib/ast_408.ml", 751, 23481, 23485), ("astlib/ast_408.ml", 751, 23481, 23513), 0), 0, Tag1 ("Astlib__Ast_408", 312)); (("Pcf_extension", 916), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4504)]), 0, (("astlib/ast_408.ml", 753, 23532, 23536), ("astlib/ast_408.ml", 753, 23532, 23564), 0), 0, Tag1 ("Astlib__Ast_408", 313))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -4483)), 0, 0, 0, 0, (("astlib/ast_408.ml", 732, 22823, 22825), ("astlib/ast_408.ml", 753, 23532, 23564), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 91)), 2, 0); Tag1 (("class_field_kind", 7284), (0, 0, Tag1 ([(("Cfk_virtual", 917), ([(Tag3 ((("core_type", 7243)), 0, (0)), 100000000, 0, -4480)]), 0, (("astlib/ast_408.ml", 757, 23653, 23657), ("astlib/ast_408.ml", 757, 23653, 23683), 0), 0, Tag1 ("Astlib__Ast_408", 314)); (("Cfk_concrete", 918), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "override_flag"), 0, (0)), 100000000, 0, -4481); (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4482)]), 0, (("astlib/ast_408.ml", 758, 23684, 23688), ("astlib/ast_408.ml", 758, 23684, 23732), 0), 0, Tag1 ("Astlib__Ast_408", 315))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -4479)), 0, 0, 0, 0, (("astlib/ast_408.ml", 756, 23583, 23585), ("astlib/ast_408.ml", 758, 23684, 23732), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 92)), 2, 0); Tag1 (("class_declaration", 7285), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7276)), [(Tag3 ((("class_expr", 7279)), 0, (0)), 100000000, 0, -4478)], (0)), 100000000, 0, -4477)), 0, 0, 0, 0, (("astlib/ast_408.ml", 760, 23734, 23736), ("astlib/ast_408.ml", 760, 23734, 23782), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 93)), 2, 0); Tag1 (("module_type", 7286), (0, 0, [[(("pmty_desc", 919), 0, (Tag3 ((("module_type_desc", 7287)), 0, (0)), 100000000, 0, -4474), (("astlib/ast_408.ml", 768, 23930, 23936), ("astlib/ast_408.ml", 768, 23930, 23964), 0), 0, Tag1 ("Astlib__Ast_408", 316)); (("pmty_loc", 920), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4475), (("astlib/ast_408.ml", 769, 23965, 23971), ("astlib/ast_408.ml", 769, 23965, 23992), 0), 0, Tag1 ("Astlib__Ast_408", 317)); (("pmty_attributes", 921), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4476), (("astlib/ast_408.ml", 770, 23993, 23999), ("astlib/ast_408.ml", 770, 23993, 24027), 0), 0, Tag1 ("Astlib__Ast_408", 318))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -4473)), 0, 0, 0, 0, (("astlib/ast_408.ml", 766, 23864, 23866), ("astlib/ast_408.ml", 771, 24052, 24057), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 94)), 2, 0); Tag1 (("module_type_desc", 7287), (0, 0, Tag1 ([(("Pmty_ident", 922), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4459)], (0)), 100000000, 0, -4458)]), 0, (("astlib/ast_408.ml", 774, 24129, 24133), ("astlib/ast_408.ml", 774, 24129, 24164), 0), 0, Tag1 ("Astlib__Ast_408", 319)); (("Pmty_signature", 923), ([(Tag3 ((("signature", 7288)), 0, (0)), 100000000, 0, -4460)]), 0, (("astlib/ast_408.ml", 776, 24177, 24181), ("astlib/ast_408.ml", 776, 24177, 24210), 0), 0, Tag1 ("Astlib__Ast_408", 320)); (("Pmty_functor", 924), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4462)], (0)), 100000000, 0, -4461); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7286)), 0, (0)), 100000000, 0, -4464)], (0)), 100000000, 0, -4463); (Tag3 ((("module_type", 7286)), 0, (0)), 100000000, 0, -4465)]), 0, (("astlib/ast_408.ml", 778, 24233, 24237), ("astlib/ast_408.ml", 778, 24233, 24300), 0), 0, Tag1 ("Astlib__Ast_408", 321)); (("Pmty_with", 925), ([(Tag3 ((("module_type", 7286)), 0, (0)), 100000000, 0, -4466); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7300)), 0, (0)), 100000000, 0, -4468)], (0)), 100000000, 0, -4467)]), 0, (("astlib/ast_408.ml", 780, 24335, 24339), ("astlib/ast_408.ml", 780, 24335, 24388), 0), 0, Tag1 ("Astlib__Ast_408", 322)); (("Pmty_typeof", 926), ([(Tag3 ((("module_expr", 7301)), 0, (0)), 100000000, 0, -4469)]), 0, (("astlib/ast_408.ml", 782, 24411, 24415), ("astlib/ast_408.ml", 782, 24411, 24443), 0), 0, Tag1 ("Astlib__Ast_408", 323)); (("Pmty_extension", 927), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4470)]), 0, (("astlib/ast_408.ml", 784, 24472, 24476), ("astlib/ast_408.ml", 784, 24472, 24505), 0), 0, Tag1 ("Astlib__Ast_408", 324)); (("Pmty_alias", 928), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4472)], (0)), 100000000, 0, -4471)]), 0, (("astlib/ast_408.ml", 786, 24522, 24526), ("astlib/ast_408.ml", 786, 24522, 24557), 0), 0, Tag1 ("Astlib__Ast_408", 325))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -4457)), 0, 0, 0, 0, (("astlib/ast_408.ml", 773, 24059, 24061), ("astlib/ast_408.ml", 786, 24522, 24557), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 95)), 2, 0); Tag1 (("signature", 7288), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7289)), 0, (0)), 100000000, 0, -4456)], (0)), 100000000, 0, -4455)), 0, 0, 0, 0, (("astlib/ast_408.ml", 789, 24580, 24582), ("astlib/ast_408.ml", 789, 24580, 24617), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 96)), 2, 0); Tag1 (("signature_item", 7289), (0, 0, [[(("psig_desc", 929), 0, (Tag3 ((("signature_item_desc", 7290)), 0, (0)), 100000000, 0, -4453), (("astlib/ast_408.ml", 793, 24691, 24697), ("astlib/ast_408.ml", 793, 24691, 24728), 0), 0, Tag1 ("Astlib__Ast_408", 326)); (("psig_loc", 930), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4454), (("astlib/ast_408.ml", 794, 24729, 24735), ("astlib/ast_408.ml", 794, 24729, 24756), 0), 0, Tag1 ("Astlib__Ast_408", 327))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -4452)), 0, 0, 0, 0, (("astlib/ast_408.ml", 791, 24619, 24621), ("astlib/ast_408.ml", 795, 24757, 24762), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 97)), 2, 0); Tag1 (("signature_item_desc", 7290), (0, 0, Tag1 ([(("Psig_value", 931), ([(Tag3 ((("value_description", 7261)), 0, (0)), 100000000, 0, -4430)]), 0, (("astlib/ast_408.ml", 798, 24840, 24844), ("astlib/ast_408.ml", 798, 24840, 24877), 0), 0, Tag1 ("Astlib__Ast_408", 328)); (("Psig_type", 932), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "rec_flag"), 0, (0)), 100000000, 0, -4431); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7262)), 0, (0)), 100000000, 0, -4433)], (0)), 100000000, 0, -4432)]), 0, (("astlib/ast_408.ml", 803, 24949, 24953), ("astlib/ast_408.ml", 803, 24949, 25000), 0), 0, Tag1 ("Astlib__Ast_408", 329)); (("Psig_typesubst", 933), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7262)), 0, (0)), 100000000, 0, -4435)], (0)), 100000000, 0, -4434)]), 0, (("astlib/ast_408.ml", 805, 25047, 25051), ("astlib/ast_408.ml", 805, 25047, 25092), 0), 0, Tag1 ("Astlib__Ast_408", 330)); (("Psig_typext", 934), ([(Tag3 ((("type_extension", 7267)), 0, (0)), 100000000, 0, -4436)]), 0, (("astlib/ast_408.ml", 807, 25141, 25145), ("astlib/ast_408.ml", 807, 25141, 25176), 0), 0, Tag1 ("Astlib__Ast_408", 331)); (("Psig_exception", 935), ([(Tag3 ((("type_exception", 7269)), 0, (0)), 100000000, 0, -4437)]), 0, (("astlib/ast_408.ml", 809, 25202, 25206), ("astlib/ast_408.ml", 809, 25202, 25240), 0), 0, Tag1 ("Astlib__Ast_408", 332)); (("Psig_module", 936), ([(Tag3 ((("module_declaration", 7291)), 0, (0)), 100000000, 0, -4438)]), 0, (("astlib/ast_408.ml", 811, 25268, 25272), ("astlib/ast_408.ml", 811, 25268, 25307), 0), 0, Tag1 ("Astlib__Ast_408", 333)); (("Psig_modsubst", 937), ([(Tag3 ((("module_substitution", 7292)), 0, (0)), 100000000, 0, -4439)]), 0, (("astlib/ast_408.ml", 814, 25352, 25356), ("astlib/ast_408.ml", 814, 25352, 25394), 0), 0, Tag1 ("Astlib__Ast_408", 334)); (("Psig_recmodule", 938), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7291)), 0, (0)), 100000000, 0, -4441)], (0)), 100000000, 0, -4440)]), 0, (("astlib/ast_408.ml", 816, 25419, 25423), ("astlib/ast_408.ml", 816, 25419, 25466), 0), 0, Tag1 ("Astlib__Ast_408", 335)); (("Psig_modtype", 939), ([(Tag3 ((("module_type_declaration", 7293)), 0, (0)), 100000000, 0, -4442)]), 0, (("astlib/ast_408.ml", 818, 25518, 25522), ("astlib/ast_408.ml", 818, 25518, 25563), 0), 0, Tag1 ("Astlib__Ast_408", 336)); (("Psig_open", 940), ([(Tag3 ((("open_description", 7295)), 0, (0)), 100000000, 0, -4443)]), 0, (("astlib/ast_408.ml", 821, 25614, 25618), ("astlib/ast_408.ml", 821, 25614, 25649), 0), 0, Tag1 ("Astlib__Ast_408", 337)); (("Psig_include", 941), ([(Tag3 ((("include_description", 7298)), 0, (0)), 100000000, 0, -4444)]), 0, (("astlib/ast_408.ml", 823, 25667, 25671), ("astlib/ast_408.ml", 823, 25667, 25708), 0), 0, Tag1 ("Astlib__Ast_408", 338)); (("Psig_class", 942), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7277)), 0, (0)), 100000000, 0, -4446)], (0)), 100000000, 0, -4445)]), 0, (("astlib/ast_408.ml", 825, 25730, 25734), ("astlib/ast_408.ml", 825, 25730, 25772), 0), 0, Tag1 ("Astlib__Ast_408", 339)); (("Psig_class_type", 943), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7278)), 0, (0)), 100000000, 0, -4448)], (0)), 100000000, 0, -4447)]), 0, (("astlib/ast_408.ml", 827, 25819, 25823), ("astlib/ast_408.ml", 827, 25819, 25871), 0), 0, Tag1 ("Astlib__Ast_408", 340)); (("Psig_attribute", 944), ([(Tag3 ((("attribute", 7239)), 0, (0)), 100000000, 0, -4449)]), 0, (("astlib/ast_408.ml", 829, 25925, 25929), ("astlib/ast_408.ml", 829, 25925, 25958), 0), 0, Tag1 ("Astlib__Ast_408", 341)); (("Psig_extension", 945), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4450); (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4451)]), 0, (("astlib/ast_408.ml", 831, 25977, 25981), ("astlib/ast_408.ml", 831, 25977, 26023), 0), 0, Tag1 ("Astlib__Ast_408", 342))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -4429)), 0, 0, 0, 0, (("astlib/ast_408.ml", 797, 24764, 24766), ("astlib/ast_408.ml", 831, 25977, 26023), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 98)), 2, 0); Tag1 (("module_declaration", 7291), (0, 0, [[(("pmd_name", 946), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4425)], (0)), 100000000, 0, -4424), (("astlib/ast_408.ml", 836, 26122, 26128), ("astlib/ast_408.ml", 836, 26122, 26149), 0), 0, Tag1 ("Astlib__Ast_408", 343)); (("pmd_type", 947), 0, (Tag3 ((("module_type", 7286)), 0, (0)), 100000000, 0, -4426), (("astlib/ast_408.ml", 837, 26150, 26156), ("astlib/ast_408.ml", 837, 26150, 26178), 0), 0, Tag1 ("Astlib__Ast_408", 344)); (("pmd_attributes", 948), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4427), (("astlib/ast_408.ml", 838, 26179, 26185), ("astlib/ast_408.ml", 838, 26179, 26212), 0), 0, Tag1 ("Astlib__Ast_408", 345)); (("pmd_loc", 949), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4428), (("astlib/ast_408.ml", 839, 26239, 26245), ("astlib/ast_408.ml", 839, 26239, 26265), 0), 0, Tag1 ("Astlib__Ast_408", 346))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -4423)), 0, 0, 0, 0, (("astlib/ast_408.ml", 834, 26042, 26044), ("astlib/ast_408.ml", 840, 26266, 26271), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 99)), 2, 0); Tag1 (("module_substitution", 7292), (0, 0, [[(("pms_name", 950), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4418)], (0)), 100000000, 0, -4417), (("astlib/ast_408.ml", 845, 26370, 26376), ("astlib/ast_408.ml", 845, 26370, 26397), 0), 0, Tag1 ("Astlib__Ast_408", 347)); (("pms_manifest", 951), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4420)], (0)), 100000000, 0, -4419), (("astlib/ast_408.ml", 846, 26398, 26404), ("astlib/ast_408.ml", 846, 26398, 26434), 0), 0, Tag1 ("Astlib__Ast_408", 348)); (("pms_attributes", 952), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4421), (("astlib/ast_408.ml", 847, 26435, 26441), ("astlib/ast_408.ml", 847, 26435, 26468), 0), 0, Tag1 ("Astlib__Ast_408", 349)); (("pms_loc", 953), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4422), (("astlib/ast_408.ml", 848, 26495, 26501), ("astlib/ast_408.ml", 848, 26495, 26521), 0), 0, Tag1 ("Astlib__Ast_408", 350))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "module_substitution"), 0, (0)), 100000000, 0, -4416)), 0, 0, 0, 0, (("astlib/ast_408.ml", 843, 26288, 26290), ("astlib/ast_408.ml", 849, 26522, 26527), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 100)), 2, 0); Tag1 (("module_type_declaration", 7293), (0, 0, [[(("pmtd_name", 954), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4411)], (0)), 100000000, 0, -4410), (("astlib/ast_408.ml", 853, 26619, 26625), ("astlib/ast_408.ml", 853, 26619, 26647), 0), 0, Tag1 ("Astlib__Ast_408", 351)); (("pmtd_type", 955), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7286)), 0, (0)), 100000000, 0, -4413)], (0)), 100000000, 0, -4412), (("astlib/ast_408.ml", 854, 26648, 26654), ("astlib/ast_408.ml", 854, 26648, 26684), 0), 0, Tag1 ("Astlib__Ast_408", 352)); (("pmtd_attributes", 956), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4414), (("astlib/ast_408.ml", 855, 26685, 26691), ("astlib/ast_408.ml", 855, 26685, 26719), 0), 0, Tag1 ("Astlib__Ast_408", 353)); (("pmtd_loc", 957), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4415), (("astlib/ast_408.ml", 856, 26746, 26752), ("astlib/ast_408.ml", 856, 26746, 26773), 0), 0, Tag1 ("Astlib__Ast_408", 354))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -4409)), 0, 0, 0, 0, (("astlib/ast_408.ml", 851, 26529, 26531), ("astlib/ast_408.ml", 857, 26774, 26779), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 101)), 2, 0); Tag1 (("open_infos", 7294), ([((("a")), 100000000, 0, -4405)], 1, [[(("popen_expr", 958), 0, ((("a")), 100000000, 0, -4405), (("astlib/ast_408.ml", 864, 26934, 26940), ("astlib/ast_408.ml", 864, 26934, 26955), 0), 0, Tag1 ("Astlib__Ast_408", 355)); (("popen_override", 959), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "override_flag"), 0, (0)), 100000000, 0, -4406), (("astlib/ast_408.ml", 865, 26956, 26962), ("astlib/ast_408.ml", 865, 26956, 26992), 0), 0, Tag1 ("Astlib__Ast_408", 356)); (("popen_loc", 960), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4407), (("astlib/ast_408.ml", 866, 26993, 26999), ("astlib/ast_408.ml", 866, 26993, 27021), 0), 0, Tag1 ("Astlib__Ast_408", 357)); (("popen_attributes", 961), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4408), (("astlib/ast_408.ml", 867, 27022, 27028), ("astlib/ast_408.ml", 867, 27022, 27057), 0), 0, Tag1 ("Astlib__Ast_408", 358))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "open_infos"), [((("a")), 100000000, 0, -4405)], (0)), 100000000, 0, -4404)), [25], [0], 0, 0, (("astlib/ast_408.ml", 862, 26864, 26866), ("astlib/ast_408.ml", 868, 27058, 27063), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 102)), 2, 0); Tag1 (("open_description", 7295), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7294)), [(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4403)], (0)), 100000000, 0, -4402)], (0)), 100000000, 0, -4401)), 0, 0, 0, 0, (("astlib/ast_408.ml", 874, 27205, 27207), ("astlib/ast_408.ml", 874, 27205, 27256), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 103)), 2, 0); Tag1 (("open_declaration", 7296), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7294)), [(Tag3 ((("module_expr", 7301)), 0, (0)), 100000000, 0, -4400)], (0)), 100000000, 0, -4399)), 0, 0, 0, 0, (("astlib/ast_408.ml", 878, 27292, 27294), ("astlib/ast_408.ml", 878, 27292, 27339), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 104)), 2, 0); Tag1 (("include_infos", 7297), ([((("a")), 100000000, 0, -4396)], 1, [[(("pincl_mod", 962), 0, ((("a")), 100000000, 0, -4396), (("astlib/ast_408.ml", 885, 27476, 27482), ("astlib/ast_408.ml", 885, 27476, 27496), 0), 0, Tag1 ("Astlib__Ast_408", 359)); (("pincl_loc", 963), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4397), (("astlib/ast_408.ml", 886, 27497, 27503), ("astlib/ast_408.ml", 886, 27497, 27525), 0), 0, Tag1 ("Astlib__Ast_408", 360)); (("pincl_attributes", 964), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4398), (("astlib/ast_408.ml", 887, 27526, 27532), ("astlib/ast_408.ml", 887, 27526, 27561), 0), 0, Tag1 ("Astlib__Ast_408", 361))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -4396)], (0)), 100000000, 0, -4395)), [25], [0], 0, 0, (("astlib/ast_408.ml", 883, 27400, 27402), ("astlib/ast_408.ml", 888, 27562, 27567), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 105)), 2, 0); Tag1 (("include_description", 7298), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7297)), [(Tag3 ((("module_type", 7286)), 0, (0)), 100000000, 0, -4394)], (0)), 100000000, 0, -4393)), 0, 0, 0, 0, (("astlib/ast_408.ml", 890, 27569, 27571), ("astlib/ast_408.ml", 890, 27569, 27622), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 106)), 2, 0); Tag1 (("include_declaration", 7299), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7297)), [(Tag3 ((("module_expr", 7301)), 0, (0)), 100000000, 0, -4392)], (0)), 100000000, 0, -4391)), 0, 0, 0, 0, (("astlib/ast_408.ml", 893, 27643, 27645), ("astlib/ast_408.ml", 893, 27643, 27696), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 107)), 2, 0); Tag1 (("with_constraint", 7300), (0, 0, Tag1 ([(("Pwith_type", 965), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4378)], (0)), 100000000, 0, -4377); (Tag3 ((("type_declaration", 7262)), 0, (0)), 100000000, 0, -4379)]), 0, (("astlib/ast_408.ml", 897, 27785, 27789), ("astlib/ast_408.ml", 897, 27785, 27839), 0), 0, Tag1 ("Astlib__Ast_408", 362)); (("Pwith_module", 966), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4381)], (0)), 100000000, 0, -4380); (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4383)], (0)), 100000000, 0, -4382)]), 0, (("astlib/ast_408.ml", 902, 27972, 27976), ("astlib/ast_408.ml", 902, 27972, 28027), 0), 0, Tag1 ("Astlib__Ast_408", 363)); (("Pwith_typesubst", 967), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4385)], (0)), 100000000, 0, -4384); (Tag3 ((("type_declaration", 7262)), 0, (0)), 100000000, 0, -4386)]), 0, (("astlib/ast_408.ml", 904, 28058, 28062), ("astlib/ast_408.ml", 904, 28058, 28117), 0), 0, Tag1 ("Astlib__Ast_408", 364)); (("Pwith_modsubst", 968), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4388)], (0)), 100000000, 0, -4387); (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4390)], (0)), 100000000, 0, -4389)]), 0, (("astlib/ast_408.ml", 906, 28178, 28182), ("astlib/ast_408.ml", 906, 28178, 28235), 0), 0, Tag1 ("Astlib__Ast_408", 365))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -4376)), 0, 0, 0, 0, (("astlib/ast_408.ml", 896, 27717, 27719), ("astlib/ast_408.ml", 906, 28178, 28235), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 108)), 2, 0); Tag1 (("module_expr", 7301), (0, 0, [[(("pmod_desc", 969), 0, (Tag3 ((("module_expr_desc", 7302)), 0, (0)), 100000000, 0, -4373), (("astlib/ast_408.ml", 913, 28385, 28391), ("astlib/ast_408.ml", 913, 28385, 28419), 0), 0, Tag1 ("Astlib__Ast_408", 366)); (("pmod_loc", 970), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4374), (("astlib/ast_408.ml", 914, 28420, 28426), ("astlib/ast_408.ml", 914, 28420, 28447), 0), 0, Tag1 ("Astlib__Ast_408", 367)); (("pmod_attributes", 971), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4375), (("astlib/ast_408.ml", 915, 28448, 28454), ("astlib/ast_408.ml", 915, 28448, 28482), 0), 0, Tag1 ("Astlib__Ast_408", 368))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -4372)), 0, 0, 0, 0, (("astlib/ast_408.ml", 911, 28319, 28321), ("astlib/ast_408.ml", 916, 28507, 28512), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 109)), 2, 0); Tag1 (("module_expr_desc", 7302), (0, 0, Tag1 ([(("Pmod_ident", 972), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4359)], (0)), 100000000, 0, -4358)]), 0, (("astlib/ast_408.ml", 919, 28584, 28588), ("astlib/ast_408.ml", 919, 28584, 28619), 0), 0, Tag1 ("Astlib__Ast_408", 369)); (("Pmod_structure", 973), ([(Tag3 ((("structure", 7303)), 0, (0)), 100000000, 0, -4360)]), 0, (("astlib/ast_408.ml", 921, 28632, 28636), ("astlib/ast_408.ml", 921, 28632, 28665), 0), 0, Tag1 ("Astlib__Ast_408", 370)); (("Pmod_functor", 974), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4362)], (0)), 100000000, 0, -4361); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7286)), 0, (0)), 100000000, 0, -4364)], (0)), 100000000, 0, -4363); (Tag3 ((("module_expr", 7301)), 0, (0)), 100000000, 0, -4365)]), 0, (("astlib/ast_408.ml", 923, 28691, 28695), ("astlib/ast_408.ml", 923, 28691, 28758), 0), 0, Tag1 ("Astlib__Ast_408", 371)); (("Pmod_apply", 975), ([(Tag3 ((("module_expr", 7301)), 0, (0)), 100000000, 0, -4366); (Tag3 ((("module_expr", 7301)), 0, (0)), 100000000, 0, -4367)]), 0, (("astlib/ast_408.ml", 925, 28792, 28796), ("astlib/ast_408.ml", 925, 28792, 28837), 0), 0, Tag1 ("Astlib__Ast_408", 372)); (("Pmod_constraint", 976), ([(Tag3 ((("module_expr", 7301)), 0, (0)), 100000000, 0, -4368); (Tag3 ((("module_type", 7286)), 0, (0)), 100000000, 0, -4369)]), 0, (("astlib/ast_408.ml", 927, 28857, 28861), ("astlib/ast_408.ml", 927, 28857, 28907), 0), 0, Tag1 ("Astlib__Ast_408", 373)); (("Pmod_unpack", 977), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4370)]), 0, (("astlib/ast_408.ml", 929, 28928, 28932), ("astlib/ast_408.ml", 929, 28928, 28959), 0), 0, Tag1 ("Astlib__Ast_408", 374)); (("Pmod_extension", 978), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4371)]), 0, (("astlib/ast_408.ml", 931, 28978, 28982), ("astlib/ast_408.ml", 931, 28978, 29011), 0), 0, Tag1 ("Astlib__Ast_408", 375))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -4357)), 0, 0, 0, 0, (("astlib/ast_408.ml", 918, 28514, 28516), ("astlib/ast_408.ml", 931, 28978, 29011), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 110)), 2, 0); Tag1 (("structure", 7303), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7304)), 0, (0)), 100000000, 0, -4356)], (0)), 100000000, 0, -4355)), 0, 0, 0, 0, (("astlib/ast_408.ml", 934, 29029, 29031), ("astlib/ast_408.ml", 934, 29029, 29066), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 111)), 2, 0); Tag1 (("structure_item", 7304), (0, 0, [[(("pstr_desc", 979), 0, (Tag3 ((("structure_item_desc", 7305)), 0, (0)), 100000000, 0, -4353), (("astlib/ast_408.ml", 938, 29140, 29146), ("astlib/ast_408.ml", 938, 29140, 29177), 0), 0, Tag1 ("Astlib__Ast_408", 376)); (("pstr_loc", 980), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4354), (("astlib/ast_408.ml", 939, 29178, 29184), ("astlib/ast_408.ml", 939, 29178, 29205), 0), 0, Tag1 ("Astlib__Ast_408", 377))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -4352)), 0, 0, 0, 0, (("astlib/ast_408.ml", 936, 29068, 29070), ("astlib/ast_408.ml", 940, 29206, 29211), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 112)), 2, 0); Tag1 (("structure_item_desc", 7305), (0, 0, Tag1 ([(("Pstr_eval", 981), ([(Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4328); (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4329)]), 0, (("astlib/ast_408.ml", 943, 29289, 29293), ("astlib/ast_408.ml", 943, 29289, 29331), 0), 0, Tag1 ("Astlib__Ast_408", 378)); (("Pstr_value", 982), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "rec_flag"), 0, (0)), 100000000, 0, -4330); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7306)), 0, (0)), 100000000, 0, -4332)], (0)), 100000000, 0, -4331)]), 0, (("astlib/ast_408.ml", 945, 29344, 29348), ("astlib/ast_408.ml", 945, 29344, 29393), 0), 0, Tag1 ("Astlib__Ast_408", 379)); (("Pstr_primitive", 983), ([(Tag3 ((("value_description", 7261)), 0, (0)), 100000000, 0, -4333)]), 0, (("astlib/ast_408.ml", 949, 29532, 29536), ("astlib/ast_408.ml", 949, 29532, 29573), 0), 0, Tag1 ("Astlib__Ast_408", 380)); (("Pstr_type", 984), ([(Tag3 (Tag1 ((("Asttypes", 7223)), "rec_flag"), 0, (0)), 100000000, 0, -4334); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7262)), 0, (0)), 100000000, 0, -4336)], (0)), 100000000, 0, -4335)]), 0, (("astlib/ast_408.ml", 952, 29632, 29636), ("astlib/ast_408.ml", 952, 29632, 29683), 0), 0, Tag1 ("Astlib__Ast_408", 381)); (("Pstr_typext", 985), ([(Tag3 ((("type_extension", 7267)), 0, (0)), 100000000, 0, -4337)]), 0, (("astlib/ast_408.ml", 954, 29729, 29733), ("astlib/ast_408.ml", 954, 29729, 29764), 0), 0, Tag1 ("Astlib__Ast_408", 382)); (("Pstr_exception", 986), ([(Tag3 ((("type_exception", 7269)), 0, (0)), 100000000, 0, -4338)]), 0, (("astlib/ast_408.ml", 956, 29790, 29794), ("astlib/ast_408.ml", 956, 29790, 29828), 0), 0, Tag1 ("Astlib__Ast_408", 383)); (("Pstr_module", 987), ([(Tag3 ((("module_binding", 7307)), 0, (0)), 100000000, 0, -4339)]), 0, (("astlib/ast_408.ml", 959, 29881, 29885), ("astlib/ast_408.ml", 959, 29881, 29916), 0), 0, Tag1 ("Astlib__Ast_408", 384)); (("Pstr_recmodule", 988), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7307)), 0, (0)), 100000000, 0, -4341)], (0)), 100000000, 0, -4340)]), 0, (("astlib/ast_408.ml", 961, 29941, 29945), ("astlib/ast_408.ml", 961, 29941, 29984), 0), 0, Tag1 ("Astlib__Ast_408", 385)); (("Pstr_modtype", 989), ([(Tag3 ((("module_type_declaration", 7293)), 0, (0)), 100000000, 0, -4342)]), 0, (("astlib/ast_408.ml", 963, 30036, 30040), ("astlib/ast_408.ml", 963, 30036, 30081), 0), 0, Tag1 ("Astlib__Ast_408", 386)); (("Pstr_open", 990), ([(Tag3 ((("open_declaration", 7296)), 0, (0)), 100000000, 0, -4343)]), 0, (("astlib/ast_408.ml", 965, 30111, 30115), ("astlib/ast_408.ml", 965, 30111, 30146), 0), 0, Tag1 ("Astlib__Ast_408", 387)); (("Pstr_class", 991), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7285)), 0, (0)), 100000000, 0, -4345)], (0)), 100000000, 0, -4344)]), 0, (("astlib/ast_408.ml", 967, 30164, 30168), ("astlib/ast_408.ml", 967, 30164, 30206), 0), 0, Tag1 ("Astlib__Ast_408", 388)); (("Pstr_class_type", 992), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7278)), 0, (0)), 100000000, 0, -4347)], (0)), 100000000, 0, -4346)]), 0, (("astlib/ast_408.ml", 969, 30253, 30257), ("astlib/ast_408.ml", 969, 30253, 30305), 0), 0, Tag1 ("Astlib__Ast_408", 389)); (("Pstr_include", 993), ([(Tag3 ((("include_declaration", 7299)), 0, (0)), 100000000, 0, -4348)]), 0, (("astlib/ast_408.ml", 971, 30359, 30363), ("astlib/ast_408.ml", 971, 30359, 30400), 0), 0, Tag1 ("Astlib__Ast_408", 390)); (("Pstr_attribute", 994), ([(Tag3 ((("attribute", 7239)), 0, (0)), 100000000, 0, -4349)]), 0, (("astlib/ast_408.ml", 973, 30422, 30426), ("astlib/ast_408.ml", 973, 30422, 30455), 0), 0, Tag1 ("Astlib__Ast_408", 391)); (("Pstr_extension", 995), ([(Tag3 ((("extension", 7240)), 0, (0)), 100000000, 0, -4350); (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4351)]), 0, (("astlib/ast_408.ml", 975, 30474, 30478), ("astlib/ast_408.ml", 975, 30474, 30520), 0), 0, Tag1 ("Astlib__Ast_408", 392))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -4327)), 0, 0, 0, 0, (("astlib/ast_408.ml", 942, 29213, 29215), ("astlib/ast_408.ml", 975, 30474, 30520), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 113)), 2, 0); Tag1 (("value_binding", 7306), (0, 0, [[(("pvb_pat", 996), 0, (Tag3 ((("pattern", 7251)), 0, (0)), 100000000, 0, -4323), (("astlib/ast_408.ml", 980, 30609, 30615), ("astlib/ast_408.ml", 980, 30609, 30632), 0), 0, Tag1 ("Astlib__Ast_408", 393)); (("pvb_expr", 997), 0, (Tag3 ((("expression", 7254)), 0, (0)), 100000000, 0, -4324), (("astlib/ast_408.ml", 981, 30633, 30639), ("astlib/ast_408.ml", 981, 30633, 30660), 0), 0, Tag1 ("Astlib__Ast_408", 394)); (("pvb_attributes", 998), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4325), (("astlib/ast_408.ml", 982, 30661, 30667), ("astlib/ast_408.ml", 982, 30661, 30694), 0), 0, Tag1 ("Astlib__Ast_408", 395)); (("pvb_loc", 999), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4326), (("astlib/ast_408.ml", 983, 30695, 30701), ("astlib/ast_408.ml", 983, 30695, 30721), 0), 0, Tag1 ("Astlib__Ast_408", 396))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -4322)), 0, 0, 0, 0, (("astlib/ast_408.ml", 978, 30539, 30541), ("astlib/ast_408.ml", 984, 30722, 30727), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 114)), 2, 0); Tag1 (("module_binding", 7307), (0, 0, [[(("pmb_name", 1000), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4318)], (0)), 100000000, 0, -4317), (("astlib/ast_408.ml", 988, 30801, 30807), ("astlib/ast_408.ml", 988, 30801, 30828), 0), 0, Tag1 ("Astlib__Ast_408", 397)); (("pmb_expr", 1001), 0, (Tag3 ((("module_expr", 7301)), 0, (0)), 100000000, 0, -4319), (("astlib/ast_408.ml", 989, 30829, 30835), ("astlib/ast_408.ml", 989, 30829, 30857), 0), 0, Tag1 ("Astlib__Ast_408", 398)); (("pmb_attributes", 1002), 0, (Tag3 ((("attributes", 7241)), 0, (0)), 100000000, 0, -4320), (("astlib/ast_408.ml", 990, 30858, 30864), ("astlib/ast_408.ml", 990, 30858, 30891), 0), 0, Tag1 ("Astlib__Ast_408", 399)); (("pmb_loc", 1003), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4321), (("astlib/ast_408.ml", 991, 30892, 30898), ("astlib/ast_408.ml", 991, 30892, 30918), 0), 0, Tag1 ("Astlib__Ast_408", 400))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -4316)), 0, 0, 0, 0, (("astlib/ast_408.ml", 986, 30729, 30731), ("astlib/ast_408.ml", 992, 30919, 30924), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 115)), 2, 0); Tag1 (("toplevel_phrase", 7308), (0, 0, Tag1 ([(("Ptop_def", 1018), ([(Tag3 ((("structure", 7303)), 0, (0)), 100000000, 0, -4314)]), 0, (("astlib/ast_408.ml", 1000, 31059, 31063), ("astlib/ast_408.ml", 1000, 31059, 31086), 0), 0, Tag1 ("Astlib__Ast_408", 405)); (("Ptop_dir", 1019), ([(Tag3 ((("toplevel_directive", 7309)), 0, (0)), 100000000, 0, -4315)]), 0, (("astlib/ast_408.ml", 1001, 31087, 31091), ("astlib/ast_408.ml", 1001, 31087, 31123), 0), 0, Tag1 ("Astlib__Ast_408", 406))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -4313)), 0, 0, 0, 0, (("astlib/ast_408.ml", 999, 30990, 30992), ("astlib/ast_408.ml", 1001, 31087, 31123), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 401)), 1, 0); Tag1 (("toplevel_directive", 7309), (0, 0, [[(("pdir_name", 1020), 0, (Tag3 (Tag1 ((("Asttypes", 7223)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4309)], (0)), 100000000, 0, -4308), (("astlib/ast_408.ml", 1006, 31231, 31237), ("astlib/ast_408.ml", 1006, 31231, 31260), 0), 0, Tag1 ("Astlib__Ast_408", 407)); (("pdir_arg", 1021), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("directive_argument", 7310)), 0, (0)), 100000000, 0, -4311)], (0)), 100000000, 0, -4310), (("astlib/ast_408.ml", 1007, 31261, 31267), ("astlib/ast_408.ml", 1007, 31261, 31304), 0), 0, Tag1 ("Astlib__Ast_408", 408)); (("pdir_loc", 1022), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4312), (("astlib/ast_408.ml", 1008, 31305, 31311), ("astlib/ast_408.ml", 1008, 31305, 31333), 0), 0, Tag1 ("Astlib__Ast_408", 409))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "toplevel_directive"), 0, (0)), 100000000, 0, -4307)), 0, 0, 0, 0, (("astlib/ast_408.ml", 1004, 31151, 31153), ("astlib/ast_408.ml", 1009, 31334, 31339), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 402)), 2, 0); Tag1 (("directive_argument", 7310), (0, 0, [[(("pdira_desc", 1023), 0, (Tag3 ((("directive_argument_desc", 7311)), 0, (0)), 100000000, 0, -4305), (("astlib/ast_408.ml", 1013, 31421, 31427), ("astlib/ast_408.ml", 1013, 31421, 31464), 0), 0, Tag1 ("Astlib__Ast_408", 410)); (("pdira_loc", 1024), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -4306), (("astlib/ast_408.ml", 1014, 31465, 31471), ("astlib/ast_408.ml", 1014, 31465, 31494), 0), 0, Tag1 ("Astlib__Ast_408", 411))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -4304)), 0, 0, 0, 0, (("astlib/ast_408.ml", 1011, 31341, 31343), ("astlib/ast_408.ml", 1015, 31495, 31500), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 403)), 2, 0); Tag1 (("directive_argument_desc", 7311), (0, 0, Tag1 ([(("Pdir_string", 1025), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4298)]), 0, (("astlib/ast_408.ml", 1018, 31586, 31590), ("astlib/ast_408.ml", 1018, 31586, 31613), 0), 0, Tag1 ("Astlib__Ast_408", 412)); (("Pdir_int", 1026), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4299); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -4301)], (0)), 100000000, 0, -4300)]), 0, (("astlib/ast_408.ml", 1019, 31614, 31618), ("astlib/ast_408.ml", 1019, 31614, 31652), 0), 0, Tag1 ("Astlib__Ast_408", 413)); (("Pdir_ident", 1027), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -4302)]), 0, (("astlib/ast_408.ml", 1020, 31653, 31657), ("astlib/ast_408.ml", 1020, 31653, 31684), 0), 0, Tag1 ("Astlib__Ast_408", 414)); (("Pdir_bool", 1028), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -4303)]), 0, (("astlib/ast_408.ml", 1021, 31685, 31689), ("astlib/ast_408.ml", 1021, 31685, 31708), 0), 0, Tag1 ("Astlib__Ast_408", 415))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_408")), "Parsetree"), "directive_argument_desc"), 0, (0)), 100000000, 0, -4297)), 0, 0, 0, 0, (("astlib/ast_408.ml", 1017, 31502, 31504), ("astlib/ast_408.ml", 1021, 31685, 31708), 0), 0, 0, 0, Tag1 ("Astlib__Ast_408", 404)), 2, 0)]), 0, (("astlib/ast_408.ml", 77, 3056, 3056), ("astlib/ast_408.ml", 1023, 31710, 31713), 0), Tag1 ("Astlib__Ast_408", 416)), 0, 0); Tag3 (("Config", 7225), 0, (Tag1 ([(("ast_impl_magic_number", 7312), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4948), 0, (("astlib/ast_408.ml", 1026, 31738, 31744), ("astlib/ast_408.ml", 1026, 31738, 31765), 0), 0, Tag1 ("Astlib__Ast_408", 417)), 0); (("ast_intf_magic_number", 7313), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4947), 0, (("astlib/ast_408.ml", 1027, 31783, 31789), ("astlib/ast_408.ml", 1027, 31783, 31810), 0), 0, Tag1 ("Astlib__Ast_408", 418)), 0)]), 0, (("astlib/ast_408.ml", 1025, 31715, 31715), ("astlib/ast_408.ml", 1028, 31828, 31831), 0), Tag1 ("Astlib__Ast_408", 419)), 0, 0)]), 0, (("astlib/astlib.ml", 31, 1513, 1513), ("astlib/astlib.ml", 31, 1513, 1537), 0), Tag1 ("Astlib", 6)), 0, 0); (("version", 7218), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -4271), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7219), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -4270), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7220), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -4251), 0), 100000000, 0, -4250), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -4267), 0), 100000000, 0, -4266), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -4269), 0), 100000000, 0, -4268), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -4261), 0), 100000000, 0, -4260), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -4233), 0), 100000000, 0, -4232), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -4247), 0), 100000000, 0, -4246), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -4237), 0), 100000000, 0, -4236), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -4259), 0), 100000000, 0, -4258), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -4245), 0), 100000000, 0, -4244), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -4243), 0), 100000000, 0, -4242), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -4241), 0), 100000000, 0, -4240), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -4239), 0), 100000000, 0, -4238), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -4255), 0), 100000000, 0, -4254), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -4263), 0), 100000000, 0, -4262), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -4257), 0), 100000000, 0, -4256), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -4235), 0), 100000000, 0, -4234), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -4249), 0), 100000000, 0, -4248), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -4265), 0), 100000000, 0, -4264), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7217)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -4253), 0), 100000000, 0, -4252), (0, 100000000, 0, -4231)), 100000000, 0, 661)), 100000000, 0, 662)), 100000000, 0, 663)), 100000000, 0, 664)), 100000000, 0, 665)), 100000000, 0, 666)), 100000000, 0, 667)), 100000000, 0, 668)), 100000000, 0, 669)), 100000000, 0, 670)), 100000000, 0, 671)), 100000000, 0, 672)), 100000000, 0, 673)), 100000000, 0, 674)), 100000000, 0, 675)), 100000000, 0, 676)), 100000000, 0, 677)), 100000000, 0, 678)), 100000000, 0, -4212), (0)), 100000000, 0, -4211)], (0)), 100000000, 0, -4210)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7221), ((("witnesses", 6673)), [((("_")), 100000000, 0, -4209)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7220)), 0, (0)), 100000000, 0, -4208)], (0)), 100000000, 0, -4207)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7222), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7220)), 0, (0)), 100000000, 0, -4206)], (0)), 100000000, 0, -4205), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 151, 5544, 5544), ("ast/versions.mli", 151, 5544, 5609), 0), Tag1 ("Ppxlib_ast__Versions", 40)), 0, 0); Tag3 (("OCaml_409", 6683), 0, (Tag1 ([Tag3 (("Ast", 7314), 0, (Tag1 ([Tag3 (("Asttypes", 7320), 0, (Tag1 ([Tag1 (("constant", 7323), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5032)]), 0, (("astlib/ast_409.ml", 23, 1495, 1501), ("astlib/ast_409.ml", 23, 1495, 1517), 0), 0, Tag1 ("Astlib__Ast_409", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -5033)]), 0, (("astlib/ast_409.ml", 24, 1518, 1522), ("astlib/ast_409.ml", 24, 1518, 1542), 0), 0, Tag1 ("Astlib__Ast_409", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5034); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5036)], (0)), 100000000, 0, -5035)]), 0, (("astlib/ast_409.ml", 25, 1543, 1547), ("astlib/ast_409.ml", 25, 1543, 1587), 0), 0, Tag1 ("Astlib__Ast_409", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5037)]), 0, (("astlib/ast_409.ml", 26, 1588, 1592), ("astlib/ast_409.ml", 26, 1588, 1615), 0), 0, Tag1 ("Astlib__Ast_409", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -5038)]), 0, (("astlib/ast_409.ml", 27, 1616, 1620), ("astlib/ast_409.ml", 27, 1616, 1642), 0), 0, Tag1 ("Astlib__Ast_409", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -5039)]), 0, (("astlib/ast_409.ml", 28, 1643, 1647), ("astlib/ast_409.ml", 28, 1643, 1669), 0), 0, Tag1 ("Astlib__Ast_409", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -5040)]), 0, (("astlib/ast_409.ml", 29, 1670, 1674), ("astlib/ast_409.ml", 29, 1670, 1704), 0), 0, Tag1 ("Astlib__Ast_409", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -5031)), 0, 0, 0, 0, (("astlib/ast_409.ml", 22, 1441, 1443), ("astlib/ast_409.ml", 29, 1670, 1704), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 0)), 1, 0); Tag1 (("rec_flag", 7324), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_409.ml", 31, 1706, 1760), ("astlib/ast_409.ml", 31, 1706, 1772), 0), 0, Tag1 ("Astlib__Ast_409", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_409.ml", 31, 1706, 1773), ("astlib/ast_409.ml", 31, 1706, 1784), 0), 0, Tag1 ("Astlib__Ast_409", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -5030)), 0, 0, 0, 0, (("astlib/ast_409.ml", 31, 1706, 1708), ("astlib/ast_409.ml", 31, 1706, 1784), 0), 0, 1, 0, Tag1 ("Astlib__Ast_409", 8)), 1, 0); Tag1 (("direction_flag", 7325), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_409.ml", 33, 1786, 1852), ("astlib/ast_409.ml", 33, 1786, 1856), 0), 0, Tag1 ("Astlib__Ast_409", 12)); (("Downto", 333), (0), 0, (("astlib/ast_409.ml", 33, 1786, 1857), ("astlib/ast_409.ml", 33, 1786, 1865), 0), 0, Tag1 ("Astlib__Ast_409", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -5029)), 0, 0, 0, 0, (("astlib/ast_409.ml", 33, 1786, 1788), ("astlib/ast_409.ml", 33, 1786, 1865), 0), 0, 1, 0, Tag1 ("Astlib__Ast_409", 11)), 1, 0); Tag1 (("private_flag", 7326), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_409.ml", 36, 1921, 1983), ("astlib/ast_409.ml", 36, 1921, 1990), 0), 0, Tag1 ("Astlib__Ast_409", 15)); (("Public", 336), (0), 0, (("astlib/ast_409.ml", 36, 1921, 1991), ("astlib/ast_409.ml", 36, 1921, 1999), 0), 0, Tag1 ("Astlib__Ast_409", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -5028)), 0, 0, 0, 0, (("astlib/ast_409.ml", 36, 1921, 1923), ("astlib/ast_409.ml", 36, 1921, 1999), 0), 0, 1, 0, Tag1 ("Astlib__Ast_409", 14)), 1, 0); Tag1 (("mutable_flag", 7327), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_409.ml", 38, 2001, 2063), ("astlib/ast_409.ml", 38, 2001, 2072), 0), 0, Tag1 ("Astlib__Ast_409", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_409.ml", 38, 2001, 2073), ("astlib/ast_409.ml", 38, 2001, 2082), 0), 0, Tag1 ("Astlib__Ast_409", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -5027)), 0, 0, 0, 0, (("astlib/ast_409.ml", 38, 2001, 2003), ("astlib/ast_409.ml", 38, 2001, 2082), 0), 0, 1, 0, Tag1 ("Astlib__Ast_409", 17)), 1, 0); Tag1 (("virtual_flag", 7328), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_409.ml", 40, 2084, 2146), ("astlib/ast_409.ml", 40, 2084, 2153), 0), 0, Tag1 ("Astlib__Ast_409", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_409.ml", 40, 2084, 2154), ("astlib/ast_409.ml", 40, 2084, 2164), 0), 0, Tag1 ("Astlib__Ast_409", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -5026)), 0, 0, 0, 0, (("astlib/ast_409.ml", 40, 2084, 2086), ("astlib/ast_409.ml", 40, 2084, 2164), 0), 0, 1, 0, Tag1 ("Astlib__Ast_409", 20)), 1, 0); Tag1 (("override_flag", 7329), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_409.ml", 42, 2166, 2230), ("astlib/ast_409.ml", 42, 2166, 2238), 0), 0, Tag1 ("Astlib__Ast_409", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_409.ml", 42, 2166, 2239), ("astlib/ast_409.ml", 42, 2166, 2246), 0), 0, Tag1 ("Astlib__Ast_409", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -5025)), 0, 0, 0, 0, (("astlib/ast_409.ml", 42, 2166, 2168), ("astlib/ast_409.ml", 42, 2166, 2246), 0), 0, 1, 0, Tag1 ("Astlib__Ast_409", 23)), 1, 0); Tag1 (("closed_flag", 7330), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_409.ml", 44, 2248, 2308), ("astlib/ast_409.ml", 44, 2248, 2314), 0), 0, Tag1 ("Astlib__Ast_409", 27)); (("Open", 348), (0), 0, (("astlib/ast_409.ml", 44, 2248, 2315), ("astlib/ast_409.ml", 44, 2248, 2321), 0), 0, Tag1 ("Astlib__Ast_409", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -5024)), 0, 0, 0, 0, (("astlib/ast_409.ml", 44, 2248, 2250), ("astlib/ast_409.ml", 44, 2248, 2321), 0), 0, 1, 0, Tag1 ("Astlib__Ast_409", 26)), 1, 0); Tag1 (("label", 7331), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5023)), 0, 0, 0, 0, (("astlib/ast_409.ml", 46, 2323, 2325), ("astlib/ast_409.ml", 46, 2323, 2344), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 29)), 1, 0); Tag1 (("arg_label", 7332), (0, 0, Tag1 ([(("Nolabel", 351), (0), 0, (("astlib/ast_409.ml", 49, 2402, 2408), ("astlib/ast_409.ml", 49, 2402, 2415), 0), 0, Tag1 ("Astlib__Ast_409", 31)); (("Labelled", 352), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5021)]), 0, (("astlib/ast_409.ml", 50, 2416, 2420), ("astlib/ast_409.ml", 50, 2416, 2440), 0), 0, Tag1 ("Astlib__Ast_409", 32)); (("Optional", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5022)]), 0, (("astlib/ast_409.ml", 51, 2463, 2467), ("astlib/ast_409.ml", 51, 2463, 2487), 0), 0, Tag1 ("Astlib__Ast_409", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -5020)), 0, 0, 0, 0, (("astlib/ast_409.ml", 48, 2346, 2348), ("astlib/ast_409.ml", 51, 2463, 2487), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 30)), 1, 0); Tag1 (("loc", 7333), ([((("a")), 100000000, 0, -5018)], 1, [[(("txt", 355), 0, ((("a")), 100000000, 0, -5018), (("astlib/ast_409.ml", 54, 2547, 2551), ("astlib/ast_409.ml", 54, 2547, 2560), 0), 0, Tag1 ("Astlib__Ast_409", 35)); (("loc", 365), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5019), (("astlib/ast_409.ml", 55, 2561, 2565), ("astlib/ast_409.ml", 55, 2561, 2582), 0), 0, Tag1 ("Astlib__Ast_409", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -5018)], (0)), 100000000, 0, -5017)), [25], [0], 0, 0, (("astlib/ast_409.ml", 53, 2511, 2513), ("astlib/ast_409.ml", 56, 2583, 2586), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 34)), 1, 0); Tag1 (("variance", 7334), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_409.ml", 60, 2643, 2647), ("astlib/ast_409.ml", 60, 2643, 2658), 0), 0, Tag1 ("Astlib__Ast_409", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_409.ml", 61, 2659, 2663), ("astlib/ast_409.ml", 61, 2659, 2678), 0), 0, Tag1 ("Astlib__Ast_409", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_409.ml", 62, 2679, 2683), ("astlib/ast_409.ml", 62, 2679, 2694), 0), 0, Tag1 ("Astlib__Ast_409", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -5016)), 0, 0, 0, 0, (("astlib/ast_409.ml", 59, 2589, 2591), ("astlib/ast_409.ml", 62, 2679, 2694), 0), 0, 1, 0, Tag1 ("Astlib__Ast_409", 37)), 1, 0)]), 0, (("astlib/ast_409.ml", 20, 1415, 1415), ("astlib/ast_409.ml", 64, 2696, 2699), 0), Tag1 ("Astlib__Ast_409", 41)), 0, 0); Tag3 (("Parsetree", 7321), 0, (Tag1 ([Tag1 (("constant", 7335), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5681); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -5683)], (0)), 100000000, 0, -5682)]), 0, (("astlib/ast_409.ml", 71, 2800, 2806), ("astlib/ast_409.ml", 71, 2800, 2844), 0), 0, Tag1 ("Astlib__Ast_409", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -5684)]), 0, (("astlib/ast_409.ml", 77, 2998, 3002), ("astlib/ast_409.ml", 77, 2998, 3023), 0), 0, Tag1 ("Astlib__Ast_409", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5685); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5687)], (0)), 100000000, 0, -5686)]), 0, (("astlib/ast_409.ml", 79, 3038, 3042), ("astlib/ast_409.ml", 79, 3038, 3083), 0), 0, Tag1 ("Astlib__Ast_409", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5688); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -5690)], (0)), 100000000, 0, -5689)]), 0, (("astlib/ast_409.ml", 83, 3145, 3149), ("astlib/ast_409.ml", 83, 3145, 3187), 0), 0, Tag1 ("Astlib__Ast_409", 46))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -5680)), 0, 0, 0, 0, (("astlib/ast_409.ml", 70, 2745, 2747), ("astlib/ast_409.ml", 83, 3145, 3187), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 42)), 1, 0); Tag1 (("attribute", 7336), (0, 0, [[(("attr_name", 716), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5677)], (0)), 100000000, 0, -5676), (("astlib/ast_409.ml", 93, 3413, 3417), ("astlib/ast_409.ml", 93, 3413, 3440), 0), 0, Tag1 ("Astlib__Ast_409", 116)); (("attr_payload", 717), 0, (Tag3 ((("payload", 7339)), 0, (0)), 100000000, 0, -5678), (("astlib/ast_409.ml", 94, 3441, 3445), ("astlib/ast_409.ml", 94, 3441, 3468), 0), 0, Tag1 ("Astlib__Ast_409", 117)); (("attr_loc", 718), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5679), (("astlib/ast_409.ml", 95, 3469, 3473), ("astlib/ast_409.ml", 95, 3469, 3495), 0), 0, Tag1 ("Astlib__Ast_409", 118))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "attribute"), 0, (0)), 100000000, 0, -5675)), 0, 0, 0, 0, (("astlib/ast_409.ml", 92, 3354, 3356), ("astlib/ast_409.ml", 96, 3496, 3499), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 47)), 1, 0); Tag1 (("extension", 7337), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5673)], (0)), 100000000, 0, -5672); (Tag3 ((("payload", 7339)), 0, (0)), 100000000, 0, -5674)]), 100000000, 0, -5671)), 0, 0, 0, 0, (("astlib/ast_409.ml", 104, 3639, 3641), ("astlib/ast_409.ml", 104, 3639, 3677), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 48)), 2, 0); Tag1 (("attributes", 7338), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 7336)), 0, (0)), 100000000, 0, -5670)], (0)), 100000000, 0, -5669)), 0, 0, 0, 0, (("astlib/ast_409.ml", 111, 3778, 3780), ("astlib/ast_409.ml", 111, 3778, 3811), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 49)), 2, 0); Tag1 (("payload", 7339), (0, 0, Tag1 ([(("PStr", 719), ([(Tag3 ((("structure", 7400)), 0, (0)), 100000000, 0, -5663)]), 0, (("astlib/ast_409.ml", 114, 3865, 3869), ("astlib/ast_409.ml", 114, 3865, 3888), 0), 0, Tag1 ("Astlib__Ast_409", 119)); (("PSig", 720), ([(Tag3 ((("signature", 7385)), 0, (0)), 100000000, 0, -5664)]), 0, (("astlib/ast_409.ml", 115, 3889, 3893), ("astlib/ast_409.ml", 115, 3889, 3912), 0), 0, Tag1 ("Astlib__Ast_409", 120)); (("PTyp", 721), ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5665)]), 0, (("astlib/ast_409.ml", 116, 3925, 3929), ("astlib/ast_409.ml", 116, 3925, 3948), 0), 0, Tag1 ("Astlib__Ast_409", 121)); (("PPat", 722), ([(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5666); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5668)], (0)), 100000000, 0, -5667)]), 0, (("astlib/ast_409.ml", 117, 3960, 3964), ("astlib/ast_409.ml", 117, 3960, 4001), 0), 0, Tag1 ("Astlib__Ast_409", 122))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -5662)), 0, 0, 0, 0, (("astlib/ast_409.ml", 113, 3813, 3815), ("astlib/ast_409.ml", 117, 3960, 4001), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 50)), 2, 0); Tag1 (("core_type", 7340), (0, 0, [[(("ptyp_desc", 723), 0, (Tag3 ((("core_type_desc", 7342)), 0, (0)), 100000000, 0, -5657), (("astlib/ast_409.ml", 125, 4146, 4152), ("astlib/ast_409.ml", 125, 4146, 4178), 0), 0, Tag1 ("Astlib__Ast_409", 123)); (("ptyp_loc", 724), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5658), (("astlib/ast_409.ml", 126, 4179, 4185), ("astlib/ast_409.ml", 126, 4179, 4206), 0), 0, Tag1 ("Astlib__Ast_409", 124)); (("ptyp_loc_stack", 725), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5660)], (0)), 100000000, 0, -5659), (("astlib/ast_409.ml", 127, 4207, 4213), ("astlib/ast_409.ml", 127, 4207, 4245), 0), 0, Tag1 ("Astlib__Ast_409", 125)); (("ptyp_attributes", 726), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5661), (("astlib/ast_409.ml", 128, 4246, 4252), ("astlib/ast_409.ml", 128, 4246, 4280), 0), 0, Tag1 ("Astlib__Ast_409", 126))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -5656)), 0, 0, 0, 0, (("astlib/ast_409.ml", 123, 4084, 4086), ("astlib/ast_409.ml", 129, 4305, 4310), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 51)), 2, 0); Tag1 (("typ", 7341), (0, 0, 0, 1, ((Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5655)), 0, 0, 0, 0, (("astlib/ast_409.ml", 131, 4312, 4314), ("astlib/ast_409.ml", 131, 4312, 4333), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 52)), 2, 0); Tag1 (("core_type_desc", 7342), (0, 0, Tag1 ([(("Ptyp_any", 727), (0), 0, (("astlib/ast_409.ml", 134, 4401, 4405), ("astlib/ast_409.ml", 134, 4401, 4415), 0), 0, Tag1 ("Astlib__Ast_409", 127)); (("Ptyp_var", 728), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5624)]), 0, (("astlib/ast_409.ml", 136, 4429, 4433), ("astlib/ast_409.ml", 136, 4429, 4453), 0), 0, Tag1 ("Astlib__Ast_409", 128)); (("Ptyp_arrow", 729), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "arg_label"), 0, (0)), 100000000, 0, -5625); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5626); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5627)]), 0, (("astlib/ast_409.ml", 138, 4467, 4471), ("astlib/ast_409.ml", 138, 4467, 4520), 0), 0, Tag1 ("Astlib__Ast_409", 129)); (("Ptyp_tuple", 730), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5629)], (0)), 100000000, 0, -5628)]), 0, (("astlib/ast_409.ml", 143, 4619, 4623), ("astlib/ast_409.ml", 143, 4619, 4653), 0), 0, Tag1 ("Astlib__Ast_409", 130)); (("Ptyp_constr", 731), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5631)], (0)), 100000000, 0, -5630); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5633)], (0)), 100000000, 0, -5632)]), 0, (("astlib/ast_409.ml", 148, 4708, 4712), ("astlib/ast_409.ml", 148, 4708, 4761), 0), 0, Tag1 ("Astlib__Ast_409", 131)); (("Ptyp_object", 735), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 7346)), 0, (0)), 100000000, 0, -5635)], (0)), 100000000, 0, -5634); (Tag3 (Tag1 ((("Asttypes", 7320)), "closed_flag"), 0, (0)), 100000000, 0, -5636)]), 0, (("astlib/ast_409.ml", 153, 4830, 4834), ("astlib/ast_409.ml", 153, 4830, 4882), 0), 0, Tag1 ("Astlib__Ast_409", 132)); (("Ptyp_class", 736), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5638)], (0)), 100000000, 0, -5637); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5640)], (0)), 100000000, 0, -5639)]), 0, (("astlib/ast_409.ml", 157, 4986, 4990), ("astlib/ast_409.ml", 157, 4986, 5038), 0), 0, Tag1 ("Astlib__Ast_409", 133)); (("Ptyp_alias", 737), ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5641); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5642)]), 0, (("astlib/ast_409.ml", 162, 5110, 5114), ("astlib/ast_409.ml", 162, 5110, 5148), 0), 0, Tag1 ("Astlib__Ast_409", 134)); (("Ptyp_variant", 738), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 7344)), 0, (0)), 100000000, 0, -5644)], (0)), 100000000, 0, -5643); (Tag3 (Tag1 ((("Asttypes", 7320)), "closed_flag"), 0, (0)), 100000000, 0, -5645); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5648)], (0)), 100000000, 0, -5647)], (0)), 100000000, 0, -5646)]), 0, (("astlib/ast_409.ml", 164, 5167, 5171), ("astlib/ast_409.ml", 164, 5167, 5237), 0), 0, Tag1 ("Astlib__Ast_409", 135)); (("Ptyp_poly", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5651)], (0)), 100000000, 0, -5650)], (0)), 100000000, 0, -5649); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5652)]), 0, (("astlib/ast_409.ml", 170, 5482, 5486), ("astlib/ast_409.ml", 170, 5482, 5528), 0), 0, Tag1 ("Astlib__Ast_409", 136)); (("Ptyp_package", 740), ([(Tag3 ((("package_type", 7343)), 0, (0)), 100000000, 0, -5653)]), 0, (("astlib/ast_409.ml", 190, 6011, 6015), ("astlib/ast_409.ml", 190, 6011, 6045), 0), 0, Tag1 ("Astlib__Ast_409", 137)); (("Ptyp_extension", 741), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5654)]), 0, (("astlib/ast_409.ml", 192, 6067, 6071), ("astlib/ast_409.ml", 192, 6067, 6100), 0), 0, Tag1 ("Astlib__Ast_409", 138))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -5623)), 0, 0, 0, 0, (("astlib/ast_409.ml", 133, 4335, 4337), ("astlib/ast_409.ml", 192, 6067, 6100), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 53)), 2, 0); Tag1 (("package_type", 7343), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5617)], (0)), 100000000, 0, -5616); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5621)], (0)), 100000000, 0, -5620); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5622)]), 100000000, 0, -5619)], (0)), 100000000, 0, -5618)]), 100000000, 0, -5615)), 0, 0, 0, 0, (("astlib/ast_409.ml", 195, 6118, 6120), ("astlib/ast_409.ml", 195, 6118, 6191), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 54)), 2, 0); Tag1 (("row_field", 7344), (0, 0, [[(("prf_desc", 742), 0, (Tag3 ((("row_field_desc", 7345)), 0, (0)), 100000000, 0, -5612), (("astlib/ast_409.ml", 202, 6335, 6339), ("astlib/ast_409.ml", 202, 6335, 6365), 0), 0, Tag1 ("Astlib__Ast_409", 139)); (("prf_loc", 743), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5613), (("astlib/ast_409.ml", 203, 6366, 6370), ("astlib/ast_409.ml", 203, 6366, 6391), 0), 0, Tag1 ("Astlib__Ast_409", 140)); (("prf_attributes", 744), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5614), (("astlib/ast_409.ml", 204, 6392, 6396), ("astlib/ast_409.ml", 204, 6392, 6424), 0), 0, Tag1 ("Astlib__Ast_409", 141))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -5611)), 0, 0, 0, 0, (("astlib/ast_409.ml", 201, 6277, 6279), ("astlib/ast_409.ml", 205, 6425, 6428), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 55)), 2, 0); Tag1 (("row_field_desc", 7345), (0, 0, Tag1 ([(("Rtag", 745), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5606)], (0)), 100000000, 0, -5605); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -5607); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5609)], (0)), 100000000, 0, -5608)]), 0, (("astlib/ast_409.ml", 208, 6496, 6500), ("astlib/ast_409.ml", 208, 6496, 6543), 0), 0, Tag1 ("Astlib__Ast_409", 142)); (("Rinherit", 746), ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5610)]), 0, (("astlib/ast_409.ml", 219, 6942, 6946), ("astlib/ast_409.ml", 219, 6942, 6969), 0), 0, Tag1 ("Astlib__Ast_409", 143))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "row_field_desc"), 0, (0)), 100000000, 0, -5604)), 0, 0, 0, 0, (("astlib/ast_409.ml", 207, 6430, 6432), ("astlib/ast_409.ml", 219, 6942, 6969), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 56)), 2, 0); Tag1 (("object_field", 7346), (0, 0, [[(("pof_desc", 747), 0, (Tag3 ((("object_field_desc", 7347)), 0, (0)), 100000000, 0, -5601), (("astlib/ast_409.ml", 223, 7051, 7055), ("astlib/ast_409.ml", 223, 7051, 7084), 0), 0, Tag1 ("Astlib__Ast_409", 144)); (("pof_loc", 748), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5602), (("astlib/ast_409.ml", 224, 7085, 7089), ("astlib/ast_409.ml", 224, 7085, 7110), 0), 0, Tag1 ("Astlib__Ast_409", 145)); (("pof_attributes", 749), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5603), (("astlib/ast_409.ml", 225, 7111, 7115), ("astlib/ast_409.ml", 225, 7111, 7143), 0), 0, Tag1 ("Astlib__Ast_409", 146))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "object_field"), 0, (0)), 100000000, 0, -5600)), 0, 0, 0, 0, (("astlib/ast_409.ml", 222, 6987, 6989), ("astlib/ast_409.ml", 226, 7144, 7147), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 57)), 2, 0); Tag1 (("object_field_desc", 7347), (0, 0, Tag1 ([(("Otag", 750), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5597)], (0)), 100000000, 0, -5596); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5598)]), 0, (("astlib/ast_409.ml", 229, 7221, 7225), ("astlib/ast_409.ml", 229, 7221, 7256), 0), 0, Tag1 ("Astlib__Ast_409", 147)); (("Oinherit", 751), ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5599)]), 0, (("astlib/ast_409.ml", 230, 7257, 7261), ("astlib/ast_409.ml", 230, 7257, 7284), 0), 0, Tag1 ("Astlib__Ast_409", 148))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "object_field_desc"), 0, (0)), 100000000, 0, -5595)), 0, 0, 0, 0, (("astlib/ast_409.ml", 228, 7149, 7151), ("astlib/ast_409.ml", 230, 7257, 7284), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 58)), 2, 0); Tag1 (("pattern", 7348), (0, 0, [[(("ppat_desc", 752), 0, (Tag3 ((("pattern_desc", 7350)), 0, (0)), 100000000, 0, -5590), (("astlib/ast_409.ml", 236, 7362, 7368), ("astlib/ast_409.ml", 236, 7362, 7392), 0), 0, Tag1 ("Astlib__Ast_409", 149)); (("ppat_loc", 753), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5591), (("astlib/ast_409.ml", 237, 7393, 7399), ("astlib/ast_409.ml", 237, 7393, 7420), 0), 0, Tag1 ("Astlib__Ast_409", 150)); (("ppat_loc_stack", 754), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5593)], (0)), 100000000, 0, -5592), (("astlib/ast_409.ml", 238, 7421, 7427), ("astlib/ast_409.ml", 238, 7421, 7459), 0), 0, Tag1 ("Astlib__Ast_409", 151)); (("ppat_attributes", 755), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5594), (("astlib/ast_409.ml", 239, 7460, 7466), ("astlib/ast_409.ml", 239, 7460, 7494), 0), 0, Tag1 ("Astlib__Ast_409", 152))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -5589)), 0, 0, 0, 0, (("astlib/ast_409.ml", 234, 7304, 7306), ("astlib/ast_409.ml", 240, 7519, 7524), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 59)), 2, 0); Tag1 (("pat", 7349), (0, 0, 0, 1, ((Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5588)), 0, 0, 0, 0, (("astlib/ast_409.ml", 242, 7526, 7528), ("astlib/ast_409.ml", 242, 7526, 7545), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 60)), 2, 0); Tag1 (("pattern_desc", 7350), (0, 0, Tag1 ([(("Ppat_any", 756), (0), 0, (("astlib/ast_409.ml", 245, 7609, 7613), ("astlib/ast_409.ml", 245, 7609, 7623), 0), 0, Tag1 ("Astlib__Ast_409", 153)); (("Ppat_var", 757), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5550)], (0)), 100000000, 0, -5549)]), 0, (("astlib/ast_409.ml", 247, 7636, 7640), ("astlib/ast_409.ml", 247, 7636, 7664), 0), 0, Tag1 ("Astlib__Ast_409", 154)); (("Ppat_alias", 758), ([(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5551); (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5553)], (0)), 100000000, 0, -5552)]), 0, (("astlib/ast_409.ml", 249, 7677, 7681), ("astlib/ast_409.ml", 249, 7677, 7717), 0), 0, Tag1 ("Astlib__Ast_409", 155)); (("Ppat_constant", 759), ([(Tag3 ((("constant", 7335)), 0, (0)), 100000000, 0, -5554)]), 0, (("astlib/ast_409.ml", 251, 7736, 7740), ("astlib/ast_409.ml", 251, 7736, 7767), 0), 0, Tag1 ("Astlib__Ast_409", 156)); (("Ppat_interval", 760), ([(Tag3 ((("constant", 7335)), 0, (0)), 100000000, 0, -5555); (Tag3 ((("constant", 7335)), 0, (0)), 100000000, 0, -5556)]), 0, (("astlib/ast_409.ml", 253, 7810, 7814), ("astlib/ast_409.ml", 253, 7810, 7852), 0), 0, Tag1 ("Astlib__Ast_409", 157)); (("Ppat_tuple", 761), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5558)], (0)), 100000000, 0, -5557)]), 0, (("astlib/ast_409.ml", 258, 7974, 7978), ("astlib/ast_409.ml", 258, 7974, 8006), 0), 0, Tag1 ("Astlib__Ast_409", 158)); (("Ppat_construct", 762), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5560)], (0)), 100000000, 0, -5559); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5562)], (0)), 100000000, 0, -5561)]), 0, (("astlib/ast_409.ml", 263, 8061, 8065), ("astlib/ast_409.ml", 263, 8061, 8117), 0), 0, Tag1 ("Astlib__Ast_409", 159)); (("Ppat_variant", 763), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5563); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5565)], (0)), 100000000, 0, -5564)]), 0, (("astlib/ast_409.ml", 268, 8241, 8245), ("astlib/ast_409.ml", 268, 8241, 8285), 0), 0, Tag1 ("Astlib__Ast_409", 160)); (("Ppat_record", 764), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5569)], (0)), 100000000, 0, -5568); (Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5570)]), 100000000, 0, -5567)], (0)), 100000000, 0, -5566); (Tag3 (Tag1 ((("Asttypes", 7320)), "closed_flag"), 0, (0)), 100000000, 0, -5571)]), 0, (("astlib/ast_409.ml", 272, 8353, 8357), ("astlib/ast_409.ml", 272, 8353, 8420), 0), 0, Tag1 ("Astlib__Ast_409", 161)); (("Ppat_array", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5573)], (0)), 100000000, 0, -5572)]), 0, (("astlib/ast_409.ml", 278, 8549, 8553), ("astlib/ast_409.ml", 278, 8549, 8581), 0), 0, Tag1 ("Astlib__Ast_409", 162)); (("Ppat_or", 766), ([(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5574); (Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5575)]), 0, (("astlib/ast_409.ml", 280, 8610, 8614), ("astlib/ast_409.ml", 280, 8610, 8644), 0), 0, Tag1 ("Astlib__Ast_409", 163)); (("Ppat_constraint", 767), ([(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5576); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5577)]), 0, (("astlib/ast_409.ml", 282, 8663, 8667), ("astlib/ast_409.ml", 282, 8663, 8707), 0), 0, Tag1 ("Astlib__Ast_409", 164)); (("Ppat_type", 768), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5579)], (0)), 100000000, 0, -5578)]), 0, (("astlib/ast_409.ml", 284, 8726, 8730), ("astlib/ast_409.ml", 284, 8726, 8760), 0), 0, Tag1 ("Astlib__Ast_409", 165)); (("Ppat_lazy", 769), ([(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5580)]), 0, (("astlib/ast_409.ml", 286, 8779, 8783), ("astlib/ast_409.ml", 286, 8779, 8805), 0), 0, Tag1 ("Astlib__Ast_409", 166)); (("Ppat_unpack", 770), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5582)], (0)), 100000000, 0, -5581)]), 0, (("astlib/ast_409.ml", 288, 8823, 8827), ("astlib/ast_409.ml", 288, 8823, 8854), 0), 0, Tag1 ("Astlib__Ast_409", 167)); (("Ppat_exception", 771), ([(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5583)]), 0, (("astlib/ast_409.ml", 293, 8976, 8980), ("astlib/ast_409.ml", 293, 8976, 9007), 0), 0, Tag1 ("Astlib__Ast_409", 168)); (("Ppat_extension", 772), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5584)]), 0, (("astlib/ast_409.ml", 295, 9030, 9034), ("astlib/ast_409.ml", 295, 9030, 9063), 0), 0, Tag1 ("Astlib__Ast_409", 169)); (("Ppat_open", 773), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5586)], (0)), 100000000, 0, -5585); (Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5587)]), 0, (("astlib/ast_409.ml", 297, 9080, 9084), ("astlib/ast_409.ml", 297, 9080, 9124), 0), 0, Tag1 ("Astlib__Ast_409", 170))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -5548)), 0, 0, 0, 0, (("astlib/ast_409.ml", 244, 7547, 7549), ("astlib/ast_409.ml", 297, 9080, 9124), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 61)), 2, 0); Tag1 (("expression", 7351), (0, 0, [[(("pexp_desc", 774), 0, (Tag3 ((("expression_desc", 7353)), 0, (0)), 100000000, 0, -5543), (("astlib/ast_409.ml", 304, 9233, 9239), ("astlib/ast_409.ml", 304, 9233, 9266), 0), 0, Tag1 ("Astlib__Ast_409", 171)); (("pexp_loc", 775), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5544), (("astlib/ast_409.ml", 305, 9267, 9273), ("astlib/ast_409.ml", 305, 9267, 9294), 0), 0, Tag1 ("Astlib__Ast_409", 172)); (("pexp_loc_stack", 776), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5546)], (0)), 100000000, 0, -5545), (("astlib/ast_409.ml", 306, 9295, 9301), ("astlib/ast_409.ml", 306, 9295, 9333), 0), 0, Tag1 ("Astlib__Ast_409", 173)); (("pexp_attributes", 777), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5547), (("astlib/ast_409.ml", 307, 9334, 9340), ("astlib/ast_409.ml", 307, 9334, 9368), 0), 0, Tag1 ("Astlib__Ast_409", 174))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -5542)), 0, 0, 0, 0, (("astlib/ast_409.ml", 302, 9169, 9171), ("astlib/ast_409.ml", 308, 9393, 9398), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 62)), 2, 0); Tag1 (("expr", 7352), (0, 0, 0, 1, ((Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5541)), 0, 0, 0, 0, (("astlib/ast_409.ml", 310, 9400, 9402), ("astlib/ast_409.ml", 310, 9400, 9423), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 63)), 2, 0); Tag1 (("expression_desc", 7353), (0, 0, Tag1 ([(("Pexp_ident", 778), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5443)], (0)), 100000000, 0, -5442)]), 0, (("astlib/ast_409.ml", 313, 9493, 9497), ("astlib/ast_409.ml", 313, 9493, 9528), 0), 0, Tag1 ("Astlib__Ast_409", 175)); (("Pexp_constant", 779), ([(Tag3 ((("constant", 7335)), 0, (0)), 100000000, 0, -5444)]), 0, (("astlib/ast_409.ml", 317, 9556, 9560), ("astlib/ast_409.ml", 317, 9556, 9587), 0), 0, Tag1 ("Astlib__Ast_409", 176)); (("Pexp_let", 780), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "rec_flag"), 0, (0)), 100000000, 0, -5445); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7403)), 0, (0)), 100000000, 0, -5447)], (0)), 100000000, 0, -5446); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5448)]), 0, (("astlib/ast_409.ml", 319, 9630, 9634), ("astlib/ast_409.ml", 319, 9630, 9690), 0), 0, Tag1 ("Astlib__Ast_409", 177)); (("Pexp_function", 781), ([(Tag3 ((("cases", 7355)), 0, (0)), 100000000, 0, -5449)]), 0, (("astlib/ast_409.ml", 323, 9839, 9843), ("astlib/ast_409.ml", 323, 9839, 9867), 0), 0, Tag1 ("Astlib__Ast_409", 178)); (("Pexp_fun", 782), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "arg_label"), 0, (0)), 100000000, 0, -5450); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5452)], (0)), 100000000, 0, -5451); (Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5453); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5454)]), 0, (("astlib/ast_409.ml", 325, 9913, 9917), ("astlib/ast_409.ml", 325, 9913, 9983), 0), 0, Tag1 ("Astlib__Ast_409", 179)); (("Pexp_apply", 783), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5455); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "arg_label"), 0, (0)), 100000000, 0, -5458); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5459)]), 100000000, 0, -5457)], (0)), 100000000, 0, -5456)]), 0, (("astlib/ast_409.ml", 336, 10433, 10437), ("astlib/ast_409.ml", 336, 10433, 10495), 0), 0, Tag1 ("Astlib__Ast_409", 180)); (("Pexp_match", 784), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5460); (Tag3 ((("cases", 7355)), 0, (0)), 100000000, 0, -5461)]), 0, (("astlib/ast_409.ml", 343, 10648, 10652), ("astlib/ast_409.ml", 343, 10648, 10686), 0), 0, Tag1 ("Astlib__Ast_409", 181)); (("Pexp_try", 785), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5462); (Tag3 ((("cases", 7355)), 0, (0)), 100000000, 0, -5463)]), 0, (("astlib/ast_409.ml", 345, 10737, 10741), ("astlib/ast_409.ml", 345, 10737, 10773), 0), 0, Tag1 ("Astlib__Ast_409", 182)); (("Pexp_tuple", 786), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5465)], (0)), 100000000, 0, -5464)]), 0, (("astlib/ast_409.ml", 347, 10822, 10826), ("astlib/ast_409.ml", 347, 10822, 10857), 0), 0, Tag1 ("Astlib__Ast_409", 183)); (("Pexp_construct", 787), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5467)], (0)), 100000000, 0, -5466); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5469)], (0)), 100000000, 0, -5468)]), 0, (("astlib/ast_409.ml", 352, 10912, 10916), ("astlib/ast_409.ml", 352, 10912, 10971), 0), 0, Tag1 ("Astlib__Ast_409", 184)); (("Pexp_variant", 788), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5470); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5472)], (0)), 100000000, 0, -5471)]), 0, (("astlib/ast_409.ml", 357, 11092, 11096), ("astlib/ast_409.ml", 357, 11092, 11139), 0), 0, Tag1 ("Astlib__Ast_409", 185)); (("Pexp_record", 789), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5476)], (0)), 100000000, 0, -5475); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5477)]), 100000000, 0, -5474)], (0)), 100000000, 0, -5473); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5479)], (0)), 100000000, 0, -5478)]), 0, (("astlib/ast_409.ml", 361, 11207, 11211), ("astlib/ast_409.ml", 361, 11207, 11283), 0), 0, Tag1 ("Astlib__Ast_409", 186)); (("Pexp_field", 790), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5480); (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5482)], (0)), 100000000, 0, -5481)]), 0, (("astlib/ast_409.ml", 367, 11405, 11409), ("astlib/ast_409.ml", 367, 11405, 11453), 0), 0, Tag1 ("Astlib__Ast_409", 187)); (("Pexp_setfield", 791), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5483); (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5485)], (0)), 100000000, 0, -5484); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5486)]), 0, (("astlib/ast_409.ml", 369, 11468, 11472), ("astlib/ast_409.ml", 369, 11468, 11532), 0), 0, Tag1 ("Astlib__Ast_409", 188)); (("Pexp_array", 792), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5488)], (0)), 100000000, 0, -5487)]), 0, (("astlib/ast_409.ml", 371, 11554, 11558), ("astlib/ast_409.ml", 371, 11554, 11589), 0), 0, Tag1 ("Astlib__Ast_409", 189)); (("Pexp_ifthenelse", 793), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5489); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5490); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5492)], (0)), 100000000, 0, -5491)]), 0, (("astlib/ast_409.ml", 373, 11618, 11622), ("astlib/ast_409.ml", 373, 11618, 11686), 0), 0, Tag1 ("Astlib__Ast_409", 190)); (("Pexp_sequence", 794), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5493); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5494)]), 0, (("astlib/ast_409.ml", 375, 11719, 11723), ("astlib/ast_409.ml", 375, 11719, 11765), 0), 0, Tag1 ("Astlib__Ast_409", 191)); (("Pexp_while", 795), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5495); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5496)]), 0, (("astlib/ast_409.ml", 377, 11783, 11787), ("astlib/ast_409.ml", 377, 11783, 11826), 0), 0, Tag1 ("Astlib__Ast_409", 192)); (("Pexp_for", 796), ([(Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5497); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5498); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5499); (Tag3 (Tag1 ((("Asttypes", 7320)), "direction_flag"), 0, (0)), 100000000, 0, -5500); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5501)]), 0, (("astlib/ast_409.ml", 379, 11857, 11861), ("astlib/ast_409.ml", 380, 11875, 11947), 0), 0, Tag1 ("Astlib__Ast_409", 193)); (("Pexp_constraint", 797), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5502); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5503)]), 0, (("astlib/ast_409.ml", 384, 12065, 12069), ("astlib/ast_409.ml", 384, 12065, 12112), 0), 0, Tag1 ("Astlib__Ast_409", 194)); (("Pexp_coerce", 798), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5504); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5506)], (0)), 100000000, 0, -5505); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5507)]), 0, (("astlib/ast_409.ml", 386, 12131, 12135), ("astlib/ast_409.ml", 386, 12131, 12193), 0), 0, Tag1 ("Astlib__Ast_409", 195)); (("Pexp_send", 799), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5508); (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5510)], (0)), 100000000, 0, -5509)]), 0, (("astlib/ast_409.ml", 390, 12270, 12274), ("astlib/ast_409.ml", 390, 12270, 12311), 0), 0, Tag1 ("Astlib__Ast_409", 196)); (("Pexp_new", 800), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5512)], (0)), 100000000, 0, -5511)]), 0, (("astlib/ast_409.ml", 392, 12329, 12333), ("astlib/ast_409.ml", 392, 12329, 12362), 0), 0, Tag1 ("Astlib__Ast_409", 197)); (("Pexp_setinstvar", 801), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5514)], (0)), 100000000, 0, -5513); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5515)]), 0, (("astlib/ast_409.ml", 394, 12381, 12385), ("astlib/ast_409.ml", 394, 12381, 12428), 0), 0, Tag1 ("Astlib__Ast_409", 198)); (("Pexp_override", 802), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5519)], (0)), 100000000, 0, -5518); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5520)]), 100000000, 0, -5517)], (0)), 100000000, 0, -5516)]), 0, (("astlib/ast_409.ml", 396, 12446, 12450), ("astlib/ast_409.ml", 396, 12446, 12498), 0), 0, Tag1 ("Astlib__Ast_409", 199)); (("Pexp_letmodule", 803), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5522)], (0)), 100000000, 0, -5521); (Tag3 ((("module_expr", 7398)), 0, (0)), 100000000, 0, -5523); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5524)]), 0, (("astlib/ast_409.ml", 398, 12537, 12541), ("astlib/ast_409.ml", 398, 12537, 12598), 0), 0, Tag1 ("Astlib__Ast_409", 200)); (("Pexp_letexception", 804), ([(Tag3 ((("extension_constructor", 7365)), 0, (0)), 100000000, 0, -5525); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5526)]), 0, (("astlib/ast_409.ml", 400, 12632, 12636), ("astlib/ast_409.ml", 400, 12632, 12693), 0), 0, Tag1 ("Astlib__Ast_409", 201)); (("Pexp_assert", 805), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5527)]), 0, (("astlib/ast_409.ml", 402, 12725, 12729), ("astlib/ast_409.ml", 402, 12725, 12756), 0), 0, Tag1 ("Astlib__Ast_409", 202)); (("Pexp_lazy", 806), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5528)]), 0, (("astlib/ast_409.ml", 406, 12860, 12864), ("astlib/ast_409.ml", 406, 12860, 12889), 0), 0, Tag1 ("Astlib__Ast_409", 203)); (("Pexp_poly", 807), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5529); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5531)], (0)), 100000000, 0, -5530)]), 0, (("astlib/ast_409.ml", 408, 12907, 12911), ("astlib/ast_409.ml", 408, 12907, 12955), 0), 0, Tag1 ("Astlib__Ast_409", 204)); (("Pexp_object", 808), ([(Tag3 ((("class_structure", 7378)), 0, (0)), 100000000, 0, -5532)]), 0, (("astlib/ast_409.ml", 413, 13085, 13089), ("astlib/ast_409.ml", 413, 13085, 13121), 0), 0, Tag1 ("Astlib__Ast_409", 205)); (("Pexp_newtype", 809), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5534)], (0)), 100000000, 0, -5533); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5535)]), 0, (("astlib/ast_409.ml", 415, 13147, 13151), ("astlib/ast_409.ml", 415, 13147, 13192), 0), 0, Tag1 ("Astlib__Ast_409", 206)); (("Pexp_pack", 810), ([(Tag3 ((("module_expr", 7398)), 0, (0)), 100000000, 0, -5536)]), 0, (("astlib/ast_409.ml", 417, 13221, 13225), ("astlib/ast_409.ml", 417, 13221, 13251), 0), 0, Tag1 ("Astlib__Ast_409", 207)); (("Pexp_open", 811), ([(Tag3 ((("open_declaration", 7393)), 0, (0)), 100000000, 0, -5537); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5538)]), 0, (("astlib/ast_409.ml", 422, 13366, 13370), ("astlib/ast_409.ml", 422, 13366, 13414), 0), 0, Tag1 ("Astlib__Ast_409", 208)); (("Pexp_letop", 812), ([(Tag3 ((("letop", 7356)), 0, (0)), 100000000, 0, -5539)]), 0, (("astlib/ast_409.ml", 426, 13478, 13482), ("astlib/ast_409.ml", 426, 13478, 13503), 0), 0, Tag1 ("Astlib__Ast_409", 209)); (("Pexp_extension", 813), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5540)]), 0, (("astlib/ast_409.ml", 429, 13564, 13568), ("astlib/ast_409.ml", 429, 13564, 13597), 0), 0, Tag1 ("Astlib__Ast_409", 210)); (("Pexp_unreachable", 814), (0), 0, (("astlib/ast_409.ml", 431, 13614, 13618), ("astlib/ast_409.ml", 431, 13614, 13636), 0), 0, Tag1 ("Astlib__Ast_409", 211))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -5441)), 0, 0, 0, 0, (("astlib/ast_409.ml", 312, 9425, 9427), ("astlib/ast_409.ml", 431, 13614, 13636), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 64)), 2, 0); Tag1 (("case", 7354), (0, 0, [[(("pc_lhs", 815), 0, (Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5437), (("astlib/ast_409.ml", 436, 13739, 13745), ("astlib/ast_409.ml", 436, 13739, 13761), 0), 0, Tag1 ("Astlib__Ast_409", 212)); (("pc_guard", 816), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5439)], (0)), 100000000, 0, -5438), (("astlib/ast_409.ml", 437, 13762, 13768), ("astlib/ast_409.ml", 437, 13762, 13796), 0), 0, Tag1 ("Astlib__Ast_409", 213)); (("pc_rhs", 817), 0, (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5440), (("astlib/ast_409.ml", 438, 13797, 13803), ("astlib/ast_409.ml", 438, 13797, 13822), 0), 0, Tag1 ("Astlib__Ast_409", 214))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -5436)), 0, 0, 0, 0, (("astlib/ast_409.ml", 434, 13650, 13652), ("astlib/ast_409.ml", 439, 13823, 13828), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 65)), 2, 0); Tag1 (("cases", 7355), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7354)), 0, (0)), 100000000, 0, -5435)], (0)), 100000000, 0, -5434)), 0, 0, 0, 0, (("astlib/ast_409.ml", 441, 13830, 13832), ("astlib/ast_409.ml", 441, 13830, 13853), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 66)), 2, 0); Tag1 (("letop", 7356), (0, 0, [[(("let_", 818), 0, (Tag3 ((("binding_op", 7357)), 0, (0)), 100000000, 0, -5430), (("astlib/ast_409.ml", 445, 13909, 13915), ("astlib/ast_409.ml", 445, 13909, 13933), 0), 0, Tag1 ("Astlib__Ast_409", 215)); (("ands", 819), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binding_op", 7357)), 0, (0)), 100000000, 0, -5432)], (0)), 100000000, 0, -5431), (("astlib/ast_409.ml", 446, 13934, 13940), ("astlib/ast_409.ml", 446, 13934, 13963), 0), 0, Tag1 ("Astlib__Ast_409", 216)); (("body", 820), 0, (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5433), (("astlib/ast_409.ml", 447, 13964, 13970), ("astlib/ast_409.ml", 447, 13964, 13988), 0), 0, Tag1 ("Astlib__Ast_409", 217))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "letop"), 0, (0)), 100000000, 0, -5429)), 0, 0, 0, 0, (("astlib/ast_409.ml", 443, 13855, 13857), ("astlib/ast_409.ml", 448, 13989, 13994), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 67)), 2, 0); Tag1 (("binding_op", 7357), (0, 0, [[(("pbop_op", 821), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5425)], (0)), 100000000, 0, -5424), (("astlib/ast_409.ml", 452, 14060, 14066), ("astlib/ast_409.ml", 452, 14060, 14087), 0), 0, Tag1 ("Astlib__Ast_409", 218)); (("pbop_pat", 822), 0, (Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5426), (("astlib/ast_409.ml", 453, 14088, 14094), ("astlib/ast_409.ml", 453, 14088, 14113), 0), 0, Tag1 ("Astlib__Ast_409", 219)); (("pbop_exp", 823), 0, (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5427), (("astlib/ast_409.ml", 454, 14114, 14120), ("astlib/ast_409.ml", 454, 14114, 14142), 0), 0, Tag1 ("Astlib__Ast_409", 220)); (("pbop_loc", 824), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5428), (("astlib/ast_409.ml", 455, 14143, 14149), ("astlib/ast_409.ml", 455, 14143, 14171), 0), 0, Tag1 ("Astlib__Ast_409", 221))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "binding_op"), 0, (0)), 100000000, 0, -5423)), 0, 0, 0, 0, (("astlib/ast_409.ml", 450, 13996, 13998), ("astlib/ast_409.ml", 456, 14172, 14177), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 68)), 2, 0); Tag1 (("value_description", 7358), (0, 0, [[(("pval_name", 825), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5417)], (0)), 100000000, 0, -5416), (("astlib/ast_409.ml", 462, 14285, 14291), ("astlib/ast_409.ml", 462, 14285, 14313), 0), 0, Tag1 ("Astlib__Ast_409", 222)); (("pval_type", 826), 0, (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5418), (("astlib/ast_409.ml", 463, 14314, 14320), ("astlib/ast_409.ml", 463, 14314, 14341), 0), 0, Tag1 ("Astlib__Ast_409", 223)); (("pval_prim", 827), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5420)], (0)), 100000000, 0, -5419), (("astlib/ast_409.ml", 464, 14342, 14348), ("astlib/ast_409.ml", 464, 14342, 14371), 0), 0, Tag1 ("Astlib__Ast_409", 224)); (("pval_attributes", 828), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5421), (("astlib/ast_409.ml", 465, 14372, 14378), ("astlib/ast_409.ml", 465, 14372, 14406), 0), 0, Tag1 ("Astlib__Ast_409", 225)); (("pval_loc", 829), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5422), (("astlib/ast_409.ml", 466, 14434, 14440), ("astlib/ast_409.ml", 466, 14434, 14461), 0), 0, Tag1 ("Astlib__Ast_409", 226))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -5415)), 0, 0, 0, 0, (("astlib/ast_409.ml", 460, 14207, 14209), ("astlib/ast_409.ml", 467, 14462, 14467), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 69)), 2, 0); Tag1 (("type_declaration", 7359), (0, 0, [[(("ptype_name", 830), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5399)], (0)), 100000000, 0, -5398), (("astlib/ast_409.ml", 478, 14699, 14705), ("astlib/ast_409.ml", 478, 14699, 14728), 0), 0, Tag1 ("Astlib__Ast_409", 227)); (("ptype_params", 831), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5402); (Tag3 (Tag1 ((("Asttypes", 7320)), "variance"), 0, (0)), 100000000, 0, -5403)]), 100000000, 0, -5401)], (0)), 100000000, 0, -5400), (("astlib/ast_409.ml", 479, 14729, 14735), ("astlib/ast_409.ml", 479, 14729, 14777), 0), 0, Tag1 ("Astlib__Ast_409", 228)); (("ptype_cstrs", 832), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5406); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5407); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5408)]), 100000000, 0, -5405)], (0)), 100000000, 0, -5404), (("astlib/ast_409.ml", 481, 14824, 14830), ("astlib/ast_409.ml", 481, 14824, 14885), 0), 0, Tag1 ("Astlib__Ast_409", 229)); (("ptype_kind", 833), 0, (Tag3 ((("type_kind", 7360)), 0, (0)), 100000000, 0, -5409), (("astlib/ast_409.ml", 483, 14943, 14949), ("astlib/ast_409.ml", 483, 14943, 14971), 0), 0, Tag1 ("Astlib__Ast_409", 230)); (("ptype_private", 834), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "private_flag"), 0, (0)), 100000000, 0, -5410), (("astlib/ast_409.ml", 484, 14972, 14978), ("astlib/ast_409.ml", 484, 14972, 15006), 0), 0, Tag1 ("Astlib__Ast_409", 231)); (("ptype_manifest", 835), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5412)], (0)), 100000000, 0, -5411), (("astlib/ast_409.ml", 485, 15029, 15035), ("astlib/ast_409.ml", 485, 15029, 15068), 0), 0, Tag1 ("Astlib__Ast_409", 232)); (("ptype_attributes", 836), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5413), (("astlib/ast_409.ml", 486, 15080, 15086), ("astlib/ast_409.ml", 486, 15080, 15115), 0), 0, Tag1 ("Astlib__Ast_409", 233)); (("ptype_loc", 837), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5414), (("astlib/ast_409.ml", 487, 15144, 15150), ("astlib/ast_409.ml", 487, 15144, 15172), 0), 0, Tag1 ("Astlib__Ast_409", 234))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -5397)), 0, 0, 0, 0, (("astlib/ast_409.ml", 476, 14623, 14625), ("astlib/ast_409.ml", 488, 15173, 15178), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 70)), 2, 0); Tag1 (("type_kind", 7360), (0, 0, Tag1 ([(("Ptype_abstract", 838), (0), 0, (("astlib/ast_409.ml", 501, 15637, 15641), ("astlib/ast_409.ml", 501, 15637, 15657), 0), 0, Tag1 ("Astlib__Ast_409", 235)); (("Ptype_variant", 839), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7362)), 0, (0)), 100000000, 0, -5394)], (0)), 100000000, 0, -5393)]), 0, (("astlib/ast_409.ml", 502, 15658, 15662), ("astlib/ast_409.ml", 502, 15658, 15709), 0), 0, Tag1 ("Astlib__Ast_409", 236)); (("Ptype_record", 840), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7361)), 0, (0)), 100000000, 0, -5396)], (0)), 100000000, 0, -5395)]), 0, (("astlib/ast_409.ml", 503, 15710, 15714), ("astlib/ast_409.ml", 503, 15710, 15754), 0), 0, Tag1 ("Astlib__Ast_409", 237)); (("Ptype_open", 841), (0), 0, (("astlib/ast_409.ml", 505, 15791, 15795), ("astlib/ast_409.ml", 505, 15791, 15807), 0), 0, Tag1 ("Astlib__Ast_409", 238))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -5392)), 0, 0, 0, 0, (("astlib/ast_409.ml", 500, 15581, 15583), ("astlib/ast_409.ml", 505, 15791, 15807), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 71)), 2, 0); Tag1 (("label_declaration", 7361), (0, 0, [[(("pld_name", 842), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5387)], (0)), 100000000, 0, -5386), (("astlib/ast_409.ml", 509, 15887, 15893), ("astlib/ast_409.ml", 509, 15887, 15914), 0), 0, Tag1 ("Astlib__Ast_409", 239)); (("pld_mutable", 843), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "mutable_flag"), 0, (0)), 100000000, 0, -5388), (("astlib/ast_409.ml", 510, 15915, 15921), ("astlib/ast_409.ml", 510, 15915, 15947), 0), 0, Tag1 ("Astlib__Ast_409", 240)); (("pld_type", 844), 0, (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5389), (("astlib/ast_409.ml", 511, 15948, 15954), ("astlib/ast_409.ml", 511, 15948, 15974), 0), 0, Tag1 ("Astlib__Ast_409", 241)); (("pld_loc", 845), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5390), (("astlib/ast_409.ml", 512, 15975, 15981), ("astlib/ast_409.ml", 512, 15975, 16001), 0), 0, Tag1 ("Astlib__Ast_409", 242)); (("pld_attributes", 846), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5391), (("astlib/ast_409.ml", 513, 16002, 16008), ("astlib/ast_409.ml", 513, 16002, 16035), 0), 0, Tag1 ("Astlib__Ast_409", 243))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -5385)), 0, 0, 0, 0, (("astlib/ast_409.ml", 507, 15809, 15811), ("astlib/ast_409.ml", 514, 16062, 16067), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 72)), 2, 0); Tag1 (("constructor_declaration", 7362), (0, 0, [[(("pcd_name", 847), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5379)], (0)), 100000000, 0, -5378), (("astlib/ast_409.ml", 524, 16310, 16316), ("astlib/ast_409.ml", 524, 16310, 16337), 0), 0, Tag1 ("Astlib__Ast_409", 244)); (("pcd_args", 848), 0, (Tag3 ((("constructor_arguments", 7363)), 0, (0)), 100000000, 0, -5380), (("astlib/ast_409.ml", 525, 16338, 16344), ("astlib/ast_409.ml", 525, 16338, 16376), 0), 0, Tag1 ("Astlib__Ast_409", 245)); (("pcd_res", 849), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5382)], (0)), 100000000, 0, -5381), (("astlib/ast_409.ml", 526, 16377, 16383), ("astlib/ast_409.ml", 526, 16377, 16409), 0), 0, Tag1 ("Astlib__Ast_409", 246)); (("pcd_loc", 850), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5383), (("astlib/ast_409.ml", 527, 16410, 16416), ("astlib/ast_409.ml", 527, 16410, 16436), 0), 0, Tag1 ("Astlib__Ast_409", 247)); (("pcd_attributes", 851), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5384), (("astlib/ast_409.ml", 528, 16437, 16443), ("astlib/ast_409.ml", 528, 16437, 16470), 0), 0, Tag1 ("Astlib__Ast_409", 248))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -5377)), 0, 0, 0, 0, (("astlib/ast_409.ml", 522, 16220, 16222), ("astlib/ast_409.ml", 529, 16500, 16505), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 73)), 2, 0); Tag1 (("constructor_arguments", 7363), (0, 0, Tag1 ([(("Pcstr_tuple", 852), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5374)], (0)), 100000000, 0, -5373)]), 0, (("astlib/ast_409.ml", 532, 16587, 16591), ("astlib/ast_409.ml", 532, 16587, 16622), 0), 0, Tag1 ("Astlib__Ast_409", 249)); (("Pcstr_record", 853), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7361)), 0, (0)), 100000000, 0, -5376)], (0)), 100000000, 0, -5375)]), 0, (("astlib/ast_409.ml", 533, 16623, 16627), ("astlib/ast_409.ml", 533, 16623, 16667), 0), 0, Tag1 ("Astlib__Ast_409", 250))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -5372)), 0, 0, 0, 0, (("astlib/ast_409.ml", 531, 16507, 16509), ("astlib/ast_409.ml", 533, 16623, 16667), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 74)), 2, 0); Tag1 (("type_extension", 7364), (0, 0, [[(("ptyext_path", 854), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5362)], (0)), 100000000, 0, -5361), (("astlib/ast_409.ml", 546, 17143, 17149), ("astlib/ast_409.ml", 546, 17143, 17178), 0), 0, Tag1 ("Astlib__Ast_409", 251)); (("ptyext_params", 855), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5365); (Tag3 (Tag1 ((("Asttypes", 7320)), "variance"), 0, (0)), 100000000, 0, -5366)]), 100000000, 0, -5364)], (0)), 100000000, 0, -5363), (("astlib/ast_409.ml", 547, 17179, 17185), ("astlib/ast_409.ml", 547, 17179, 17228), 0), 0, Tag1 ("Astlib__Ast_409", 252)); (("ptyext_constructors", 856), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7365)), 0, (0)), 100000000, 0, -5368)], (0)), 100000000, 0, -5367), (("astlib/ast_409.ml", 548, 17229, 17235), ("astlib/ast_409.ml", 548, 17229, 17283), 0), 0, Tag1 ("Astlib__Ast_409", 253)); (("ptyext_private", 857), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "private_flag"), 0, (0)), 100000000, 0, -5369), (("astlib/ast_409.ml", 549, 17284, 17290), ("astlib/ast_409.ml", 549, 17284, 17319), 0), 0, Tag1 ("Astlib__Ast_409", 254)); (("ptyext_loc", 858), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5370), (("astlib/ast_409.ml", 550, 17320, 17326), ("astlib/ast_409.ml", 550, 17320, 17349), 0), 0, Tag1 ("Astlib__Ast_409", 255)); (("ptyext_attributes", 859), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5371), (("astlib/ast_409.ml", 551, 17350, 17356), ("astlib/ast_409.ml", 551, 17350, 17386), 0), 0, Tag1 ("Astlib__Ast_409", 256))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -5360)), 0, 0, 0, 0, (("astlib/ast_409.ml", 544, 17071, 17073), ("astlib/ast_409.ml", 552, 17415, 17420), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 75)), 2, 0); Tag1 (("extension_constructor", 7365), (0, 0, [[(("pext_name", 860), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5356)], (0)), 100000000, 0, -5355), (("astlib/ast_409.ml", 559, 17535, 17541), ("astlib/ast_409.ml", 559, 17535, 17563), 0), 0, Tag1 ("Astlib__Ast_409", 257)); (("pext_kind", 861), 0, (Tag3 ((("extension_constructor_kind", 7367)), 0, (0)), 100000000, 0, -5357), (("astlib/ast_409.ml", 560, 17564, 17570), ("astlib/ast_409.ml", 560, 17564, 17609), 0), 0, Tag1 ("Astlib__Ast_409", 258)); (("pext_loc", 862), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5358), (("astlib/ast_409.ml", 561, 17610, 17616), ("astlib/ast_409.ml", 561, 17610, 17638), 0), 0, Tag1 ("Astlib__Ast_409", 259)); (("pext_attributes", 863), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5359), (("astlib/ast_409.ml", 562, 17639, 17645), ("astlib/ast_409.ml", 562, 17639, 17673), 0), 0, Tag1 ("Astlib__Ast_409", 260))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -5354)), 0, 0, 0, 0, (("astlib/ast_409.ml", 557, 17449, 17451), ("astlib/ast_409.ml", 563, 17703, 17708), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 76)), 2, 0); Tag1 (("type_exception", 7366), (0, 0, [[(("ptyexn_constructor", 864), 0, (Tag3 ((("extension_constructor", 7365)), 0, (0)), 100000000, 0, -5351), (("astlib/ast_409.ml", 568, 17802, 17808), ("astlib/ast_409.ml", 568, 17802, 17850), 0), 0, Tag1 ("Astlib__Ast_409", 261)); (("ptyexn_loc", 865), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5352), (("astlib/ast_409.ml", 569, 17851, 17857), ("astlib/ast_409.ml", 569, 17851, 17880), 0), 0, Tag1 ("Astlib__Ast_409", 262)); (("ptyexn_attributes", 866), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5353), (("astlib/ast_409.ml", 570, 17881, 17887), ("astlib/ast_409.ml", 570, 17881, 17917), 0), 0, Tag1 ("Astlib__Ast_409", 263))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "type_exception"), 0, (0)), 100000000, 0, -5350)), 0, 0, 0, 0, (("astlib/ast_409.ml", 566, 17730, 17732), ("astlib/ast_409.ml", 571, 17944, 17949), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 77)), 2, 0); Tag1 (("extension_constructor_kind", 7367), (0, 0, Tag1 ([(("Pext_decl", 867), ([(Tag3 ((("constructor_arguments", 7363)), 0, (0)), 100000000, 0, -5345); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5347)], (0)), 100000000, 0, -5346)]), 0, (("astlib/ast_409.ml", 574, 18041, 18047), ("astlib/ast_409.ml", 574, 18041, 18100), 0), 0, Tag1 ("Astlib__Ast_409", 264)); (("Pext_rebind", 868), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5349)], (0)), 100000000, 0, -5348)]), 0, (("astlib/ast_409.ml", 580, 18274, 18278), ("astlib/ast_409.ml", 580, 18274, 18310), 0), 0, Tag1 ("Astlib__Ast_409", 265))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -5344)), 0, 0, 0, 0, (("astlib/ast_409.ml", 573, 17951, 17953), ("astlib/ast_409.ml", 580, 18274, 18310), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 78)), 2, 0); Tag1 (("class_type", 7368), (0, 0, [[(("pcty_desc", 869), 0, (Tag3 ((("class_type_desc", 7369)), 0, (0)), 100000000, 0, -5341), (("astlib/ast_409.ml", 591, 18485, 18491), ("astlib/ast_409.ml", 591, 18485, 18518), 0), 0, Tag1 ("Astlib__Ast_409", 266)); (("pcty_loc", 870), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5342), (("astlib/ast_409.ml", 592, 18519, 18525), ("astlib/ast_409.ml", 592, 18519, 18546), 0), 0, Tag1 ("Astlib__Ast_409", 267)); (("pcty_attributes", 871), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5343), (("astlib/ast_409.ml", 593, 18547, 18553), ("astlib/ast_409.ml", 593, 18547, 18581), 0), 0, Tag1 ("Astlib__Ast_409", 268))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -5340)), 0, 0, 0, 0, (("astlib/ast_409.ml", 589, 18421, 18423), ("astlib/ast_409.ml", 594, 18606, 18611), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 79)), 2, 0); Tag1 (("class_type_desc", 7369), (0, 0, Tag1 ([(("Pcty_constr", 872), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5330)], (0)), 100000000, 0, -5329); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5332)], (0)), 100000000, 0, -5331)]), 0, (("astlib/ast_409.ml", 597, 18681, 18685), ("astlib/ast_409.ml", 597, 18681, 18734), 0), 0, Tag1 ("Astlib__Ast_409", 269)); (("Pcty_signature", 873), ([(Tag3 ((("class_signature", 7370)), 0, (0)), 100000000, 0, -5333)]), 0, (("astlib/ast_409.ml", 600, 18772, 18776), ("astlib/ast_409.ml", 600, 18772, 18811), 0), 0, Tag1 ("Astlib__Ast_409", 270)); (("Pcty_arrow", 874), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "arg_label"), 0, (0)), 100000000, 0, -5334); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5335); (Tag3 ((("class_type", 7368)), 0, (0)), 100000000, 0, -5336)]), 0, (("astlib/ast_409.ml", 602, 18837, 18841), ("astlib/ast_409.ml", 602, 18837, 18891), 0), 0, Tag1 ("Astlib__Ast_409", 271)); (("Pcty_extension", 875), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5337)]), 0, (("astlib/ast_409.ml", 607, 18991, 18995), ("astlib/ast_409.ml", 607, 18991, 19024), 0), 0, Tag1 ("Astlib__Ast_409", 272)); (("Pcty_open", 876), ([(Tag3 ((("open_description", 7392)), 0, (0)), 100000000, 0, -5338); (Tag3 ((("class_type", 7368)), 0, (0)), 100000000, 0, -5339)]), 0, (("astlib/ast_409.ml", 609, 19041, 19045), ("astlib/ast_409.ml", 609, 19041, 19089), 0), 0, Tag1 ("Astlib__Ast_409", 273))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -5328)), 0, 0, 0, 0, (("astlib/ast_409.ml", 596, 18613, 18615), ("astlib/ast_409.ml", 609, 19041, 19089), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 80)), 2, 0); Tag1 (("class_signature", 7370), (0, 0, [[(("pcsig_self", 877), 0, (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5325), (("astlib/ast_409.ml", 614, 19192, 19198), ("astlib/ast_409.ml", 614, 19192, 19220), 0), 0, Tag1 ("Astlib__Ast_409", 274)); (("pcsig_fields", 878), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7371)), 0, (0)), 100000000, 0, -5327)], (0)), 100000000, 0, -5326), (("astlib/ast_409.ml", 615, 19221, 19227), ("astlib/ast_409.ml", 615, 19221, 19263), 0), 0, Tag1 ("Astlib__Ast_409", 275))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -5324)), 0, 0, 0, 0, (("astlib/ast_409.ml", 612, 19118, 19120), ("astlib/ast_409.ml", 616, 19264, 19269), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 81)), 2, 0); Tag1 (("class_type_field", 7371), (0, 0, [[(("pctf_desc", 879), 0, (Tag3 ((("class_type_field_desc", 7372)), 0, (0)), 100000000, 0, -5321), (("astlib/ast_409.ml", 623, 19432, 19438), ("astlib/ast_409.ml", 623, 19432, 19471), 0), 0, Tag1 ("Astlib__Ast_409", 276)); (("pctf_loc", 880), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5322), (("astlib/ast_409.ml", 624, 19472, 19478), ("astlib/ast_409.ml", 624, 19472, 19499), 0), 0, Tag1 ("Astlib__Ast_409", 277)); (("pctf_attributes", 881), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5323), (("astlib/ast_409.ml", 625, 19500, 19506), ("astlib/ast_409.ml", 625, 19500, 19534), 0), 0, Tag1 ("Astlib__Ast_409", 278))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -5320)), 0, 0, 0, 0, (("astlib/ast_409.ml", 621, 19356, 19358), ("astlib/ast_409.ml", 626, 19561, 19566), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 82)), 2, 0); Tag1 (("class_type_field_desc", 7372), (0, 0, Tag1 ([(("Pctf_inherit", 882), ([(Tag3 ((("class_type", 7368)), 0, (0)), 100000000, 0, -5302)]), 0, (("astlib/ast_409.ml", 629, 19648, 19652), ("astlib/ast_409.ml", 629, 19648, 19680), 0), 0, Tag1 ("Astlib__Ast_409", 279)); (("Pctf_val", 883), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5305)], (0)), 100000000, 0, -5304); (Tag3 (Tag1 ((("Asttypes", 7320)), "mutable_flag"), 0, (0)), 100000000, 0, -5306); (Tag3 (Tag1 ((("Asttypes", 7320)), "virtual_flag"), 0, (0)), 100000000, 0, -5307); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5308)]), 100000000, 0, -5303)]), 0, (("astlib/ast_409.ml", 631, 19702, 19706), ("astlib/ast_409.ml", 631, 19702, 19773), 0), 0, Tag1 ("Astlib__Ast_409", 280)); (("Pctf_method", 884), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5311)], (0)), 100000000, 0, -5310); (Tag3 (Tag1 ((("Asttypes", 7320)), "private_flag"), 0, (0)), 100000000, 0, -5312); (Tag3 (Tag1 ((("Asttypes", 7320)), "virtual_flag"), 0, (0)), 100000000, 0, -5313); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5314)]), 100000000, 0, -5309)]), 0, (("astlib/ast_409.ml", 633, 19793, 19797), ("astlib/ast_409.ml", 633, 19793, 19868), 0), 0, Tag1 ("Astlib__Ast_409", 281)); (("Pctf_constraint", 885), ([(Tag2 ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5316); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5317)]), 100000000, 0, -5315)]), 0, (("astlib/ast_409.ml", 638, 19931, 19935), ("astlib/ast_409.ml", 638, 19931, 19980), 0), 0, Tag1 ("Astlib__Ast_409", 282)); (("Pctf_attribute", 886), ([(Tag3 ((("attribute", 7336)), 0, (0)), 100000000, 0, -5318)]), 0, (("astlib/ast_409.ml", 640, 20010, 20014), ("astlib/ast_409.ml", 640, 20010, 20043), 0), 0, Tag1 ("Astlib__Ast_409", 283)); (("Pctf_extension", 887), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5319)]), 0, (("astlib/ast_409.ml", 642, 20062, 20066), ("astlib/ast_409.ml", 642, 20062, 20095), 0), 0, Tag1 ("Astlib__Ast_409", 284))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -5301)), 0, 0, 0, 0, (("astlib/ast_409.ml", 628, 19568, 19570), ("astlib/ast_409.ml", 642, 20062, 20095), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 83)), 2, 0); Tag1 (("class_infos", 7373), ([((("a")), 100000000, 0, -5291)], 1, [[(("pci_virt", 888), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "virtual_flag"), 0, (0)), 100000000, 0, -5292), (("astlib/ast_409.ml", 647, 20186, 20192), ("astlib/ast_409.ml", 647, 20186, 20215), 0), 0, Tag1 ("Astlib__Ast_409", 285)); (("pci_params", 889), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5295); (Tag3 (Tag1 ((("Asttypes", 7320)), "variance"), 0, (0)), 100000000, 0, -5296)]), 100000000, 0, -5294)], (0)), 100000000, 0, -5293), (("astlib/ast_409.ml", 648, 20216, 20222), ("astlib/ast_409.ml", 648, 20216, 20262), 0), 0, Tag1 ("Astlib__Ast_409", 286)); (("pci_name", 890), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5298)], (0)), 100000000, 0, -5297), (("astlib/ast_409.ml", 649, 20263, 20269), ("astlib/ast_409.ml", 649, 20263, 20290), 0), 0, Tag1 ("Astlib__Ast_409", 287)); (("pci_expr", 891), 0, ((("a")), 100000000, 0, -5291), (("astlib/ast_409.ml", 650, 20291, 20297), ("astlib/ast_409.ml", 650, 20291, 20310), 0), 0, Tag1 ("Astlib__Ast_409", 288)); (("pci_loc", 892), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5299), (("astlib/ast_409.ml", 651, 20311, 20317), ("astlib/ast_409.ml", 651, 20311, 20337), 0), 0, Tag1 ("Astlib__Ast_409", 289)); (("pci_attributes", 893), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5300), (("astlib/ast_409.ml", 652, 20338, 20344), ("astlib/ast_409.ml", 652, 20338, 20371), 0), 0, Tag1 ("Astlib__Ast_409", 290))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -5291)], (0)), 100000000, 0, -5290)), [25], [0], 0, 0, (("astlib/ast_409.ml", 645, 20114, 20116), ("astlib/ast_409.ml", 653, 20399, 20404), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 84)), 2, 0); Tag1 (("class_description", 7374), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7373)), [(Tag3 ((("class_type", 7368)), 0, (0)), 100000000, 0, -5289)], (0)), 100000000, 0, -5288)), 0, 0, 0, 0, (("astlib/ast_409.ml", 661, 20536, 20538), ("astlib/ast_409.ml", 661, 20536, 20584), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 85)), 2, 0); Tag1 (("class_type_declaration", 7375), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7373)), [(Tag3 ((("class_type", 7368)), 0, (0)), 100000000, 0, -5287)], (0)), 100000000, 0, -5286)), 0, 0, 0, 0, (("astlib/ast_409.ml", 663, 20586, 20588), ("astlib/ast_409.ml", 663, 20586, 20639), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 86)), 2, 0); Tag1 (("class_expr", 7376), (0, 0, [[(("pcl_desc", 894), 0, (Tag3 ((("class_expr_desc", 7377)), 0, (0)), 100000000, 0, -5283), (("astlib/ast_409.ml", 669, 20755, 20761), ("astlib/ast_409.ml", 669, 20755, 20787), 0), 0, Tag1 ("Astlib__Ast_409", 291)); (("pcl_loc", 895), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5284), (("astlib/ast_409.ml", 670, 20788, 20794), ("astlib/ast_409.ml", 670, 20788, 20814), 0), 0, Tag1 ("Astlib__Ast_409", 292)); (("pcl_attributes", 896), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5285), (("astlib/ast_409.ml", 671, 20815, 20821), ("astlib/ast_409.ml", 671, 20815, 20848), 0), 0, Tag1 ("Astlib__Ast_409", 293))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -5282)), 0, 0, 0, 0, (("astlib/ast_409.ml", 667, 20691, 20693), ("astlib/ast_409.ml", 672, 20873, 20878), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 87)), 2, 0); Tag1 (("class_expr_desc", 7377), (0, 0, Tag1 ([(("Pcl_constr", 897), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5259)], (0)), 100000000, 0, -5258); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5261)], (0)), 100000000, 0, -5260)]), 0, (("astlib/ast_409.ml", 675, 20948, 20952), ("astlib/ast_409.ml", 675, 20948, 21000), 0), 0, Tag1 ("Astlib__Ast_409", 294)); (("Pcl_structure", 898), ([(Tag3 ((("class_structure", 7378)), 0, (0)), 100000000, 0, -5262)]), 0, (("astlib/ast_409.ml", 678, 21038, 21042), ("astlib/ast_409.ml", 678, 21038, 21076), 0), 0, Tag1 ("Astlib__Ast_409", 295)); (("Pcl_fun", 899), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "arg_label"), 0, (0)), 100000000, 0, -5263); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5265)], (0)), 100000000, 0, -5264); (Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5266); (Tag3 ((("class_expr", 7376)), 0, (0)), 100000000, 0, -5267)]), 0, (("astlib/ast_409.ml", 680, 21102, 21106), ("astlib/ast_409.ml", 680, 21102, 21171), 0), 0, Tag1 ("Astlib__Ast_409", 296)); (("Pcl_apply", 900), ([(Tag3 ((("class_expr", 7376)), 0, (0)), 100000000, 0, -5268); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "arg_label"), 0, (0)), 100000000, 0, -5271); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5272)]), 100000000, 0, -5270)], (0)), 100000000, 0, -5269)]), 0, (("astlib/ast_409.ml", 686, 21430, 21434), ("astlib/ast_409.ml", 686, 21430, 21491), 0), 0, Tag1 ("Astlib__Ast_409", 297)); (("Pcl_let", 901), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "rec_flag"), 0, (0)), 100000000, 0, -5273); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7403)), 0, (0)), 100000000, 0, -5275)], (0)), 100000000, 0, -5274); (Tag3 ((("class_expr", 7376)), 0, (0)), 100000000, 0, -5276)]), 0, (("astlib/ast_409.ml", 693, 21644, 21648), ("astlib/ast_409.ml", 693, 21644, 21703), 0), 0, Tag1 ("Astlib__Ast_409", 298)); (("Pcl_constraint", 902), ([(Tag3 ((("class_expr", 7376)), 0, (0)), 100000000, 0, -5277); (Tag3 ((("class_type", 7368)), 0, (0)), 100000000, 0, -5278)]), 0, (("astlib/ast_409.ml", 697, 21852, 21856), ("astlib/ast_409.ml", 697, 21852, 21899), 0), 0, Tag1 ("Astlib__Ast_409", 299)); (("Pcl_extension", 903), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5279)]), 0, (("astlib/ast_409.ml", 699, 21920, 21924), ("astlib/ast_409.ml", 699, 21920, 21952), 0), 0, Tag1 ("Astlib__Ast_409", 300)); (("Pcl_open", 904), ([(Tag3 ((("open_description", 7392)), 0, (0)), 100000000, 0, -5280); (Tag3 ((("class_expr", 7376)), 0, (0)), 100000000, 0, -5281)]), 0, (("astlib/ast_409.ml", 701, 21969, 21973), ("astlib/ast_409.ml", 701, 21969, 22016), 0), 0, Tag1 ("Astlib__Ast_409", 301))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -5257)), 0, 0, 0, 0, (("astlib/ast_409.ml", 674, 20880, 20882), ("astlib/ast_409.ml", 701, 21969, 22016), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 88)), 2, 0); Tag1 (("class_structure", 7378), (0, 0, [[(("pcstr_self", 905), 0, (Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5254), (("astlib/ast_409.ml", 707, 22120, 22126), ("astlib/ast_409.ml", 707, 22120, 22146), 0), 0, Tag1 ("Astlib__Ast_409", 302)); (("pcstr_fields", 906), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7379)), 0, (0)), 100000000, 0, -5256)], (0)), 100000000, 0, -5255), (("astlib/ast_409.ml", 708, 22147, 22153), ("astlib/ast_409.ml", 708, 22147, 22184), 0), 0, Tag1 ("Astlib__Ast_409", 303))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -5253)), 0, 0, 0, 0, (("astlib/ast_409.ml", 705, 22046, 22048), ("astlib/ast_409.ml", 709, 22185, 22190), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 89)), 2, 0); Tag1 (("class_field", 7379), (0, 0, [[(("pcf_desc", 907), 0, (Tag3 ((("class_field_desc", 7380)), 0, (0)), 100000000, 0, -5250), (("astlib/ast_409.ml", 716, 22340, 22346), ("astlib/ast_409.ml", 716, 22340, 22373), 0), 0, Tag1 ("Astlib__Ast_409", 304)); (("pcf_loc", 908), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5251), (("astlib/ast_409.ml", 717, 22374, 22380), ("astlib/ast_409.ml", 717, 22374, 22400), 0), 0, Tag1 ("Astlib__Ast_409", 305)); (("pcf_attributes", 909), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5252), (("astlib/ast_409.ml", 718, 22401, 22407), ("astlib/ast_409.ml", 718, 22401, 22434), 0), 0, Tag1 ("Astlib__Ast_409", 306))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -5249)), 0, 0, 0, 0, (("astlib/ast_409.ml", 714, 22274, 22276), ("astlib/ast_409.ml", 719, 22461, 22466), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 90)), 2, 0); Tag1 (("class_field_desc", 7380), (0, 0, Tag1 ([(("Pcf_inherit", 910), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "override_flag"), 0, (0)), 100000000, 0, -5228); (Tag3 ((("class_expr", 7376)), 0, (0)), 100000000, 0, -5229); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5232)], (0)), 100000000, 0, -5231)], (0)), 100000000, 0, -5230)]), 0, (("astlib/ast_409.ml", 722, 22538, 22542), ("astlib/ast_409.ml", 722, 22538, 22605), 0), 0, Tag1 ("Astlib__Ast_409", 307)); (("Pcf_val", 911), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5235)], (0)), 100000000, 0, -5234); (Tag3 (Tag1 ((("Asttypes", 7320)), "mutable_flag"), 0, (0)), 100000000, 0, -5236); (Tag3 ((("class_field_kind", 7381)), 0, (0)), 100000000, 0, -5237)]), 100000000, 0, -5233)]), 0, (("astlib/ast_409.ml", 728, 22697, 22701), ("astlib/ast_409.ml", 728, 22697, 22759), 0), 0, Tag1 ("Astlib__Ast_409", 308)); (("Pcf_method", 912), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7320)), "label"), 0, (0)), 100000000, 0, -5240)], (0)), 100000000, 0, -5239); (Tag3 (Tag1 ((("Asttypes", 7320)), "private_flag"), 0, (0)), 100000000, 0, -5241); (Tag3 ((("class_field_kind", 7381)), 0, (0)), 100000000, 0, -5242)]), 100000000, 0, -5238)]), 0, (("astlib/ast_409.ml", 732, 22808, 22812), ("astlib/ast_409.ml", 732, 22808, 22873), 0), 0, Tag1 ("Astlib__Ast_409", 309)); (("Pcf_constraint", 913), ([(Tag2 ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5244); (Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5245)]), 100000000, 0, -5243)]), 0, (("astlib/ast_409.ml", 736, 22989, 22993), ("astlib/ast_409.ml", 736, 22989, 23036), 0), 0, Tag1 ("Astlib__Ast_409", 310)); (("Pcf_initializer", 914), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5246)]), 0, (("astlib/ast_409.ml", 738, 23066, 23070), ("astlib/ast_409.ml", 738, 23066, 23101), 0), 0, Tag1 ("Astlib__Ast_409", 311)); (("Pcf_attribute", 915), ([(Tag3 ((("attribute", 7336)), 0, (0)), 100000000, 0, -5247)]), 0, (("astlib/ast_409.ml", 740, 23126, 23130), ("astlib/ast_409.ml", 740, 23126, 23158), 0), 0, Tag1 ("Astlib__Ast_409", 312)); (("Pcf_extension", 916), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5248)]), 0, (("astlib/ast_409.ml", 742, 23177, 23181), ("astlib/ast_409.ml", 742, 23177, 23209), 0), 0, Tag1 ("Astlib__Ast_409", 313))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -5227)), 0, 0, 0, 0, (("astlib/ast_409.ml", 721, 22468, 22470), ("astlib/ast_409.ml", 742, 23177, 23209), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 91)), 2, 0); Tag1 (("class_field_kind", 7381), (0, 0, Tag1 ([(("Cfk_virtual", 917), ([(Tag3 ((("core_type", 7340)), 0, (0)), 100000000, 0, -5224)]), 0, (("astlib/ast_409.ml", 746, 23298, 23302), ("astlib/ast_409.ml", 746, 23298, 23328), 0), 0, Tag1 ("Astlib__Ast_409", 314)); (("Cfk_concrete", 918), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "override_flag"), 0, (0)), 100000000, 0, -5225); (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5226)]), 0, (("astlib/ast_409.ml", 747, 23329, 23333), ("astlib/ast_409.ml", 747, 23329, 23377), 0), 0, Tag1 ("Astlib__Ast_409", 315))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -5223)), 0, 0, 0, 0, (("astlib/ast_409.ml", 745, 23228, 23230), ("astlib/ast_409.ml", 747, 23329, 23377), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 92)), 2, 0); Tag1 (("class_declaration", 7382), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7373)), [(Tag3 ((("class_expr", 7376)), 0, (0)), 100000000, 0, -5222)], (0)), 100000000, 0, -5221)), 0, 0, 0, 0, (("astlib/ast_409.ml", 749, 23379, 23381), ("astlib/ast_409.ml", 749, 23379, 23427), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 93)), 2, 0); Tag1 (("module_type", 7383), (0, 0, [[(("pmty_desc", 919), 0, (Tag3 ((("module_type_desc", 7384)), 0, (0)), 100000000, 0, -5218), (("astlib/ast_409.ml", 757, 23575, 23581), ("astlib/ast_409.ml", 757, 23575, 23609), 0), 0, Tag1 ("Astlib__Ast_409", 316)); (("pmty_loc", 920), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5219), (("astlib/ast_409.ml", 758, 23610, 23616), ("astlib/ast_409.ml", 758, 23610, 23637), 0), 0, Tag1 ("Astlib__Ast_409", 317)); (("pmty_attributes", 921), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5220), (("astlib/ast_409.ml", 759, 23638, 23644), ("astlib/ast_409.ml", 759, 23638, 23672), 0), 0, Tag1 ("Astlib__Ast_409", 318))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -5217)), 0, 0, 0, 0, (("astlib/ast_409.ml", 755, 23509, 23511), ("astlib/ast_409.ml", 760, 23697, 23702), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 94)), 2, 0); Tag1 (("module_type_desc", 7384), (0, 0, Tag1 ([(("Pmty_ident", 922), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5203)], (0)), 100000000, 0, -5202)]), 0, (("astlib/ast_409.ml", 763, 23774, 23778), ("astlib/ast_409.ml", 763, 23774, 23809), 0), 0, Tag1 ("Astlib__Ast_409", 319)); (("Pmty_signature", 923), ([(Tag3 ((("signature", 7385)), 0, (0)), 100000000, 0, -5204)]), 0, (("astlib/ast_409.ml", 765, 23822, 23826), ("astlib/ast_409.ml", 765, 23822, 23855), 0), 0, Tag1 ("Astlib__Ast_409", 320)); (("Pmty_functor", 924), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5206)], (0)), 100000000, 0, -5205); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7383)), 0, (0)), 100000000, 0, -5208)], (0)), 100000000, 0, -5207); (Tag3 ((("module_type", 7383)), 0, (0)), 100000000, 0, -5209)]), 0, (("astlib/ast_409.ml", 767, 23878, 23882), ("astlib/ast_409.ml", 767, 23878, 23945), 0), 0, Tag1 ("Astlib__Ast_409", 321)); (("Pmty_with", 925), ([(Tag3 ((("module_type", 7383)), 0, (0)), 100000000, 0, -5210); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7397)), 0, (0)), 100000000, 0, -5212)], (0)), 100000000, 0, -5211)]), 0, (("astlib/ast_409.ml", 769, 23980, 23984), ("astlib/ast_409.ml", 769, 23980, 24033), 0), 0, Tag1 ("Astlib__Ast_409", 322)); (("Pmty_typeof", 926), ([(Tag3 ((("module_expr", 7398)), 0, (0)), 100000000, 0, -5213)]), 0, (("astlib/ast_409.ml", 771, 24056, 24060), ("astlib/ast_409.ml", 771, 24056, 24088), 0), 0, Tag1 ("Astlib__Ast_409", 323)); (("Pmty_extension", 927), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5214)]), 0, (("astlib/ast_409.ml", 773, 24117, 24121), ("astlib/ast_409.ml", 773, 24117, 24150), 0), 0, Tag1 ("Astlib__Ast_409", 324)); (("Pmty_alias", 928), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5216)], (0)), 100000000, 0, -5215)]), 0, (("astlib/ast_409.ml", 775, 24167, 24171), ("astlib/ast_409.ml", 775, 24167, 24202), 0), 0, Tag1 ("Astlib__Ast_409", 325))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -5201)), 0, 0, 0, 0, (("astlib/ast_409.ml", 762, 23704, 23706), ("astlib/ast_409.ml", 775, 24167, 24202), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 95)), 2, 0); Tag1 (("signature", 7385), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7386)), 0, (0)), 100000000, 0, -5200)], (0)), 100000000, 0, -5199)), 0, 0, 0, 0, (("astlib/ast_409.ml", 778, 24225, 24227), ("astlib/ast_409.ml", 778, 24225, 24262), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 96)), 2, 0); Tag1 (("signature_item", 7386), (0, 0, [[(("psig_desc", 929), 0, (Tag3 ((("signature_item_desc", 7387)), 0, (0)), 100000000, 0, -5197), (("astlib/ast_409.ml", 782, 24336, 24342), ("astlib/ast_409.ml", 782, 24336, 24373), 0), 0, Tag1 ("Astlib__Ast_409", 326)); (("psig_loc", 930), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5198), (("astlib/ast_409.ml", 783, 24374, 24380), ("astlib/ast_409.ml", 783, 24374, 24401), 0), 0, Tag1 ("Astlib__Ast_409", 327))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -5196)), 0, 0, 0, 0, (("astlib/ast_409.ml", 780, 24264, 24266), ("astlib/ast_409.ml", 784, 24402, 24407), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 97)), 2, 0); Tag1 (("signature_item_desc", 7387), (0, 0, Tag1 ([(("Psig_value", 931), ([(Tag3 ((("value_description", 7358)), 0, (0)), 100000000, 0, -5174)]), 0, (("astlib/ast_409.ml", 787, 24485, 24489), ("astlib/ast_409.ml", 787, 24485, 24522), 0), 0, Tag1 ("Astlib__Ast_409", 328)); (("Psig_type", 932), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "rec_flag"), 0, (0)), 100000000, 0, -5175); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7359)), 0, (0)), 100000000, 0, -5177)], (0)), 100000000, 0, -5176)]), 0, (("astlib/ast_409.ml", 792, 24594, 24598), ("astlib/ast_409.ml", 792, 24594, 24645), 0), 0, Tag1 ("Astlib__Ast_409", 329)); (("Psig_typesubst", 933), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7359)), 0, (0)), 100000000, 0, -5179)], (0)), 100000000, 0, -5178)]), 0, (("astlib/ast_409.ml", 794, 24692, 24696), ("astlib/ast_409.ml", 794, 24692, 24737), 0), 0, Tag1 ("Astlib__Ast_409", 330)); (("Psig_typext", 934), ([(Tag3 ((("type_extension", 7364)), 0, (0)), 100000000, 0, -5180)]), 0, (("astlib/ast_409.ml", 796, 24786, 24790), ("astlib/ast_409.ml", 796, 24786, 24821), 0), 0, Tag1 ("Astlib__Ast_409", 331)); (("Psig_exception", 935), ([(Tag3 ((("type_exception", 7366)), 0, (0)), 100000000, 0, -5181)]), 0, (("astlib/ast_409.ml", 798, 24847, 24851), ("astlib/ast_409.ml", 798, 24847, 24885), 0), 0, Tag1 ("Astlib__Ast_409", 332)); (("Psig_module", 936), ([(Tag3 ((("module_declaration", 7388)), 0, (0)), 100000000, 0, -5182)]), 0, (("astlib/ast_409.ml", 800, 24913, 24917), ("astlib/ast_409.ml", 800, 24913, 24952), 0), 0, Tag1 ("Astlib__Ast_409", 333)); (("Psig_modsubst", 937), ([(Tag3 ((("module_substitution", 7389)), 0, (0)), 100000000, 0, -5183)]), 0, (("astlib/ast_409.ml", 803, 24997, 25001), ("astlib/ast_409.ml", 803, 24997, 25039), 0), 0, Tag1 ("Astlib__Ast_409", 334)); (("Psig_recmodule", 938), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7388)), 0, (0)), 100000000, 0, -5185)], (0)), 100000000, 0, -5184)]), 0, (("astlib/ast_409.ml", 805, 25064, 25068), ("astlib/ast_409.ml", 805, 25064, 25111), 0), 0, Tag1 ("Astlib__Ast_409", 335)); (("Psig_modtype", 939), ([(Tag3 ((("module_type_declaration", 7390)), 0, (0)), 100000000, 0, -5186)]), 0, (("astlib/ast_409.ml", 807, 25163, 25167), ("astlib/ast_409.ml", 807, 25163, 25208), 0), 0, Tag1 ("Astlib__Ast_409", 336)); (("Psig_open", 940), ([(Tag3 ((("open_description", 7392)), 0, (0)), 100000000, 0, -5187)]), 0, (("astlib/ast_409.ml", 810, 25259, 25263), ("astlib/ast_409.ml", 810, 25259, 25294), 0), 0, Tag1 ("Astlib__Ast_409", 337)); (("Psig_include", 941), ([(Tag3 ((("include_description", 7395)), 0, (0)), 100000000, 0, -5188)]), 0, (("astlib/ast_409.ml", 812, 25312, 25316), ("astlib/ast_409.ml", 812, 25312, 25353), 0), 0, Tag1 ("Astlib__Ast_409", 338)); (("Psig_class", 942), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7374)), 0, (0)), 100000000, 0, -5190)], (0)), 100000000, 0, -5189)]), 0, (("astlib/ast_409.ml", 814, 25375, 25379), ("astlib/ast_409.ml", 814, 25375, 25417), 0), 0, Tag1 ("Astlib__Ast_409", 339)); (("Psig_class_type", 943), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7375)), 0, (0)), 100000000, 0, -5192)], (0)), 100000000, 0, -5191)]), 0, (("astlib/ast_409.ml", 816, 25464, 25468), ("astlib/ast_409.ml", 816, 25464, 25516), 0), 0, Tag1 ("Astlib__Ast_409", 340)); (("Psig_attribute", 944), ([(Tag3 ((("attribute", 7336)), 0, (0)), 100000000, 0, -5193)]), 0, (("astlib/ast_409.ml", 818, 25570, 25574), ("astlib/ast_409.ml", 818, 25570, 25603), 0), 0, Tag1 ("Astlib__Ast_409", 341)); (("Psig_extension", 945), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5194); (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5195)]), 0, (("astlib/ast_409.ml", 820, 25622, 25626), ("astlib/ast_409.ml", 820, 25622, 25668), 0), 0, Tag1 ("Astlib__Ast_409", 342))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -5173)), 0, 0, 0, 0, (("astlib/ast_409.ml", 786, 24409, 24411), ("astlib/ast_409.ml", 820, 25622, 25668), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 98)), 2, 0); Tag1 (("module_declaration", 7388), (0, 0, [[(("pmd_name", 946), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5169)], (0)), 100000000, 0, -5168), (("astlib/ast_409.ml", 825, 25767, 25773), ("astlib/ast_409.ml", 825, 25767, 25794), 0), 0, Tag1 ("Astlib__Ast_409", 343)); (("pmd_type", 947), 0, (Tag3 ((("module_type", 7383)), 0, (0)), 100000000, 0, -5170), (("astlib/ast_409.ml", 826, 25795, 25801), ("astlib/ast_409.ml", 826, 25795, 25823), 0), 0, Tag1 ("Astlib__Ast_409", 344)); (("pmd_attributes", 948), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5171), (("astlib/ast_409.ml", 827, 25824, 25830), ("astlib/ast_409.ml", 827, 25824, 25857), 0), 0, Tag1 ("Astlib__Ast_409", 345)); (("pmd_loc", 949), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5172), (("astlib/ast_409.ml", 828, 25884, 25890), ("astlib/ast_409.ml", 828, 25884, 25910), 0), 0, Tag1 ("Astlib__Ast_409", 346))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -5167)), 0, 0, 0, 0, (("astlib/ast_409.ml", 823, 25687, 25689), ("astlib/ast_409.ml", 829, 25911, 25916), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 99)), 2, 0); Tag1 (("module_substitution", 7389), (0, 0, [[(("pms_name", 950), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5162)], (0)), 100000000, 0, -5161), (("astlib/ast_409.ml", 834, 26015, 26021), ("astlib/ast_409.ml", 834, 26015, 26042), 0), 0, Tag1 ("Astlib__Ast_409", 347)); (("pms_manifest", 951), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5164)], (0)), 100000000, 0, -5163), (("astlib/ast_409.ml", 835, 26043, 26049), ("astlib/ast_409.ml", 835, 26043, 26079), 0), 0, Tag1 ("Astlib__Ast_409", 348)); (("pms_attributes", 952), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5165), (("astlib/ast_409.ml", 836, 26080, 26086), ("astlib/ast_409.ml", 836, 26080, 26113), 0), 0, Tag1 ("Astlib__Ast_409", 349)); (("pms_loc", 953), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5166), (("astlib/ast_409.ml", 837, 26140, 26146), ("astlib/ast_409.ml", 837, 26140, 26166), 0), 0, Tag1 ("Astlib__Ast_409", 350))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "module_substitution"), 0, (0)), 100000000, 0, -5160)), 0, 0, 0, 0, (("astlib/ast_409.ml", 832, 25933, 25935), ("astlib/ast_409.ml", 838, 26167, 26172), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 100)), 2, 0); Tag1 (("module_type_declaration", 7390), (0, 0, [[(("pmtd_name", 954), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5155)], (0)), 100000000, 0, -5154), (("astlib/ast_409.ml", 842, 26264, 26270), ("astlib/ast_409.ml", 842, 26264, 26292), 0), 0, Tag1 ("Astlib__Ast_409", 351)); (("pmtd_type", 955), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7383)), 0, (0)), 100000000, 0, -5157)], (0)), 100000000, 0, -5156), (("astlib/ast_409.ml", 843, 26293, 26299), ("astlib/ast_409.ml", 843, 26293, 26329), 0), 0, Tag1 ("Astlib__Ast_409", 352)); (("pmtd_attributes", 956), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5158), (("astlib/ast_409.ml", 844, 26330, 26336), ("astlib/ast_409.ml", 844, 26330, 26364), 0), 0, Tag1 ("Astlib__Ast_409", 353)); (("pmtd_loc", 957), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5159), (("astlib/ast_409.ml", 845, 26391, 26397), ("astlib/ast_409.ml", 845, 26391, 26418), 0), 0, Tag1 ("Astlib__Ast_409", 354))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -5153)), 0, 0, 0, 0, (("astlib/ast_409.ml", 840, 26174, 26176), ("astlib/ast_409.ml", 846, 26419, 26424), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 101)), 2, 0); Tag1 (("open_infos", 7391), ([((("a")), 100000000, 0, -5149)], 1, [[(("popen_expr", 958), 0, ((("a")), 100000000, 0, -5149), (("astlib/ast_409.ml", 853, 26579, 26585), ("astlib/ast_409.ml", 853, 26579, 26600), 0), 0, Tag1 ("Astlib__Ast_409", 355)); (("popen_override", 959), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "override_flag"), 0, (0)), 100000000, 0, -5150), (("astlib/ast_409.ml", 854, 26601, 26607), ("astlib/ast_409.ml", 854, 26601, 26637), 0), 0, Tag1 ("Astlib__Ast_409", 356)); (("popen_loc", 960), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5151), (("astlib/ast_409.ml", 855, 26638, 26644), ("astlib/ast_409.ml", 855, 26638, 26666), 0), 0, Tag1 ("Astlib__Ast_409", 357)); (("popen_attributes", 961), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5152), (("astlib/ast_409.ml", 856, 26667, 26673), ("astlib/ast_409.ml", 856, 26667, 26702), 0), 0, Tag1 ("Astlib__Ast_409", 358))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "open_infos"), [((("a")), 100000000, 0, -5149)], (0)), 100000000, 0, -5148)), [25], [0], 0, 0, (("astlib/ast_409.ml", 851, 26509, 26511), ("astlib/ast_409.ml", 857, 26703, 26708), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 102)), 2, 0); Tag1 (("open_description", 7392), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7391)), [(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5147)], (0)), 100000000, 0, -5146)], (0)), 100000000, 0, -5145)), 0, 0, 0, 0, (("astlib/ast_409.ml", 863, 26850, 26852), ("astlib/ast_409.ml", 863, 26850, 26901), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 103)), 2, 0); Tag1 (("open_declaration", 7393), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7391)), [(Tag3 ((("module_expr", 7398)), 0, (0)), 100000000, 0, -5144)], (0)), 100000000, 0, -5143)), 0, 0, 0, 0, (("astlib/ast_409.ml", 867, 26937, 26939), ("astlib/ast_409.ml", 867, 26937, 26984), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 104)), 2, 0); Tag1 (("include_infos", 7394), ([((("a")), 100000000, 0, -5140)], 1, [[(("pincl_mod", 962), 0, ((("a")), 100000000, 0, -5140), (("astlib/ast_409.ml", 874, 27121, 27127), ("astlib/ast_409.ml", 874, 27121, 27141), 0), 0, Tag1 ("Astlib__Ast_409", 359)); (("pincl_loc", 963), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5141), (("astlib/ast_409.ml", 875, 27142, 27148), ("astlib/ast_409.ml", 875, 27142, 27170), 0), 0, Tag1 ("Astlib__Ast_409", 360)); (("pincl_attributes", 964), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5142), (("astlib/ast_409.ml", 876, 27171, 27177), ("astlib/ast_409.ml", 876, 27171, 27206), 0), 0, Tag1 ("Astlib__Ast_409", 361))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -5140)], (0)), 100000000, 0, -5139)), [25], [0], 0, 0, (("astlib/ast_409.ml", 872, 27045, 27047), ("astlib/ast_409.ml", 877, 27207, 27212), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 105)), 2, 0); Tag1 (("include_description", 7395), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7394)), [(Tag3 ((("module_type", 7383)), 0, (0)), 100000000, 0, -5138)], (0)), 100000000, 0, -5137)), 0, 0, 0, 0, (("astlib/ast_409.ml", 879, 27214, 27216), ("astlib/ast_409.ml", 879, 27214, 27267), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 106)), 2, 0); Tag1 (("include_declaration", 7396), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7394)), [(Tag3 ((("module_expr", 7398)), 0, (0)), 100000000, 0, -5136)], (0)), 100000000, 0, -5135)), 0, 0, 0, 0, (("astlib/ast_409.ml", 882, 27288, 27290), ("astlib/ast_409.ml", 882, 27288, 27341), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 107)), 2, 0); Tag1 (("with_constraint", 7397), (0, 0, Tag1 ([(("Pwith_type", 965), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5122)], (0)), 100000000, 0, -5121); (Tag3 ((("type_declaration", 7359)), 0, (0)), 100000000, 0, -5123)]), 0, (("astlib/ast_409.ml", 886, 27430, 27434), ("astlib/ast_409.ml", 886, 27430, 27484), 0), 0, Tag1 ("Astlib__Ast_409", 362)); (("Pwith_module", 966), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5125)], (0)), 100000000, 0, -5124); (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5127)], (0)), 100000000, 0, -5126)]), 0, (("astlib/ast_409.ml", 891, 27617, 27621), ("astlib/ast_409.ml", 891, 27617, 27672), 0), 0, Tag1 ("Astlib__Ast_409", 363)); (("Pwith_typesubst", 967), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5129)], (0)), 100000000, 0, -5128); (Tag3 ((("type_declaration", 7359)), 0, (0)), 100000000, 0, -5130)]), 0, (("astlib/ast_409.ml", 893, 27703, 27707), ("astlib/ast_409.ml", 893, 27703, 27762), 0), 0, Tag1 ("Astlib__Ast_409", 364)); (("Pwith_modsubst", 968), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5132)], (0)), 100000000, 0, -5131); (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5134)], (0)), 100000000, 0, -5133)]), 0, (("astlib/ast_409.ml", 895, 27823, 27827), ("astlib/ast_409.ml", 895, 27823, 27880), 0), 0, Tag1 ("Astlib__Ast_409", 365))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -5120)), 0, 0, 0, 0, (("astlib/ast_409.ml", 885, 27362, 27364), ("astlib/ast_409.ml", 895, 27823, 27880), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 108)), 2, 0); Tag1 (("module_expr", 7398), (0, 0, [[(("pmod_desc", 969), 0, (Tag3 ((("module_expr_desc", 7399)), 0, (0)), 100000000, 0, -5117), (("astlib/ast_409.ml", 902, 28030, 28036), ("astlib/ast_409.ml", 902, 28030, 28064), 0), 0, Tag1 ("Astlib__Ast_409", 366)); (("pmod_loc", 970), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5118), (("astlib/ast_409.ml", 903, 28065, 28071), ("astlib/ast_409.ml", 903, 28065, 28092), 0), 0, Tag1 ("Astlib__Ast_409", 367)); (("pmod_attributes", 971), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5119), (("astlib/ast_409.ml", 904, 28093, 28099), ("astlib/ast_409.ml", 904, 28093, 28127), 0), 0, Tag1 ("Astlib__Ast_409", 368))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -5116)), 0, 0, 0, 0, (("astlib/ast_409.ml", 900, 27964, 27966), ("astlib/ast_409.ml", 905, 28152, 28157), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 109)), 2, 0); Tag1 (("module_expr_desc", 7399), (0, 0, Tag1 ([(("Pmod_ident", 972), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5103)], (0)), 100000000, 0, -5102)]), 0, (("astlib/ast_409.ml", 908, 28229, 28233), ("astlib/ast_409.ml", 908, 28229, 28264), 0), 0, Tag1 ("Astlib__Ast_409", 369)); (("Pmod_structure", 973), ([(Tag3 ((("structure", 7400)), 0, (0)), 100000000, 0, -5104)]), 0, (("astlib/ast_409.ml", 910, 28277, 28281), ("astlib/ast_409.ml", 910, 28277, 28310), 0), 0, Tag1 ("Astlib__Ast_409", 370)); (("Pmod_functor", 974), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5106)], (0)), 100000000, 0, -5105); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7383)), 0, (0)), 100000000, 0, -5108)], (0)), 100000000, 0, -5107); (Tag3 ((("module_expr", 7398)), 0, (0)), 100000000, 0, -5109)]), 0, (("astlib/ast_409.ml", 912, 28336, 28340), ("astlib/ast_409.ml", 912, 28336, 28403), 0), 0, Tag1 ("Astlib__Ast_409", 371)); (("Pmod_apply", 975), ([(Tag3 ((("module_expr", 7398)), 0, (0)), 100000000, 0, -5110); (Tag3 ((("module_expr", 7398)), 0, (0)), 100000000, 0, -5111)]), 0, (("astlib/ast_409.ml", 914, 28437, 28441), ("astlib/ast_409.ml", 914, 28437, 28482), 0), 0, Tag1 ("Astlib__Ast_409", 372)); (("Pmod_constraint", 976), ([(Tag3 ((("module_expr", 7398)), 0, (0)), 100000000, 0, -5112); (Tag3 ((("module_type", 7383)), 0, (0)), 100000000, 0, -5113)]), 0, (("astlib/ast_409.ml", 916, 28502, 28506), ("astlib/ast_409.ml", 916, 28502, 28552), 0), 0, Tag1 ("Astlib__Ast_409", 373)); (("Pmod_unpack", 977), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5114)]), 0, (("astlib/ast_409.ml", 918, 28573, 28577), ("astlib/ast_409.ml", 918, 28573, 28604), 0), 0, Tag1 ("Astlib__Ast_409", 374)); (("Pmod_extension", 978), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5115)]), 0, (("astlib/ast_409.ml", 920, 28623, 28627), ("astlib/ast_409.ml", 920, 28623, 28656), 0), 0, Tag1 ("Astlib__Ast_409", 375))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -5101)), 0, 0, 0, 0, (("astlib/ast_409.ml", 907, 28159, 28161), ("astlib/ast_409.ml", 920, 28623, 28656), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 110)), 2, 0); Tag1 (("structure", 7400), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7401)), 0, (0)), 100000000, 0, -5100)], (0)), 100000000, 0, -5099)), 0, 0, 0, 0, (("astlib/ast_409.ml", 923, 28674, 28676), ("astlib/ast_409.ml", 923, 28674, 28711), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 111)), 2, 0); Tag1 (("structure_item", 7401), (0, 0, [[(("pstr_desc", 979), 0, (Tag3 ((("structure_item_desc", 7402)), 0, (0)), 100000000, 0, -5097), (("astlib/ast_409.ml", 927, 28785, 28791), ("astlib/ast_409.ml", 927, 28785, 28822), 0), 0, Tag1 ("Astlib__Ast_409", 376)); (("pstr_loc", 980), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5098), (("astlib/ast_409.ml", 928, 28823, 28829), ("astlib/ast_409.ml", 928, 28823, 28850), 0), 0, Tag1 ("Astlib__Ast_409", 377))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -5096)), 0, 0, 0, 0, (("astlib/ast_409.ml", 925, 28713, 28715), ("astlib/ast_409.ml", 929, 28851, 28856), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 112)), 2, 0); Tag1 (("structure_item_desc", 7402), (0, 0, Tag1 ([(("Pstr_eval", 981), ([(Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5072); (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5073)]), 0, (("astlib/ast_409.ml", 932, 28934, 28938), ("astlib/ast_409.ml", 932, 28934, 28976), 0), 0, Tag1 ("Astlib__Ast_409", 378)); (("Pstr_value", 982), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "rec_flag"), 0, (0)), 100000000, 0, -5074); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7403)), 0, (0)), 100000000, 0, -5076)], (0)), 100000000, 0, -5075)]), 0, (("astlib/ast_409.ml", 934, 28989, 28993), ("astlib/ast_409.ml", 934, 28989, 29038), 0), 0, Tag1 ("Astlib__Ast_409", 379)); (("Pstr_primitive", 983), ([(Tag3 ((("value_description", 7358)), 0, (0)), 100000000, 0, -5077)]), 0, (("astlib/ast_409.ml", 938, 29177, 29181), ("astlib/ast_409.ml", 938, 29177, 29218), 0), 0, Tag1 ("Astlib__Ast_409", 380)); (("Pstr_type", 984), ([(Tag3 (Tag1 ((("Asttypes", 7320)), "rec_flag"), 0, (0)), 100000000, 0, -5078); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7359)), 0, (0)), 100000000, 0, -5080)], (0)), 100000000, 0, -5079)]), 0, (("astlib/ast_409.ml", 941, 29277, 29281), ("astlib/ast_409.ml", 941, 29277, 29328), 0), 0, Tag1 ("Astlib__Ast_409", 381)); (("Pstr_typext", 985), ([(Tag3 ((("type_extension", 7364)), 0, (0)), 100000000, 0, -5081)]), 0, (("astlib/ast_409.ml", 943, 29374, 29378), ("astlib/ast_409.ml", 943, 29374, 29409), 0), 0, Tag1 ("Astlib__Ast_409", 382)); (("Pstr_exception", 986), ([(Tag3 ((("type_exception", 7366)), 0, (0)), 100000000, 0, -5082)]), 0, (("astlib/ast_409.ml", 945, 29435, 29439), ("astlib/ast_409.ml", 945, 29435, 29473), 0), 0, Tag1 ("Astlib__Ast_409", 383)); (("Pstr_module", 987), ([(Tag3 ((("module_binding", 7404)), 0, (0)), 100000000, 0, -5083)]), 0, (("astlib/ast_409.ml", 948, 29526, 29530), ("astlib/ast_409.ml", 948, 29526, 29561), 0), 0, Tag1 ("Astlib__Ast_409", 384)); (("Pstr_recmodule", 988), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7404)), 0, (0)), 100000000, 0, -5085)], (0)), 100000000, 0, -5084)]), 0, (("astlib/ast_409.ml", 950, 29586, 29590), ("astlib/ast_409.ml", 950, 29586, 29629), 0), 0, Tag1 ("Astlib__Ast_409", 385)); (("Pstr_modtype", 989), ([(Tag3 ((("module_type_declaration", 7390)), 0, (0)), 100000000, 0, -5086)]), 0, (("astlib/ast_409.ml", 952, 29681, 29685), ("astlib/ast_409.ml", 952, 29681, 29726), 0), 0, Tag1 ("Astlib__Ast_409", 386)); (("Pstr_open", 990), ([(Tag3 ((("open_declaration", 7393)), 0, (0)), 100000000, 0, -5087)]), 0, (("astlib/ast_409.ml", 954, 29756, 29760), ("astlib/ast_409.ml", 954, 29756, 29791), 0), 0, Tag1 ("Astlib__Ast_409", 387)); (("Pstr_class", 991), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7382)), 0, (0)), 100000000, 0, -5089)], (0)), 100000000, 0, -5088)]), 0, (("astlib/ast_409.ml", 956, 29809, 29813), ("astlib/ast_409.ml", 956, 29809, 29851), 0), 0, Tag1 ("Astlib__Ast_409", 388)); (("Pstr_class_type", 992), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7375)), 0, (0)), 100000000, 0, -5091)], (0)), 100000000, 0, -5090)]), 0, (("astlib/ast_409.ml", 958, 29898, 29902), ("astlib/ast_409.ml", 958, 29898, 29950), 0), 0, Tag1 ("Astlib__Ast_409", 389)); (("Pstr_include", 993), ([(Tag3 ((("include_declaration", 7396)), 0, (0)), 100000000, 0, -5092)]), 0, (("astlib/ast_409.ml", 960, 30004, 30008), ("astlib/ast_409.ml", 960, 30004, 30045), 0), 0, Tag1 ("Astlib__Ast_409", 390)); (("Pstr_attribute", 994), ([(Tag3 ((("attribute", 7336)), 0, (0)), 100000000, 0, -5093)]), 0, (("astlib/ast_409.ml", 962, 30067, 30071), ("astlib/ast_409.ml", 962, 30067, 30100), 0), 0, Tag1 ("Astlib__Ast_409", 391)); (("Pstr_extension", 995), ([(Tag3 ((("extension", 7337)), 0, (0)), 100000000, 0, -5094); (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5095)]), 0, (("astlib/ast_409.ml", 964, 30119, 30123), ("astlib/ast_409.ml", 964, 30119, 30165), 0), 0, Tag1 ("Astlib__Ast_409", 392))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -5071)), 0, 0, 0, 0, (("astlib/ast_409.ml", 931, 28858, 28860), ("astlib/ast_409.ml", 964, 30119, 30165), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 113)), 2, 0); Tag1 (("value_binding", 7403), (0, 0, [[(("pvb_pat", 996), 0, (Tag3 ((("pattern", 7348)), 0, (0)), 100000000, 0, -5067), (("astlib/ast_409.ml", 969, 30254, 30260), ("astlib/ast_409.ml", 969, 30254, 30277), 0), 0, Tag1 ("Astlib__Ast_409", 393)); (("pvb_expr", 997), 0, (Tag3 ((("expression", 7351)), 0, (0)), 100000000, 0, -5068), (("astlib/ast_409.ml", 970, 30278, 30284), ("astlib/ast_409.ml", 970, 30278, 30305), 0), 0, Tag1 ("Astlib__Ast_409", 394)); (("pvb_attributes", 998), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5069), (("astlib/ast_409.ml", 971, 30306, 30312), ("astlib/ast_409.ml", 971, 30306, 30339), 0), 0, Tag1 ("Astlib__Ast_409", 395)); (("pvb_loc", 999), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5070), (("astlib/ast_409.ml", 972, 30340, 30346), ("astlib/ast_409.ml", 972, 30340, 30366), 0), 0, Tag1 ("Astlib__Ast_409", 396))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -5066)), 0, 0, 0, 0, (("astlib/ast_409.ml", 967, 30184, 30186), ("astlib/ast_409.ml", 973, 30367, 30372), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 114)), 2, 0); Tag1 (("module_binding", 7404), (0, 0, [[(("pmb_name", 1000), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5062)], (0)), 100000000, 0, -5061), (("astlib/ast_409.ml", 977, 30446, 30452), ("astlib/ast_409.ml", 977, 30446, 30473), 0), 0, Tag1 ("Astlib__Ast_409", 397)); (("pmb_expr", 1001), 0, (Tag3 ((("module_expr", 7398)), 0, (0)), 100000000, 0, -5063), (("astlib/ast_409.ml", 978, 30474, 30480), ("astlib/ast_409.ml", 978, 30474, 30502), 0), 0, Tag1 ("Astlib__Ast_409", 398)); (("pmb_attributes", 1002), 0, (Tag3 ((("attributes", 7338)), 0, (0)), 100000000, 0, -5064), (("astlib/ast_409.ml", 979, 30503, 30509), ("astlib/ast_409.ml", 979, 30503, 30536), 0), 0, Tag1 ("Astlib__Ast_409", 399)); (("pmb_loc", 1003), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5065), (("astlib/ast_409.ml", 980, 30537, 30543), ("astlib/ast_409.ml", 980, 30537, 30563), 0), 0, Tag1 ("Astlib__Ast_409", 400))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -5060)), 0, 0, 0, 0, (("astlib/ast_409.ml", 975, 30374, 30376), ("astlib/ast_409.ml", 981, 30564, 30569), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 115)), 2, 0); Tag1 (("toplevel_phrase", 7405), (0, 0, Tag1 ([(("Ptop_def", 1018), ([(Tag3 ((("structure", 7400)), 0, (0)), 100000000, 0, -5058)]), 0, (("astlib/ast_409.ml", 989, 30704, 30708), ("astlib/ast_409.ml", 989, 30704, 30731), 0), 0, Tag1 ("Astlib__Ast_409", 405)); (("Ptop_dir", 1019), ([(Tag3 ((("toplevel_directive", 7406)), 0, (0)), 100000000, 0, -5059)]), 0, (("astlib/ast_409.ml", 990, 30732, 30736), ("astlib/ast_409.ml", 990, 30732, 30768), 0), 0, Tag1 ("Astlib__Ast_409", 406))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -5057)), 0, 0, 0, 0, (("astlib/ast_409.ml", 988, 30635, 30637), ("astlib/ast_409.ml", 990, 30732, 30768), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 401)), 1, 0); Tag1 (("toplevel_directive", 7406), (0, 0, [[(("pdir_name", 1020), 0, (Tag3 (Tag1 ((("Asttypes", 7320)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5053)], (0)), 100000000, 0, -5052), (("astlib/ast_409.ml", 995, 30876, 30882), ("astlib/ast_409.ml", 995, 30876, 30905), 0), 0, Tag1 ("Astlib__Ast_409", 407)); (("pdir_arg", 1021), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("directive_argument", 7407)), 0, (0)), 100000000, 0, -5055)], (0)), 100000000, 0, -5054), (("astlib/ast_409.ml", 996, 30906, 30912), ("astlib/ast_409.ml", 996, 30906, 30949), 0), 0, Tag1 ("Astlib__Ast_409", 408)); (("pdir_loc", 1022), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5056), (("astlib/ast_409.ml", 997, 30950, 30956), ("astlib/ast_409.ml", 997, 30950, 30978), 0), 0, Tag1 ("Astlib__Ast_409", 409))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "toplevel_directive"), 0, (0)), 100000000, 0, -5051)), 0, 0, 0, 0, (("astlib/ast_409.ml", 993, 30796, 30798), ("astlib/ast_409.ml", 998, 30979, 30984), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 402)), 2, 0); Tag1 (("directive_argument", 7407), (0, 0, [[(("pdira_desc", 1023), 0, (Tag3 ((("directive_argument_desc", 7408)), 0, (0)), 100000000, 0, -5049), (("astlib/ast_409.ml", 1002, 31066, 31072), ("astlib/ast_409.ml", 1002, 31066, 31109), 0), 0, Tag1 ("Astlib__Ast_409", 410)); (("pdira_loc", 1024), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5050), (("astlib/ast_409.ml", 1003, 31110, 31116), ("astlib/ast_409.ml", 1003, 31110, 31139), 0), 0, Tag1 ("Astlib__Ast_409", 411))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -5048)), 0, 0, 0, 0, (("astlib/ast_409.ml", 1000, 30986, 30988), ("astlib/ast_409.ml", 1004, 31140, 31145), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 403)), 2, 0); Tag1 (("directive_argument_desc", 7408), (0, 0, Tag1 ([(("Pdir_string", 1025), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5042)]), 0, (("astlib/ast_409.ml", 1007, 31231, 31235), ("astlib/ast_409.ml", 1007, 31231, 31258), 0), 0, Tag1 ("Astlib__Ast_409", 412)); (("Pdir_int", 1026), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5043); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -5045)], (0)), 100000000, 0, -5044)]), 0, (("astlib/ast_409.ml", 1008, 31259, 31263), ("astlib/ast_409.ml", 1008, 31259, 31297), 0), 0, Tag1 ("Astlib__Ast_409", 413)); (("Pdir_ident", 1027), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5046)]), 0, (("astlib/ast_409.ml", 1009, 31298, 31302), ("astlib/ast_409.ml", 1009, 31298, 31329), 0), 0, Tag1 ("Astlib__Ast_409", 414)); (("Pdir_bool", 1028), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -5047)]), 0, (("astlib/ast_409.ml", 1010, 31330, 31334), ("astlib/ast_409.ml", 1010, 31330, 31353), 0), 0, Tag1 ("Astlib__Ast_409", 415))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_409")), "Parsetree"), "directive_argument_desc"), 0, (0)), 100000000, 0, -5041)), 0, 0, 0, 0, (("astlib/ast_409.ml", 1006, 31147, 31149), ("astlib/ast_409.ml", 1010, 31330, 31353), 0), 0, 0, 0, Tag1 ("Astlib__Ast_409", 404)), 2, 0)]), 0, (("astlib/ast_409.ml", 66, 2701, 2701), ("astlib/ast_409.ml", 1012, 31355, 31358), 0), Tag1 ("Astlib__Ast_409", 416)), 0, 0); Tag3 (("Config", 7322), 0, (Tag1 ([(("ast_impl_magic_number", 7409), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5692), 0, (("astlib/ast_409.ml", 1015, 31383, 31389), ("astlib/ast_409.ml", 1015, 31383, 31410), 0), 0, Tag1 ("Astlib__Ast_409", 417)), 0); (("ast_intf_magic_number", 7410), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5691), 0, (("astlib/ast_409.ml", 1016, 31428, 31434), ("astlib/ast_409.ml", 1016, 31428, 31455), 0), 0, Tag1 ("Astlib__Ast_409", 418)), 0)]), 0, (("astlib/ast_409.ml", 1014, 31360, 31360), ("astlib/ast_409.ml", 1017, 31473, 31476), 0), Tag1 ("Astlib__Ast_409", 419)), 0, 0)]), 0, (("astlib/astlib.ml", 32, 1538, 1538), ("astlib/astlib.ml", 32, 1538, 1562), 0), Tag1 ("Astlib", 7)), 0, 0); (("version", 7315), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5015), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7316), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5014), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7317), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -4995), 0), 100000000, 0, -4994), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -5011), 0), 100000000, 0, -5010), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -5013), 0), 100000000, 0, -5012), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -5005), 0), 100000000, 0, -5004), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -4977), 0), 100000000, 0, -4976), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -4991), 0), 100000000, 0, -4990), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -4981), 0), 100000000, 0, -4980), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -5003), 0), 100000000, 0, -5002), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -4989), 0), 100000000, 0, -4988), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -4987), 0), 100000000, 0, -4986), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -4985), 0), 100000000, 0, -4984), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -4983), 0), 100000000, 0, -4982), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -4999), 0), 100000000, 0, -4998), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -5007), 0), 100000000, 0, -5006), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -5001), 0), 100000000, 0, -5000), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -4979), 0), 100000000, 0, -4978), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -4993), 0), 100000000, 0, -4992), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -5009), 0), 100000000, 0, -5008), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7314)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -4997), 0), 100000000, 0, -4996), (0, 100000000, 0, -4975)), 100000000, 0, 750)), 100000000, 0, 751)), 100000000, 0, 752)), 100000000, 0, 753)), 100000000, 0, 754)), 100000000, 0, 755)), 100000000, 0, 756)), 100000000, 0, 757)), 100000000, 0, 758)), 100000000, 0, 759)), 100000000, 0, 760)), 100000000, 0, 761)), 100000000, 0, 762)), 100000000, 0, 763)), 100000000, 0, 764)), 100000000, 0, 765)), 100000000, 0, 766)), 100000000, 0, 767)), 100000000, 0, -4956), (0)), 100000000, 0, -4955)], (0)), 100000000, 0, -4954)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7318), ((("witnesses", 6673)), [((("_")), 100000000, 0, -4953)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7317)), 0, (0)), 100000000, 0, -4952)], (0)), 100000000, 0, -4951)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7319), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7317)), 0, (0)), 100000000, 0, -4950)], (0)), 100000000, 0, -4949), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 152, 5610, 5610), ("ast/versions.mli", 152, 5610, 5675), 0), Tag1 ("Ppxlib_ast__Versions", 41)), 0, 0); Tag3 (("OCaml_410", 6684), 0, (Tag1 ([Tag3 (("Ast", 7411), 0, (Tag1 ([Tag3 (("Asttypes", 7417), 0, (Tag1 ([Tag1 (("constant", 7420), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5776)]), 0, (("astlib/ast_410.ml", 22, 1494, 1500), ("astlib/ast_410.ml", 22, 1494, 1516), 0), 0, Tag1 ("Astlib__Ast_410", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -5777)]), 0, (("astlib/ast_410.ml", 23, 1517, 1521), ("astlib/ast_410.ml", 23, 1517, 1541), 0), 0, Tag1 ("Astlib__Ast_410", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5778); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5780)], (0)), 100000000, 0, -5779)]), 0, (("astlib/ast_410.ml", 24, 1542, 1546), ("astlib/ast_410.ml", 24, 1542, 1586), 0), 0, Tag1 ("Astlib__Ast_410", 3)); (("Const_float", 324), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5781)]), 0, (("astlib/ast_410.ml", 25, 1587, 1591), ("astlib/ast_410.ml", 25, 1587, 1614), 0), 0, Tag1 ("Astlib__Ast_410", 4)); (("Const_int32", 325), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -5782)]), 0, (("astlib/ast_410.ml", 26, 1615, 1619), ("astlib/ast_410.ml", 26, 1615, 1641), 0), 0, Tag1 ("Astlib__Ast_410", 5)); (("Const_int64", 326), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -5783)]), 0, (("astlib/ast_410.ml", 27, 1642, 1646), ("astlib/ast_410.ml", 27, 1642, 1668), 0), 0, Tag1 ("Astlib__Ast_410", 6)); (("Const_nativeint", 327), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -5784)]), 0, (("astlib/ast_410.ml", 28, 1669, 1673), ("astlib/ast_410.ml", 28, 1669, 1703), 0), 0, Tag1 ("Astlib__Ast_410", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -5775)), 0, 0, 0, 0, (("astlib/ast_410.ml", 21, 1440, 1442), ("astlib/ast_410.ml", 28, 1669, 1703), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 0)), 1, 0); Tag1 (("rec_flag", 7421), (0, 0, Tag1 ([(("Nonrecursive", 329), (0), 0, (("astlib/ast_410.ml", 30, 1705, 1759), ("astlib/ast_410.ml", 30, 1705, 1771), 0), 0, Tag1 ("Astlib__Ast_410", 9)); (("Recursive", 330), (0), 0, (("astlib/ast_410.ml", 30, 1705, 1772), ("astlib/ast_410.ml", 30, 1705, 1783), 0), 0, Tag1 ("Astlib__Ast_410", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -5774)), 0, 0, 0, 0, (("astlib/ast_410.ml", 30, 1705, 1707), ("astlib/ast_410.ml", 30, 1705, 1783), 0), 0, 1, 0, Tag1 ("Astlib__Ast_410", 8)), 1, 0); Tag1 (("direction_flag", 7422), (0, 0, Tag1 ([(("Upto", 332), (0), 0, (("astlib/ast_410.ml", 32, 1785, 1851), ("astlib/ast_410.ml", 32, 1785, 1855), 0), 0, Tag1 ("Astlib__Ast_410", 12)); (("Downto", 333), (0), 0, (("astlib/ast_410.ml", 32, 1785, 1856), ("astlib/ast_410.ml", 32, 1785, 1864), 0), 0, Tag1 ("Astlib__Ast_410", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -5773)), 0, 0, 0, 0, (("astlib/ast_410.ml", 32, 1785, 1787), ("astlib/ast_410.ml", 32, 1785, 1864), 0), 0, 1, 0, Tag1 ("Astlib__Ast_410", 11)), 1, 0); Tag1 (("private_flag", 7423), (0, 0, Tag1 ([(("Private", 335), (0), 0, (("astlib/ast_410.ml", 35, 1920, 1982), ("astlib/ast_410.ml", 35, 1920, 1989), 0), 0, Tag1 ("Astlib__Ast_410", 15)); (("Public", 336), (0), 0, (("astlib/ast_410.ml", 35, 1920, 1990), ("astlib/ast_410.ml", 35, 1920, 1998), 0), 0, Tag1 ("Astlib__Ast_410", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -5772)), 0, 0, 0, 0, (("astlib/ast_410.ml", 35, 1920, 1922), ("astlib/ast_410.ml", 35, 1920, 1998), 0), 0, 1, 0, Tag1 ("Astlib__Ast_410", 14)), 1, 0); Tag1 (("mutable_flag", 7424), (0, 0, Tag1 ([(("Immutable", 338), (0), 0, (("astlib/ast_410.ml", 37, 2000, 2062), ("astlib/ast_410.ml", 37, 2000, 2071), 0), 0, Tag1 ("Astlib__Ast_410", 18)); (("Mutable", 339), (0), 0, (("astlib/ast_410.ml", 37, 2000, 2072), ("astlib/ast_410.ml", 37, 2000, 2081), 0), 0, Tag1 ("Astlib__Ast_410", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -5771)), 0, 0, 0, 0, (("astlib/ast_410.ml", 37, 2000, 2002), ("astlib/ast_410.ml", 37, 2000, 2081), 0), 0, 1, 0, Tag1 ("Astlib__Ast_410", 17)), 1, 0); Tag1 (("virtual_flag", 7425), (0, 0, Tag1 ([(("Virtual", 341), (0), 0, (("astlib/ast_410.ml", 39, 2083, 2145), ("astlib/ast_410.ml", 39, 2083, 2152), 0), 0, Tag1 ("Astlib__Ast_410", 21)); (("Concrete", 342), (0), 0, (("astlib/ast_410.ml", 39, 2083, 2153), ("astlib/ast_410.ml", 39, 2083, 2163), 0), 0, Tag1 ("Astlib__Ast_410", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -5770)), 0, 0, 0, 0, (("astlib/ast_410.ml", 39, 2083, 2085), ("astlib/ast_410.ml", 39, 2083, 2163), 0), 0, 1, 0, Tag1 ("Astlib__Ast_410", 20)), 1, 0); Tag1 (("override_flag", 7426), (0, 0, Tag1 ([(("Override", 344), (0), 0, (("astlib/ast_410.ml", 41, 2165, 2229), ("astlib/ast_410.ml", 41, 2165, 2237), 0), 0, Tag1 ("Astlib__Ast_410", 24)); (("Fresh", 345), (0), 0, (("astlib/ast_410.ml", 41, 2165, 2238), ("astlib/ast_410.ml", 41, 2165, 2245), 0), 0, Tag1 ("Astlib__Ast_410", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -5769)), 0, 0, 0, 0, (("astlib/ast_410.ml", 41, 2165, 2167), ("astlib/ast_410.ml", 41, 2165, 2245), 0), 0, 1, 0, Tag1 ("Astlib__Ast_410", 23)), 1, 0); Tag1 (("closed_flag", 7427), (0, 0, Tag1 ([(("Closed", 347), (0), 0, (("astlib/ast_410.ml", 43, 2247, 2307), ("astlib/ast_410.ml", 43, 2247, 2313), 0), 0, Tag1 ("Astlib__Ast_410", 27)); (("Open", 348), (0), 0, (("astlib/ast_410.ml", 43, 2247, 2314), ("astlib/ast_410.ml", 43, 2247, 2320), 0), 0, Tag1 ("Astlib__Ast_410", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -5768)), 0, 0, 0, 0, (("astlib/ast_410.ml", 43, 2247, 2249), ("astlib/ast_410.ml", 43, 2247, 2320), 0), 0, 1, 0, Tag1 ("Astlib__Ast_410", 26)), 1, 0); Tag1 (("label", 7428), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5767)), 0, 0, 0, 0, (("astlib/ast_410.ml", 45, 2322, 2324), ("astlib/ast_410.ml", 45, 2322, 2343), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 29)), 1, 0); Tag1 (("arg_label", 7429), (0, 0, Tag1 ([(("Nolabel", 351), (0), 0, (("astlib/ast_410.ml", 48, 2401, 2407), ("astlib/ast_410.ml", 48, 2401, 2414), 0), 0, Tag1 ("Astlib__Ast_410", 31)); (("Labelled", 352), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5765)]), 0, (("astlib/ast_410.ml", 49, 2415, 2419), ("astlib/ast_410.ml", 49, 2415, 2439), 0), 0, Tag1 ("Astlib__Ast_410", 32)); (("Optional", 353), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5766)]), 0, (("astlib/ast_410.ml", 50, 2462, 2466), ("astlib/ast_410.ml", 50, 2462, 2486), 0), 0, Tag1 ("Astlib__Ast_410", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -5764)), 0, 0, 0, 0, (("astlib/ast_410.ml", 47, 2345, 2347), ("astlib/ast_410.ml", 50, 2462, 2486), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 30)), 1, 0); Tag1 (("loc", 7430), ([((("a")), 100000000, 0, -5762)], 1, [[(("txt", 355), 0, ((("a")), 100000000, 0, -5762), (("astlib/ast_410.ml", 53, 2546, 2550), ("astlib/ast_410.ml", 53, 2546, 2559), 0), 0, Tag1 ("Astlib__Ast_410", 35)); (("loc", 365), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5763), (("astlib/ast_410.ml", 54, 2560, 2564), ("astlib/ast_410.ml", 54, 2560, 2581), 0), 0, Tag1 ("Astlib__Ast_410", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -5762)], (0)), 100000000, 0, -5761)), [25], [0], 0, 0, (("astlib/ast_410.ml", 52, 2510, 2512), ("astlib/ast_410.ml", 55, 2582, 2585), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 34)), 1, 0); Tag1 (("variance", 7431), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_410.ml", 59, 2642, 2646), ("astlib/ast_410.ml", 59, 2642, 2657), 0), 0, Tag1 ("Astlib__Ast_410", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_410.ml", 60, 2658, 2662), ("astlib/ast_410.ml", 60, 2658, 2677), 0), 0, Tag1 ("Astlib__Ast_410", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_410.ml", 61, 2678, 2682), ("astlib/ast_410.ml", 61, 2678, 2693), 0), 0, Tag1 ("Astlib__Ast_410", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -5760)), 0, 0, 0, 0, (("astlib/ast_410.ml", 58, 2588, 2590), ("astlib/ast_410.ml", 61, 2678, 2693), 0), 0, 1, 0, Tag1 ("Astlib__Ast_410", 37)), 1, 0)]), 0, (("astlib/ast_410.ml", 20, 1415, 1415), ("astlib/ast_410.ml", 62, 2694, 2697), 0), Tag1 ("Astlib__Ast_410", 41)), 0, 0); Tag3 (("Parsetree", 7418), 0, (Tag1 ([Tag1 (("constant", 7432), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6425); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -6427)], (0)), 100000000, 0, -6426)]), 0, (("astlib/ast_410.ml", 69, 2798, 2804), ("astlib/ast_410.ml", 69, 2798, 2842), 0), 0, Tag1 ("Astlib__Ast_410", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -6428)]), 0, (("astlib/ast_410.ml", 75, 2996, 3000), ("astlib/ast_410.ml", 75, 2996, 3021), 0), 0, Tag1 ("Astlib__Ast_410", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6429); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6431)], (0)), 100000000, 0, -6430)]), 0, (("astlib/ast_410.ml", 77, 3036, 3040), ("astlib/ast_410.ml", 77, 3036, 3081), 0), 0, Tag1 ("Astlib__Ast_410", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6432); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -6434)], (0)), 100000000, 0, -6433)]), 0, (("astlib/ast_410.ml", 81, 3143, 3147), ("astlib/ast_410.ml", 81, 3143, 3185), 0), 0, Tag1 ("Astlib__Ast_410", 46))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -6424)), 0, 0, 0, 0, (("astlib/ast_410.ml", 68, 2743, 2745), ("astlib/ast_410.ml", 81, 3143, 3185), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 42)), 1, 0); Tag1 (("location_stack", 7433), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6423)], (0)), 100000000, 0, -6422)), 0, 0, 0, 0, (("astlib/ast_410.ml", 88, 3321, 3323), ("astlib/ast_410.ml", 88, 3321, 3360), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 47)), 1, 0); Tag1 (("attribute", 7434), (0, 0, [[(("attr_name", 714), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6419)], (0)), 100000000, 0, -6418), (("astlib/ast_410.ml", 93, 3452, 3456), ("astlib/ast_410.ml", 93, 3452, 3479), 0), 0, Tag1 ("Astlib__Ast_410", 114)); (("attr_payload", 715), 0, (Tag3 ((("payload", 7437)), 0, (0)), 100000000, 0, -6420), (("astlib/ast_410.ml", 94, 3480, 3484), ("astlib/ast_410.ml", 94, 3480, 3507), 0), 0, Tag1 ("Astlib__Ast_410", 115)); (("attr_loc", 716), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6421), (("astlib/ast_410.ml", 95, 3508, 3512), ("astlib/ast_410.ml", 95, 3508, 3534), 0), 0, Tag1 ("Astlib__Ast_410", 116))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "attribute"), 0, (0)), 100000000, 0, -6417)), 0, 0, 0, 0, (("astlib/ast_410.ml", 92, 3393, 3395), ("astlib/ast_410.ml", 96, 3535, 3538), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 48)), 1, 0); Tag1 (("extension", 7435), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6415)], (0)), 100000000, 0, -6414); (Tag3 ((("payload", 7437)), 0, (0)), 100000000, 0, -6416)]), 100000000, 0, -6413)), 0, 0, 0, 0, (("astlib/ast_410.ml", 104, 3678, 3680), ("astlib/ast_410.ml", 104, 3678, 3716), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 49)), 2, 0); Tag1 (("attributes", 7436), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 7434)), 0, (0)), 100000000, 0, -6412)], (0)), 100000000, 0, -6411)), 0, 0, 0, 0, (("astlib/ast_410.ml", 111, 3817, 3819), ("astlib/ast_410.ml", 111, 3817, 3850), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 50)), 2, 0); Tag1 (("payload", 7437), (0, 0, Tag1 ([(("PStr", 717), ([(Tag3 ((("structure", 7495)), 0, (0)), 100000000, 0, -6405)]), 0, (("astlib/ast_410.ml", 114, 3904, 3908), ("astlib/ast_410.ml", 114, 3904, 3927), 0), 0, Tag1 ("Astlib__Ast_410", 117)); (("PSig", 718), ([(Tag3 ((("signature", 7480)), 0, (0)), 100000000, 0, -6406)]), 0, (("astlib/ast_410.ml", 115, 3928, 3932), ("astlib/ast_410.ml", 115, 3928, 3951), 0), 0, Tag1 ("Astlib__Ast_410", 118)); (("PTyp", 719), ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6407)]), 0, (("astlib/ast_410.ml", 116, 3964, 3968), ("astlib/ast_410.ml", 116, 3964, 3987), 0), 0, Tag1 ("Astlib__Ast_410", 119)); (("PPat", 720), ([(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6408); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6410)], (0)), 100000000, 0, -6409)]), 0, (("astlib/ast_410.ml", 117, 3999, 4003), ("astlib/ast_410.ml", 117, 3999, 4040), 0), 0, Tag1 ("Astlib__Ast_410", 120))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -6404)), 0, 0, 0, 0, (("astlib/ast_410.ml", 113, 3852, 3854), ("astlib/ast_410.ml", 117, 3999, 4040), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 51)), 2, 0); Tag1 (("core_type", 7438), (0, 0, [[(("ptyp_desc", 721), 0, (Tag3 ((("core_type_desc", 7439)), 0, (0)), 100000000, 0, -6400), (("astlib/ast_410.ml", 125, 4185, 4191), ("astlib/ast_410.ml", 125, 4185, 4217), 0), 0, Tag1 ("Astlib__Ast_410", 121)); (("ptyp_loc", 722), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6401), (("astlib/ast_410.ml", 126, 4218, 4224), ("astlib/ast_410.ml", 126, 4218, 4245), 0), 0, Tag1 ("Astlib__Ast_410", 122)); (("ptyp_loc_stack", 723), 0, (Tag3 ((("location_stack", 7433)), 0, (0)), 100000000, 0, -6402), (("astlib/ast_410.ml", 127, 4246, 4252), ("astlib/ast_410.ml", 127, 4246, 4283), 0), 0, Tag1 ("Astlib__Ast_410", 123)); (("ptyp_attributes", 724), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6403), (("astlib/ast_410.ml", 128, 4284, 4290), ("astlib/ast_410.ml", 128, 4284, 4318), 0), 0, Tag1 ("Astlib__Ast_410", 124))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -6399)), 0, 0, 0, 0, (("astlib/ast_410.ml", 123, 4123, 4125), ("astlib/ast_410.ml", 129, 4343, 4348), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 52)), 2, 0); Tag1 (("core_type_desc", 7439), (0, 0, Tag1 ([(("Ptyp_any", 725), (0), 0, (("astlib/ast_410.ml", 132, 4416, 4420), ("astlib/ast_410.ml", 132, 4416, 4430), 0), 0, Tag1 ("Astlib__Ast_410", 125)); (("Ptyp_var", 726), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6368)]), 0, (("astlib/ast_410.ml", 134, 4444, 4448), ("astlib/ast_410.ml", 134, 4444, 4468), 0), 0, Tag1 ("Astlib__Ast_410", 126)); (("Ptyp_arrow", 727), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "arg_label"), 0, (0)), 100000000, 0, -6369); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6370); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6371)]), 0, (("astlib/ast_410.ml", 136, 4482, 4486), ("astlib/ast_410.ml", 136, 4482, 4535), 0), 0, Tag1 ("Astlib__Ast_410", 127)); (("Ptyp_tuple", 728), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6373)], (0)), 100000000, 0, -6372)]), 0, (("astlib/ast_410.ml", 141, 4634, 4638), ("astlib/ast_410.ml", 141, 4634, 4668), 0), 0, Tag1 ("Astlib__Ast_410", 128)); (("Ptyp_constr", 729), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6375)], (0)), 100000000, 0, -6374); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6377)], (0)), 100000000, 0, -6376)]), 0, (("astlib/ast_410.ml", 146, 4723, 4727), ("astlib/ast_410.ml", 146, 4723, 4776), 0), 0, Tag1 ("Astlib__Ast_410", 129)); (("Ptyp_object", 733), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 7443)), 0, (0)), 100000000, 0, -6379)], (0)), 100000000, 0, -6378); (Tag3 (Tag1 ((("Asttypes", 7417)), "closed_flag"), 0, (0)), 100000000, 0, -6380)]), 0, (("astlib/ast_410.ml", 151, 4845, 4849), ("astlib/ast_410.ml", 151, 4845, 4897), 0), 0, Tag1 ("Astlib__Ast_410", 130)); (("Ptyp_class", 734), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6382)], (0)), 100000000, 0, -6381); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6384)], (0)), 100000000, 0, -6383)]), 0, (("astlib/ast_410.ml", 155, 5001, 5005), ("astlib/ast_410.ml", 155, 5001, 5053), 0), 0, Tag1 ("Astlib__Ast_410", 131)); (("Ptyp_alias", 735), ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6385); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6386)]), 0, (("astlib/ast_410.ml", 160, 5125, 5129), ("astlib/ast_410.ml", 160, 5125, 5163), 0), 0, Tag1 ("Astlib__Ast_410", 132)); (("Ptyp_variant", 736), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 7441)), 0, (0)), 100000000, 0, -6388)], (0)), 100000000, 0, -6387); (Tag3 (Tag1 ((("Asttypes", 7417)), "closed_flag"), 0, (0)), 100000000, 0, -6389); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -6392)], (0)), 100000000, 0, -6391)], (0)), 100000000, 0, -6390)]), 0, (("astlib/ast_410.ml", 162, 5182, 5186), ("astlib/ast_410.ml", 162, 5182, 5252), 0), 0, Tag1 ("Astlib__Ast_410", 133)); (("Ptyp_poly", 737), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6395)], (0)), 100000000, 0, -6394)], (0)), 100000000, 0, -6393); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6396)]), 0, (("astlib/ast_410.ml", 168, 5497, 5501), ("astlib/ast_410.ml", 168, 5497, 5543), 0), 0, Tag1 ("Astlib__Ast_410", 134)); (("Ptyp_package", 738), ([(Tag3 ((("package_type", 7440)), 0, (0)), 100000000, 0, -6397)]), 0, (("astlib/ast_410.ml", 188, 6030, 6034), ("astlib/ast_410.ml", 188, 6030, 6064), 0), 0, Tag1 ("Astlib__Ast_410", 135)); (("Ptyp_extension", 739), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -6398)]), 0, (("astlib/ast_410.ml", 190, 6086, 6090), ("astlib/ast_410.ml", 190, 6086, 6119), 0), 0, Tag1 ("Astlib__Ast_410", 136))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -6367)), 0, 0, 0, 0, (("astlib/ast_410.ml", 131, 4350, 4352), ("astlib/ast_410.ml", 190, 6086, 6119), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 53)), 2, 0); Tag1 (("package_type", 7440), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6361)], (0)), 100000000, 0, -6360); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6365)], (0)), 100000000, 0, -6364); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6366)]), 100000000, 0, -6363)], (0)), 100000000, 0, -6362)]), 100000000, 0, -6359)), 0, 0, 0, 0, (("astlib/ast_410.ml", 193, 6137, 6139), ("astlib/ast_410.ml", 193, 6137, 6210), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 54)), 2, 0); Tag1 (("row_field", 7441), (0, 0, [[(("prf_desc", 740), 0, (Tag3 ((("row_field_desc", 7442)), 0, (0)), 100000000, 0, -6356), (("astlib/ast_410.ml", 200, 6365, 6369), ("astlib/ast_410.ml", 200, 6365, 6395), 0), 0, Tag1 ("Astlib__Ast_410", 137)); (("prf_loc", 741), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6357), (("astlib/ast_410.ml", 201, 6396, 6400), ("astlib/ast_410.ml", 201, 6396, 6421), 0), 0, Tag1 ("Astlib__Ast_410", 138)); (("prf_attributes", 742), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6358), (("astlib/ast_410.ml", 202, 6422, 6426), ("astlib/ast_410.ml", 202, 6422, 6454), 0), 0, Tag1 ("Astlib__Ast_410", 139))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -6355)), 0, 0, 0, 0, (("astlib/ast_410.ml", 199, 6307, 6309), ("astlib/ast_410.ml", 203, 6455, 6458), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 55)), 2, 0); Tag1 (("row_field_desc", 7442), (0, 0, Tag1 ([(("Rtag", 743), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -6350)], (0)), 100000000, 0, -6349); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6351); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6353)], (0)), 100000000, 0, -6352)]), 0, (("astlib/ast_410.ml", 206, 6526, 6530), ("astlib/ast_410.ml", 206, 6526, 6573), 0), 0, Tag1 ("Astlib__Ast_410", 140)); (("Rinherit", 744), ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6354)]), 0, (("astlib/ast_410.ml", 217, 6976, 6980), ("astlib/ast_410.ml", 217, 6976, 7003), 0), 0, Tag1 ("Astlib__Ast_410", 141))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "row_field_desc"), 0, (0)), 100000000, 0, -6348)), 0, 0, 0, 0, (("astlib/ast_410.ml", 205, 6460, 6462), ("astlib/ast_410.ml", 217, 6976, 7003), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 56)), 2, 0); Tag1 (("object_field", 7443), (0, 0, [[(("pof_desc", 745), 0, (Tag3 ((("object_field_desc", 7444)), 0, (0)), 100000000, 0, -6345), (("astlib/ast_410.ml", 221, 7085, 7089), ("astlib/ast_410.ml", 221, 7085, 7118), 0), 0, Tag1 ("Astlib__Ast_410", 142)); (("pof_loc", 746), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6346), (("astlib/ast_410.ml", 222, 7119, 7123), ("astlib/ast_410.ml", 222, 7119, 7144), 0), 0, Tag1 ("Astlib__Ast_410", 143)); (("pof_attributes", 747), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6347), (("astlib/ast_410.ml", 223, 7145, 7149), ("astlib/ast_410.ml", 223, 7145, 7177), 0), 0, Tag1 ("Astlib__Ast_410", 144))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "object_field"), 0, (0)), 100000000, 0, -6344)), 0, 0, 0, 0, (("astlib/ast_410.ml", 220, 7021, 7023), ("astlib/ast_410.ml", 224, 7178, 7181), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 57)), 2, 0); Tag1 (("object_field_desc", 7444), (0, 0, Tag1 ([(("Otag", 748), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -6341)], (0)), 100000000, 0, -6340); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6342)]), 0, (("astlib/ast_410.ml", 227, 7255, 7259), ("astlib/ast_410.ml", 227, 7255, 7290), 0), 0, Tag1 ("Astlib__Ast_410", 145)); (("Oinherit", 749), ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6343)]), 0, (("astlib/ast_410.ml", 228, 7291, 7295), ("astlib/ast_410.ml", 228, 7291, 7318), 0), 0, Tag1 ("Astlib__Ast_410", 146))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "object_field_desc"), 0, (0)), 100000000, 0, -6339)), 0, 0, 0, 0, (("astlib/ast_410.ml", 226, 7183, 7185), ("astlib/ast_410.ml", 228, 7291, 7318), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 58)), 2, 0); Tag1 (("pattern", 7445), (0, 0, [[(("ppat_desc", 750), 0, (Tag3 ((("pattern_desc", 7446)), 0, (0)), 100000000, 0, -6335), (("astlib/ast_410.ml", 234, 7396, 7402), ("astlib/ast_410.ml", 234, 7396, 7426), 0), 0, Tag1 ("Astlib__Ast_410", 147)); (("ppat_loc", 751), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6336), (("astlib/ast_410.ml", 235, 7427, 7433), ("astlib/ast_410.ml", 235, 7427, 7454), 0), 0, Tag1 ("Astlib__Ast_410", 148)); (("ppat_loc_stack", 752), 0, (Tag3 ((("location_stack", 7433)), 0, (0)), 100000000, 0, -6337), (("astlib/ast_410.ml", 236, 7455, 7461), ("astlib/ast_410.ml", 236, 7455, 7492), 0), 0, Tag1 ("Astlib__Ast_410", 149)); (("ppat_attributes", 753), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6338), (("astlib/ast_410.ml", 237, 7493, 7499), ("astlib/ast_410.ml", 237, 7493, 7527), 0), 0, Tag1 ("Astlib__Ast_410", 150))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -6334)), 0, 0, 0, 0, (("astlib/ast_410.ml", 232, 7338, 7340), ("astlib/ast_410.ml", 238, 7552, 7557), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 59)), 2, 0); Tag1 (("pattern_desc", 7446), (0, 0, Tag1 ([(("Ppat_any", 754), (0), 0, (("astlib/ast_410.ml", 241, 7621, 7625), ("astlib/ast_410.ml", 241, 7621, 7635), 0), 0, Tag1 ("Astlib__Ast_410", 151)); (("Ppat_var", 755), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6295)], (0)), 100000000, 0, -6294)]), 0, (("astlib/ast_410.ml", 243, 7648, 7652), ("astlib/ast_410.ml", 243, 7648, 7676), 0), 0, Tag1 ("Astlib__Ast_410", 152)); (("Ppat_alias", 756), ([(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6296); (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6298)], (0)), 100000000, 0, -6297)]), 0, (("astlib/ast_410.ml", 245, 7689, 7693), ("astlib/ast_410.ml", 245, 7689, 7729), 0), 0, Tag1 ("Astlib__Ast_410", 153)); (("Ppat_constant", 757), ([(Tag3 ((("constant", 7432)), 0, (0)), 100000000, 0, -6299)]), 0, (("astlib/ast_410.ml", 247, 7748, 7752), ("astlib/ast_410.ml", 247, 7748, 7779), 0), 0, Tag1 ("Astlib__Ast_410", 154)); (("Ppat_interval", 758), ([(Tag3 ((("constant", 7432)), 0, (0)), 100000000, 0, -6300); (Tag3 ((("constant", 7432)), 0, (0)), 100000000, 0, -6301)]), 0, (("astlib/ast_410.ml", 249, 7822, 7826), ("astlib/ast_410.ml", 249, 7822, 7864), 0), 0, Tag1 ("Astlib__Ast_410", 155)); (("Ppat_tuple", 759), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6303)], (0)), 100000000, 0, -6302)]), 0, (("astlib/ast_410.ml", 254, 7986, 7990), ("astlib/ast_410.ml", 254, 7986, 8018), 0), 0, Tag1 ("Astlib__Ast_410", 156)); (("Ppat_construct", 760), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6305)], (0)), 100000000, 0, -6304); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6307)], (0)), 100000000, 0, -6306)]), 0, (("astlib/ast_410.ml", 259, 8073, 8077), ("astlib/ast_410.ml", 259, 8073, 8129), 0), 0, Tag1 ("Astlib__Ast_410", 157)); (("Ppat_variant", 761), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -6308); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6310)], (0)), 100000000, 0, -6309)]), 0, (("astlib/ast_410.ml", 264, 8253, 8257), ("astlib/ast_410.ml", 264, 8253, 8297), 0), 0, Tag1 ("Astlib__Ast_410", 158)); (("Ppat_record", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6314)], (0)), 100000000, 0, -6313); (Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6315)]), 100000000, 0, -6312)], (0)), 100000000, 0, -6311); (Tag3 (Tag1 ((("Asttypes", 7417)), "closed_flag"), 0, (0)), 100000000, 0, -6316)]), 0, (("astlib/ast_410.ml", 268, 8365, 8369), ("astlib/ast_410.ml", 268, 8365, 8432), 0), 0, Tag1 ("Astlib__Ast_410", 159)); (("Ppat_array", 763), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6318)], (0)), 100000000, 0, -6317)]), 0, (("astlib/ast_410.ml", 274, 8561, 8565), ("astlib/ast_410.ml", 274, 8561, 8593), 0), 0, Tag1 ("Astlib__Ast_410", 160)); (("Ppat_or", 764), ([(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6319); (Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6320)]), 0, (("astlib/ast_410.ml", 276, 8622, 8626), ("astlib/ast_410.ml", 276, 8622, 8656), 0), 0, Tag1 ("Astlib__Ast_410", 161)); (("Ppat_constraint", 765), ([(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6321); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6322)]), 0, (("astlib/ast_410.ml", 278, 8675, 8679), ("astlib/ast_410.ml", 278, 8675, 8719), 0), 0, Tag1 ("Astlib__Ast_410", 162)); (("Ppat_type", 766), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6324)], (0)), 100000000, 0, -6323)]), 0, (("astlib/ast_410.ml", 280, 8738, 8742), ("astlib/ast_410.ml", 280, 8738, 8772), 0), 0, Tag1 ("Astlib__Ast_410", 163)); (("Ppat_lazy", 767), ([(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6325)]), 0, (("astlib/ast_410.ml", 282, 8791, 8795), ("astlib/ast_410.ml", 282, 8791, 8817), 0), 0, Tag1 ("Astlib__Ast_410", 164)); (("Ppat_unpack", 768), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6328)], (0)), 100000000, 0, -6327)], (0)), 100000000, 0, -6326)]), 0, (("astlib/ast_410.ml", 284, 8835, 8839), ("astlib/ast_410.ml", 284, 8835, 8873), 0), 0, Tag1 ("Astlib__Ast_410", 165)); (("Ppat_exception", 769), ([(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6329)]), 0, (("astlib/ast_410.ml", 291, 9042, 9046), ("astlib/ast_410.ml", 291, 9042, 9073), 0), 0, Tag1 ("Astlib__Ast_410", 166)); (("Ppat_extension", 770), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -6330)]), 0, (("astlib/ast_410.ml", 293, 9096, 9100), ("astlib/ast_410.ml", 293, 9096, 9129), 0), 0, Tag1 ("Astlib__Ast_410", 167)); (("Ppat_open", 771), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6332)], (0)), 100000000, 0, -6331); (Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6333)]), 0, (("astlib/ast_410.ml", 295, 9146, 9150), ("astlib/ast_410.ml", 295, 9146, 9190), 0), 0, Tag1 ("Astlib__Ast_410", 168))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -6293)), 0, 0, 0, 0, (("astlib/ast_410.ml", 240, 7559, 7561), ("astlib/ast_410.ml", 295, 9146, 9190), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 60)), 2, 0); Tag1 (("expression", 7447), (0, 0, [[(("pexp_desc", 772), 0, (Tag3 ((("expression_desc", 7448)), 0, (0)), 100000000, 0, -6289), (("astlib/ast_410.ml", 302, 9299, 9305), ("astlib/ast_410.ml", 302, 9299, 9332), 0), 0, Tag1 ("Astlib__Ast_410", 169)); (("pexp_loc", 773), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6290), (("astlib/ast_410.ml", 303, 9333, 9339), ("astlib/ast_410.ml", 303, 9333, 9360), 0), 0, Tag1 ("Astlib__Ast_410", 170)); (("pexp_loc_stack", 774), 0, (Tag3 ((("location_stack", 7433)), 0, (0)), 100000000, 0, -6291), (("astlib/ast_410.ml", 304, 9361, 9367), ("astlib/ast_410.ml", 304, 9361, 9398), 0), 0, Tag1 ("Astlib__Ast_410", 171)); (("pexp_attributes", 775), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6292), (("astlib/ast_410.ml", 305, 9399, 9405), ("astlib/ast_410.ml", 305, 9399, 9433), 0), 0, Tag1 ("Astlib__Ast_410", 172))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -6288)), 0, 0, 0, 0, (("astlib/ast_410.ml", 300, 9235, 9237), ("astlib/ast_410.ml", 306, 9458, 9463), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 61)), 2, 0); Tag1 (("expression_desc", 7448), (0, 0, Tag1 ([(("Pexp_ident", 776), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6186)], (0)), 100000000, 0, -6185)]), 0, (("astlib/ast_410.ml", 309, 9533, 9537), ("astlib/ast_410.ml", 309, 9533, 9568), 0), 0, Tag1 ("Astlib__Ast_410", 173)); (("Pexp_constant", 777), ([(Tag3 ((("constant", 7432)), 0, (0)), 100000000, 0, -6187)]), 0, (("astlib/ast_410.ml", 313, 9596, 9600), ("astlib/ast_410.ml", 313, 9596, 9627), 0), 0, Tag1 ("Astlib__Ast_410", 174)); (("Pexp_let", 778), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "rec_flag"), 0, (0)), 100000000, 0, -6188); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7498)), 0, (0)), 100000000, 0, -6190)], (0)), 100000000, 0, -6189); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6191)]), 0, (("astlib/ast_410.ml", 315, 9670, 9674), ("astlib/ast_410.ml", 315, 9670, 9730), 0), 0, Tag1 ("Astlib__Ast_410", 175)); (("Pexp_function", 779), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7449)), 0, (0)), 100000000, 0, -6193)], (0)), 100000000, 0, -6192)]), 0, (("astlib/ast_410.ml", 319, 9879, 9883), ("astlib/ast_410.ml", 319, 9879, 9911), 0), 0, Tag1 ("Astlib__Ast_410", 176)); (("Pexp_fun", 780), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "arg_label"), 0, (0)), 100000000, 0, -6194); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6196)], (0)), 100000000, 0, -6195); (Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6197); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6198)]), 0, (("astlib/ast_410.ml", 321, 9957, 9961), ("astlib/ast_410.ml", 321, 9957, 10027), 0), 0, Tag1 ("Astlib__Ast_410", 177)); (("Pexp_apply", 781), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6199); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "arg_label"), 0, (0)), 100000000, 0, -6202); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6203)]), 100000000, 0, -6201)], (0)), 100000000, 0, -6200)]), 0, (("astlib/ast_410.ml", 332, 10477, 10481), ("astlib/ast_410.ml", 332, 10477, 10539), 0), 0, Tag1 ("Astlib__Ast_410", 178)); (("Pexp_match", 782), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6204); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7449)), 0, (0)), 100000000, 0, -6206)], (0)), 100000000, 0, -6205)]), 0, (("astlib/ast_410.ml", 339, 10692, 10696), ("astlib/ast_410.ml", 339, 10692, 10734), 0), 0, Tag1 ("Astlib__Ast_410", 179)); (("Pexp_try", 783), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6207); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7449)), 0, (0)), 100000000, 0, -6209)], (0)), 100000000, 0, -6208)]), 0, (("astlib/ast_410.ml", 341, 10785, 10789), ("astlib/ast_410.ml", 341, 10785, 10825), 0), 0, Tag1 ("Astlib__Ast_410", 180)); (("Pexp_tuple", 784), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6211)], (0)), 100000000, 0, -6210)]), 0, (("astlib/ast_410.ml", 343, 10874, 10878), ("astlib/ast_410.ml", 343, 10874, 10909), 0), 0, Tag1 ("Astlib__Ast_410", 181)); (("Pexp_construct", 785), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6213)], (0)), 100000000, 0, -6212); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6215)], (0)), 100000000, 0, -6214)]), 0, (("astlib/ast_410.ml", 348, 10964, 10968), ("astlib/ast_410.ml", 348, 10964, 11023), 0), 0, Tag1 ("Astlib__Ast_410", 182)); (("Pexp_variant", 786), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -6216); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6218)], (0)), 100000000, 0, -6217)]), 0, (("astlib/ast_410.ml", 353, 11144, 11148), ("astlib/ast_410.ml", 353, 11144, 11191), 0), 0, Tag1 ("Astlib__Ast_410", 183)); (("Pexp_record", 787), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6222)], (0)), 100000000, 0, -6221); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6223)]), 100000000, 0, -6220)], (0)), 100000000, 0, -6219); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6225)], (0)), 100000000, 0, -6224)]), 0, (("astlib/ast_410.ml", 357, 11259, 11263), ("astlib/ast_410.ml", 357, 11259, 11335), 0), 0, Tag1 ("Astlib__Ast_410", 184)); (("Pexp_field", 788), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6226); (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6228)], (0)), 100000000, 0, -6227)]), 0, (("astlib/ast_410.ml", 363, 11457, 11461), ("astlib/ast_410.ml", 363, 11457, 11505), 0), 0, Tag1 ("Astlib__Ast_410", 185)); (("Pexp_setfield", 789), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6229); (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6231)], (0)), 100000000, 0, -6230); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6232)]), 0, (("astlib/ast_410.ml", 365, 11520, 11524), ("astlib/ast_410.ml", 365, 11520, 11584), 0), 0, Tag1 ("Astlib__Ast_410", 186)); (("Pexp_array", 790), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6234)], (0)), 100000000, 0, -6233)]), 0, (("astlib/ast_410.ml", 367, 11606, 11610), ("astlib/ast_410.ml", 367, 11606, 11641), 0), 0, Tag1 ("Astlib__Ast_410", 187)); (("Pexp_ifthenelse", 791), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6235); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6236); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6238)], (0)), 100000000, 0, -6237)]), 0, (("astlib/ast_410.ml", 369, 11670, 11674), ("astlib/ast_410.ml", 369, 11670, 11738), 0), 0, Tag1 ("Astlib__Ast_410", 188)); (("Pexp_sequence", 792), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6239); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6240)]), 0, (("astlib/ast_410.ml", 371, 11771, 11775), ("astlib/ast_410.ml", 371, 11771, 11817), 0), 0, Tag1 ("Astlib__Ast_410", 189)); (("Pexp_while", 793), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6241); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6242)]), 0, (("astlib/ast_410.ml", 373, 11835, 11839), ("astlib/ast_410.ml", 373, 11835, 11878), 0), 0, Tag1 ("Astlib__Ast_410", 190)); (("Pexp_for", 794), ([(Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6243); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6244); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6245); (Tag3 (Tag1 ((("Asttypes", 7417)), "direction_flag"), 0, (0)), 100000000, 0, -6246); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6247)]), 0, (("astlib/ast_410.ml", 375, 11909, 11913), ("astlib/ast_410.ml", 376, 11927, 11999), 0), 0, Tag1 ("Astlib__Ast_410", 191)); (("Pexp_constraint", 795), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6248); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6249)]), 0, (("astlib/ast_410.ml", 380, 12117, 12121), ("astlib/ast_410.ml", 380, 12117, 12164), 0), 0, Tag1 ("Astlib__Ast_410", 192)); (("Pexp_coerce", 796), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6250); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6252)], (0)), 100000000, 0, -6251); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6253)]), 0, (("astlib/ast_410.ml", 382, 12183, 12187), ("astlib/ast_410.ml", 382, 12183, 12245), 0), 0, Tag1 ("Astlib__Ast_410", 193)); (("Pexp_send", 797), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6254); (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -6256)], (0)), 100000000, 0, -6255)]), 0, (("astlib/ast_410.ml", 386, 12322, 12326), ("astlib/ast_410.ml", 386, 12322, 12363), 0), 0, Tag1 ("Astlib__Ast_410", 194)); (("Pexp_new", 798), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6258)], (0)), 100000000, 0, -6257)]), 0, (("astlib/ast_410.ml", 388, 12381, 12385), ("astlib/ast_410.ml", 388, 12381, 12414), 0), 0, Tag1 ("Astlib__Ast_410", 195)); (("Pexp_setinstvar", 799), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -6260)], (0)), 100000000, 0, -6259); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6261)]), 0, (("astlib/ast_410.ml", 390, 12433, 12437), ("astlib/ast_410.ml", 390, 12433, 12480), 0), 0, Tag1 ("Astlib__Ast_410", 196)); (("Pexp_override", 800), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -6265)], (0)), 100000000, 0, -6264); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6266)]), 100000000, 0, -6263)], (0)), 100000000, 0, -6262)]), 0, (("astlib/ast_410.ml", 392, 12498, 12502), ("astlib/ast_410.ml", 392, 12498, 12550), 0), 0, Tag1 ("Astlib__Ast_410", 197)); (("Pexp_letmodule", 801), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6269)], (0)), 100000000, 0, -6268)], (0)), 100000000, 0, -6267); (Tag3 ((("module_expr", 7493)), 0, (0)), 100000000, 0, -6270); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6271)]), 0, (("astlib/ast_410.ml", 394, 12589, 12593), ("astlib/ast_410.ml", 394, 12589, 12657), 0), 0, Tag1 ("Astlib__Ast_410", 198)); (("Pexp_letexception", 802), ([(Tag3 ((("extension_constructor", 7459)), 0, (0)), 100000000, 0, -6272); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6273)]), 0, (("astlib/ast_410.ml", 396, 12691, 12695), ("astlib/ast_410.ml", 396, 12691, 12752), 0), 0, Tag1 ("Astlib__Ast_410", 199)); (("Pexp_assert", 803), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6274)]), 0, (("astlib/ast_410.ml", 398, 12784, 12788), ("astlib/ast_410.ml", 398, 12784, 12815), 0), 0, Tag1 ("Astlib__Ast_410", 200)); (("Pexp_lazy", 804), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6275)]), 0, (("astlib/ast_410.ml", 402, 12919, 12923), ("astlib/ast_410.ml", 402, 12919, 12948), 0), 0, Tag1 ("Astlib__Ast_410", 201)); (("Pexp_poly", 805), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6276); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6278)], (0)), 100000000, 0, -6277)]), 0, (("astlib/ast_410.ml", 404, 12966, 12970), ("astlib/ast_410.ml", 404, 12966, 13014), 0), 0, Tag1 ("Astlib__Ast_410", 202)); (("Pexp_object", 806), ([(Tag3 ((("class_structure", 7472)), 0, (0)), 100000000, 0, -6279)]), 0, (("astlib/ast_410.ml", 409, 13144, 13148), ("astlib/ast_410.ml", 409, 13144, 13180), 0), 0, Tag1 ("Astlib__Ast_410", 203)); (("Pexp_newtype", 807), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6281)], (0)), 100000000, 0, -6280); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6282)]), 0, (("astlib/ast_410.ml", 411, 13206, 13210), ("astlib/ast_410.ml", 411, 13206, 13251), 0), 0, Tag1 ("Astlib__Ast_410", 204)); (("Pexp_pack", 808), ([(Tag3 ((("module_expr", 7493)), 0, (0)), 100000000, 0, -6283)]), 0, (("astlib/ast_410.ml", 413, 13280, 13284), ("astlib/ast_410.ml", 413, 13280, 13310), 0), 0, Tag1 ("Astlib__Ast_410", 205)); (("Pexp_open", 809), ([(Tag3 ((("open_declaration", 7488)), 0, (0)), 100000000, 0, -6284); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6285)]), 0, (("astlib/ast_410.ml", 418, 13425, 13429), ("astlib/ast_410.ml", 418, 13425, 13473), 0), 0, Tag1 ("Astlib__Ast_410", 206)); (("Pexp_letop", 810), ([(Tag3 ((("letop", 7450)), 0, (0)), 100000000, 0, -6286)]), 0, (("astlib/ast_410.ml", 422, 13537, 13541), ("astlib/ast_410.ml", 422, 13537, 13562), 0), 0, Tag1 ("Astlib__Ast_410", 207)); (("Pexp_extension", 811), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -6287)]), 0, (("astlib/ast_410.ml", 425, 13623, 13627), ("astlib/ast_410.ml", 425, 13623, 13656), 0), 0, Tag1 ("Astlib__Ast_410", 208)); (("Pexp_unreachable", 812), (0), 0, (("astlib/ast_410.ml", 427, 13673, 13677), ("astlib/ast_410.ml", 427, 13673, 13695), 0), 0, Tag1 ("Astlib__Ast_410", 209))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -6184)), 0, 0, 0, 0, (("astlib/ast_410.ml", 308, 9465, 9467), ("astlib/ast_410.ml", 427, 13673, 13695), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 62)), 2, 0); Tag1 (("case", 7449), (0, 0, [[(("pc_lhs", 813), 0, (Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6180), (("astlib/ast_410.ml", 432, 13798, 13804), ("astlib/ast_410.ml", 432, 13798, 13820), 0), 0, Tag1 ("Astlib__Ast_410", 210)); (("pc_guard", 814), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6182)], (0)), 100000000, 0, -6181), (("astlib/ast_410.ml", 433, 13821, 13827), ("astlib/ast_410.ml", 433, 13821, 13855), 0), 0, Tag1 ("Astlib__Ast_410", 211)); (("pc_rhs", 815), 0, (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6183), (("astlib/ast_410.ml", 434, 13856, 13862), ("astlib/ast_410.ml", 434, 13856, 13881), 0), 0, Tag1 ("Astlib__Ast_410", 212))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -6179)), 0, 0, 0, 0, (("astlib/ast_410.ml", 430, 13709, 13711), ("astlib/ast_410.ml", 435, 13882, 13887), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 63)), 2, 0); Tag1 (("letop", 7450), (0, 0, [[(("let_", 816), 0, (Tag3 ((("binding_op", 7451)), 0, (0)), 100000000, 0, -6175), (("astlib/ast_410.ml", 439, 13943, 13949), ("astlib/ast_410.ml", 439, 13943, 13967), 0), 0, Tag1 ("Astlib__Ast_410", 213)); (("ands", 817), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binding_op", 7451)), 0, (0)), 100000000, 0, -6177)], (0)), 100000000, 0, -6176), (("astlib/ast_410.ml", 440, 13968, 13974), ("astlib/ast_410.ml", 440, 13968, 13997), 0), 0, Tag1 ("Astlib__Ast_410", 214)); (("body", 818), 0, (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6178), (("astlib/ast_410.ml", 441, 13998, 14004), ("astlib/ast_410.ml", 441, 13998, 14022), 0), 0, Tag1 ("Astlib__Ast_410", 215))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "letop"), 0, (0)), 100000000, 0, -6174)), 0, 0, 0, 0, (("astlib/ast_410.ml", 437, 13889, 13891), ("astlib/ast_410.ml", 442, 14023, 14028), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 64)), 2, 0); Tag1 (("binding_op", 7451), (0, 0, [[(("pbop_op", 819), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6170)], (0)), 100000000, 0, -6169), (("astlib/ast_410.ml", 446, 14094, 14100), ("astlib/ast_410.ml", 446, 14094, 14121), 0), 0, Tag1 ("Astlib__Ast_410", 216)); (("pbop_pat", 820), 0, (Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6171), (("astlib/ast_410.ml", 447, 14122, 14128), ("astlib/ast_410.ml", 447, 14122, 14147), 0), 0, Tag1 ("Astlib__Ast_410", 217)); (("pbop_exp", 821), 0, (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6172), (("astlib/ast_410.ml", 448, 14148, 14154), ("astlib/ast_410.ml", 448, 14148, 14176), 0), 0, Tag1 ("Astlib__Ast_410", 218)); (("pbop_loc", 822), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6173), (("astlib/ast_410.ml", 449, 14177, 14183), ("astlib/ast_410.ml", 449, 14177, 14205), 0), 0, Tag1 ("Astlib__Ast_410", 219))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "binding_op"), 0, (0)), 100000000, 0, -6168)), 0, 0, 0, 0, (("astlib/ast_410.ml", 444, 14030, 14032), ("astlib/ast_410.ml", 450, 14206, 14211), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 65)), 2, 0); Tag1 (("value_description", 7452), (0, 0, [[(("pval_name", 823), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6162)], (0)), 100000000, 0, -6161), (("astlib/ast_410.ml", 456, 14319, 14325), ("astlib/ast_410.ml", 456, 14319, 14347), 0), 0, Tag1 ("Astlib__Ast_410", 220)); (("pval_type", 824), 0, (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6163), (("astlib/ast_410.ml", 457, 14348, 14354), ("astlib/ast_410.ml", 457, 14348, 14375), 0), 0, Tag1 ("Astlib__Ast_410", 221)); (("pval_prim", 825), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6165)], (0)), 100000000, 0, -6164), (("astlib/ast_410.ml", 458, 14376, 14382), ("astlib/ast_410.ml", 458, 14376, 14405), 0), 0, Tag1 ("Astlib__Ast_410", 222)); (("pval_attributes", 826), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6166), (("astlib/ast_410.ml", 459, 14406, 14412), ("astlib/ast_410.ml", 459, 14406, 14440), 0), 0, Tag1 ("Astlib__Ast_410", 223)); (("pval_loc", 827), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6167), (("astlib/ast_410.ml", 460, 14468, 14474), ("astlib/ast_410.ml", 460, 14468, 14495), 0), 0, Tag1 ("Astlib__Ast_410", 224))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -6160)), 0, 0, 0, 0, (("astlib/ast_410.ml", 454, 14241, 14243), ("astlib/ast_410.ml", 461, 14496, 14501), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 66)), 2, 0); Tag1 (("type_declaration", 7453), (0, 0, [[(("ptype_name", 828), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6144)], (0)), 100000000, 0, -6143), (("astlib/ast_410.ml", 472, 14725, 14731), ("astlib/ast_410.ml", 472, 14725, 14754), 0), 0, Tag1 ("Astlib__Ast_410", 225)); (("ptype_params", 829), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6147); (Tag3 (Tag1 ((("Asttypes", 7417)), "variance"), 0, (0)), 100000000, 0, -6148)]), 100000000, 0, -6146)], (0)), 100000000, 0, -6145), (("astlib/ast_410.ml", 473, 14755, 14761), ("astlib/ast_410.ml", 473, 14755, 14803), 0), 0, Tag1 ("Astlib__Ast_410", 226)); (("ptype_cstrs", 830), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6151); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6152); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6153)]), 100000000, 0, -6150)], (0)), 100000000, 0, -6149), (("astlib/ast_410.ml", 475, 14850, 14856), ("astlib/ast_410.ml", 475, 14850, 14911), 0), 0, Tag1 ("Astlib__Ast_410", 227)); (("ptype_kind", 831), 0, (Tag3 ((("type_kind", 7454)), 0, (0)), 100000000, 0, -6154), (("astlib/ast_410.ml", 477, 14969, 14975), ("astlib/ast_410.ml", 477, 14969, 14997), 0), 0, Tag1 ("Astlib__Ast_410", 228)); (("ptype_private", 832), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "private_flag"), 0, (0)), 100000000, 0, -6155), (("astlib/ast_410.ml", 478, 14998, 15004), ("astlib/ast_410.ml", 478, 14998, 15032), 0), 0, Tag1 ("Astlib__Ast_410", 229)); (("ptype_manifest", 833), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6157)], (0)), 100000000, 0, -6156), (("astlib/ast_410.ml", 479, 15055, 15061), ("astlib/ast_410.ml", 479, 15055, 15094), 0), 0, Tag1 ("Astlib__Ast_410", 230)); (("ptype_attributes", 834), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6158), (("astlib/ast_410.ml", 480, 15106, 15112), ("astlib/ast_410.ml", 480, 15106, 15141), 0), 0, Tag1 ("Astlib__Ast_410", 231)); (("ptype_loc", 835), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6159), (("astlib/ast_410.ml", 481, 15170, 15176), ("astlib/ast_410.ml", 481, 15170, 15198), 0), 0, Tag1 ("Astlib__Ast_410", 232))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -6142)), 0, 0, 0, 0, (("astlib/ast_410.ml", 470, 14649, 14651), ("astlib/ast_410.ml", 482, 15199, 15204), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 67)), 2, 0); Tag1 (("type_kind", 7454), (0, 0, Tag1 ([(("Ptype_abstract", 836), (0), 0, (("astlib/ast_410.ml", 495, 15640, 15644), ("astlib/ast_410.ml", 495, 15640, 15660), 0), 0, Tag1 ("Astlib__Ast_410", 233)); (("Ptype_variant", 837), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7456)), 0, (0)), 100000000, 0, -6139)], (0)), 100000000, 0, -6138)]), 0, (("astlib/ast_410.ml", 496, 15661, 15665), ("astlib/ast_410.ml", 496, 15661, 15712), 0), 0, Tag1 ("Astlib__Ast_410", 234)); (("Ptype_record", 838), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7455)), 0, (0)), 100000000, 0, -6141)], (0)), 100000000, 0, -6140)]), 0, (("astlib/ast_410.ml", 497, 15713, 15717), ("astlib/ast_410.ml", 497, 15713, 15757), 0), 0, Tag1 ("Astlib__Ast_410", 235)); (("Ptype_open", 839), (0), 0, (("astlib/ast_410.ml", 499, 15794, 15798), ("astlib/ast_410.ml", 499, 15794, 15810), 0), 0, Tag1 ("Astlib__Ast_410", 236))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -6137)), 0, 0, 0, 0, (("astlib/ast_410.ml", 494, 15584, 15586), ("astlib/ast_410.ml", 499, 15794, 15810), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 68)), 2, 0); Tag1 (("label_declaration", 7455), (0, 0, [[(("pld_name", 840), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6132)], (0)), 100000000, 0, -6131), (("astlib/ast_410.ml", 503, 15890, 15896), ("astlib/ast_410.ml", 503, 15890, 15917), 0), 0, Tag1 ("Astlib__Ast_410", 237)); (("pld_mutable", 841), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "mutable_flag"), 0, (0)), 100000000, 0, -6133), (("astlib/ast_410.ml", 504, 15918, 15924), ("astlib/ast_410.ml", 504, 15918, 15950), 0), 0, Tag1 ("Astlib__Ast_410", 238)); (("pld_type", 842), 0, (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6134), (("astlib/ast_410.ml", 505, 15951, 15957), ("astlib/ast_410.ml", 505, 15951, 15977), 0), 0, Tag1 ("Astlib__Ast_410", 239)); (("pld_loc", 843), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6135), (("astlib/ast_410.ml", 506, 15978, 15984), ("astlib/ast_410.ml", 506, 15978, 16004), 0), 0, Tag1 ("Astlib__Ast_410", 240)); (("pld_attributes", 844), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6136), (("astlib/ast_410.ml", 507, 16005, 16011), ("astlib/ast_410.ml", 507, 16005, 16038), 0), 0, Tag1 ("Astlib__Ast_410", 241))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -6130)), 0, 0, 0, 0, (("astlib/ast_410.ml", 501, 15812, 15814), ("astlib/ast_410.ml", 508, 16065, 16070), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 69)), 2, 0); Tag1 (("constructor_declaration", 7456), (0, 0, [[(("pcd_name", 845), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6124)], (0)), 100000000, 0, -6123), (("astlib/ast_410.ml", 518, 16313, 16319), ("astlib/ast_410.ml", 518, 16313, 16340), 0), 0, Tag1 ("Astlib__Ast_410", 242)); (("pcd_args", 846), 0, (Tag3 ((("constructor_arguments", 7457)), 0, (0)), 100000000, 0, -6125), (("astlib/ast_410.ml", 519, 16341, 16347), ("astlib/ast_410.ml", 519, 16341, 16379), 0), 0, Tag1 ("Astlib__Ast_410", 243)); (("pcd_res", 847), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6127)], (0)), 100000000, 0, -6126), (("astlib/ast_410.ml", 520, 16380, 16386), ("astlib/ast_410.ml", 520, 16380, 16412), 0), 0, Tag1 ("Astlib__Ast_410", 244)); (("pcd_loc", 848), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6128), (("astlib/ast_410.ml", 521, 16413, 16419), ("astlib/ast_410.ml", 521, 16413, 16439), 0), 0, Tag1 ("Astlib__Ast_410", 245)); (("pcd_attributes", 849), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6129), (("astlib/ast_410.ml", 522, 16440, 16446), ("astlib/ast_410.ml", 522, 16440, 16473), 0), 0, Tag1 ("Astlib__Ast_410", 246))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -6122)), 0, 0, 0, 0, (("astlib/ast_410.ml", 516, 16223, 16225), ("astlib/ast_410.ml", 523, 16503, 16508), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 70)), 2, 0); Tag1 (("constructor_arguments", 7457), (0, 0, Tag1 ([(("Pcstr_tuple", 850), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6119)], (0)), 100000000, 0, -6118)]), 0, (("astlib/ast_410.ml", 526, 16590, 16594), ("astlib/ast_410.ml", 526, 16590, 16625), 0), 0, Tag1 ("Astlib__Ast_410", 247)); (("Pcstr_record", 851), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7455)), 0, (0)), 100000000, 0, -6121)], (0)), 100000000, 0, -6120)]), 0, (("astlib/ast_410.ml", 527, 16626, 16630), ("astlib/ast_410.ml", 527, 16626, 16670), 0), 0, Tag1 ("Astlib__Ast_410", 248))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -6117)), 0, 0, 0, 0, (("astlib/ast_410.ml", 525, 16510, 16512), ("astlib/ast_410.ml", 527, 16626, 16670), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 71)), 2, 0); Tag1 (("type_extension", 7458), (0, 0, [[(("ptyext_path", 852), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6107)], (0)), 100000000, 0, -6106), (("astlib/ast_410.ml", 540, 17126, 17132), ("astlib/ast_410.ml", 540, 17126, 17161), 0), 0, Tag1 ("Astlib__Ast_410", 249)); (("ptyext_params", 853), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6110); (Tag3 (Tag1 ((("Asttypes", 7417)), "variance"), 0, (0)), 100000000, 0, -6111)]), 100000000, 0, -6109)], (0)), 100000000, 0, -6108), (("astlib/ast_410.ml", 541, 17162, 17168), ("astlib/ast_410.ml", 541, 17162, 17211), 0), 0, Tag1 ("Astlib__Ast_410", 250)); (("ptyext_constructors", 854), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7459)), 0, (0)), 100000000, 0, -6113)], (0)), 100000000, 0, -6112), (("astlib/ast_410.ml", 542, 17212, 17218), ("astlib/ast_410.ml", 542, 17212, 17266), 0), 0, Tag1 ("Astlib__Ast_410", 251)); (("ptyext_private", 855), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "private_flag"), 0, (0)), 100000000, 0, -6114), (("astlib/ast_410.ml", 543, 17267, 17273), ("astlib/ast_410.ml", 543, 17267, 17302), 0), 0, Tag1 ("Astlib__Ast_410", 252)); (("ptyext_loc", 856), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6115), (("astlib/ast_410.ml", 544, 17303, 17309), ("astlib/ast_410.ml", 544, 17303, 17332), 0), 0, Tag1 ("Astlib__Ast_410", 253)); (("ptyext_attributes", 857), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6116), (("astlib/ast_410.ml", 545, 17333, 17339), ("astlib/ast_410.ml", 545, 17333, 17369), 0), 0, Tag1 ("Astlib__Ast_410", 254))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -6105)), 0, 0, 0, 0, (("astlib/ast_410.ml", 538, 17054, 17056), ("astlib/ast_410.ml", 546, 17398, 17403), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 72)), 2, 0); Tag1 (("extension_constructor", 7459), (0, 0, [[(("pext_name", 858), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6101)], (0)), 100000000, 0, -6100), (("astlib/ast_410.ml", 553, 17513, 17519), ("astlib/ast_410.ml", 553, 17513, 17541), 0), 0, Tag1 ("Astlib__Ast_410", 255)); (("pext_kind", 859), 0, (Tag3 ((("extension_constructor_kind", 7461)), 0, (0)), 100000000, 0, -6102), (("astlib/ast_410.ml", 554, 17542, 17548), ("astlib/ast_410.ml", 554, 17542, 17587), 0), 0, Tag1 ("Astlib__Ast_410", 256)); (("pext_loc", 860), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6103), (("astlib/ast_410.ml", 555, 17588, 17594), ("astlib/ast_410.ml", 555, 17588, 17616), 0), 0, Tag1 ("Astlib__Ast_410", 257)); (("pext_attributes", 861), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6104), (("astlib/ast_410.ml", 556, 17617, 17623), ("astlib/ast_410.ml", 556, 17617, 17651), 0), 0, Tag1 ("Astlib__Ast_410", 258))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -6099)), 0, 0, 0, 0, (("astlib/ast_410.ml", 551, 17427, 17429), ("astlib/ast_410.ml", 557, 17681, 17686), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 73)), 2, 0); Tag1 (("type_exception", 7460), (0, 0, [[(("ptyexn_constructor", 862), 0, (Tag3 ((("extension_constructor", 7459)), 0, (0)), 100000000, 0, -6096), (("astlib/ast_410.ml", 562, 17780, 17786), ("astlib/ast_410.ml", 562, 17780, 17828), 0), 0, Tag1 ("Astlib__Ast_410", 259)); (("ptyexn_loc", 863), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6097), (("astlib/ast_410.ml", 563, 17829, 17835), ("astlib/ast_410.ml", 563, 17829, 17858), 0), 0, Tag1 ("Astlib__Ast_410", 260)); (("ptyexn_attributes", 864), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6098), (("astlib/ast_410.ml", 564, 17859, 17865), ("astlib/ast_410.ml", 564, 17859, 17895), 0), 0, Tag1 ("Astlib__Ast_410", 261))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "type_exception"), 0, (0)), 100000000, 0, -6095)), 0, 0, 0, 0, (("astlib/ast_410.ml", 560, 17708, 17710), ("astlib/ast_410.ml", 565, 17922, 17927), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 74)), 2, 0); Tag1 (("extension_constructor_kind", 7461), (0, 0, Tag1 ([(("Pext_decl", 865), ([(Tag3 ((("constructor_arguments", 7457)), 0, (0)), 100000000, 0, -6090); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6092)], (0)), 100000000, 0, -6091)]), 0, (("astlib/ast_410.ml", 568, 18019, 18025), ("astlib/ast_410.ml", 568, 18019, 18078), 0), 0, Tag1 ("Astlib__Ast_410", 262)); (("Pext_rebind", 866), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6094)], (0)), 100000000, 0, -6093)]), 0, (("astlib/ast_410.ml", 574, 18261, 18265), ("astlib/ast_410.ml", 574, 18261, 18297), 0), 0, Tag1 ("Astlib__Ast_410", 263))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -6089)), 0, 0, 0, 0, (("astlib/ast_410.ml", 567, 17929, 17931), ("astlib/ast_410.ml", 574, 18261, 18297), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 75)), 2, 0); Tag1 (("class_type", 7462), (0, 0, [[(("pcty_desc", 867), 0, (Tag3 ((("class_type_desc", 7463)), 0, (0)), 100000000, 0, -6086), (("astlib/ast_410.ml", 585, 18477, 18483), ("astlib/ast_410.ml", 585, 18477, 18510), 0), 0, Tag1 ("Astlib__Ast_410", 264)); (("pcty_loc", 868), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6087), (("astlib/ast_410.ml", 586, 18511, 18517), ("astlib/ast_410.ml", 586, 18511, 18538), 0), 0, Tag1 ("Astlib__Ast_410", 265)); (("pcty_attributes", 869), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6088), (("astlib/ast_410.ml", 587, 18539, 18545), ("astlib/ast_410.ml", 587, 18539, 18573), 0), 0, Tag1 ("Astlib__Ast_410", 266))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -6085)), 0, 0, 0, 0, (("astlib/ast_410.ml", 583, 18413, 18415), ("astlib/ast_410.ml", 588, 18598, 18603), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 76)), 2, 0); Tag1 (("class_type_desc", 7463), (0, 0, Tag1 ([(("Pcty_constr", 870), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6075)], (0)), 100000000, 0, -6074); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6077)], (0)), 100000000, 0, -6076)]), 0, (("astlib/ast_410.ml", 591, 18673, 18677), ("astlib/ast_410.ml", 591, 18673, 18726), 0), 0, Tag1 ("Astlib__Ast_410", 267)); (("Pcty_signature", 871), ([(Tag3 ((("class_signature", 7464)), 0, (0)), 100000000, 0, -6078)]), 0, (("astlib/ast_410.ml", 594, 18764, 18768), ("astlib/ast_410.ml", 594, 18764, 18803), 0), 0, Tag1 ("Astlib__Ast_410", 268)); (("Pcty_arrow", 872), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "arg_label"), 0, (0)), 100000000, 0, -6079); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6080); (Tag3 ((("class_type", 7462)), 0, (0)), 100000000, 0, -6081)]), 0, (("astlib/ast_410.ml", 596, 18829, 18833), ("astlib/ast_410.ml", 596, 18829, 18883), 0), 0, Tag1 ("Astlib__Ast_410", 269)); (("Pcty_extension", 873), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -6082)]), 0, (("astlib/ast_410.ml", 601, 18983, 18987), ("astlib/ast_410.ml", 601, 18983, 19016), 0), 0, Tag1 ("Astlib__Ast_410", 270)); (("Pcty_open", 874), ([(Tag3 ((("open_description", 7487)), 0, (0)), 100000000, 0, -6083); (Tag3 ((("class_type", 7462)), 0, (0)), 100000000, 0, -6084)]), 0, (("astlib/ast_410.ml", 603, 19033, 19037), ("astlib/ast_410.ml", 603, 19033, 19081), 0), 0, Tag1 ("Astlib__Ast_410", 271))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -6073)), 0, 0, 0, 0, (("astlib/ast_410.ml", 590, 18605, 18607), ("astlib/ast_410.ml", 603, 19033, 19081), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 77)), 2, 0); Tag1 (("class_signature", 7464), (0, 0, [[(("pcsig_self", 875), 0, (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6070), (("astlib/ast_410.ml", 608, 19184, 19190), ("astlib/ast_410.ml", 608, 19184, 19212), 0), 0, Tag1 ("Astlib__Ast_410", 272)); (("pcsig_fields", 876), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7465)), 0, (0)), 100000000, 0, -6072)], (0)), 100000000, 0, -6071), (("astlib/ast_410.ml", 609, 19213, 19219), ("astlib/ast_410.ml", 609, 19213, 19255), 0), 0, Tag1 ("Astlib__Ast_410", 273))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -6069)), 0, 0, 0, 0, (("astlib/ast_410.ml", 606, 19110, 19112), ("astlib/ast_410.ml", 610, 19256, 19261), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 78)), 2, 0); Tag1 (("class_type_field", 7465), (0, 0, [[(("pctf_desc", 877), 0, (Tag3 ((("class_type_field_desc", 7466)), 0, (0)), 100000000, 0, -6066), (("astlib/ast_410.ml", 617, 19424, 19430), ("astlib/ast_410.ml", 617, 19424, 19463), 0), 0, Tag1 ("Astlib__Ast_410", 274)); (("pctf_loc", 878), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6067), (("astlib/ast_410.ml", 618, 19464, 19470), ("astlib/ast_410.ml", 618, 19464, 19491), 0), 0, Tag1 ("Astlib__Ast_410", 275)); (("pctf_attributes", 879), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6068), (("astlib/ast_410.ml", 619, 19492, 19498), ("astlib/ast_410.ml", 619, 19492, 19526), 0), 0, Tag1 ("Astlib__Ast_410", 276))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -6065)), 0, 0, 0, 0, (("astlib/ast_410.ml", 615, 19348, 19350), ("astlib/ast_410.ml", 620, 19553, 19558), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 79)), 2, 0); Tag1 (("class_type_field_desc", 7466), (0, 0, Tag1 ([(("Pctf_inherit", 880), ([(Tag3 ((("class_type", 7462)), 0, (0)), 100000000, 0, -6047)]), 0, (("astlib/ast_410.ml", 623, 19640, 19644), ("astlib/ast_410.ml", 623, 19640, 19672), 0), 0, Tag1 ("Astlib__Ast_410", 277)); (("Pctf_val", 881), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -6050)], (0)), 100000000, 0, -6049); (Tag3 (Tag1 ((("Asttypes", 7417)), "mutable_flag"), 0, (0)), 100000000, 0, -6051); (Tag3 (Tag1 ((("Asttypes", 7417)), "virtual_flag"), 0, (0)), 100000000, 0, -6052); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6053)]), 100000000, 0, -6048)]), 0, (("astlib/ast_410.ml", 625, 19694, 19698), ("astlib/ast_410.ml", 625, 19694, 19765), 0), 0, Tag1 ("Astlib__Ast_410", 278)); (("Pctf_method", 882), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -6056)], (0)), 100000000, 0, -6055); (Tag3 (Tag1 ((("Asttypes", 7417)), "private_flag"), 0, (0)), 100000000, 0, -6057); (Tag3 (Tag1 ((("Asttypes", 7417)), "virtual_flag"), 0, (0)), 100000000, 0, -6058); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6059)]), 100000000, 0, -6054)]), 0, (("astlib/ast_410.ml", 627, 19785, 19789), ("astlib/ast_410.ml", 627, 19785, 19860), 0), 0, Tag1 ("Astlib__Ast_410", 279)); (("Pctf_constraint", 883), ([(Tag2 ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6061); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6062)]), 100000000, 0, -6060)]), 0, (("astlib/ast_410.ml", 632, 19923, 19927), ("astlib/ast_410.ml", 632, 19923, 19972), 0), 0, Tag1 ("Astlib__Ast_410", 280)); (("Pctf_attribute", 884), ([(Tag3 ((("attribute", 7434)), 0, (0)), 100000000, 0, -6063)]), 0, (("astlib/ast_410.ml", 634, 20002, 20006), ("astlib/ast_410.ml", 634, 20002, 20035), 0), 0, Tag1 ("Astlib__Ast_410", 281)); (("Pctf_extension", 885), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -6064)]), 0, (("astlib/ast_410.ml", 636, 20054, 20058), ("astlib/ast_410.ml", 636, 20054, 20087), 0), 0, Tag1 ("Astlib__Ast_410", 282))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -6046)), 0, 0, 0, 0, (("astlib/ast_410.ml", 622, 19560, 19562), ("astlib/ast_410.ml", 636, 20054, 20087), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 80)), 2, 0); Tag1 (("class_infos", 7467), ([((("a")), 100000000, 0, -6036)], 1, [[(("pci_virt", 886), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "virtual_flag"), 0, (0)), 100000000, 0, -6037), (("astlib/ast_410.ml", 641, 20178, 20184), ("astlib/ast_410.ml", 641, 20178, 20207), 0), 0, Tag1 ("Astlib__Ast_410", 283)); (("pci_params", 887), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6040); (Tag3 (Tag1 ((("Asttypes", 7417)), "variance"), 0, (0)), 100000000, 0, -6041)]), 100000000, 0, -6039)], (0)), 100000000, 0, -6038), (("astlib/ast_410.ml", 642, 20208, 20214), ("astlib/ast_410.ml", 642, 20208, 20254), 0), 0, Tag1 ("Astlib__Ast_410", 284)); (("pci_name", 888), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6043)], (0)), 100000000, 0, -6042), (("astlib/ast_410.ml", 643, 20255, 20261), ("astlib/ast_410.ml", 643, 20255, 20282), 0), 0, Tag1 ("Astlib__Ast_410", 285)); (("pci_expr", 889), 0, ((("a")), 100000000, 0, -6036), (("astlib/ast_410.ml", 644, 20283, 20289), ("astlib/ast_410.ml", 644, 20283, 20302), 0), 0, Tag1 ("Astlib__Ast_410", 286)); (("pci_loc", 890), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6044), (("astlib/ast_410.ml", 645, 20303, 20309), ("astlib/ast_410.ml", 645, 20303, 20329), 0), 0, Tag1 ("Astlib__Ast_410", 287)); (("pci_attributes", 891), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6045), (("astlib/ast_410.ml", 646, 20330, 20336), ("astlib/ast_410.ml", 646, 20330, 20363), 0), 0, Tag1 ("Astlib__Ast_410", 288))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -6036)], (0)), 100000000, 0, -6035)), [25], [0], 0, 0, (("astlib/ast_410.ml", 639, 20106, 20108), ("astlib/ast_410.ml", 647, 20391, 20396), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 81)), 2, 0); Tag1 (("class_description", 7468), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7467)), [(Tag3 ((("class_type", 7462)), 0, (0)), 100000000, 0, -6034)], (0)), 100000000, 0, -6033)), 0, 0, 0, 0, (("astlib/ast_410.ml", 655, 20528, 20530), ("astlib/ast_410.ml", 655, 20528, 20576), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 82)), 2, 0); Tag1 (("class_type_declaration", 7469), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7467)), [(Tag3 ((("class_type", 7462)), 0, (0)), 100000000, 0, -6032)], (0)), 100000000, 0, -6031)), 0, 0, 0, 0, (("astlib/ast_410.ml", 657, 20578, 20580), ("astlib/ast_410.ml", 657, 20578, 20631), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 83)), 2, 0); Tag1 (("class_expr", 7470), (0, 0, [[(("pcl_desc", 892), 0, (Tag3 ((("class_expr_desc", 7471)), 0, (0)), 100000000, 0, -6028), (("astlib/ast_410.ml", 663, 20747, 20753), ("astlib/ast_410.ml", 663, 20747, 20779), 0), 0, Tag1 ("Astlib__Ast_410", 289)); (("pcl_loc", 893), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6029), (("astlib/ast_410.ml", 664, 20780, 20786), ("astlib/ast_410.ml", 664, 20780, 20806), 0), 0, Tag1 ("Astlib__Ast_410", 290)); (("pcl_attributes", 894), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -6030), (("astlib/ast_410.ml", 665, 20807, 20813), ("astlib/ast_410.ml", 665, 20807, 20840), 0), 0, Tag1 ("Astlib__Ast_410", 291))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -6027)), 0, 0, 0, 0, (("astlib/ast_410.ml", 661, 20683, 20685), ("astlib/ast_410.ml", 666, 20865, 20870), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 84)), 2, 0); Tag1 (("class_expr_desc", 7471), (0, 0, Tag1 ([(("Pcl_constr", 895), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6004)], (0)), 100000000, 0, -6003); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -6006)], (0)), 100000000, 0, -6005)]), 0, (("astlib/ast_410.ml", 669, 20940, 20944), ("astlib/ast_410.ml", 669, 20940, 20992), 0), 0, Tag1 ("Astlib__Ast_410", 292)); (("Pcl_structure", 896), ([(Tag3 ((("class_structure", 7472)), 0, (0)), 100000000, 0, -6007)]), 0, (("astlib/ast_410.ml", 672, 21030, 21034), ("astlib/ast_410.ml", 672, 21030, 21068), 0), 0, Tag1 ("Astlib__Ast_410", 293)); (("Pcl_fun", 897), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "arg_label"), 0, (0)), 100000000, 0, -6008); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6010)], (0)), 100000000, 0, -6009); (Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -6011); (Tag3 ((("class_expr", 7470)), 0, (0)), 100000000, 0, -6012)]), 0, (("astlib/ast_410.ml", 674, 21094, 21098), ("astlib/ast_410.ml", 674, 21094, 21163), 0), 0, Tag1 ("Astlib__Ast_410", 294)); (("Pcl_apply", 898), ([(Tag3 ((("class_expr", 7470)), 0, (0)), 100000000, 0, -6013); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "arg_label"), 0, (0)), 100000000, 0, -6016); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -6017)]), 100000000, 0, -6015)], (0)), 100000000, 0, -6014)]), 0, (("astlib/ast_410.ml", 680, 21422, 21426), ("astlib/ast_410.ml", 680, 21422, 21483), 0), 0, Tag1 ("Astlib__Ast_410", 295)); (("Pcl_let", 899), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "rec_flag"), 0, (0)), 100000000, 0, -6018); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7498)), 0, (0)), 100000000, 0, -6020)], (0)), 100000000, 0, -6019); (Tag3 ((("class_expr", 7470)), 0, (0)), 100000000, 0, -6021)]), 0, (("astlib/ast_410.ml", 687, 21636, 21640), ("astlib/ast_410.ml", 687, 21636, 21695), 0), 0, Tag1 ("Astlib__Ast_410", 296)); (("Pcl_constraint", 900), ([(Tag3 ((("class_expr", 7470)), 0, (0)), 100000000, 0, -6022); (Tag3 ((("class_type", 7462)), 0, (0)), 100000000, 0, -6023)]), 0, (("astlib/ast_410.ml", 691, 21844, 21848), ("astlib/ast_410.ml", 691, 21844, 21891), 0), 0, Tag1 ("Astlib__Ast_410", 297)); (("Pcl_extension", 901), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -6024)]), 0, (("astlib/ast_410.ml", 693, 21912, 21916), ("astlib/ast_410.ml", 693, 21912, 21944), 0), 0, Tag1 ("Astlib__Ast_410", 298)); (("Pcl_open", 902), ([(Tag3 ((("open_description", 7487)), 0, (0)), 100000000, 0, -6025); (Tag3 ((("class_expr", 7470)), 0, (0)), 100000000, 0, -6026)]), 0, (("astlib/ast_410.ml", 695, 21961, 21965), ("astlib/ast_410.ml", 695, 21961, 22008), 0), 0, Tag1 ("Astlib__Ast_410", 299))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -6002)), 0, 0, 0, 0, (("astlib/ast_410.ml", 668, 20872, 20874), ("astlib/ast_410.ml", 695, 21961, 22008), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 85)), 2, 0); Tag1 (("class_structure", 7472), (0, 0, [[(("pcstr_self", 903), 0, (Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -5999), (("astlib/ast_410.ml", 701, 22112, 22118), ("astlib/ast_410.ml", 701, 22112, 22138), 0), 0, Tag1 ("Astlib__Ast_410", 300)); (("pcstr_fields", 904), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7473)), 0, (0)), 100000000, 0, -6001)], (0)), 100000000, 0, -6000), (("astlib/ast_410.ml", 702, 22139, 22145), ("astlib/ast_410.ml", 702, 22139, 22176), 0), 0, Tag1 ("Astlib__Ast_410", 301))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -5998)), 0, 0, 0, 0, (("astlib/ast_410.ml", 699, 22038, 22040), ("astlib/ast_410.ml", 703, 22177, 22182), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 86)), 2, 0); Tag1 (("class_field", 7473), (0, 0, [[(("pcf_desc", 905), 0, (Tag3 ((("class_field_desc", 7474)), 0, (0)), 100000000, 0, -5995), (("astlib/ast_410.ml", 710, 22332, 22338), ("astlib/ast_410.ml", 710, 22332, 22365), 0), 0, Tag1 ("Astlib__Ast_410", 302)); (("pcf_loc", 906), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5996), (("astlib/ast_410.ml", 711, 22366, 22372), ("astlib/ast_410.ml", 711, 22366, 22392), 0), 0, Tag1 ("Astlib__Ast_410", 303)); (("pcf_attributes", 907), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5997), (("astlib/ast_410.ml", 712, 22393, 22399), ("astlib/ast_410.ml", 712, 22393, 22426), 0), 0, Tag1 ("Astlib__Ast_410", 304))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -5994)), 0, 0, 0, 0, (("astlib/ast_410.ml", 708, 22266, 22268), ("astlib/ast_410.ml", 713, 22453, 22458), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 87)), 2, 0); Tag1 (("class_field_desc", 7474), (0, 0, Tag1 ([(("Pcf_inherit", 908), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "override_flag"), 0, (0)), 100000000, 0, -5973); (Tag3 ((("class_expr", 7470)), 0, (0)), 100000000, 0, -5974); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5977)], (0)), 100000000, 0, -5976)], (0)), 100000000, 0, -5975)]), 0, (("astlib/ast_410.ml", 716, 22530, 22534), ("astlib/ast_410.ml", 716, 22530, 22597), 0), 0, Tag1 ("Astlib__Ast_410", 305)); (("Pcf_val", 909), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -5980)], (0)), 100000000, 0, -5979); (Tag3 (Tag1 ((("Asttypes", 7417)), "mutable_flag"), 0, (0)), 100000000, 0, -5981); (Tag3 ((("class_field_kind", 7475)), 0, (0)), 100000000, 0, -5982)]), 100000000, 0, -5978)]), 0, (("astlib/ast_410.ml", 722, 22689, 22693), ("astlib/ast_410.ml", 722, 22689, 22751), 0), 0, Tag1 ("Astlib__Ast_410", 306)); (("Pcf_method", 910), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7417)), "label"), 0, (0)), 100000000, 0, -5985)], (0)), 100000000, 0, -5984); (Tag3 (Tag1 ((("Asttypes", 7417)), "private_flag"), 0, (0)), 100000000, 0, -5986); (Tag3 ((("class_field_kind", 7475)), 0, (0)), 100000000, 0, -5987)]), 100000000, 0, -5983)]), 0, (("astlib/ast_410.ml", 726, 22800, 22804), ("astlib/ast_410.ml", 726, 22800, 22865), 0), 0, Tag1 ("Astlib__Ast_410", 307)); (("Pcf_constraint", 911), ([(Tag2 ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -5989); (Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -5990)]), 100000000, 0, -5988)]), 0, (("astlib/ast_410.ml", 730, 22981, 22985), ("astlib/ast_410.ml", 730, 22981, 23028), 0), 0, Tag1 ("Astlib__Ast_410", 308)); (("Pcf_initializer", 912), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -5991)]), 0, (("astlib/ast_410.ml", 732, 23058, 23062), ("astlib/ast_410.ml", 732, 23058, 23093), 0), 0, Tag1 ("Astlib__Ast_410", 309)); (("Pcf_attribute", 913), ([(Tag3 ((("attribute", 7434)), 0, (0)), 100000000, 0, -5992)]), 0, (("astlib/ast_410.ml", 734, 23118, 23122), ("astlib/ast_410.ml", 734, 23118, 23150), 0), 0, Tag1 ("Astlib__Ast_410", 310)); (("Pcf_extension", 914), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -5993)]), 0, (("astlib/ast_410.ml", 736, 23169, 23173), ("astlib/ast_410.ml", 736, 23169, 23201), 0), 0, Tag1 ("Astlib__Ast_410", 311))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -5972)), 0, 0, 0, 0, (("astlib/ast_410.ml", 715, 22460, 22462), ("astlib/ast_410.ml", 736, 23169, 23201), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 88)), 2, 0); Tag1 (("class_field_kind", 7475), (0, 0, Tag1 ([(("Cfk_virtual", 915), ([(Tag3 ((("core_type", 7438)), 0, (0)), 100000000, 0, -5969)]), 0, (("astlib/ast_410.ml", 740, 23290, 23294), ("astlib/ast_410.ml", 740, 23290, 23320), 0), 0, Tag1 ("Astlib__Ast_410", 312)); (("Cfk_concrete", 916), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "override_flag"), 0, (0)), 100000000, 0, -5970); (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -5971)]), 0, (("astlib/ast_410.ml", 741, 23321, 23325), ("astlib/ast_410.ml", 741, 23321, 23369), 0), 0, Tag1 ("Astlib__Ast_410", 313))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -5968)), 0, 0, 0, 0, (("astlib/ast_410.ml", 739, 23220, 23222), ("astlib/ast_410.ml", 741, 23321, 23369), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 89)), 2, 0); Tag1 (("class_declaration", 7476), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7467)), [(Tag3 ((("class_expr", 7470)), 0, (0)), 100000000, 0, -5967)], (0)), 100000000, 0, -5966)), 0, 0, 0, 0, (("astlib/ast_410.ml", 743, 23371, 23373), ("astlib/ast_410.ml", 743, 23371, 23419), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 90)), 2, 0); Tag1 (("module_type", 7477), (0, 0, [[(("pmty_desc", 917), 0, (Tag3 ((("module_type_desc", 7478)), 0, (0)), 100000000, 0, -5963), (("astlib/ast_410.ml", 751, 23567, 23573), ("astlib/ast_410.ml", 751, 23567, 23601), 0), 0, Tag1 ("Astlib__Ast_410", 314)); (("pmty_loc", 918), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5964), (("astlib/ast_410.ml", 752, 23602, 23608), ("astlib/ast_410.ml", 752, 23602, 23629), 0), 0, Tag1 ("Astlib__Ast_410", 315)); (("pmty_attributes", 919), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5965), (("astlib/ast_410.ml", 753, 23630, 23636), ("astlib/ast_410.ml", 753, 23630, 23664), 0), 0, Tag1 ("Astlib__Ast_410", 316))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -5962)), 0, 0, 0, 0, (("astlib/ast_410.ml", 749, 23501, 23503), ("astlib/ast_410.ml", 754, 23689, 23694), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 91)), 2, 0); Tag1 (("module_type_desc", 7478), (0, 0, Tag1 ([(("Pmty_ident", 920), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5951)], (0)), 100000000, 0, -5950)]), 0, (("astlib/ast_410.ml", 757, 23766, 23770), ("astlib/ast_410.ml", 757, 23766, 23801), 0), 0, Tag1 ("Astlib__Ast_410", 317)); (("Pmty_signature", 921), ([(Tag3 ((("signature", 7480)), 0, (0)), 100000000, 0, -5952)]), 0, (("astlib/ast_410.ml", 759, 23814, 23818), ("astlib/ast_410.ml", 759, 23814, 23847), 0), 0, Tag1 ("Astlib__Ast_410", 318)); (("Pmty_functor", 922), ([(Tag3 ((("functor_parameter", 7479)), 0, (0)), 100000000, 0, -5953); (Tag3 ((("module_type", 7477)), 0, (0)), 100000000, 0, -5954)]), 0, (("astlib/ast_410.ml", 761, 23870, 23874), ("astlib/ast_410.ml", 761, 23870, 23923), 0), 0, Tag1 ("Astlib__Ast_410", 319)); (("Pmty_with", 923), ([(Tag3 ((("module_type", 7477)), 0, (0)), 100000000, 0, -5955); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7492)), 0, (0)), 100000000, 0, -5957)], (0)), 100000000, 0, -5956)]), 0, (("astlib/ast_410.ml", 763, 23958, 23962), ("astlib/ast_410.ml", 763, 23958, 24011), 0), 0, Tag1 ("Astlib__Ast_410", 320)); (("Pmty_typeof", 924), ([(Tag3 ((("module_expr", 7493)), 0, (0)), 100000000, 0, -5958)]), 0, (("astlib/ast_410.ml", 765, 24034, 24038), ("astlib/ast_410.ml", 765, 24034, 24066), 0), 0, Tag1 ("Astlib__Ast_410", 321)); (("Pmty_extension", 925), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -5959)]), 0, (("astlib/ast_410.ml", 767, 24095, 24099), ("astlib/ast_410.ml", 767, 24095, 24128), 0), 0, Tag1 ("Astlib__Ast_410", 322)); (("Pmty_alias", 926), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5961)], (0)), 100000000, 0, -5960)]), 0, (("astlib/ast_410.ml", 769, 24145, 24149), ("astlib/ast_410.ml", 769, 24145, 24180), 0), 0, Tag1 ("Astlib__Ast_410", 323))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -5949)), 0, 0, 0, 0, (("astlib/ast_410.ml", 756, 23696, 23698), ("astlib/ast_410.ml", 769, 24145, 24180), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 92)), 2, 0); Tag1 (("functor_parameter", 7479), (0, 0, Tag1 ([(("Unit", 927), (0), 0, (("astlib/ast_410.ml", 773, 24275, 24279), ("astlib/ast_410.ml", 773, 24275, 24285), 0), 0, Tag1 ("Astlib__Ast_410", 324)); (("Named", 928), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5947)], (0)), 100000000, 0, -5946)], (0)), 100000000, 0, -5945); (Tag3 ((("module_type", 7477)), 0, (0)), 100000000, 0, -5948)]), 0, (("astlib/ast_410.ml", 775, 24299, 24303), ("astlib/ast_410.ml", 775, 24299, 24345), 0), 0, Tag1 ("Astlib__Ast_410", 325))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "functor_parameter"), 0, (0)), 100000000, 0, -5944)), 0, 0, 0, 0, (("astlib/ast_410.ml", 772, 24203, 24205), ("astlib/ast_410.ml", 775, 24299, 24345), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 93)), 2, 0); Tag1 (("signature", 7480), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7481)), 0, (0)), 100000000, 0, -5943)], (0)), 100000000, 0, -5942)), 0, 0, 0, 0, (("astlib/ast_410.ml", 779, 24420, 24422), ("astlib/ast_410.ml", 779, 24420, 24457), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 94)), 2, 0); Tag1 (("signature_item", 7481), (0, 0, [[(("psig_desc", 929), 0, (Tag3 ((("signature_item_desc", 7482)), 0, (0)), 100000000, 0, -5940), (("astlib/ast_410.ml", 783, 24531, 24537), ("astlib/ast_410.ml", 783, 24531, 24568), 0), 0, Tag1 ("Astlib__Ast_410", 326)); (("psig_loc", 930), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5941), (("astlib/ast_410.ml", 784, 24569, 24575), ("astlib/ast_410.ml", 784, 24569, 24596), 0), 0, Tag1 ("Astlib__Ast_410", 327))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -5939)), 0, 0, 0, 0, (("astlib/ast_410.ml", 781, 24459, 24461), ("astlib/ast_410.ml", 785, 24597, 24602), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 95)), 2, 0); Tag1 (("signature_item_desc", 7482), (0, 0, Tag1 ([(("Psig_value", 931), ([(Tag3 ((("value_description", 7452)), 0, (0)), 100000000, 0, -5917)]), 0, (("astlib/ast_410.ml", 788, 24680, 24684), ("astlib/ast_410.ml", 788, 24680, 24717), 0), 0, Tag1 ("Astlib__Ast_410", 328)); (("Psig_type", 932), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "rec_flag"), 0, (0)), 100000000, 0, -5918); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7453)), 0, (0)), 100000000, 0, -5920)], (0)), 100000000, 0, -5919)]), 0, (("astlib/ast_410.ml", 793, 24800, 24804), ("astlib/ast_410.ml", 793, 24800, 24851), 0), 0, Tag1 ("Astlib__Ast_410", 329)); (("Psig_typesubst", 933), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7453)), 0, (0)), 100000000, 0, -5922)], (0)), 100000000, 0, -5921)]), 0, (("astlib/ast_410.ml", 795, 24898, 24902), ("astlib/ast_410.ml", 795, 24898, 24943), 0), 0, Tag1 ("Astlib__Ast_410", 330)); (("Psig_typext", 934), ([(Tag3 ((("type_extension", 7458)), 0, (0)), 100000000, 0, -5923)]), 0, (("astlib/ast_410.ml", 797, 24992, 24996), ("astlib/ast_410.ml", 797, 24992, 25027), 0), 0, Tag1 ("Astlib__Ast_410", 331)); (("Psig_exception", 935), ([(Tag3 ((("type_exception", 7460)), 0, (0)), 100000000, 0, -5924)]), 0, (("astlib/ast_410.ml", 799, 25053, 25057), ("astlib/ast_410.ml", 799, 25053, 25091), 0), 0, Tag1 ("Astlib__Ast_410", 332)); (("Psig_module", 936), ([(Tag3 ((("module_declaration", 7483)), 0, (0)), 100000000, 0, -5925)]), 0, (("astlib/ast_410.ml", 801, 25119, 25123), ("astlib/ast_410.ml", 801, 25119, 25158), 0), 0, Tag1 ("Astlib__Ast_410", 333)); (("Psig_modsubst", 937), ([(Tag3 ((("module_substitution", 7484)), 0, (0)), 100000000, 0, -5926)]), 0, (("astlib/ast_410.ml", 804, 25203, 25207), ("astlib/ast_410.ml", 804, 25203, 25245), 0), 0, Tag1 ("Astlib__Ast_410", 334)); (("Psig_recmodule", 938), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7483)), 0, (0)), 100000000, 0, -5928)], (0)), 100000000, 0, -5927)]), 0, (("astlib/ast_410.ml", 806, 25270, 25274), ("astlib/ast_410.ml", 806, 25270, 25317), 0), 0, Tag1 ("Astlib__Ast_410", 335)); (("Psig_modtype", 939), ([(Tag3 ((("module_type_declaration", 7485)), 0, (0)), 100000000, 0, -5929)]), 0, (("astlib/ast_410.ml", 808, 25369, 25373), ("astlib/ast_410.ml", 808, 25369, 25414), 0), 0, Tag1 ("Astlib__Ast_410", 336)); (("Psig_open", 940), ([(Tag3 ((("open_description", 7487)), 0, (0)), 100000000, 0, -5930)]), 0, (("astlib/ast_410.ml", 811, 25465, 25469), ("astlib/ast_410.ml", 811, 25465, 25500), 0), 0, Tag1 ("Astlib__Ast_410", 337)); (("Psig_include", 941), ([(Tag3 ((("include_description", 7490)), 0, (0)), 100000000, 0, -5931)]), 0, (("astlib/ast_410.ml", 813, 25518, 25522), ("astlib/ast_410.ml", 813, 25518, 25559), 0), 0, Tag1 ("Astlib__Ast_410", 338)); (("Psig_class", 942), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7468)), 0, (0)), 100000000, 0, -5933)], (0)), 100000000, 0, -5932)]), 0, (("astlib/ast_410.ml", 815, 25581, 25585), ("astlib/ast_410.ml", 815, 25581, 25623), 0), 0, Tag1 ("Astlib__Ast_410", 339)); (("Psig_class_type", 943), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7469)), 0, (0)), 100000000, 0, -5935)], (0)), 100000000, 0, -5934)]), 0, (("astlib/ast_410.ml", 817, 25670, 25674), ("astlib/ast_410.ml", 817, 25670, 25722), 0), 0, Tag1 ("Astlib__Ast_410", 340)); (("Psig_attribute", 944), ([(Tag3 ((("attribute", 7434)), 0, (0)), 100000000, 0, -5936)]), 0, (("astlib/ast_410.ml", 819, 25776, 25780), ("astlib/ast_410.ml", 819, 25776, 25809), 0), 0, Tag1 ("Astlib__Ast_410", 341)); (("Psig_extension", 945), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -5937); (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5938)]), 0, (("astlib/ast_410.ml", 821, 25828, 25832), ("astlib/ast_410.ml", 821, 25828, 25874), 0), 0, Tag1 ("Astlib__Ast_410", 342))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -5916)), 0, 0, 0, 0, (("astlib/ast_410.ml", 787, 24604, 24606), ("astlib/ast_410.ml", 821, 25828, 25874), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 96)), 2, 0); Tag1 (("module_declaration", 7483), (0, 0, [[(("pmd_name", 946), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5912)], (0)), 100000000, 0, -5911)], (0)), 100000000, 0, -5910), (("astlib/ast_410.ml", 826, 25973, 25979), ("astlib/ast_410.ml", 826, 25973, 26007), 0), 0, Tag1 ("Astlib__Ast_410", 343)); (("pmd_type", 947), 0, (Tag3 ((("module_type", 7477)), 0, (0)), 100000000, 0, -5913), (("astlib/ast_410.ml", 827, 26008, 26014), ("astlib/ast_410.ml", 827, 26008, 26036), 0), 0, Tag1 ("Astlib__Ast_410", 344)); (("pmd_attributes", 948), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5914), (("astlib/ast_410.ml", 828, 26037, 26043), ("astlib/ast_410.ml", 828, 26037, 26070), 0), 0, Tag1 ("Astlib__Ast_410", 345)); (("pmd_loc", 949), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5915), (("astlib/ast_410.ml", 829, 26097, 26103), ("astlib/ast_410.ml", 829, 26097, 26123), 0), 0, Tag1 ("Astlib__Ast_410", 346))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -5909)), 0, 0, 0, 0, (("astlib/ast_410.ml", 824, 25893, 25895), ("astlib/ast_410.ml", 830, 26124, 26129), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 97)), 2, 0); Tag1 (("module_substitution", 7484), (0, 0, [[(("pms_name", 950), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5904)], (0)), 100000000, 0, -5903), (("astlib/ast_410.ml", 835, 26228, 26234), ("astlib/ast_410.ml", 835, 26228, 26255), 0), 0, Tag1 ("Astlib__Ast_410", 347)); (("pms_manifest", 951), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5906)], (0)), 100000000, 0, -5905), (("astlib/ast_410.ml", 836, 26256, 26262), ("astlib/ast_410.ml", 836, 26256, 26292), 0), 0, Tag1 ("Astlib__Ast_410", 348)); (("pms_attributes", 952), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5907), (("astlib/ast_410.ml", 837, 26293, 26299), ("astlib/ast_410.ml", 837, 26293, 26326), 0), 0, Tag1 ("Astlib__Ast_410", 349)); (("pms_loc", 953), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5908), (("astlib/ast_410.ml", 838, 26353, 26359), ("astlib/ast_410.ml", 838, 26353, 26379), 0), 0, Tag1 ("Astlib__Ast_410", 350))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "module_substitution"), 0, (0)), 100000000, 0, -5902)), 0, 0, 0, 0, (("astlib/ast_410.ml", 833, 26146, 26148), ("astlib/ast_410.ml", 839, 26380, 26385), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 98)), 2, 0); Tag1 (("module_type_declaration", 7485), (0, 0, [[(("pmtd_name", 954), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5897)], (0)), 100000000, 0, -5896), (("astlib/ast_410.ml", 843, 26477, 26483), ("astlib/ast_410.ml", 843, 26477, 26505), 0), 0, Tag1 ("Astlib__Ast_410", 351)); (("pmtd_type", 955), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7477)), 0, (0)), 100000000, 0, -5899)], (0)), 100000000, 0, -5898), (("astlib/ast_410.ml", 844, 26506, 26512), ("astlib/ast_410.ml", 844, 26506, 26542), 0), 0, Tag1 ("Astlib__Ast_410", 352)); (("pmtd_attributes", 956), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5900), (("astlib/ast_410.ml", 845, 26543, 26549), ("astlib/ast_410.ml", 845, 26543, 26577), 0), 0, Tag1 ("Astlib__Ast_410", 353)); (("pmtd_loc", 957), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5901), (("astlib/ast_410.ml", 846, 26604, 26610), ("astlib/ast_410.ml", 846, 26604, 26631), 0), 0, Tag1 ("Astlib__Ast_410", 354))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -5895)), 0, 0, 0, 0, (("astlib/ast_410.ml", 841, 26387, 26389), ("astlib/ast_410.ml", 847, 26632, 26637), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 99)), 2, 0); Tag1 (("open_infos", 7486), ([((("a")), 100000000, 0, -5891)], 1, [[(("popen_expr", 958), 0, ((("a")), 100000000, 0, -5891), (("astlib/ast_410.ml", 854, 26792, 26798), ("astlib/ast_410.ml", 854, 26792, 26813), 0), 0, Tag1 ("Astlib__Ast_410", 355)); (("popen_override", 959), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "override_flag"), 0, (0)), 100000000, 0, -5892), (("astlib/ast_410.ml", 855, 26814, 26820), ("astlib/ast_410.ml", 855, 26814, 26850), 0), 0, Tag1 ("Astlib__Ast_410", 356)); (("popen_loc", 960), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5893), (("astlib/ast_410.ml", 856, 26851, 26857), ("astlib/ast_410.ml", 856, 26851, 26879), 0), 0, Tag1 ("Astlib__Ast_410", 357)); (("popen_attributes", 961), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5894), (("astlib/ast_410.ml", 857, 26880, 26886), ("astlib/ast_410.ml", 857, 26880, 26915), 0), 0, Tag1 ("Astlib__Ast_410", 358))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "open_infos"), [((("a")), 100000000, 0, -5891)], (0)), 100000000, 0, -5890)), [25], [0], 0, 0, (("astlib/ast_410.ml", 852, 26722, 26724), ("astlib/ast_410.ml", 858, 26916, 26921), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 100)), 2, 0); Tag1 (("open_description", 7487), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7486)), [(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5889)], (0)), 100000000, 0, -5888)], (0)), 100000000, 0, -5887)), 0, 0, 0, 0, (("astlib/ast_410.ml", 864, 27090, 27092), ("astlib/ast_410.ml", 864, 27090, 27141), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 101)), 2, 0); Tag1 (("open_declaration", 7488), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7486)), [(Tag3 ((("module_expr", 7493)), 0, (0)), 100000000, 0, -5886)], (0)), 100000000, 0, -5885)), 0, 0, 0, 0, (("astlib/ast_410.ml", 868, 27177, 27179), ("astlib/ast_410.ml", 868, 27177, 27224), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 102)), 2, 0); Tag1 (("include_infos", 7489), ([((("a")), 100000000, 0, -5882)], 1, [[(("pincl_mod", 962), 0, ((("a")), 100000000, 0, -5882), (("astlib/ast_410.ml", 875, 27361, 27367), ("astlib/ast_410.ml", 875, 27361, 27381), 0), 0, Tag1 ("Astlib__Ast_410", 359)); (("pincl_loc", 963), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5883), (("astlib/ast_410.ml", 876, 27382, 27388), ("astlib/ast_410.ml", 876, 27382, 27410), 0), 0, Tag1 ("Astlib__Ast_410", 360)); (("pincl_attributes", 964), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5884), (("astlib/ast_410.ml", 877, 27411, 27417), ("astlib/ast_410.ml", 877, 27411, 27446), 0), 0, Tag1 ("Astlib__Ast_410", 361))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -5882)], (0)), 100000000, 0, -5881)), [25], [0], 0, 0, (("astlib/ast_410.ml", 873, 27285, 27287), ("astlib/ast_410.ml", 878, 27447, 27452), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 103)), 2, 0); Tag1 (("include_description", 7490), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7489)), [(Tag3 ((("module_type", 7477)), 0, (0)), 100000000, 0, -5880)], (0)), 100000000, 0, -5879)), 0, 0, 0, 0, (("astlib/ast_410.ml", 880, 27454, 27456), ("astlib/ast_410.ml", 880, 27454, 27507), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 104)), 2, 0); Tag1 (("include_declaration", 7491), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7489)), [(Tag3 ((("module_expr", 7493)), 0, (0)), 100000000, 0, -5878)], (0)), 100000000, 0, -5877)), 0, 0, 0, 0, (("astlib/ast_410.ml", 883, 27528, 27530), ("astlib/ast_410.ml", 883, 27528, 27581), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 105)), 2, 0); Tag1 (("with_constraint", 7492), (0, 0, Tag1 ([(("Pwith_type", 965), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5864)], (0)), 100000000, 0, -5863); (Tag3 ((("type_declaration", 7453)), 0, (0)), 100000000, 0, -5865)]), 0, (("astlib/ast_410.ml", 887, 27670, 27674), ("astlib/ast_410.ml", 887, 27670, 27724), 0), 0, Tag1 ("Astlib__Ast_410", 362)); (("Pwith_module", 966), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5867)], (0)), 100000000, 0, -5866); (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5869)], (0)), 100000000, 0, -5868)]), 0, (("astlib/ast_410.ml", 892, 27857, 27861), ("astlib/ast_410.ml", 892, 27857, 27912), 0), 0, Tag1 ("Astlib__Ast_410", 363)); (("Pwith_typesubst", 967), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5871)], (0)), 100000000, 0, -5870); (Tag3 ((("type_declaration", 7453)), 0, (0)), 100000000, 0, -5872)]), 0, (("astlib/ast_410.ml", 894, 27943, 27947), ("astlib/ast_410.ml", 894, 27943, 28002), 0), 0, Tag1 ("Astlib__Ast_410", 364)); (("Pwith_modsubst", 968), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5874)], (0)), 100000000, 0, -5873); (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5876)], (0)), 100000000, 0, -5875)]), 0, (("astlib/ast_410.ml", 896, 28063, 28067), ("astlib/ast_410.ml", 896, 28063, 28120), 0), 0, Tag1 ("Astlib__Ast_410", 365))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -5862)), 0, 0, 0, 0, (("astlib/ast_410.ml", 886, 27602, 27604), ("astlib/ast_410.ml", 896, 28063, 28120), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 106)), 2, 0); Tag1 (("module_expr", 7493), (0, 0, [[(("pmod_desc", 969), 0, (Tag3 ((("module_expr_desc", 7494)), 0, (0)), 100000000, 0, -5859), (("astlib/ast_410.ml", 903, 28270, 28276), ("astlib/ast_410.ml", 903, 28270, 28304), 0), 0, Tag1 ("Astlib__Ast_410", 366)); (("pmod_loc", 970), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5860), (("astlib/ast_410.ml", 904, 28305, 28311), ("astlib/ast_410.ml", 904, 28305, 28332), 0), 0, Tag1 ("Astlib__Ast_410", 367)); (("pmod_attributes", 971), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5861), (("astlib/ast_410.ml", 905, 28333, 28339), ("astlib/ast_410.ml", 905, 28333, 28367), 0), 0, Tag1 ("Astlib__Ast_410", 368))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -5858)), 0, 0, 0, 0, (("astlib/ast_410.ml", 901, 28204, 28206), ("astlib/ast_410.ml", 906, 28392, 28397), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 107)), 2, 0); Tag1 (("module_expr_desc", 7494), (0, 0, Tag1 ([(("Pmod_ident", 972), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5848)], (0)), 100000000, 0, -5847)]), 0, (("astlib/ast_410.ml", 909, 28469, 28473), ("astlib/ast_410.ml", 909, 28469, 28504), 0), 0, Tag1 ("Astlib__Ast_410", 369)); (("Pmod_structure", 973), ([(Tag3 ((("structure", 7495)), 0, (0)), 100000000, 0, -5849)]), 0, (("astlib/ast_410.ml", 911, 28517, 28521), ("astlib/ast_410.ml", 911, 28517, 28550), 0), 0, Tag1 ("Astlib__Ast_410", 370)); (("Pmod_functor", 974), ([(Tag3 ((("functor_parameter", 7479)), 0, (0)), 100000000, 0, -5850); (Tag3 ((("module_expr", 7493)), 0, (0)), 100000000, 0, -5851)]), 0, (("astlib/ast_410.ml", 913, 28576, 28580), ("astlib/ast_410.ml", 913, 28576, 28629), 0), 0, Tag1 ("Astlib__Ast_410", 371)); (("Pmod_apply", 975), ([(Tag3 ((("module_expr", 7493)), 0, (0)), 100000000, 0, -5852); (Tag3 ((("module_expr", 7493)), 0, (0)), 100000000, 0, -5853)]), 0, (("astlib/ast_410.ml", 915, 28663, 28667), ("astlib/ast_410.ml", 915, 28663, 28708), 0), 0, Tag1 ("Astlib__Ast_410", 372)); (("Pmod_constraint", 976), ([(Tag3 ((("module_expr", 7493)), 0, (0)), 100000000, 0, -5854); (Tag3 ((("module_type", 7477)), 0, (0)), 100000000, 0, -5855)]), 0, (("astlib/ast_410.ml", 917, 28728, 28732), ("astlib/ast_410.ml", 917, 28728, 28778), 0), 0, Tag1 ("Astlib__Ast_410", 373)); (("Pmod_unpack", 977), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -5856)]), 0, (("astlib/ast_410.ml", 919, 28799, 28803), ("astlib/ast_410.ml", 919, 28799, 28830), 0), 0, Tag1 ("Astlib__Ast_410", 374)); (("Pmod_extension", 978), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -5857)]), 0, (("astlib/ast_410.ml", 921, 28849, 28853), ("astlib/ast_410.ml", 921, 28849, 28882), 0), 0, Tag1 ("Astlib__Ast_410", 375))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -5846)), 0, 0, 0, 0, (("astlib/ast_410.ml", 908, 28399, 28401), ("astlib/ast_410.ml", 921, 28849, 28882), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 108)), 2, 0); Tag1 (("structure", 7495), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7496)), 0, (0)), 100000000, 0, -5845)], (0)), 100000000, 0, -5844)), 0, 0, 0, 0, (("astlib/ast_410.ml", 924, 28900, 28902), ("astlib/ast_410.ml", 924, 28900, 28937), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 109)), 2, 0); Tag1 (("structure_item", 7496), (0, 0, [[(("pstr_desc", 979), 0, (Tag3 ((("structure_item_desc", 7497)), 0, (0)), 100000000, 0, -5842), (("astlib/ast_410.ml", 928, 29011, 29017), ("astlib/ast_410.ml", 928, 29011, 29048), 0), 0, Tag1 ("Astlib__Ast_410", 376)); (("pstr_loc", 980), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5843), (("astlib/ast_410.ml", 929, 29049, 29055), ("astlib/ast_410.ml", 929, 29049, 29076), 0), 0, Tag1 ("Astlib__Ast_410", 377))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -5841)), 0, 0, 0, 0, (("astlib/ast_410.ml", 926, 28939, 28941), ("astlib/ast_410.ml", 930, 29077, 29082), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 110)), 2, 0); Tag1 (("structure_item_desc", 7497), (0, 0, Tag1 ([(("Pstr_eval", 981), ([(Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -5817); (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5818)]), 0, (("astlib/ast_410.ml", 933, 29160, 29164), ("astlib/ast_410.ml", 933, 29160, 29202), 0), 0, Tag1 ("Astlib__Ast_410", 378)); (("Pstr_value", 982), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "rec_flag"), 0, (0)), 100000000, 0, -5819); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7498)), 0, (0)), 100000000, 0, -5821)], (0)), 100000000, 0, -5820)]), 0, (("astlib/ast_410.ml", 935, 29215, 29219), ("astlib/ast_410.ml", 935, 29215, 29264), 0), 0, Tag1 ("Astlib__Ast_410", 379)); (("Pstr_primitive", 983), ([(Tag3 ((("value_description", 7452)), 0, (0)), 100000000, 0, -5822)]), 0, (("astlib/ast_410.ml", 939, 29403, 29407), ("astlib/ast_410.ml", 939, 29403, 29444), 0), 0, Tag1 ("Astlib__Ast_410", 380)); (("Pstr_type", 984), ([(Tag3 (Tag1 ((("Asttypes", 7417)), "rec_flag"), 0, (0)), 100000000, 0, -5823); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7453)), 0, (0)), 100000000, 0, -5825)], (0)), 100000000, 0, -5824)]), 0, (("astlib/ast_410.ml", 942, 29503, 29507), ("astlib/ast_410.ml", 942, 29503, 29554), 0), 0, Tag1 ("Astlib__Ast_410", 381)); (("Pstr_typext", 985), ([(Tag3 ((("type_extension", 7458)), 0, (0)), 100000000, 0, -5826)]), 0, (("astlib/ast_410.ml", 944, 29600, 29604), ("astlib/ast_410.ml", 944, 29600, 29635), 0), 0, Tag1 ("Astlib__Ast_410", 382)); (("Pstr_exception", 986), ([(Tag3 ((("type_exception", 7460)), 0, (0)), 100000000, 0, -5827)]), 0, (("astlib/ast_410.ml", 946, 29661, 29665), ("astlib/ast_410.ml", 946, 29661, 29699), 0), 0, Tag1 ("Astlib__Ast_410", 383)); (("Pstr_module", 987), ([(Tag3 ((("module_binding", 7499)), 0, (0)), 100000000, 0, -5828)]), 0, (("astlib/ast_410.ml", 949, 29752, 29756), ("astlib/ast_410.ml", 949, 29752, 29787), 0), 0, Tag1 ("Astlib__Ast_410", 384)); (("Pstr_recmodule", 988), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7499)), 0, (0)), 100000000, 0, -5830)], (0)), 100000000, 0, -5829)]), 0, (("astlib/ast_410.ml", 951, 29812, 29816), ("astlib/ast_410.ml", 951, 29812, 29855), 0), 0, Tag1 ("Astlib__Ast_410", 385)); (("Pstr_modtype", 989), ([(Tag3 ((("module_type_declaration", 7485)), 0, (0)), 100000000, 0, -5831)]), 0, (("astlib/ast_410.ml", 953, 29907, 29911), ("astlib/ast_410.ml", 953, 29907, 29952), 0), 0, Tag1 ("Astlib__Ast_410", 386)); (("Pstr_open", 990), ([(Tag3 ((("open_declaration", 7488)), 0, (0)), 100000000, 0, -5832)]), 0, (("astlib/ast_410.ml", 955, 29982, 29986), ("astlib/ast_410.ml", 955, 29982, 30017), 0), 0, Tag1 ("Astlib__Ast_410", 387)); (("Pstr_class", 991), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7476)), 0, (0)), 100000000, 0, -5834)], (0)), 100000000, 0, -5833)]), 0, (("astlib/ast_410.ml", 957, 30035, 30039), ("astlib/ast_410.ml", 957, 30035, 30077), 0), 0, Tag1 ("Astlib__Ast_410", 388)); (("Pstr_class_type", 992), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7469)), 0, (0)), 100000000, 0, -5836)], (0)), 100000000, 0, -5835)]), 0, (("astlib/ast_410.ml", 959, 30124, 30128), ("astlib/ast_410.ml", 959, 30124, 30176), 0), 0, Tag1 ("Astlib__Ast_410", 389)); (("Pstr_include", 993), ([(Tag3 ((("include_declaration", 7491)), 0, (0)), 100000000, 0, -5837)]), 0, (("astlib/ast_410.ml", 961, 30230, 30234), ("astlib/ast_410.ml", 961, 30230, 30271), 0), 0, Tag1 ("Astlib__Ast_410", 390)); (("Pstr_attribute", 994), ([(Tag3 ((("attribute", 7434)), 0, (0)), 100000000, 0, -5838)]), 0, (("astlib/ast_410.ml", 963, 30293, 30297), ("astlib/ast_410.ml", 963, 30293, 30326), 0), 0, Tag1 ("Astlib__Ast_410", 391)); (("Pstr_extension", 995), ([(Tag3 ((("extension", 7435)), 0, (0)), 100000000, 0, -5839); (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5840)]), 0, (("astlib/ast_410.ml", 965, 30345, 30349), ("astlib/ast_410.ml", 965, 30345, 30391), 0), 0, Tag1 ("Astlib__Ast_410", 392))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -5816)), 0, 0, 0, 0, (("astlib/ast_410.ml", 932, 29084, 29086), ("astlib/ast_410.ml", 965, 30345, 30391), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 111)), 2, 0); Tag1 (("value_binding", 7498), (0, 0, [[(("pvb_pat", 996), 0, (Tag3 ((("pattern", 7445)), 0, (0)), 100000000, 0, -5812), (("astlib/ast_410.ml", 970, 30480, 30486), ("astlib/ast_410.ml", 970, 30480, 30503), 0), 0, Tag1 ("Astlib__Ast_410", 393)); (("pvb_expr", 997), 0, (Tag3 ((("expression", 7447)), 0, (0)), 100000000, 0, -5813), (("astlib/ast_410.ml", 971, 30504, 30510), ("astlib/ast_410.ml", 971, 30504, 30531), 0), 0, Tag1 ("Astlib__Ast_410", 394)); (("pvb_attributes", 998), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5814), (("astlib/ast_410.ml", 972, 30532, 30538), ("astlib/ast_410.ml", 972, 30532, 30565), 0), 0, Tag1 ("Astlib__Ast_410", 395)); (("pvb_loc", 999), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5815), (("astlib/ast_410.ml", 973, 30566, 30572), ("astlib/ast_410.ml", 973, 30566, 30592), 0), 0, Tag1 ("Astlib__Ast_410", 396))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -5811)), 0, 0, 0, 0, (("astlib/ast_410.ml", 968, 30410, 30412), ("astlib/ast_410.ml", 974, 30593, 30598), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 112)), 2, 0); Tag1 (("module_binding", 7499), (0, 0, [[(("pmb_name", 1000), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5807)], (0)), 100000000, 0, -5806)], (0)), 100000000, 0, -5805), (("astlib/ast_410.ml", 978, 30672, 30678), ("astlib/ast_410.ml", 978, 30672, 30706), 0), 0, Tag1 ("Astlib__Ast_410", 397)); (("pmb_expr", 1001), 0, (Tag3 ((("module_expr", 7493)), 0, (0)), 100000000, 0, -5808), (("astlib/ast_410.ml", 979, 30707, 30713), ("astlib/ast_410.ml", 979, 30707, 30735), 0), 0, Tag1 ("Astlib__Ast_410", 398)); (("pmb_attributes", 1002), 0, (Tag3 ((("attributes", 7436)), 0, (0)), 100000000, 0, -5809), (("astlib/ast_410.ml", 980, 30736, 30742), ("astlib/ast_410.ml", 980, 30736, 30769), 0), 0, Tag1 ("Astlib__Ast_410", 399)); (("pmb_loc", 1003), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5810), (("astlib/ast_410.ml", 981, 30770, 30776), ("astlib/ast_410.ml", 981, 30770, 30796), 0), 0, Tag1 ("Astlib__Ast_410", 400))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -5804)), 0, 0, 0, 0, (("astlib/ast_410.ml", 976, 30600, 30602), ("astlib/ast_410.ml", 982, 30797, 30802), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 113)), 2, 0); Tag1 (("toplevel_phrase", 7500), (0, 0, Tag1 ([(("Ptop_def", 1018), ([(Tag3 ((("structure", 7495)), 0, (0)), 100000000, 0, -5802)]), 0, (("astlib/ast_410.ml", 990, 30937, 30941), ("astlib/ast_410.ml", 990, 30937, 30964), 0), 0, Tag1 ("Astlib__Ast_410", 405)); (("Ptop_dir", 1019), ([(Tag3 ((("toplevel_directive", 7501)), 0, (0)), 100000000, 0, -5803)]), 0, (("astlib/ast_410.ml", 991, 30965, 30969), ("astlib/ast_410.ml", 991, 30965, 31001), 0), 0, Tag1 ("Astlib__Ast_410", 406))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -5801)), 0, 0, 0, 0, (("astlib/ast_410.ml", 989, 30868, 30870), ("astlib/ast_410.ml", 991, 30965, 31001), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 401)), 1, 0); Tag1 (("toplevel_directive", 7501), (0, 0, [[(("pdir_name", 1020), 0, (Tag3 (Tag1 ((("Asttypes", 7417)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5797)], (0)), 100000000, 0, -5796), (("astlib/ast_410.ml", 996, 31109, 31115), ("astlib/ast_410.ml", 996, 31109, 31138), 0), 0, Tag1 ("Astlib__Ast_410", 407)); (("pdir_arg", 1021), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("directive_argument", 7502)), 0, (0)), 100000000, 0, -5799)], (0)), 100000000, 0, -5798), (("astlib/ast_410.ml", 997, 31139, 31145), ("astlib/ast_410.ml", 997, 31139, 31182), 0), 0, Tag1 ("Astlib__Ast_410", 408)); (("pdir_loc", 1022), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5800), (("astlib/ast_410.ml", 998, 31183, 31189), ("astlib/ast_410.ml", 998, 31183, 31211), 0), 0, Tag1 ("Astlib__Ast_410", 409))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "toplevel_directive"), 0, (0)), 100000000, 0, -5795)), 0, 0, 0, 0, (("astlib/ast_410.ml", 994, 31029, 31031), ("astlib/ast_410.ml", 999, 31212, 31217), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 402)), 2, 0); Tag1 (("directive_argument", 7502), (0, 0, [[(("pdira_desc", 1023), 0, (Tag3 ((("directive_argument_desc", 7503)), 0, (0)), 100000000, 0, -5793), (("astlib/ast_410.ml", 1003, 31299, 31305), ("astlib/ast_410.ml", 1003, 31299, 31342), 0), 0, Tag1 ("Astlib__Ast_410", 410)); (("pdira_loc", 1024), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -5794), (("astlib/ast_410.ml", 1004, 31343, 31349), ("astlib/ast_410.ml", 1004, 31343, 31372), 0), 0, Tag1 ("Astlib__Ast_410", 411))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -5792)), 0, 0, 0, 0, (("astlib/ast_410.ml", 1001, 31219, 31221), ("astlib/ast_410.ml", 1005, 31373, 31378), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 403)), 2, 0); Tag1 (("directive_argument_desc", 7503), (0, 0, Tag1 ([(("Pdir_string", 1025), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5786)]), 0, (("astlib/ast_410.ml", 1008, 31464, 31468), ("astlib/ast_410.ml", 1008, 31464, 31491), 0), 0, Tag1 ("Astlib__Ast_410", 412)); (("Pdir_int", 1026), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5787); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -5789)], (0)), 100000000, 0, -5788)]), 0, (("astlib/ast_410.ml", 1009, 31492, 31496), ("astlib/ast_410.ml", 1009, 31492, 31530), 0), 0, Tag1 ("Astlib__Ast_410", 413)); (("Pdir_ident", 1027), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -5790)]), 0, (("astlib/ast_410.ml", 1010, 31531, 31535), ("astlib/ast_410.ml", 1010, 31531, 31562), 0), 0, Tag1 ("Astlib__Ast_410", 414)); (("Pdir_bool", 1028), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -5791)]), 0, (("astlib/ast_410.ml", 1011, 31563, 31567), ("astlib/ast_410.ml", 1011, 31563, 31586), 0), 0, Tag1 ("Astlib__Ast_410", 415))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_410")), "Parsetree"), "directive_argument_desc"), 0, (0)), 100000000, 0, -5785)), 0, 0, 0, 0, (("astlib/ast_410.ml", 1007, 31380, 31382), ("astlib/ast_410.ml", 1011, 31563, 31586), 0), 0, 0, 0, Tag1 ("Astlib__Ast_410", 404)), 2, 0)]), 0, (("astlib/ast_410.ml", 64, 2699, 2699), ("astlib/ast_410.ml", 1013, 31588, 31591), 0), Tag1 ("Astlib__Ast_410", 416)), 0, 0); Tag3 (("Config", 7419), 0, (Tag1 ([(("ast_impl_magic_number", 7504), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6436), 0, (("astlib/ast_410.ml", 1016, 31616, 31622), ("astlib/ast_410.ml", 1016, 31616, 31643), 0), 0, Tag1 ("Astlib__Ast_410", 417)), 0); (("ast_intf_magic_number", 7505), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6435), 0, (("astlib/ast_410.ml", 1017, 31661, 31667), ("astlib/ast_410.ml", 1017, 31661, 31688), 0), 0, Tag1 ("Astlib__Ast_410", 418)), 0)]), 0, (("astlib/ast_410.ml", 1015, 31593, 31593), ("astlib/ast_410.ml", 1018, 31706, 31709), 0), Tag1 ("Astlib__Ast_410", 419)), 0, 0)]), 0, (("astlib/astlib.ml", 33, 1563, 1563), ("astlib/astlib.ml", 33, 1563, 1587), 0), Tag1 ("Astlib", 8)), 0, 0); (("version", 7412), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -5759), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7413), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5758), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7414), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -5739), 0), 100000000, 0, -5738), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -5755), 0), 100000000, 0, -5754), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -5757), 0), 100000000, 0, -5756), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -5749), 0), 100000000, 0, -5748), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -5721), 0), 100000000, 0, -5720), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -5735), 0), 100000000, 0, -5734), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -5725), 0), 100000000, 0, -5724), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -5747), 0), 100000000, 0, -5746), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -5733), 0), 100000000, 0, -5732), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -5731), 0), 100000000, 0, -5730), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -5729), 0), 100000000, 0, -5728), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -5727), 0), 100000000, 0, -5726), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -5743), 0), 100000000, 0, -5742), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -5751), 0), 100000000, 0, -5750), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -5745), 0), 100000000, 0, -5744), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -5723), 0), 100000000, 0, -5722), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -5737), 0), 100000000, 0, -5736), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -5753), 0), 100000000, 0, -5752), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7411)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -5741), 0), 100000000, 0, -5740), (0, 100000000, 0, -5719)), 100000000, 0, 840)), 100000000, 0, 841)), 100000000, 0, 842)), 100000000, 0, 843)), 100000000, 0, 844)), 100000000, 0, 845)), 100000000, 0, 846)), 100000000, 0, 847)), 100000000, 0, 848)), 100000000, 0, 849)), 100000000, 0, 850)), 100000000, 0, 851)), 100000000, 0, 852)), 100000000, 0, 853)), 100000000, 0, 854)), 100000000, 0, 855)), 100000000, 0, 856)), 100000000, 0, 857)), 100000000, 0, -5700), (0)), 100000000, 0, -5699)], (0)), 100000000, 0, -5698)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7415), ((("witnesses", 6673)), [((("_")), 100000000, 0, -5697)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7414)), 0, (0)), 100000000, 0, -5696)], (0)), 100000000, 0, -5695)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7416), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7414)), 0, (0)), 100000000, 0, -5694)], (0)), 100000000, 0, -5693), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 153, 5676, 5676), ("ast/versions.mli", 153, 5676, 5741), 0), Tag1 ("Ppxlib_ast__Versions", 42)), 0, 0); Tag3 (("OCaml_411", 6685), 0, (Tag1 ([Tag3 (("Ast", 7506), 0, (Tag1 ([Tag3 (("Asttypes", 7512), 0, (Tag1 ([Tag1 (("constant", 7515), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6520)]), 0, (("astlib/ast_411.ml", 22, 1494, 1500), ("astlib/ast_411.ml", 22, 1494, 1516), 0), 0, Tag1 ("Astlib__Ast_411", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -6521)]), 0, (("astlib/ast_411.ml", 23, 1517, 1521), ("astlib/ast_411.ml", 23, 1517, 1541), 0), 0, Tag1 ("Astlib__Ast_411", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6522); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6523); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6525)], (0)), 100000000, 0, -6524)]), 0, (("astlib/ast_411.ml", 24, 1542, 1546), ("astlib/ast_411.ml", 24, 1542, 1599), 0), 0, Tag1 ("Astlib__Ast_411", 3)); (("Const_float", 333), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6526)]), 0, (("astlib/ast_411.ml", 25, 1600, 1604), ("astlib/ast_411.ml", 25, 1600, 1627), 0), 0, Tag1 ("Astlib__Ast_411", 4)); (("Const_int32", 334), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -6527)]), 0, (("astlib/ast_411.ml", 26, 1628, 1632), ("astlib/ast_411.ml", 26, 1628, 1654), 0), 0, Tag1 ("Astlib__Ast_411", 5)); (("Const_int64", 335), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -6528)]), 0, (("astlib/ast_411.ml", 27, 1655, 1659), ("astlib/ast_411.ml", 27, 1655, 1681), 0), 0, Tag1 ("Astlib__Ast_411", 6)); (("Const_nativeint", 336), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -6529)]), 0, (("astlib/ast_411.ml", 28, 1682, 1686), ("astlib/ast_411.ml", 28, 1682, 1716), 0), 0, Tag1 ("Astlib__Ast_411", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -6519)), 0, 0, 0, 0, (("astlib/ast_411.ml", 21, 1440, 1442), ("astlib/ast_411.ml", 28, 1682, 1716), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 0)), 1, 0); Tag1 (("rec_flag", 7516), (0, 0, Tag1 ([(("Nonrecursive", 543), (0), 0, (("astlib/ast_411.ml", 30, 1718, 1772), ("astlib/ast_411.ml", 30, 1718, 1784), 0), 0, Tag1 ("Astlib__Ast_411", 9)); (("Recursive", 544), (0), 0, (("astlib/ast_411.ml", 30, 1718, 1785), ("astlib/ast_411.ml", 30, 1718, 1796), 0), 0, Tag1 ("Astlib__Ast_411", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -6518)), 0, 0, 0, 0, (("astlib/ast_411.ml", 30, 1718, 1720), ("astlib/ast_411.ml", 30, 1718, 1796), 0), 0, 1, 0, Tag1 ("Astlib__Ast_411", 8)), 1, 0); Tag1 (("direction_flag", 7517), (0, 0, Tag1 ([(("Upto", 546), (0), 0, (("astlib/ast_411.ml", 32, 1798, 1864), ("astlib/ast_411.ml", 32, 1798, 1868), 0), 0, Tag1 ("Astlib__Ast_411", 12)); (("Downto", 547), (0), 0, (("astlib/ast_411.ml", 32, 1798, 1869), ("astlib/ast_411.ml", 32, 1798, 1877), 0), 0, Tag1 ("Astlib__Ast_411", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -6517)), 0, 0, 0, 0, (("astlib/ast_411.ml", 32, 1798, 1800), ("astlib/ast_411.ml", 32, 1798, 1877), 0), 0, 1, 0, Tag1 ("Astlib__Ast_411", 11)), 1, 0); Tag1 (("private_flag", 7518), (0, 0, Tag1 ([(("Private", 549), (0), 0, (("astlib/ast_411.ml", 35, 1933, 1995), ("astlib/ast_411.ml", 35, 1933, 2002), 0), 0, Tag1 ("Astlib__Ast_411", 15)); (("Public", 550), (0), 0, (("astlib/ast_411.ml", 35, 1933, 2003), ("astlib/ast_411.ml", 35, 1933, 2011), 0), 0, Tag1 ("Astlib__Ast_411", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -6516)), 0, 0, 0, 0, (("astlib/ast_411.ml", 35, 1933, 1935), ("astlib/ast_411.ml", 35, 1933, 2011), 0), 0, 1, 0, Tag1 ("Astlib__Ast_411", 14)), 1, 0); Tag1 (("mutable_flag", 7519), (0, 0, Tag1 ([(("Immutable", 552), (0), 0, (("astlib/ast_411.ml", 37, 2013, 2075), ("astlib/ast_411.ml", 37, 2013, 2084), 0), 0, Tag1 ("Astlib__Ast_411", 18)); (("Mutable", 553), (0), 0, (("astlib/ast_411.ml", 37, 2013, 2085), ("astlib/ast_411.ml", 37, 2013, 2094), 0), 0, Tag1 ("Astlib__Ast_411", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -6515)), 0, 0, 0, 0, (("astlib/ast_411.ml", 37, 2013, 2015), ("astlib/ast_411.ml", 37, 2013, 2094), 0), 0, 1, 0, Tag1 ("Astlib__Ast_411", 17)), 1, 0); Tag1 (("virtual_flag", 7520), (0, 0, Tag1 ([(("Virtual", 555), (0), 0, (("astlib/ast_411.ml", 39, 2096, 2158), ("astlib/ast_411.ml", 39, 2096, 2165), 0), 0, Tag1 ("Astlib__Ast_411", 21)); (("Concrete", 556), (0), 0, (("astlib/ast_411.ml", 39, 2096, 2166), ("astlib/ast_411.ml", 39, 2096, 2176), 0), 0, Tag1 ("Astlib__Ast_411", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -6514)), 0, 0, 0, 0, (("astlib/ast_411.ml", 39, 2096, 2098), ("astlib/ast_411.ml", 39, 2096, 2176), 0), 0, 1, 0, Tag1 ("Astlib__Ast_411", 20)), 1, 0); Tag1 (("override_flag", 7521), (0, 0, Tag1 ([(("Override", 558), (0), 0, (("astlib/ast_411.ml", 41, 2178, 2242), ("astlib/ast_411.ml", 41, 2178, 2250), 0), 0, Tag1 ("Astlib__Ast_411", 24)); (("Fresh", 559), (0), 0, (("astlib/ast_411.ml", 41, 2178, 2251), ("astlib/ast_411.ml", 41, 2178, 2258), 0), 0, Tag1 ("Astlib__Ast_411", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -6513)), 0, 0, 0, 0, (("astlib/ast_411.ml", 41, 2178, 2180), ("astlib/ast_411.ml", 41, 2178, 2258), 0), 0, 1, 0, Tag1 ("Astlib__Ast_411", 23)), 1, 0); Tag1 (("closed_flag", 7522), (0, 0, Tag1 ([(("Closed", 561), (0), 0, (("astlib/ast_411.ml", 43, 2260, 2320), ("astlib/ast_411.ml", 43, 2260, 2326), 0), 0, Tag1 ("Astlib__Ast_411", 27)); (("Open", 562), (0), 0, (("astlib/ast_411.ml", 43, 2260, 2327), ("astlib/ast_411.ml", 43, 2260, 2333), 0), 0, Tag1 ("Astlib__Ast_411", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -6512)), 0, 0, 0, 0, (("astlib/ast_411.ml", 43, 2260, 2262), ("astlib/ast_411.ml", 43, 2260, 2333), 0), 0, 1, 0, Tag1 ("Astlib__Ast_411", 26)), 1, 0); Tag1 (("label", 7523), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6511)), 0, 0, 0, 0, (("astlib/ast_411.ml", 45, 2335, 2337), ("astlib/ast_411.ml", 45, 2335, 2356), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 29)), 1, 0); Tag1 (("arg_label", 7524), (0, 0, Tag1 ([(("Nolabel", 565), (0), 0, (("astlib/ast_411.ml", 48, 2414, 2420), ("astlib/ast_411.ml", 48, 2414, 2427), 0), 0, Tag1 ("Astlib__Ast_411", 31)); (("Labelled", 566), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6509)]), 0, (("astlib/ast_411.ml", 49, 2428, 2432), ("astlib/ast_411.ml", 49, 2428, 2452), 0), 0, Tag1 ("Astlib__Ast_411", 32)); (("Optional", 567), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6510)]), 0, (("astlib/ast_411.ml", 50, 2475, 2479), ("astlib/ast_411.ml", 50, 2475, 2499), 0), 0, Tag1 ("Astlib__Ast_411", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -6508)), 0, 0, 0, 0, (("astlib/ast_411.ml", 47, 2358, 2360), ("astlib/ast_411.ml", 50, 2475, 2499), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 30)), 1, 0); Tag1 (("loc", 7525), ([((("a")), 100000000, 0, -6506)], 1, [[(("txt", 569), 0, ((("a")), 100000000, 0, -6506), (("astlib/ast_411.ml", 53, 2559, 2563), ("astlib/ast_411.ml", 53, 2559, 2572), 0), 0, Tag1 ("Astlib__Ast_411", 35)); (("loc", 570), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6507), (("astlib/ast_411.ml", 54, 2573, 2577), ("astlib/ast_411.ml", 54, 2573, 2594), 0), 0, Tag1 ("Astlib__Ast_411", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -6506)], (0)), 100000000, 0, -6505)), [25], [0], 0, 0, (("astlib/ast_411.ml", 52, 2523, 2525), ("astlib/ast_411.ml", 55, 2595, 2598), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 34)), 1, 0); Tag1 (("variance", 7526), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_411.ml", 59, 2655, 2659), ("astlib/ast_411.ml", 59, 2655, 2670), 0), 0, Tag1 ("Astlib__Ast_411", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_411.ml", 60, 2671, 2675), ("astlib/ast_411.ml", 60, 2671, 2690), 0), 0, Tag1 ("Astlib__Ast_411", 39)); (("Invariant", 640), (0), 0, (("astlib/ast_411.ml", 61, 2691, 2695), ("astlib/ast_411.ml", 61, 2691, 2706), 0), 0, Tag1 ("Astlib__Ast_411", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -6504)), 0, 0, 0, 0, (("astlib/ast_411.ml", 58, 2601, 2603), ("astlib/ast_411.ml", 61, 2691, 2706), 0), 0, 1, 0, Tag1 ("Astlib__Ast_411", 37)), 1, 0)]), 0, (("astlib/ast_411.ml", 20, 1415, 1415), ("astlib/ast_411.ml", 62, 2707, 2710), 0), Tag1 ("Astlib__Ast_411", 41)), 0, 0); Tag3 (("Parsetree", 7513), 0, (Tag1 ([Tag1 (("constant", 7527), (0, 0, Tag1 ([(("Pconst_integer", 643), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7170); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7172)], (0)), 100000000, 0, -7171)]), 0, (("astlib/ast_411.ml", 68, 2810, 2816), ("astlib/ast_411.ml", 68, 2810, 2854), 0), 0, Tag1 ("Astlib__Ast_411", 43)); (("Pconst_char", 644), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7173)]), 0, (("astlib/ast_411.ml", 74, 3008, 3012), ("astlib/ast_411.ml", 74, 3008, 3033), 0), 0, Tag1 ("Astlib__Ast_411", 44)); (("Pconst_string", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7174); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7175); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7177)], (0)), 100000000, 0, -7176)]), 0, (("astlib/ast_411.ml", 76, 3048, 3052), ("astlib/ast_411.ml", 76, 3048, 3106), 0), 0, Tag1 ("Astlib__Ast_411", 45)); (("Pconst_float", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7178); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7180)], (0)), 100000000, 0, -7179)]), 0, (("astlib/ast_411.ml", 82, 3245, 3249), ("astlib/ast_411.ml", 82, 3245, 3287), 0), 0, Tag1 ("Astlib__Ast_411", 46))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -7169)), 0, 0, 0, 0, (("astlib/ast_411.ml", 67, 2755, 2757), ("astlib/ast_411.ml", 82, 3245, 3287), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 42)), 1, 0); Tag1 (("location_stack", 7528), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7168)], (0)), 100000000, 0, -7167)), 0, 0, 0, 0, (("astlib/ast_411.ml", 89, 3423, 3425), ("astlib/ast_411.ml", 89, 3423, 3462), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 47)), 1, 0); Tag1 (("attribute", 7529), (0, 0, [[(("attr_name", 714), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7164)], (0)), 100000000, 0, -7163), (("astlib/ast_411.ml", 94, 3554, 3558), ("astlib/ast_411.ml", 94, 3554, 3581), 0), 0, Tag1 ("Astlib__Ast_411", 114)); (("attr_payload", 715), 0, (Tag3 ((("payload", 7532)), 0, (0)), 100000000, 0, -7165), (("astlib/ast_411.ml", 95, 3582, 3586), ("astlib/ast_411.ml", 95, 3582, 3609), 0), 0, Tag1 ("Astlib__Ast_411", 115)); (("attr_loc", 716), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7166), (("astlib/ast_411.ml", 96, 3610, 3614), ("astlib/ast_411.ml", 96, 3610, 3636), 0), 0, Tag1 ("Astlib__Ast_411", 116))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "attribute"), 0, (0)), 100000000, 0, -7162)), 0, 0, 0, 0, (("astlib/ast_411.ml", 93, 3495, 3497), ("astlib/ast_411.ml", 97, 3637, 3640), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 48)), 1, 0); Tag1 (("extension", 7530), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7160)], (0)), 100000000, 0, -7159); (Tag3 ((("payload", 7532)), 0, (0)), 100000000, 0, -7161)]), 100000000, 0, -7158)), 0, 0, 0, 0, (("astlib/ast_411.ml", 105, 3780, 3782), ("astlib/ast_411.ml", 105, 3780, 3818), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 49)), 2, 0); Tag1 (("attributes", 7531), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 7529)), 0, (0)), 100000000, 0, -7157)], (0)), 100000000, 0, -7156)), 0, 0, 0, 0, (("astlib/ast_411.ml", 112, 3919, 3921), ("astlib/ast_411.ml", 112, 3919, 3952), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 50)), 2, 0); Tag1 (("payload", 7532), (0, 0, Tag1 ([(("PStr", 717), ([(Tag3 ((("structure", 7590)), 0, (0)), 100000000, 0, -7150)]), 0, (("astlib/ast_411.ml", 115, 4006, 4010), ("astlib/ast_411.ml", 115, 4006, 4029), 0), 0, Tag1 ("Astlib__Ast_411", 117)); (("PSig", 718), ([(Tag3 ((("signature", 7575)), 0, (0)), 100000000, 0, -7151)]), 0, (("astlib/ast_411.ml", 116, 4030, 4034), ("astlib/ast_411.ml", 116, 4030, 4053), 0), 0, Tag1 ("Astlib__Ast_411", 118)); (("PTyp", 719), ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7152)]), 0, (("astlib/ast_411.ml", 117, 4066, 4070), ("astlib/ast_411.ml", 117, 4066, 4089), 0), 0, Tag1 ("Astlib__Ast_411", 119)); (("PPat", 720), ([(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7153); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -7155)], (0)), 100000000, 0, -7154)]), 0, (("astlib/ast_411.ml", 118, 4101, 4105), ("astlib/ast_411.ml", 118, 4101, 4142), 0), 0, Tag1 ("Astlib__Ast_411", 120))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -7149)), 0, 0, 0, 0, (("astlib/ast_411.ml", 114, 3954, 3956), ("astlib/ast_411.ml", 118, 4101, 4142), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 51)), 2, 0); Tag1 (("core_type", 7533), (0, 0, [[(("ptyp_desc", 721), 0, (Tag3 ((("core_type_desc", 7534)), 0, (0)), 100000000, 0, -7145), (("astlib/ast_411.ml", 126, 4287, 4293), ("astlib/ast_411.ml", 126, 4287, 4319), 0), 0, Tag1 ("Astlib__Ast_411", 121)); (("ptyp_loc", 722), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7146), (("astlib/ast_411.ml", 127, 4320, 4326), ("astlib/ast_411.ml", 127, 4320, 4347), 0), 0, Tag1 ("Astlib__Ast_411", 122)); (("ptyp_loc_stack", 723), 0, (Tag3 ((("location_stack", 7528)), 0, (0)), 100000000, 0, -7147), (("astlib/ast_411.ml", 128, 4348, 4354), ("astlib/ast_411.ml", 128, 4348, 4385), 0), 0, Tag1 ("Astlib__Ast_411", 123)); (("ptyp_attributes", 724), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -7148), (("astlib/ast_411.ml", 129, 4386, 4392), ("astlib/ast_411.ml", 129, 4386, 4420), 0), 0, Tag1 ("Astlib__Ast_411", 124))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -7144)), 0, 0, 0, 0, (("astlib/ast_411.ml", 124, 4225, 4227), ("astlib/ast_411.ml", 130, 4445, 4450), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 52)), 2, 0); Tag1 (("core_type_desc", 7534), (0, 0, Tag1 ([(("Ptyp_any", 725), (0), 0, (("astlib/ast_411.ml", 133, 4518, 4522), ("astlib/ast_411.ml", 133, 4518, 4532), 0), 0, Tag1 ("Astlib__Ast_411", 125)); (("Ptyp_var", 726), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7113)]), 0, (("astlib/ast_411.ml", 135, 4546, 4550), ("astlib/ast_411.ml", 135, 4546, 4570), 0), 0, Tag1 ("Astlib__Ast_411", 126)); (("Ptyp_arrow", 727), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "arg_label"), 0, (0)), 100000000, 0, -7114); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7115); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7116)]), 0, (("astlib/ast_411.ml", 137, 4584, 4588), ("astlib/ast_411.ml", 137, 4584, 4637), 0), 0, Tag1 ("Astlib__Ast_411", 127)); (("Ptyp_tuple", 728), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7118)], (0)), 100000000, 0, -7117)]), 0, (("astlib/ast_411.ml", 142, 4736, 4740), ("astlib/ast_411.ml", 142, 4736, 4770), 0), 0, Tag1 ("Astlib__Ast_411", 128)); (("Ptyp_constr", 729), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7120)], (0)), 100000000, 0, -7119); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7122)], (0)), 100000000, 0, -7121)]), 0, (("astlib/ast_411.ml", 147, 4825, 4829), ("astlib/ast_411.ml", 147, 4825, 4878), 0), 0, Tag1 ("Astlib__Ast_411", 129)); (("Ptyp_object", 733), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 7538)), 0, (0)), 100000000, 0, -7124)], (0)), 100000000, 0, -7123); (Tag3 (Tag1 ((("Asttypes", 7512)), "closed_flag"), 0, (0)), 100000000, 0, -7125)]), 0, (("astlib/ast_411.ml", 152, 4947, 4951), ("astlib/ast_411.ml", 152, 4947, 4999), 0), 0, Tag1 ("Astlib__Ast_411", 130)); (("Ptyp_class", 734), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7127)], (0)), 100000000, 0, -7126); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7129)], (0)), 100000000, 0, -7128)]), 0, (("astlib/ast_411.ml", 156, 5103, 5107), ("astlib/ast_411.ml", 156, 5103, 5155), 0), 0, Tag1 ("Astlib__Ast_411", 131)); (("Ptyp_alias", 735), ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7130); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7131)]), 0, (("astlib/ast_411.ml", 161, 5227, 5231), ("astlib/ast_411.ml", 161, 5227, 5265), 0), 0, Tag1 ("Astlib__Ast_411", 132)); (("Ptyp_variant", 736), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 7536)), 0, (0)), 100000000, 0, -7133)], (0)), 100000000, 0, -7132); (Tag3 (Tag1 ((("Asttypes", 7512)), "closed_flag"), 0, (0)), 100000000, 0, -7134); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -7137)], (0)), 100000000, 0, -7136)], (0)), 100000000, 0, -7135)]), 0, (("astlib/ast_411.ml", 163, 5284, 5288), ("astlib/ast_411.ml", 163, 5284, 5354), 0), 0, Tag1 ("Astlib__Ast_411", 133)); (("Ptyp_poly", 737), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7140)], (0)), 100000000, 0, -7139)], (0)), 100000000, 0, -7138); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7141)]), 0, (("astlib/ast_411.ml", 169, 5599, 5603), ("astlib/ast_411.ml", 169, 5599, 5645), 0), 0, Tag1 ("Astlib__Ast_411", 134)); (("Ptyp_package", 738), ([(Tag3 ((("package_type", 7535)), 0, (0)), 100000000, 0, -7142)]), 0, (("astlib/ast_411.ml", 189, 6132, 6136), ("astlib/ast_411.ml", 189, 6132, 6166), 0), 0, Tag1 ("Astlib__Ast_411", 135)); (("Ptyp_extension", 739), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -7143)]), 0, (("astlib/ast_411.ml", 191, 6188, 6192), ("astlib/ast_411.ml", 191, 6188, 6221), 0), 0, Tag1 ("Astlib__Ast_411", 136))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -7112)), 0, 0, 0, 0, (("astlib/ast_411.ml", 132, 4452, 4454), ("astlib/ast_411.ml", 191, 6188, 6221), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 53)), 2, 0); Tag1 (("package_type", 7535), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7106)], (0)), 100000000, 0, -7105); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7110)], (0)), 100000000, 0, -7109); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7111)]), 100000000, 0, -7108)], (0)), 100000000, 0, -7107)]), 100000000, 0, -7104)), 0, 0, 0, 0, (("astlib/ast_411.ml", 194, 6239, 6241), ("astlib/ast_411.ml", 194, 6239, 6312), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 54)), 2, 0); Tag1 (("row_field", 7536), (0, 0, [[(("prf_desc", 740), 0, (Tag3 ((("row_field_desc", 7537)), 0, (0)), 100000000, 0, -7101), (("astlib/ast_411.ml", 201, 6467, 6471), ("astlib/ast_411.ml", 201, 6467, 6497), 0), 0, Tag1 ("Astlib__Ast_411", 137)); (("prf_loc", 741), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7102), (("astlib/ast_411.ml", 202, 6498, 6502), ("astlib/ast_411.ml", 202, 6498, 6523), 0), 0, Tag1 ("Astlib__Ast_411", 138)); (("prf_attributes", 742), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -7103), (("astlib/ast_411.ml", 203, 6524, 6528), ("astlib/ast_411.ml", 203, 6524, 6556), 0), 0, Tag1 ("Astlib__Ast_411", 139))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -7100)), 0, 0, 0, 0, (("astlib/ast_411.ml", 200, 6409, 6411), ("astlib/ast_411.ml", 204, 6557, 6560), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 55)), 2, 0); Tag1 (("row_field_desc", 7537), (0, 0, Tag1 ([(("Rtag", 743), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -7095)], (0)), 100000000, 0, -7094); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7096); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7098)], (0)), 100000000, 0, -7097)]), 0, (("astlib/ast_411.ml", 207, 6628, 6632), ("astlib/ast_411.ml", 207, 6628, 6675), 0), 0, Tag1 ("Astlib__Ast_411", 140)); (("Rinherit", 744), ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7099)]), 0, (("astlib/ast_411.ml", 218, 7078, 7082), ("astlib/ast_411.ml", 218, 7078, 7105), 0), 0, Tag1 ("Astlib__Ast_411", 141))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "row_field_desc"), 0, (0)), 100000000, 0, -7093)), 0, 0, 0, 0, (("astlib/ast_411.ml", 206, 6562, 6564), ("astlib/ast_411.ml", 218, 7078, 7105), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 56)), 2, 0); Tag1 (("object_field", 7538), (0, 0, [[(("pof_desc", 745), 0, (Tag3 ((("object_field_desc", 7539)), 0, (0)), 100000000, 0, -7090), (("astlib/ast_411.ml", 222, 7187, 7191), ("astlib/ast_411.ml", 222, 7187, 7220), 0), 0, Tag1 ("Astlib__Ast_411", 142)); (("pof_loc", 746), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7091), (("astlib/ast_411.ml", 223, 7221, 7225), ("astlib/ast_411.ml", 223, 7221, 7246), 0), 0, Tag1 ("Astlib__Ast_411", 143)); (("pof_attributes", 747), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -7092), (("astlib/ast_411.ml", 224, 7247, 7251), ("astlib/ast_411.ml", 224, 7247, 7279), 0), 0, Tag1 ("Astlib__Ast_411", 144))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "object_field"), 0, (0)), 100000000, 0, -7089)), 0, 0, 0, 0, (("astlib/ast_411.ml", 221, 7123, 7125), ("astlib/ast_411.ml", 225, 7280, 7283), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 57)), 2, 0); Tag1 (("object_field_desc", 7539), (0, 0, Tag1 ([(("Otag", 748), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -7086)], (0)), 100000000, 0, -7085); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7087)]), 0, (("astlib/ast_411.ml", 228, 7357, 7361), ("astlib/ast_411.ml", 228, 7357, 7392), 0), 0, Tag1 ("Astlib__Ast_411", 145)); (("Oinherit", 749), ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7088)]), 0, (("astlib/ast_411.ml", 229, 7393, 7397), ("astlib/ast_411.ml", 229, 7393, 7420), 0), 0, Tag1 ("Astlib__Ast_411", 146))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "object_field_desc"), 0, (0)), 100000000, 0, -7084)), 0, 0, 0, 0, (("astlib/ast_411.ml", 227, 7285, 7287), ("astlib/ast_411.ml", 229, 7393, 7420), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 58)), 2, 0); Tag1 (("pattern", 7540), (0, 0, [[(("ppat_desc", 750), 0, (Tag3 ((("pattern_desc", 7541)), 0, (0)), 100000000, 0, -7080), (("astlib/ast_411.ml", 235, 7498, 7504), ("astlib/ast_411.ml", 235, 7498, 7528), 0), 0, Tag1 ("Astlib__Ast_411", 147)); (("ppat_loc", 751), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7081), (("astlib/ast_411.ml", 236, 7529, 7535), ("astlib/ast_411.ml", 236, 7529, 7556), 0), 0, Tag1 ("Astlib__Ast_411", 148)); (("ppat_loc_stack", 752), 0, (Tag3 ((("location_stack", 7528)), 0, (0)), 100000000, 0, -7082), (("astlib/ast_411.ml", 237, 7557, 7563), ("astlib/ast_411.ml", 237, 7557, 7594), 0), 0, Tag1 ("Astlib__Ast_411", 149)); (("ppat_attributes", 753), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -7083), (("astlib/ast_411.ml", 238, 7595, 7601), ("astlib/ast_411.ml", 238, 7595, 7629), 0), 0, Tag1 ("Astlib__Ast_411", 150))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -7079)), 0, 0, 0, 0, (("astlib/ast_411.ml", 233, 7440, 7442), ("astlib/ast_411.ml", 239, 7654, 7659), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 59)), 2, 0); Tag1 (("pattern_desc", 7541), (0, 0, Tag1 ([(("Ppat_any", 754), (0), 0, (("astlib/ast_411.ml", 242, 7723, 7727), ("astlib/ast_411.ml", 242, 7723, 7737), 0), 0, Tag1 ("Astlib__Ast_411", 151)); (("Ppat_var", 755), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7040)], (0)), 100000000, 0, -7039)]), 0, (("astlib/ast_411.ml", 244, 7750, 7754), ("astlib/ast_411.ml", 244, 7750, 7778), 0), 0, Tag1 ("Astlib__Ast_411", 152)); (("Ppat_alias", 756), ([(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7041); (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7043)], (0)), 100000000, 0, -7042)]), 0, (("astlib/ast_411.ml", 246, 7791, 7795), ("astlib/ast_411.ml", 246, 7791, 7831), 0), 0, Tag1 ("Astlib__Ast_411", 153)); (("Ppat_constant", 757), ([(Tag3 ((("constant", 7527)), 0, (0)), 100000000, 0, -7044)]), 0, (("astlib/ast_411.ml", 248, 7850, 7854), ("astlib/ast_411.ml", 248, 7850, 7881), 0), 0, Tag1 ("Astlib__Ast_411", 154)); (("Ppat_interval", 758), ([(Tag3 ((("constant", 7527)), 0, (0)), 100000000, 0, -7045); (Tag3 ((("constant", 7527)), 0, (0)), 100000000, 0, -7046)]), 0, (("astlib/ast_411.ml", 250, 7924, 7928), ("astlib/ast_411.ml", 250, 7924, 7966), 0), 0, Tag1 ("Astlib__Ast_411", 155)); (("Ppat_tuple", 759), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7048)], (0)), 100000000, 0, -7047)]), 0, (("astlib/ast_411.ml", 255, 8088, 8092), ("astlib/ast_411.ml", 255, 8088, 8120), 0), 0, Tag1 ("Astlib__Ast_411", 156)); (("Ppat_construct", 760), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7050)], (0)), 100000000, 0, -7049); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7052)], (0)), 100000000, 0, -7051)]), 0, (("astlib/ast_411.ml", 260, 8175, 8179), ("astlib/ast_411.ml", 260, 8175, 8231), 0), 0, Tag1 ("Astlib__Ast_411", 157)); (("Ppat_variant", 761), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -7053); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7055)], (0)), 100000000, 0, -7054)]), 0, (("astlib/ast_411.ml", 265, 8355, 8359), ("astlib/ast_411.ml", 265, 8355, 8399), 0), 0, Tag1 ("Astlib__Ast_411", 158)); (("Ppat_record", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7059)], (0)), 100000000, 0, -7058); (Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7060)]), 100000000, 0, -7057)], (0)), 100000000, 0, -7056); (Tag3 (Tag1 ((("Asttypes", 7512)), "closed_flag"), 0, (0)), 100000000, 0, -7061)]), 0, (("astlib/ast_411.ml", 269, 8467, 8471), ("astlib/ast_411.ml", 269, 8467, 8534), 0), 0, Tag1 ("Astlib__Ast_411", 159)); (("Ppat_array", 763), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7063)], (0)), 100000000, 0, -7062)]), 0, (("astlib/ast_411.ml", 275, 8663, 8667), ("astlib/ast_411.ml", 275, 8663, 8695), 0), 0, Tag1 ("Astlib__Ast_411", 160)); (("Ppat_or", 764), ([(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7064); (Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7065)]), 0, (("astlib/ast_411.ml", 277, 8724, 8728), ("astlib/ast_411.ml", 277, 8724, 8758), 0), 0, Tag1 ("Astlib__Ast_411", 161)); (("Ppat_constraint", 765), ([(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7066); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7067)]), 0, (("astlib/ast_411.ml", 279, 8777, 8781), ("astlib/ast_411.ml", 279, 8777, 8821), 0), 0, Tag1 ("Astlib__Ast_411", 162)); (("Ppat_type", 766), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7069)], (0)), 100000000, 0, -7068)]), 0, (("astlib/ast_411.ml", 281, 8840, 8844), ("astlib/ast_411.ml", 281, 8840, 8874), 0), 0, Tag1 ("Astlib__Ast_411", 163)); (("Ppat_lazy", 767), ([(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7070)]), 0, (("astlib/ast_411.ml", 283, 8893, 8897), ("astlib/ast_411.ml", 283, 8893, 8919), 0), 0, Tag1 ("Astlib__Ast_411", 164)); (("Ppat_unpack", 768), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7073)], (0)), 100000000, 0, -7072)], (0)), 100000000, 0, -7071)]), 0, (("astlib/ast_411.ml", 285, 8937, 8941), ("astlib/ast_411.ml", 285, 8937, 8975), 0), 0, Tag1 ("Astlib__Ast_411", 165)); (("Ppat_exception", 769), ([(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7074)]), 0, (("astlib/ast_411.ml", 292, 9144, 9148), ("astlib/ast_411.ml", 292, 9144, 9175), 0), 0, Tag1 ("Astlib__Ast_411", 166)); (("Ppat_extension", 770), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -7075)]), 0, (("astlib/ast_411.ml", 294, 9198, 9202), ("astlib/ast_411.ml", 294, 9198, 9231), 0), 0, Tag1 ("Astlib__Ast_411", 167)); (("Ppat_open", 771), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7077)], (0)), 100000000, 0, -7076); (Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -7078)]), 0, (("astlib/ast_411.ml", 296, 9248, 9252), ("astlib/ast_411.ml", 296, 9248, 9292), 0), 0, Tag1 ("Astlib__Ast_411", 168))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -7038)), 0, 0, 0, 0, (("astlib/ast_411.ml", 241, 7661, 7663), ("astlib/ast_411.ml", 296, 9248, 9292), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 60)), 2, 0); Tag1 (("expression", 7542), (0, 0, [[(("pexp_desc", 772), 0, (Tag3 ((("expression_desc", 7543)), 0, (0)), 100000000, 0, -7034), (("astlib/ast_411.ml", 303, 9401, 9407), ("astlib/ast_411.ml", 303, 9401, 9434), 0), 0, Tag1 ("Astlib__Ast_411", 169)); (("pexp_loc", 773), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7035), (("astlib/ast_411.ml", 304, 9435, 9441), ("astlib/ast_411.ml", 304, 9435, 9462), 0), 0, Tag1 ("Astlib__Ast_411", 170)); (("pexp_loc_stack", 774), 0, (Tag3 ((("location_stack", 7528)), 0, (0)), 100000000, 0, -7036), (("astlib/ast_411.ml", 305, 9463, 9469), ("astlib/ast_411.ml", 305, 9463, 9500), 0), 0, Tag1 ("Astlib__Ast_411", 171)); (("pexp_attributes", 775), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -7037), (("astlib/ast_411.ml", 306, 9501, 9507), ("astlib/ast_411.ml", 306, 9501, 9535), 0), 0, Tag1 ("Astlib__Ast_411", 172))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -7033)), 0, 0, 0, 0, (("astlib/ast_411.ml", 301, 9337, 9339), ("astlib/ast_411.ml", 307, 9560, 9565), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 61)), 2, 0); Tag1 (("expression_desc", 7543), (0, 0, Tag1 ([(("Pexp_ident", 776), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6931)], (0)), 100000000, 0, -6930)]), 0, (("astlib/ast_411.ml", 310, 9635, 9639), ("astlib/ast_411.ml", 310, 9635, 9670), 0), 0, Tag1 ("Astlib__Ast_411", 173)); (("Pexp_constant", 777), ([(Tag3 ((("constant", 7527)), 0, (0)), 100000000, 0, -6932)]), 0, (("astlib/ast_411.ml", 314, 9698, 9702), ("astlib/ast_411.ml", 314, 9698, 9729), 0), 0, Tag1 ("Astlib__Ast_411", 174)); (("Pexp_let", 778), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "rec_flag"), 0, (0)), 100000000, 0, -6933); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7593)), 0, (0)), 100000000, 0, -6935)], (0)), 100000000, 0, -6934); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6936)]), 0, (("astlib/ast_411.ml", 316, 9772, 9776), ("astlib/ast_411.ml", 316, 9772, 9832), 0), 0, Tag1 ("Astlib__Ast_411", 175)); (("Pexp_function", 779), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7544)), 0, (0)), 100000000, 0, -6938)], (0)), 100000000, 0, -6937)]), 0, (("astlib/ast_411.ml", 320, 9981, 9985), ("astlib/ast_411.ml", 320, 9981, 10013), 0), 0, Tag1 ("Astlib__Ast_411", 176)); (("Pexp_fun", 780), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "arg_label"), 0, (0)), 100000000, 0, -6939); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6941)], (0)), 100000000, 0, -6940); (Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -6942); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6943)]), 0, (("astlib/ast_411.ml", 322, 10059, 10063), ("astlib/ast_411.ml", 322, 10059, 10129), 0), 0, Tag1 ("Astlib__Ast_411", 177)); (("Pexp_apply", 781), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6944); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "arg_label"), 0, (0)), 100000000, 0, -6947); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6948)]), 100000000, 0, -6946)], (0)), 100000000, 0, -6945)]), 0, (("astlib/ast_411.ml", 333, 10579, 10583), ("astlib/ast_411.ml", 333, 10579, 10641), 0), 0, Tag1 ("Astlib__Ast_411", 178)); (("Pexp_match", 782), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6949); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7544)), 0, (0)), 100000000, 0, -6951)], (0)), 100000000, 0, -6950)]), 0, (("astlib/ast_411.ml", 340, 10794, 10798), ("astlib/ast_411.ml", 340, 10794, 10836), 0), 0, Tag1 ("Astlib__Ast_411", 179)); (("Pexp_try", 783), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6952); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7544)), 0, (0)), 100000000, 0, -6954)], (0)), 100000000, 0, -6953)]), 0, (("astlib/ast_411.ml", 342, 10887, 10891), ("astlib/ast_411.ml", 342, 10887, 10927), 0), 0, Tag1 ("Astlib__Ast_411", 180)); (("Pexp_tuple", 784), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6956)], (0)), 100000000, 0, -6955)]), 0, (("astlib/ast_411.ml", 344, 10976, 10980), ("astlib/ast_411.ml", 344, 10976, 11011), 0), 0, Tag1 ("Astlib__Ast_411", 181)); (("Pexp_construct", 785), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6958)], (0)), 100000000, 0, -6957); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6960)], (0)), 100000000, 0, -6959)]), 0, (("astlib/ast_411.ml", 349, 11066, 11070), ("astlib/ast_411.ml", 349, 11066, 11125), 0), 0, Tag1 ("Astlib__Ast_411", 182)); (("Pexp_variant", 786), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -6961); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6963)], (0)), 100000000, 0, -6962)]), 0, (("astlib/ast_411.ml", 354, 11246, 11250), ("astlib/ast_411.ml", 354, 11246, 11293), 0), 0, Tag1 ("Astlib__Ast_411", 183)); (("Pexp_record", 787), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6967)], (0)), 100000000, 0, -6966); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6968)]), 100000000, 0, -6965)], (0)), 100000000, 0, -6964); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6970)], (0)), 100000000, 0, -6969)]), 0, (("astlib/ast_411.ml", 358, 11361, 11365), ("astlib/ast_411.ml", 358, 11361, 11437), 0), 0, Tag1 ("Astlib__Ast_411", 184)); (("Pexp_field", 788), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6971); (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6973)], (0)), 100000000, 0, -6972)]), 0, (("astlib/ast_411.ml", 364, 11559, 11563), ("astlib/ast_411.ml", 364, 11559, 11607), 0), 0, Tag1 ("Astlib__Ast_411", 185)); (("Pexp_setfield", 789), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6974); (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6976)], (0)), 100000000, 0, -6975); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6977)]), 0, (("astlib/ast_411.ml", 366, 11622, 11626), ("astlib/ast_411.ml", 366, 11622, 11686), 0), 0, Tag1 ("Astlib__Ast_411", 186)); (("Pexp_array", 790), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6979)], (0)), 100000000, 0, -6978)]), 0, (("astlib/ast_411.ml", 368, 11708, 11712), ("astlib/ast_411.ml", 368, 11708, 11743), 0), 0, Tag1 ("Astlib__Ast_411", 187)); (("Pexp_ifthenelse", 791), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6980); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6981); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6983)], (0)), 100000000, 0, -6982)]), 0, (("astlib/ast_411.ml", 370, 11772, 11776), ("astlib/ast_411.ml", 370, 11772, 11840), 0), 0, Tag1 ("Astlib__Ast_411", 188)); (("Pexp_sequence", 792), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6984); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6985)]), 0, (("astlib/ast_411.ml", 372, 11873, 11877), ("astlib/ast_411.ml", 372, 11873, 11919), 0), 0, Tag1 ("Astlib__Ast_411", 189)); (("Pexp_while", 793), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6986); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6987)]), 0, (("astlib/ast_411.ml", 374, 11937, 11941), ("astlib/ast_411.ml", 374, 11937, 11980), 0), 0, Tag1 ("Astlib__Ast_411", 190)); (("Pexp_for", 794), ([(Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -6988); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6989); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6990); (Tag3 (Tag1 ((("Asttypes", 7512)), "direction_flag"), 0, (0)), 100000000, 0, -6991); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6992)]), 0, (("astlib/ast_411.ml", 376, 12011, 12015), ("astlib/ast_411.ml", 377, 12029, 12101), 0), 0, Tag1 ("Astlib__Ast_411", 191)); (("Pexp_constraint", 795), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6993); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6994)]), 0, (("astlib/ast_411.ml", 381, 12219, 12223), ("astlib/ast_411.ml", 381, 12219, 12266), 0), 0, Tag1 ("Astlib__Ast_411", 192)); (("Pexp_coerce", 796), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6995); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6997)], (0)), 100000000, 0, -6996); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6998)]), 0, (("astlib/ast_411.ml", 383, 12285, 12289), ("astlib/ast_411.ml", 383, 12285, 12347), 0), 0, Tag1 ("Astlib__Ast_411", 193)); (("Pexp_send", 797), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6999); (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -7001)], (0)), 100000000, 0, -7000)]), 0, (("astlib/ast_411.ml", 387, 12424, 12428), ("astlib/ast_411.ml", 387, 12424, 12465), 0), 0, Tag1 ("Astlib__Ast_411", 194)); (("Pexp_new", 798), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7003)], (0)), 100000000, 0, -7002)]), 0, (("astlib/ast_411.ml", 389, 12483, 12487), ("astlib/ast_411.ml", 389, 12483, 12516), 0), 0, Tag1 ("Astlib__Ast_411", 195)); (("Pexp_setinstvar", 799), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -7005)], (0)), 100000000, 0, -7004); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -7006)]), 0, (("astlib/ast_411.ml", 391, 12535, 12539), ("astlib/ast_411.ml", 391, 12535, 12582), 0), 0, Tag1 ("Astlib__Ast_411", 196)); (("Pexp_override", 800), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -7010)], (0)), 100000000, 0, -7009); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -7011)]), 100000000, 0, -7008)], (0)), 100000000, 0, -7007)]), 0, (("astlib/ast_411.ml", 393, 12600, 12604), ("astlib/ast_411.ml", 393, 12600, 12652), 0), 0, Tag1 ("Astlib__Ast_411", 197)); (("Pexp_letmodule", 801), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7014)], (0)), 100000000, 0, -7013)], (0)), 100000000, 0, -7012); (Tag3 ((("module_expr", 7588)), 0, (0)), 100000000, 0, -7015); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -7016)]), 0, (("astlib/ast_411.ml", 395, 12691, 12695), ("astlib/ast_411.ml", 395, 12691, 12759), 0), 0, Tag1 ("Astlib__Ast_411", 198)); (("Pexp_letexception", 802), ([(Tag3 ((("extension_constructor", 7554)), 0, (0)), 100000000, 0, -7017); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -7018)]), 0, (("astlib/ast_411.ml", 397, 12793, 12797), ("astlib/ast_411.ml", 397, 12793, 12854), 0), 0, Tag1 ("Astlib__Ast_411", 199)); (("Pexp_assert", 803), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -7019)]), 0, (("astlib/ast_411.ml", 399, 12886, 12890), ("astlib/ast_411.ml", 399, 12886, 12917), 0), 0, Tag1 ("Astlib__Ast_411", 200)); (("Pexp_lazy", 804), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -7020)]), 0, (("astlib/ast_411.ml", 403, 13021, 13025), ("astlib/ast_411.ml", 403, 13021, 13050), 0), 0, Tag1 ("Astlib__Ast_411", 201)); (("Pexp_poly", 805), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -7021); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -7023)], (0)), 100000000, 0, -7022)]), 0, (("astlib/ast_411.ml", 405, 13068, 13072), ("astlib/ast_411.ml", 405, 13068, 13116), 0), 0, Tag1 ("Astlib__Ast_411", 202)); (("Pexp_object", 806), ([(Tag3 ((("class_structure", 7567)), 0, (0)), 100000000, 0, -7024)]), 0, (("astlib/ast_411.ml", 410, 13246, 13250), ("astlib/ast_411.ml", 410, 13246, 13282), 0), 0, Tag1 ("Astlib__Ast_411", 203)); (("Pexp_newtype", 807), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7026)], (0)), 100000000, 0, -7025); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -7027)]), 0, (("astlib/ast_411.ml", 412, 13308, 13312), ("astlib/ast_411.ml", 412, 13308, 13353), 0), 0, Tag1 ("Astlib__Ast_411", 204)); (("Pexp_pack", 808), ([(Tag3 ((("module_expr", 7588)), 0, (0)), 100000000, 0, -7028)]), 0, (("astlib/ast_411.ml", 414, 13382, 13386), ("astlib/ast_411.ml", 414, 13382, 13412), 0), 0, Tag1 ("Astlib__Ast_411", 205)); (("Pexp_open", 809), ([(Tag3 ((("open_declaration", 7583)), 0, (0)), 100000000, 0, -7029); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -7030)]), 0, (("astlib/ast_411.ml", 419, 13527, 13531), ("astlib/ast_411.ml", 419, 13527, 13575), 0), 0, Tag1 ("Astlib__Ast_411", 206)); (("Pexp_letop", 810), ([(Tag3 ((("letop", 7545)), 0, (0)), 100000000, 0, -7031)]), 0, (("astlib/ast_411.ml", 423, 13639, 13643), ("astlib/ast_411.ml", 423, 13639, 13664), 0), 0, Tag1 ("Astlib__Ast_411", 207)); (("Pexp_extension", 811), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -7032)]), 0, (("astlib/ast_411.ml", 426, 13725, 13729), ("astlib/ast_411.ml", 426, 13725, 13758), 0), 0, Tag1 ("Astlib__Ast_411", 208)); (("Pexp_unreachable", 812), (0), 0, (("astlib/ast_411.ml", 428, 13775, 13779), ("astlib/ast_411.ml", 428, 13775, 13797), 0), 0, Tag1 ("Astlib__Ast_411", 209))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -6929)), 0, 0, 0, 0, (("astlib/ast_411.ml", 309, 9567, 9569), ("astlib/ast_411.ml", 428, 13775, 13797), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 62)), 2, 0); Tag1 (("case", 7544), (0, 0, [[(("pc_lhs", 813), 0, (Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -6925), (("astlib/ast_411.ml", 433, 13900, 13906), ("astlib/ast_411.ml", 433, 13900, 13922), 0), 0, Tag1 ("Astlib__Ast_411", 210)); (("pc_guard", 814), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6927)], (0)), 100000000, 0, -6926), (("astlib/ast_411.ml", 434, 13923, 13929), ("astlib/ast_411.ml", 434, 13923, 13957), 0), 0, Tag1 ("Astlib__Ast_411", 211)); (("pc_rhs", 815), 0, (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6928), (("astlib/ast_411.ml", 435, 13958, 13964), ("astlib/ast_411.ml", 435, 13958, 13983), 0), 0, Tag1 ("Astlib__Ast_411", 212))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -6924)), 0, 0, 0, 0, (("astlib/ast_411.ml", 431, 13811, 13813), ("astlib/ast_411.ml", 436, 13984, 13989), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 63)), 2, 0); Tag1 (("letop", 7545), (0, 0, [[(("let_", 816), 0, (Tag3 ((("binding_op", 7546)), 0, (0)), 100000000, 0, -6920), (("astlib/ast_411.ml", 440, 14045, 14051), ("astlib/ast_411.ml", 440, 14045, 14069), 0), 0, Tag1 ("Astlib__Ast_411", 213)); (("ands", 817), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binding_op", 7546)), 0, (0)), 100000000, 0, -6922)], (0)), 100000000, 0, -6921), (("astlib/ast_411.ml", 441, 14070, 14076), ("astlib/ast_411.ml", 441, 14070, 14099), 0), 0, Tag1 ("Astlib__Ast_411", 214)); (("body", 818), 0, (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6923), (("astlib/ast_411.ml", 442, 14100, 14106), ("astlib/ast_411.ml", 442, 14100, 14124), 0), 0, Tag1 ("Astlib__Ast_411", 215))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "letop"), 0, (0)), 100000000, 0, -6919)), 0, 0, 0, 0, (("astlib/ast_411.ml", 438, 13991, 13993), ("astlib/ast_411.ml", 443, 14125, 14130), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 64)), 2, 0); Tag1 (("binding_op", 7546), (0, 0, [[(("pbop_op", 819), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6915)], (0)), 100000000, 0, -6914), (("astlib/ast_411.ml", 447, 14196, 14202), ("astlib/ast_411.ml", 447, 14196, 14223), 0), 0, Tag1 ("Astlib__Ast_411", 216)); (("pbop_pat", 820), 0, (Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -6916), (("astlib/ast_411.ml", 448, 14224, 14230), ("astlib/ast_411.ml", 448, 14224, 14249), 0), 0, Tag1 ("Astlib__Ast_411", 217)); (("pbop_exp", 821), 0, (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6917), (("astlib/ast_411.ml", 449, 14250, 14256), ("astlib/ast_411.ml", 449, 14250, 14278), 0), 0, Tag1 ("Astlib__Ast_411", 218)); (("pbop_loc", 822), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6918), (("astlib/ast_411.ml", 450, 14279, 14285), ("astlib/ast_411.ml", 450, 14279, 14307), 0), 0, Tag1 ("Astlib__Ast_411", 219))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "binding_op"), 0, (0)), 100000000, 0, -6913)), 0, 0, 0, 0, (("astlib/ast_411.ml", 445, 14132, 14134), ("astlib/ast_411.ml", 451, 14308, 14313), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 65)), 2, 0); Tag1 (("value_description", 7547), (0, 0, [[(("pval_name", 823), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6907)], (0)), 100000000, 0, -6906), (("astlib/ast_411.ml", 457, 14421, 14427), ("astlib/ast_411.ml", 457, 14421, 14449), 0), 0, Tag1 ("Astlib__Ast_411", 220)); (("pval_type", 824), 0, (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6908), (("astlib/ast_411.ml", 458, 14450, 14456), ("astlib/ast_411.ml", 458, 14450, 14477), 0), 0, Tag1 ("Astlib__Ast_411", 221)); (("pval_prim", 825), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6910)], (0)), 100000000, 0, -6909), (("astlib/ast_411.ml", 459, 14478, 14484), ("astlib/ast_411.ml", 459, 14478, 14507), 0), 0, Tag1 ("Astlib__Ast_411", 222)); (("pval_attributes", 826), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6911), (("astlib/ast_411.ml", 460, 14508, 14514), ("astlib/ast_411.ml", 460, 14508, 14542), 0), 0, Tag1 ("Astlib__Ast_411", 223)); (("pval_loc", 827), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6912), (("astlib/ast_411.ml", 461, 14570, 14576), ("astlib/ast_411.ml", 461, 14570, 14597), 0), 0, Tag1 ("Astlib__Ast_411", 224))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -6905)), 0, 0, 0, 0, (("astlib/ast_411.ml", 455, 14343, 14345), ("astlib/ast_411.ml", 462, 14598, 14603), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 66)), 2, 0); Tag1 (("type_declaration", 7548), (0, 0, [[(("ptype_name", 828), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6889)], (0)), 100000000, 0, -6888), (("astlib/ast_411.ml", 473, 14827, 14833), ("astlib/ast_411.ml", 473, 14827, 14856), 0), 0, Tag1 ("Astlib__Ast_411", 225)); (("ptype_params", 829), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6892); (Tag3 (Tag1 ((("Asttypes", 7512)), "variance"), 0, (0)), 100000000, 0, -6893)]), 100000000, 0, -6891)], (0)), 100000000, 0, -6890), (("astlib/ast_411.ml", 474, 14857, 14863), ("astlib/ast_411.ml", 474, 14857, 14905), 0), 0, Tag1 ("Astlib__Ast_411", 226)); (("ptype_cstrs", 830), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6896); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6897); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6898)]), 100000000, 0, -6895)], (0)), 100000000, 0, -6894), (("astlib/ast_411.ml", 476, 14952, 14958), ("astlib/ast_411.ml", 476, 14952, 15013), 0), 0, Tag1 ("Astlib__Ast_411", 227)); (("ptype_kind", 831), 0, (Tag3 ((("type_kind", 7549)), 0, (0)), 100000000, 0, -6899), (("astlib/ast_411.ml", 478, 15071, 15077), ("astlib/ast_411.ml", 478, 15071, 15099), 0), 0, Tag1 ("Astlib__Ast_411", 228)); (("ptype_private", 832), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "private_flag"), 0, (0)), 100000000, 0, -6900), (("astlib/ast_411.ml", 479, 15100, 15106), ("astlib/ast_411.ml", 479, 15100, 15134), 0), 0, Tag1 ("Astlib__Ast_411", 229)); (("ptype_manifest", 833), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6902)], (0)), 100000000, 0, -6901), (("astlib/ast_411.ml", 480, 15157, 15163), ("astlib/ast_411.ml", 480, 15157, 15196), 0), 0, Tag1 ("Astlib__Ast_411", 230)); (("ptype_attributes", 834), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6903), (("astlib/ast_411.ml", 481, 15208, 15214), ("astlib/ast_411.ml", 481, 15208, 15243), 0), 0, Tag1 ("Astlib__Ast_411", 231)); (("ptype_loc", 835), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6904), (("astlib/ast_411.ml", 482, 15272, 15278), ("astlib/ast_411.ml", 482, 15272, 15300), 0), 0, Tag1 ("Astlib__Ast_411", 232))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -6887)), 0, 0, 0, 0, (("astlib/ast_411.ml", 471, 14751, 14753), ("astlib/ast_411.ml", 483, 15301, 15306), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 67)), 2, 0); Tag1 (("type_kind", 7549), (0, 0, Tag1 ([(("Ptype_abstract", 836), (0), 0, (("astlib/ast_411.ml", 496, 15742, 15746), ("astlib/ast_411.ml", 496, 15742, 15762), 0), 0, Tag1 ("Astlib__Ast_411", 233)); (("Ptype_variant", 837), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7551)), 0, (0)), 100000000, 0, -6884)], (0)), 100000000, 0, -6883)]), 0, (("astlib/ast_411.ml", 497, 15763, 15767), ("astlib/ast_411.ml", 497, 15763, 15814), 0), 0, Tag1 ("Astlib__Ast_411", 234)); (("Ptype_record", 838), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7550)), 0, (0)), 100000000, 0, -6886)], (0)), 100000000, 0, -6885)]), 0, (("astlib/ast_411.ml", 498, 15815, 15819), ("astlib/ast_411.ml", 498, 15815, 15859), 0), 0, Tag1 ("Astlib__Ast_411", 235)); (("Ptype_open", 839), (0), 0, (("astlib/ast_411.ml", 500, 15896, 15900), ("astlib/ast_411.ml", 500, 15896, 15912), 0), 0, Tag1 ("Astlib__Ast_411", 236))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -6882)), 0, 0, 0, 0, (("astlib/ast_411.ml", 495, 15686, 15688), ("astlib/ast_411.ml", 500, 15896, 15912), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 68)), 2, 0); Tag1 (("label_declaration", 7550), (0, 0, [[(("pld_name", 840), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6877)], (0)), 100000000, 0, -6876), (("astlib/ast_411.ml", 504, 15992, 15998), ("astlib/ast_411.ml", 504, 15992, 16019), 0), 0, Tag1 ("Astlib__Ast_411", 237)); (("pld_mutable", 841), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "mutable_flag"), 0, (0)), 100000000, 0, -6878), (("astlib/ast_411.ml", 505, 16020, 16026), ("astlib/ast_411.ml", 505, 16020, 16052), 0), 0, Tag1 ("Astlib__Ast_411", 238)); (("pld_type", 842), 0, (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6879), (("astlib/ast_411.ml", 506, 16053, 16059), ("astlib/ast_411.ml", 506, 16053, 16079), 0), 0, Tag1 ("Astlib__Ast_411", 239)); (("pld_loc", 843), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6880), (("astlib/ast_411.ml", 507, 16080, 16086), ("astlib/ast_411.ml", 507, 16080, 16106), 0), 0, Tag1 ("Astlib__Ast_411", 240)); (("pld_attributes", 844), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6881), (("astlib/ast_411.ml", 508, 16107, 16113), ("astlib/ast_411.ml", 508, 16107, 16140), 0), 0, Tag1 ("Astlib__Ast_411", 241))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -6875)), 0, 0, 0, 0, (("astlib/ast_411.ml", 502, 15914, 15916), ("astlib/ast_411.ml", 509, 16167, 16172), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 69)), 2, 0); Tag1 (("constructor_declaration", 7551), (0, 0, [[(("pcd_name", 845), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6869)], (0)), 100000000, 0, -6868), (("astlib/ast_411.ml", 519, 16415, 16421), ("astlib/ast_411.ml", 519, 16415, 16442), 0), 0, Tag1 ("Astlib__Ast_411", 242)); (("pcd_args", 846), 0, (Tag3 ((("constructor_arguments", 7552)), 0, (0)), 100000000, 0, -6870), (("astlib/ast_411.ml", 520, 16443, 16449), ("astlib/ast_411.ml", 520, 16443, 16481), 0), 0, Tag1 ("Astlib__Ast_411", 243)); (("pcd_res", 847), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6872)], (0)), 100000000, 0, -6871), (("astlib/ast_411.ml", 521, 16482, 16488), ("astlib/ast_411.ml", 521, 16482, 16514), 0), 0, Tag1 ("Astlib__Ast_411", 244)); (("pcd_loc", 848), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6873), (("astlib/ast_411.ml", 522, 16515, 16521), ("astlib/ast_411.ml", 522, 16515, 16541), 0), 0, Tag1 ("Astlib__Ast_411", 245)); (("pcd_attributes", 849), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6874), (("astlib/ast_411.ml", 523, 16542, 16548), ("astlib/ast_411.ml", 523, 16542, 16575), 0), 0, Tag1 ("Astlib__Ast_411", 246))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -6867)), 0, 0, 0, 0, (("astlib/ast_411.ml", 517, 16325, 16327), ("astlib/ast_411.ml", 524, 16605, 16610), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 70)), 2, 0); Tag1 (("constructor_arguments", 7552), (0, 0, Tag1 ([(("Pcstr_tuple", 850), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6864)], (0)), 100000000, 0, -6863)]), 0, (("astlib/ast_411.ml", 527, 16692, 16696), ("astlib/ast_411.ml", 527, 16692, 16727), 0), 0, Tag1 ("Astlib__Ast_411", 247)); (("Pcstr_record", 851), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7550)), 0, (0)), 100000000, 0, -6866)], (0)), 100000000, 0, -6865)]), 0, (("astlib/ast_411.ml", 528, 16728, 16732), ("astlib/ast_411.ml", 528, 16728, 16772), 0), 0, Tag1 ("Astlib__Ast_411", 248))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -6862)), 0, 0, 0, 0, (("astlib/ast_411.ml", 526, 16612, 16614), ("astlib/ast_411.ml", 528, 16728, 16772), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 71)), 2, 0); Tag1 (("type_extension", 7553), (0, 0, [[(("ptyext_path", 852), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6852)], (0)), 100000000, 0, -6851), (("astlib/ast_411.ml", 541, 17228, 17234), ("astlib/ast_411.ml", 541, 17228, 17263), 0), 0, Tag1 ("Astlib__Ast_411", 249)); (("ptyext_params", 853), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6855); (Tag3 (Tag1 ((("Asttypes", 7512)), "variance"), 0, (0)), 100000000, 0, -6856)]), 100000000, 0, -6854)], (0)), 100000000, 0, -6853), (("astlib/ast_411.ml", 542, 17264, 17270), ("astlib/ast_411.ml", 542, 17264, 17313), 0), 0, Tag1 ("Astlib__Ast_411", 250)); (("ptyext_constructors", 854), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7554)), 0, (0)), 100000000, 0, -6858)], (0)), 100000000, 0, -6857), (("astlib/ast_411.ml", 543, 17314, 17320), ("astlib/ast_411.ml", 543, 17314, 17368), 0), 0, Tag1 ("Astlib__Ast_411", 251)); (("ptyext_private", 855), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "private_flag"), 0, (0)), 100000000, 0, -6859), (("astlib/ast_411.ml", 544, 17369, 17375), ("astlib/ast_411.ml", 544, 17369, 17404), 0), 0, Tag1 ("Astlib__Ast_411", 252)); (("ptyext_loc", 856), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6860), (("astlib/ast_411.ml", 545, 17405, 17411), ("astlib/ast_411.ml", 545, 17405, 17434), 0), 0, Tag1 ("Astlib__Ast_411", 253)); (("ptyext_attributes", 857), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6861), (("astlib/ast_411.ml", 546, 17435, 17441), ("astlib/ast_411.ml", 546, 17435, 17471), 0), 0, Tag1 ("Astlib__Ast_411", 254))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -6850)), 0, 0, 0, 0, (("astlib/ast_411.ml", 539, 17156, 17158), ("astlib/ast_411.ml", 547, 17500, 17505), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 72)), 2, 0); Tag1 (("extension_constructor", 7554), (0, 0, [[(("pext_name", 858), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6846)], (0)), 100000000, 0, -6845), (("astlib/ast_411.ml", 554, 17615, 17621), ("astlib/ast_411.ml", 554, 17615, 17643), 0), 0, Tag1 ("Astlib__Ast_411", 255)); (("pext_kind", 859), 0, (Tag3 ((("extension_constructor_kind", 7556)), 0, (0)), 100000000, 0, -6847), (("astlib/ast_411.ml", 555, 17644, 17650), ("astlib/ast_411.ml", 555, 17644, 17689), 0), 0, Tag1 ("Astlib__Ast_411", 256)); (("pext_loc", 860), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6848), (("astlib/ast_411.ml", 556, 17690, 17696), ("astlib/ast_411.ml", 556, 17690, 17718), 0), 0, Tag1 ("Astlib__Ast_411", 257)); (("pext_attributes", 861), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6849), (("astlib/ast_411.ml", 557, 17719, 17725), ("astlib/ast_411.ml", 557, 17719, 17753), 0), 0, Tag1 ("Astlib__Ast_411", 258))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -6844)), 0, 0, 0, 0, (("astlib/ast_411.ml", 552, 17529, 17531), ("astlib/ast_411.ml", 558, 17783, 17788), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 73)), 2, 0); Tag1 (("type_exception", 7555), (0, 0, [[(("ptyexn_constructor", 862), 0, (Tag3 ((("extension_constructor", 7554)), 0, (0)), 100000000, 0, -6841), (("astlib/ast_411.ml", 563, 17882, 17888), ("astlib/ast_411.ml", 563, 17882, 17930), 0), 0, Tag1 ("Astlib__Ast_411", 259)); (("ptyexn_loc", 863), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6842), (("astlib/ast_411.ml", 564, 17931, 17937), ("astlib/ast_411.ml", 564, 17931, 17960), 0), 0, Tag1 ("Astlib__Ast_411", 260)); (("ptyexn_attributes", 864), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6843), (("astlib/ast_411.ml", 565, 17961, 17967), ("astlib/ast_411.ml", 565, 17961, 17997), 0), 0, Tag1 ("Astlib__Ast_411", 261))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "type_exception"), 0, (0)), 100000000, 0, -6840)), 0, 0, 0, 0, (("astlib/ast_411.ml", 561, 17810, 17812), ("astlib/ast_411.ml", 566, 18024, 18029), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 74)), 2, 0); Tag1 (("extension_constructor_kind", 7556), (0, 0, Tag1 ([(("Pext_decl", 865), ([(Tag3 ((("constructor_arguments", 7552)), 0, (0)), 100000000, 0, -6835); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6837)], (0)), 100000000, 0, -6836)]), 0, (("astlib/ast_411.ml", 569, 18121, 18127), ("astlib/ast_411.ml", 569, 18121, 18180), 0), 0, Tag1 ("Astlib__Ast_411", 262)); (("Pext_rebind", 866), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6839)], (0)), 100000000, 0, -6838)]), 0, (("astlib/ast_411.ml", 575, 18363, 18367), ("astlib/ast_411.ml", 575, 18363, 18399), 0), 0, Tag1 ("Astlib__Ast_411", 263))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -6834)), 0, 0, 0, 0, (("astlib/ast_411.ml", 568, 18031, 18033), ("astlib/ast_411.ml", 575, 18363, 18399), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 75)), 2, 0); Tag1 (("class_type", 7557), (0, 0, [[(("pcty_desc", 867), 0, (Tag3 ((("class_type_desc", 7558)), 0, (0)), 100000000, 0, -6831), (("astlib/ast_411.ml", 586, 18579, 18585), ("astlib/ast_411.ml", 586, 18579, 18612), 0), 0, Tag1 ("Astlib__Ast_411", 264)); (("pcty_loc", 868), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6832), (("astlib/ast_411.ml", 587, 18613, 18619), ("astlib/ast_411.ml", 587, 18613, 18640), 0), 0, Tag1 ("Astlib__Ast_411", 265)); (("pcty_attributes", 869), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6833), (("astlib/ast_411.ml", 588, 18641, 18647), ("astlib/ast_411.ml", 588, 18641, 18675), 0), 0, Tag1 ("Astlib__Ast_411", 266))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -6830)), 0, 0, 0, 0, (("astlib/ast_411.ml", 584, 18515, 18517), ("astlib/ast_411.ml", 589, 18700, 18705), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 76)), 2, 0); Tag1 (("class_type_desc", 7558), (0, 0, Tag1 ([(("Pcty_constr", 870), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6820)], (0)), 100000000, 0, -6819); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6822)], (0)), 100000000, 0, -6821)]), 0, (("astlib/ast_411.ml", 592, 18775, 18779), ("astlib/ast_411.ml", 592, 18775, 18828), 0), 0, Tag1 ("Astlib__Ast_411", 267)); (("Pcty_signature", 871), ([(Tag3 ((("class_signature", 7559)), 0, (0)), 100000000, 0, -6823)]), 0, (("astlib/ast_411.ml", 595, 18866, 18870), ("astlib/ast_411.ml", 595, 18866, 18905), 0), 0, Tag1 ("Astlib__Ast_411", 268)); (("Pcty_arrow", 872), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "arg_label"), 0, (0)), 100000000, 0, -6824); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6825); (Tag3 ((("class_type", 7557)), 0, (0)), 100000000, 0, -6826)]), 0, (("astlib/ast_411.ml", 597, 18931, 18935), ("astlib/ast_411.ml", 597, 18931, 18985), 0), 0, Tag1 ("Astlib__Ast_411", 269)); (("Pcty_extension", 873), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -6827)]), 0, (("astlib/ast_411.ml", 602, 19085, 19089), ("astlib/ast_411.ml", 602, 19085, 19118), 0), 0, Tag1 ("Astlib__Ast_411", 270)); (("Pcty_open", 874), ([(Tag3 ((("open_description", 7582)), 0, (0)), 100000000, 0, -6828); (Tag3 ((("class_type", 7557)), 0, (0)), 100000000, 0, -6829)]), 0, (("astlib/ast_411.ml", 604, 19135, 19139), ("astlib/ast_411.ml", 604, 19135, 19183), 0), 0, Tag1 ("Astlib__Ast_411", 271))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -6818)), 0, 0, 0, 0, (("astlib/ast_411.ml", 591, 18707, 18709), ("astlib/ast_411.ml", 604, 19135, 19183), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 77)), 2, 0); Tag1 (("class_signature", 7559), (0, 0, [[(("pcsig_self", 875), 0, (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6815), (("astlib/ast_411.ml", 609, 19286, 19292), ("astlib/ast_411.ml", 609, 19286, 19314), 0), 0, Tag1 ("Astlib__Ast_411", 272)); (("pcsig_fields", 876), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7560)), 0, (0)), 100000000, 0, -6817)], (0)), 100000000, 0, -6816), (("astlib/ast_411.ml", 610, 19315, 19321), ("astlib/ast_411.ml", 610, 19315, 19357), 0), 0, Tag1 ("Astlib__Ast_411", 273))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -6814)), 0, 0, 0, 0, (("astlib/ast_411.ml", 607, 19212, 19214), ("astlib/ast_411.ml", 611, 19358, 19363), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 78)), 2, 0); Tag1 (("class_type_field", 7560), (0, 0, [[(("pctf_desc", 877), 0, (Tag3 ((("class_type_field_desc", 7561)), 0, (0)), 100000000, 0, -6811), (("astlib/ast_411.ml", 618, 19526, 19532), ("astlib/ast_411.ml", 618, 19526, 19565), 0), 0, Tag1 ("Astlib__Ast_411", 274)); (("pctf_loc", 878), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6812), (("astlib/ast_411.ml", 619, 19566, 19572), ("astlib/ast_411.ml", 619, 19566, 19593), 0), 0, Tag1 ("Astlib__Ast_411", 275)); (("pctf_attributes", 879), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6813), (("astlib/ast_411.ml", 620, 19594, 19600), ("astlib/ast_411.ml", 620, 19594, 19628), 0), 0, Tag1 ("Astlib__Ast_411", 276))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -6810)), 0, 0, 0, 0, (("astlib/ast_411.ml", 616, 19450, 19452), ("astlib/ast_411.ml", 621, 19655, 19660), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 79)), 2, 0); Tag1 (("class_type_field_desc", 7561), (0, 0, Tag1 ([(("Pctf_inherit", 880), ([(Tag3 ((("class_type", 7557)), 0, (0)), 100000000, 0, -6792)]), 0, (("astlib/ast_411.ml", 624, 19742, 19746), ("astlib/ast_411.ml", 624, 19742, 19774), 0), 0, Tag1 ("Astlib__Ast_411", 277)); (("Pctf_val", 881), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -6795)], (0)), 100000000, 0, -6794); (Tag3 (Tag1 ((("Asttypes", 7512)), "mutable_flag"), 0, (0)), 100000000, 0, -6796); (Tag3 (Tag1 ((("Asttypes", 7512)), "virtual_flag"), 0, (0)), 100000000, 0, -6797); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6798)]), 100000000, 0, -6793)]), 0, (("astlib/ast_411.ml", 626, 19796, 19800), ("astlib/ast_411.ml", 626, 19796, 19867), 0), 0, Tag1 ("Astlib__Ast_411", 278)); (("Pctf_method", 882), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -6801)], (0)), 100000000, 0, -6800); (Tag3 (Tag1 ((("Asttypes", 7512)), "private_flag"), 0, (0)), 100000000, 0, -6802); (Tag3 (Tag1 ((("Asttypes", 7512)), "virtual_flag"), 0, (0)), 100000000, 0, -6803); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6804)]), 100000000, 0, -6799)]), 0, (("astlib/ast_411.ml", 628, 19887, 19891), ("astlib/ast_411.ml", 628, 19887, 19962), 0), 0, Tag1 ("Astlib__Ast_411", 279)); (("Pctf_constraint", 883), ([(Tag2 ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6806); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6807)]), 100000000, 0, -6805)]), 0, (("astlib/ast_411.ml", 633, 20025, 20029), ("astlib/ast_411.ml", 633, 20025, 20074), 0), 0, Tag1 ("Astlib__Ast_411", 280)); (("Pctf_attribute", 884), ([(Tag3 ((("attribute", 7529)), 0, (0)), 100000000, 0, -6808)]), 0, (("astlib/ast_411.ml", 635, 20104, 20108), ("astlib/ast_411.ml", 635, 20104, 20137), 0), 0, Tag1 ("Astlib__Ast_411", 281)); (("Pctf_extension", 885), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -6809)]), 0, (("astlib/ast_411.ml", 637, 20156, 20160), ("astlib/ast_411.ml", 637, 20156, 20189), 0), 0, Tag1 ("Astlib__Ast_411", 282))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -6791)), 0, 0, 0, 0, (("astlib/ast_411.ml", 623, 19662, 19664), ("astlib/ast_411.ml", 637, 20156, 20189), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 80)), 2, 0); Tag1 (("class_infos", 7562), ([((("a")), 100000000, 0, -6781)], 1, [[(("pci_virt", 886), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "virtual_flag"), 0, (0)), 100000000, 0, -6782), (("astlib/ast_411.ml", 642, 20280, 20286), ("astlib/ast_411.ml", 642, 20280, 20309), 0), 0, Tag1 ("Astlib__Ast_411", 283)); (("pci_params", 887), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6785); (Tag3 (Tag1 ((("Asttypes", 7512)), "variance"), 0, (0)), 100000000, 0, -6786)]), 100000000, 0, -6784)], (0)), 100000000, 0, -6783), (("astlib/ast_411.ml", 643, 20310, 20316), ("astlib/ast_411.ml", 643, 20310, 20356), 0), 0, Tag1 ("Astlib__Ast_411", 284)); (("pci_name", 888), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6788)], (0)), 100000000, 0, -6787), (("astlib/ast_411.ml", 644, 20357, 20363), ("astlib/ast_411.ml", 644, 20357, 20384), 0), 0, Tag1 ("Astlib__Ast_411", 285)); (("pci_expr", 889), 0, ((("a")), 100000000, 0, -6781), (("astlib/ast_411.ml", 645, 20385, 20391), ("astlib/ast_411.ml", 645, 20385, 20404), 0), 0, Tag1 ("Astlib__Ast_411", 286)); (("pci_loc", 890), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6789), (("astlib/ast_411.ml", 646, 20405, 20411), ("astlib/ast_411.ml", 646, 20405, 20431), 0), 0, Tag1 ("Astlib__Ast_411", 287)); (("pci_attributes", 891), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6790), (("astlib/ast_411.ml", 647, 20432, 20438), ("astlib/ast_411.ml", 647, 20432, 20465), 0), 0, Tag1 ("Astlib__Ast_411", 288))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -6781)], (0)), 100000000, 0, -6780)), [25], [0], 0, 0, (("astlib/ast_411.ml", 640, 20208, 20210), ("astlib/ast_411.ml", 648, 20493, 20498), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 81)), 2, 0); Tag1 (("class_description", 7563), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7562)), [(Tag3 ((("class_type", 7557)), 0, (0)), 100000000, 0, -6779)], (0)), 100000000, 0, -6778)), 0, 0, 0, 0, (("astlib/ast_411.ml", 656, 20630, 20632), ("astlib/ast_411.ml", 656, 20630, 20678), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 82)), 2, 0); Tag1 (("class_type_declaration", 7564), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7562)), [(Tag3 ((("class_type", 7557)), 0, (0)), 100000000, 0, -6777)], (0)), 100000000, 0, -6776)), 0, 0, 0, 0, (("astlib/ast_411.ml", 658, 20680, 20682), ("astlib/ast_411.ml", 658, 20680, 20733), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 83)), 2, 0); Tag1 (("class_expr", 7565), (0, 0, [[(("pcl_desc", 892), 0, (Tag3 ((("class_expr_desc", 7566)), 0, (0)), 100000000, 0, -6773), (("astlib/ast_411.ml", 664, 20849, 20855), ("astlib/ast_411.ml", 664, 20849, 20881), 0), 0, Tag1 ("Astlib__Ast_411", 289)); (("pcl_loc", 893), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6774), (("astlib/ast_411.ml", 665, 20882, 20888), ("astlib/ast_411.ml", 665, 20882, 20908), 0), 0, Tag1 ("Astlib__Ast_411", 290)); (("pcl_attributes", 894), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6775), (("astlib/ast_411.ml", 666, 20909, 20915), ("astlib/ast_411.ml", 666, 20909, 20942), 0), 0, Tag1 ("Astlib__Ast_411", 291))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -6772)), 0, 0, 0, 0, (("astlib/ast_411.ml", 662, 20785, 20787), ("astlib/ast_411.ml", 667, 20967, 20972), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 84)), 2, 0); Tag1 (("class_expr_desc", 7566), (0, 0, Tag1 ([(("Pcl_constr", 895), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6749)], (0)), 100000000, 0, -6748); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6751)], (0)), 100000000, 0, -6750)]), 0, (("astlib/ast_411.ml", 670, 21042, 21046), ("astlib/ast_411.ml", 670, 21042, 21094), 0), 0, Tag1 ("Astlib__Ast_411", 292)); (("Pcl_structure", 896), ([(Tag3 ((("class_structure", 7567)), 0, (0)), 100000000, 0, -6752)]), 0, (("astlib/ast_411.ml", 673, 21132, 21136), ("astlib/ast_411.ml", 673, 21132, 21170), 0), 0, Tag1 ("Astlib__Ast_411", 293)); (("Pcl_fun", 897), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "arg_label"), 0, (0)), 100000000, 0, -6753); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6755)], (0)), 100000000, 0, -6754); (Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -6756); (Tag3 ((("class_expr", 7565)), 0, (0)), 100000000, 0, -6757)]), 0, (("astlib/ast_411.ml", 675, 21196, 21200), ("astlib/ast_411.ml", 675, 21196, 21265), 0), 0, Tag1 ("Astlib__Ast_411", 294)); (("Pcl_apply", 898), ([(Tag3 ((("class_expr", 7565)), 0, (0)), 100000000, 0, -6758); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "arg_label"), 0, (0)), 100000000, 0, -6761); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6762)]), 100000000, 0, -6760)], (0)), 100000000, 0, -6759)]), 0, (("astlib/ast_411.ml", 681, 21524, 21528), ("astlib/ast_411.ml", 681, 21524, 21585), 0), 0, Tag1 ("Astlib__Ast_411", 295)); (("Pcl_let", 899), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "rec_flag"), 0, (0)), 100000000, 0, -6763); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7593)), 0, (0)), 100000000, 0, -6765)], (0)), 100000000, 0, -6764); (Tag3 ((("class_expr", 7565)), 0, (0)), 100000000, 0, -6766)]), 0, (("astlib/ast_411.ml", 688, 21738, 21742), ("astlib/ast_411.ml", 688, 21738, 21797), 0), 0, Tag1 ("Astlib__Ast_411", 296)); (("Pcl_constraint", 900), ([(Tag3 ((("class_expr", 7565)), 0, (0)), 100000000, 0, -6767); (Tag3 ((("class_type", 7557)), 0, (0)), 100000000, 0, -6768)]), 0, (("astlib/ast_411.ml", 692, 21946, 21950), ("astlib/ast_411.ml", 692, 21946, 21993), 0), 0, Tag1 ("Astlib__Ast_411", 297)); (("Pcl_extension", 901), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -6769)]), 0, (("astlib/ast_411.ml", 694, 22014, 22018), ("astlib/ast_411.ml", 694, 22014, 22046), 0), 0, Tag1 ("Astlib__Ast_411", 298)); (("Pcl_open", 902), ([(Tag3 ((("open_description", 7582)), 0, (0)), 100000000, 0, -6770); (Tag3 ((("class_expr", 7565)), 0, (0)), 100000000, 0, -6771)]), 0, (("astlib/ast_411.ml", 696, 22063, 22067), ("astlib/ast_411.ml", 696, 22063, 22110), 0), 0, Tag1 ("Astlib__Ast_411", 299))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -6747)), 0, 0, 0, 0, (("astlib/ast_411.ml", 669, 20974, 20976), ("astlib/ast_411.ml", 696, 22063, 22110), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 85)), 2, 0); Tag1 (("class_structure", 7567), (0, 0, [[(("pcstr_self", 903), 0, (Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -6744), (("astlib/ast_411.ml", 702, 22214, 22220), ("astlib/ast_411.ml", 702, 22214, 22240), 0), 0, Tag1 ("Astlib__Ast_411", 300)); (("pcstr_fields", 904), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7568)), 0, (0)), 100000000, 0, -6746)], (0)), 100000000, 0, -6745), (("astlib/ast_411.ml", 703, 22241, 22247), ("astlib/ast_411.ml", 703, 22241, 22278), 0), 0, Tag1 ("Astlib__Ast_411", 301))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -6743)), 0, 0, 0, 0, (("astlib/ast_411.ml", 700, 22140, 22142), ("astlib/ast_411.ml", 704, 22279, 22284), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 86)), 2, 0); Tag1 (("class_field", 7568), (0, 0, [[(("pcf_desc", 905), 0, (Tag3 ((("class_field_desc", 7569)), 0, (0)), 100000000, 0, -6740), (("astlib/ast_411.ml", 711, 22434, 22440), ("astlib/ast_411.ml", 711, 22434, 22467), 0), 0, Tag1 ("Astlib__Ast_411", 302)); (("pcf_loc", 906), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6741), (("astlib/ast_411.ml", 712, 22468, 22474), ("astlib/ast_411.ml", 712, 22468, 22494), 0), 0, Tag1 ("Astlib__Ast_411", 303)); (("pcf_attributes", 907), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6742), (("astlib/ast_411.ml", 713, 22495, 22501), ("astlib/ast_411.ml", 713, 22495, 22528), 0), 0, Tag1 ("Astlib__Ast_411", 304))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -6739)), 0, 0, 0, 0, (("astlib/ast_411.ml", 709, 22368, 22370), ("astlib/ast_411.ml", 714, 22555, 22560), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 87)), 2, 0); Tag1 (("class_field_desc", 7569), (0, 0, Tag1 ([(("Pcf_inherit", 908), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "override_flag"), 0, (0)), 100000000, 0, -6718); (Tag3 ((("class_expr", 7565)), 0, (0)), 100000000, 0, -6719); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6722)], (0)), 100000000, 0, -6721)], (0)), 100000000, 0, -6720)]), 0, (("astlib/ast_411.ml", 717, 22632, 22636), ("astlib/ast_411.ml", 717, 22632, 22699), 0), 0, Tag1 ("Astlib__Ast_411", 305)); (("Pcf_val", 909), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -6725)], (0)), 100000000, 0, -6724); (Tag3 (Tag1 ((("Asttypes", 7512)), "mutable_flag"), 0, (0)), 100000000, 0, -6726); (Tag3 ((("class_field_kind", 7570)), 0, (0)), 100000000, 0, -6727)]), 100000000, 0, -6723)]), 0, (("astlib/ast_411.ml", 723, 22791, 22795), ("astlib/ast_411.ml", 723, 22791, 22853), 0), 0, Tag1 ("Astlib__Ast_411", 306)); (("Pcf_method", 910), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7512)), "label"), 0, (0)), 100000000, 0, -6730)], (0)), 100000000, 0, -6729); (Tag3 (Tag1 ((("Asttypes", 7512)), "private_flag"), 0, (0)), 100000000, 0, -6731); (Tag3 ((("class_field_kind", 7570)), 0, (0)), 100000000, 0, -6732)]), 100000000, 0, -6728)]), 0, (("astlib/ast_411.ml", 727, 22902, 22906), ("astlib/ast_411.ml", 727, 22902, 22967), 0), 0, Tag1 ("Astlib__Ast_411", 307)); (("Pcf_constraint", 911), ([(Tag2 ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6734); (Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6735)]), 100000000, 0, -6733)]), 0, (("astlib/ast_411.ml", 731, 23083, 23087), ("astlib/ast_411.ml", 731, 23083, 23130), 0), 0, Tag1 ("Astlib__Ast_411", 308)); (("Pcf_initializer", 912), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6736)]), 0, (("astlib/ast_411.ml", 733, 23160, 23164), ("astlib/ast_411.ml", 733, 23160, 23195), 0), 0, Tag1 ("Astlib__Ast_411", 309)); (("Pcf_attribute", 913), ([(Tag3 ((("attribute", 7529)), 0, (0)), 100000000, 0, -6737)]), 0, (("astlib/ast_411.ml", 735, 23220, 23224), ("astlib/ast_411.ml", 735, 23220, 23252), 0), 0, Tag1 ("Astlib__Ast_411", 310)); (("Pcf_extension", 914), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -6738)]), 0, (("astlib/ast_411.ml", 737, 23271, 23275), ("astlib/ast_411.ml", 737, 23271, 23303), 0), 0, Tag1 ("Astlib__Ast_411", 311))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -6717)), 0, 0, 0, 0, (("astlib/ast_411.ml", 716, 22562, 22564), ("astlib/ast_411.ml", 737, 23271, 23303), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 88)), 2, 0); Tag1 (("class_field_kind", 7570), (0, 0, Tag1 ([(("Cfk_virtual", 915), ([(Tag3 ((("core_type", 7533)), 0, (0)), 100000000, 0, -6714)]), 0, (("astlib/ast_411.ml", 741, 23392, 23396), ("astlib/ast_411.ml", 741, 23392, 23422), 0), 0, Tag1 ("Astlib__Ast_411", 312)); (("Cfk_concrete", 916), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "override_flag"), 0, (0)), 100000000, 0, -6715); (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6716)]), 0, (("astlib/ast_411.ml", 742, 23423, 23427), ("astlib/ast_411.ml", 742, 23423, 23471), 0), 0, Tag1 ("Astlib__Ast_411", 313))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -6713)), 0, 0, 0, 0, (("astlib/ast_411.ml", 740, 23322, 23324), ("astlib/ast_411.ml", 742, 23423, 23471), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 89)), 2, 0); Tag1 (("class_declaration", 7571), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7562)), [(Tag3 ((("class_expr", 7565)), 0, (0)), 100000000, 0, -6712)], (0)), 100000000, 0, -6711)), 0, 0, 0, 0, (("astlib/ast_411.ml", 744, 23473, 23475), ("astlib/ast_411.ml", 744, 23473, 23521), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 90)), 2, 0); Tag1 (("module_type", 7572), (0, 0, [[(("pmty_desc", 917), 0, (Tag3 ((("module_type_desc", 7573)), 0, (0)), 100000000, 0, -6708), (("astlib/ast_411.ml", 752, 23669, 23675), ("astlib/ast_411.ml", 752, 23669, 23703), 0), 0, Tag1 ("Astlib__Ast_411", 314)); (("pmty_loc", 918), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6709), (("astlib/ast_411.ml", 753, 23704, 23710), ("astlib/ast_411.ml", 753, 23704, 23731), 0), 0, Tag1 ("Astlib__Ast_411", 315)); (("pmty_attributes", 919), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6710), (("astlib/ast_411.ml", 754, 23732, 23738), ("astlib/ast_411.ml", 754, 23732, 23766), 0), 0, Tag1 ("Astlib__Ast_411", 316))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -6707)), 0, 0, 0, 0, (("astlib/ast_411.ml", 750, 23603, 23605), ("astlib/ast_411.ml", 755, 23791, 23796), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 91)), 2, 0); Tag1 (("module_type_desc", 7573), (0, 0, Tag1 ([(("Pmty_ident", 920), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6696)], (0)), 100000000, 0, -6695)]), 0, (("astlib/ast_411.ml", 758, 23868, 23872), ("astlib/ast_411.ml", 758, 23868, 23903), 0), 0, Tag1 ("Astlib__Ast_411", 317)); (("Pmty_signature", 921), ([(Tag3 ((("signature", 7575)), 0, (0)), 100000000, 0, -6697)]), 0, (("astlib/ast_411.ml", 760, 23916, 23920), ("astlib/ast_411.ml", 760, 23916, 23949), 0), 0, Tag1 ("Astlib__Ast_411", 318)); (("Pmty_functor", 922), ([(Tag3 ((("functor_parameter", 7574)), 0, (0)), 100000000, 0, -6698); (Tag3 ((("module_type", 7572)), 0, (0)), 100000000, 0, -6699)]), 0, (("astlib/ast_411.ml", 762, 23972, 23976), ("astlib/ast_411.ml", 762, 23972, 24025), 0), 0, Tag1 ("Astlib__Ast_411", 319)); (("Pmty_with", 923), ([(Tag3 ((("module_type", 7572)), 0, (0)), 100000000, 0, -6700); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7587)), 0, (0)), 100000000, 0, -6702)], (0)), 100000000, 0, -6701)]), 0, (("astlib/ast_411.ml", 764, 24060, 24064), ("astlib/ast_411.ml", 764, 24060, 24113), 0), 0, Tag1 ("Astlib__Ast_411", 320)); (("Pmty_typeof", 924), ([(Tag3 ((("module_expr", 7588)), 0, (0)), 100000000, 0, -6703)]), 0, (("astlib/ast_411.ml", 766, 24136, 24140), ("astlib/ast_411.ml", 766, 24136, 24168), 0), 0, Tag1 ("Astlib__Ast_411", 321)); (("Pmty_extension", 925), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -6704)]), 0, (("astlib/ast_411.ml", 768, 24197, 24201), ("astlib/ast_411.ml", 768, 24197, 24230), 0), 0, Tag1 ("Astlib__Ast_411", 322)); (("Pmty_alias", 926), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6706)], (0)), 100000000, 0, -6705)]), 0, (("astlib/ast_411.ml", 770, 24247, 24251), ("astlib/ast_411.ml", 770, 24247, 24282), 0), 0, Tag1 ("Astlib__Ast_411", 323))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -6694)), 0, 0, 0, 0, (("astlib/ast_411.ml", 757, 23798, 23800), ("astlib/ast_411.ml", 770, 24247, 24282), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 92)), 2, 0); Tag1 (("functor_parameter", 7574), (0, 0, Tag1 ([(("Unit", 927), (0), 0, (("astlib/ast_411.ml", 774, 24377, 24381), ("astlib/ast_411.ml", 774, 24377, 24387), 0), 0, Tag1 ("Astlib__Ast_411", 324)); (("Named", 928), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6692)], (0)), 100000000, 0, -6691)], (0)), 100000000, 0, -6690); (Tag3 ((("module_type", 7572)), 0, (0)), 100000000, 0, -6693)]), 0, (("astlib/ast_411.ml", 776, 24401, 24405), ("astlib/ast_411.ml", 776, 24401, 24447), 0), 0, Tag1 ("Astlib__Ast_411", 325))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "functor_parameter"), 0, (0)), 100000000, 0, -6689)), 0, 0, 0, 0, (("astlib/ast_411.ml", 773, 24305, 24307), ("astlib/ast_411.ml", 776, 24401, 24447), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 93)), 2, 0); Tag1 (("signature", 7575), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7576)), 0, (0)), 100000000, 0, -6688)], (0)), 100000000, 0, -6687)), 0, 0, 0, 0, (("astlib/ast_411.ml", 780, 24522, 24524), ("astlib/ast_411.ml", 780, 24522, 24559), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 94)), 2, 0); Tag1 (("signature_item", 7576), (0, 0, [[(("psig_desc", 929), 0, (Tag3 ((("signature_item_desc", 7577)), 0, (0)), 100000000, 0, -6685), (("astlib/ast_411.ml", 784, 24633, 24639), ("astlib/ast_411.ml", 784, 24633, 24670), 0), 0, Tag1 ("Astlib__Ast_411", 326)); (("psig_loc", 930), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6686), (("astlib/ast_411.ml", 785, 24671, 24677), ("astlib/ast_411.ml", 785, 24671, 24698), 0), 0, Tag1 ("Astlib__Ast_411", 327))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -6684)), 0, 0, 0, 0, (("astlib/ast_411.ml", 782, 24561, 24563), ("astlib/ast_411.ml", 786, 24699, 24704), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 95)), 2, 0); Tag1 (("signature_item_desc", 7577), (0, 0, Tag1 ([(("Psig_value", 931), ([(Tag3 ((("value_description", 7547)), 0, (0)), 100000000, 0, -6662)]), 0, (("astlib/ast_411.ml", 789, 24782, 24786), ("astlib/ast_411.ml", 789, 24782, 24819), 0), 0, Tag1 ("Astlib__Ast_411", 328)); (("Psig_type", 932), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "rec_flag"), 0, (0)), 100000000, 0, -6663); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7548)), 0, (0)), 100000000, 0, -6665)], (0)), 100000000, 0, -6664)]), 0, (("astlib/ast_411.ml", 794, 24902, 24906), ("astlib/ast_411.ml", 794, 24902, 24953), 0), 0, Tag1 ("Astlib__Ast_411", 329)); (("Psig_typesubst", 933), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7548)), 0, (0)), 100000000, 0, -6667)], (0)), 100000000, 0, -6666)]), 0, (("astlib/ast_411.ml", 796, 25000, 25004), ("astlib/ast_411.ml", 796, 25000, 25045), 0), 0, Tag1 ("Astlib__Ast_411", 330)); (("Psig_typext", 934), ([(Tag3 ((("type_extension", 7553)), 0, (0)), 100000000, 0, -6668)]), 0, (("astlib/ast_411.ml", 798, 25094, 25098), ("astlib/ast_411.ml", 798, 25094, 25129), 0), 0, Tag1 ("Astlib__Ast_411", 331)); (("Psig_exception", 935), ([(Tag3 ((("type_exception", 7555)), 0, (0)), 100000000, 0, -6669)]), 0, (("astlib/ast_411.ml", 800, 25155, 25159), ("astlib/ast_411.ml", 800, 25155, 25193), 0), 0, Tag1 ("Astlib__Ast_411", 332)); (("Psig_module", 936), ([(Tag3 ((("module_declaration", 7578)), 0, (0)), 100000000, 0, -6670)]), 0, (("astlib/ast_411.ml", 802, 25221, 25225), ("astlib/ast_411.ml", 802, 25221, 25260), 0), 0, Tag1 ("Astlib__Ast_411", 333)); (("Psig_modsubst", 937), ([(Tag3 ((("module_substitution", 7579)), 0, (0)), 100000000, 0, -6671)]), 0, (("astlib/ast_411.ml", 805, 25305, 25309), ("astlib/ast_411.ml", 805, 25305, 25347), 0), 0, Tag1 ("Astlib__Ast_411", 334)); (("Psig_recmodule", 938), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7578)), 0, (0)), 100000000, 0, -6673)], (0)), 100000000, 0, -6672)]), 0, (("astlib/ast_411.ml", 807, 25372, 25376), ("astlib/ast_411.ml", 807, 25372, 25419), 0), 0, Tag1 ("Astlib__Ast_411", 335)); (("Psig_modtype", 939), ([(Tag3 ((("module_type_declaration", 7580)), 0, (0)), 100000000, 0, -6674)]), 0, (("astlib/ast_411.ml", 809, 25471, 25475), ("astlib/ast_411.ml", 809, 25471, 25516), 0), 0, Tag1 ("Astlib__Ast_411", 336)); (("Psig_open", 940), ([(Tag3 ((("open_description", 7582)), 0, (0)), 100000000, 0, -6675)]), 0, (("astlib/ast_411.ml", 812, 25567, 25571), ("astlib/ast_411.ml", 812, 25567, 25602), 0), 0, Tag1 ("Astlib__Ast_411", 337)); (("Psig_include", 941), ([(Tag3 ((("include_description", 7585)), 0, (0)), 100000000, 0, -6676)]), 0, (("astlib/ast_411.ml", 814, 25620, 25624), ("astlib/ast_411.ml", 814, 25620, 25661), 0), 0, Tag1 ("Astlib__Ast_411", 338)); (("Psig_class", 942), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7563)), 0, (0)), 100000000, 0, -6678)], (0)), 100000000, 0, -6677)]), 0, (("astlib/ast_411.ml", 816, 25683, 25687), ("astlib/ast_411.ml", 816, 25683, 25725), 0), 0, Tag1 ("Astlib__Ast_411", 339)); (("Psig_class_type", 943), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7564)), 0, (0)), 100000000, 0, -6680)], (0)), 100000000, 0, -6679)]), 0, (("astlib/ast_411.ml", 818, 25772, 25776), ("astlib/ast_411.ml", 818, 25772, 25824), 0), 0, Tag1 ("Astlib__Ast_411", 340)); (("Psig_attribute", 944), ([(Tag3 ((("attribute", 7529)), 0, (0)), 100000000, 0, -6681)]), 0, (("astlib/ast_411.ml", 820, 25878, 25882), ("astlib/ast_411.ml", 820, 25878, 25911), 0), 0, Tag1 ("Astlib__Ast_411", 341)); (("Psig_extension", 945), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -6682); (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6683)]), 0, (("astlib/ast_411.ml", 822, 25930, 25934), ("astlib/ast_411.ml", 822, 25930, 25976), 0), 0, Tag1 ("Astlib__Ast_411", 342))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -6661)), 0, 0, 0, 0, (("astlib/ast_411.ml", 788, 24706, 24708), ("astlib/ast_411.ml", 822, 25930, 25976), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 96)), 2, 0); Tag1 (("module_declaration", 7578), (0, 0, [[(("pmd_name", 946), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6657)], (0)), 100000000, 0, -6656)], (0)), 100000000, 0, -6655), (("astlib/ast_411.ml", 827, 26075, 26081), ("astlib/ast_411.ml", 827, 26075, 26109), 0), 0, Tag1 ("Astlib__Ast_411", 343)); (("pmd_type", 947), 0, (Tag3 ((("module_type", 7572)), 0, (0)), 100000000, 0, -6658), (("astlib/ast_411.ml", 828, 26110, 26116), ("astlib/ast_411.ml", 828, 26110, 26138), 0), 0, Tag1 ("Astlib__Ast_411", 344)); (("pmd_attributes", 948), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6659), (("astlib/ast_411.ml", 829, 26139, 26145), ("astlib/ast_411.ml", 829, 26139, 26172), 0), 0, Tag1 ("Astlib__Ast_411", 345)); (("pmd_loc", 949), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6660), (("astlib/ast_411.ml", 830, 26199, 26205), ("astlib/ast_411.ml", 830, 26199, 26225), 0), 0, Tag1 ("Astlib__Ast_411", 346))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -6654)), 0, 0, 0, 0, (("astlib/ast_411.ml", 825, 25995, 25997), ("astlib/ast_411.ml", 831, 26226, 26231), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 97)), 2, 0); Tag1 (("module_substitution", 7579), (0, 0, [[(("pms_name", 950), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6649)], (0)), 100000000, 0, -6648), (("astlib/ast_411.ml", 836, 26330, 26336), ("astlib/ast_411.ml", 836, 26330, 26357), 0), 0, Tag1 ("Astlib__Ast_411", 347)); (("pms_manifest", 951), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6651)], (0)), 100000000, 0, -6650), (("astlib/ast_411.ml", 837, 26358, 26364), ("astlib/ast_411.ml", 837, 26358, 26394), 0), 0, Tag1 ("Astlib__Ast_411", 348)); (("pms_attributes", 952), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6652), (("astlib/ast_411.ml", 838, 26395, 26401), ("astlib/ast_411.ml", 838, 26395, 26428), 0), 0, Tag1 ("Astlib__Ast_411", 349)); (("pms_loc", 953), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6653), (("astlib/ast_411.ml", 839, 26455, 26461), ("astlib/ast_411.ml", 839, 26455, 26481), 0), 0, Tag1 ("Astlib__Ast_411", 350))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "module_substitution"), 0, (0)), 100000000, 0, -6647)), 0, 0, 0, 0, (("astlib/ast_411.ml", 834, 26248, 26250), ("astlib/ast_411.ml", 840, 26482, 26487), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 98)), 2, 0); Tag1 (("module_type_declaration", 7580), (0, 0, [[(("pmtd_name", 954), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6642)], (0)), 100000000, 0, -6641), (("astlib/ast_411.ml", 844, 26579, 26585), ("astlib/ast_411.ml", 844, 26579, 26607), 0), 0, Tag1 ("Astlib__Ast_411", 351)); (("pmtd_type", 955), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7572)), 0, (0)), 100000000, 0, -6644)], (0)), 100000000, 0, -6643), (("astlib/ast_411.ml", 845, 26608, 26614), ("astlib/ast_411.ml", 845, 26608, 26644), 0), 0, Tag1 ("Astlib__Ast_411", 352)); (("pmtd_attributes", 956), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6645), (("astlib/ast_411.ml", 846, 26645, 26651), ("astlib/ast_411.ml", 846, 26645, 26679), 0), 0, Tag1 ("Astlib__Ast_411", 353)); (("pmtd_loc", 957), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6646), (("astlib/ast_411.ml", 847, 26706, 26712), ("astlib/ast_411.ml", 847, 26706, 26733), 0), 0, Tag1 ("Astlib__Ast_411", 354))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -6640)), 0, 0, 0, 0, (("astlib/ast_411.ml", 842, 26489, 26491), ("astlib/ast_411.ml", 848, 26734, 26739), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 99)), 2, 0); Tag1 (("open_infos", 7581), ([((("a")), 100000000, 0, -6636)], 1, [[(("popen_expr", 958), 0, ((("a")), 100000000, 0, -6636), (("astlib/ast_411.ml", 855, 26894, 26900), ("astlib/ast_411.ml", 855, 26894, 26915), 0), 0, Tag1 ("Astlib__Ast_411", 355)); (("popen_override", 959), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "override_flag"), 0, (0)), 100000000, 0, -6637), (("astlib/ast_411.ml", 856, 26916, 26922), ("astlib/ast_411.ml", 856, 26916, 26952), 0), 0, Tag1 ("Astlib__Ast_411", 356)); (("popen_loc", 960), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6638), (("astlib/ast_411.ml", 857, 26953, 26959), ("astlib/ast_411.ml", 857, 26953, 26981), 0), 0, Tag1 ("Astlib__Ast_411", 357)); (("popen_attributes", 961), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6639), (("astlib/ast_411.ml", 858, 26982, 26988), ("astlib/ast_411.ml", 858, 26982, 27017), 0), 0, Tag1 ("Astlib__Ast_411", 358))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "open_infos"), [((("a")), 100000000, 0, -6636)], (0)), 100000000, 0, -6635)), [25], [0], 0, 0, (("astlib/ast_411.ml", 853, 26824, 26826), ("astlib/ast_411.ml", 859, 27018, 27023), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 100)), 2, 0); Tag1 (("open_description", 7582), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7581)), [(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6634)], (0)), 100000000, 0, -6633)], (0)), 100000000, 0, -6632)), 0, 0, 0, 0, (("astlib/ast_411.ml", 865, 27192, 27194), ("astlib/ast_411.ml", 865, 27192, 27243), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 101)), 2, 0); Tag1 (("open_declaration", 7583), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7581)), [(Tag3 ((("module_expr", 7588)), 0, (0)), 100000000, 0, -6631)], (0)), 100000000, 0, -6630)), 0, 0, 0, 0, (("astlib/ast_411.ml", 869, 27279, 27281), ("astlib/ast_411.ml", 869, 27279, 27326), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 102)), 2, 0); Tag1 (("include_infos", 7584), ([((("a")), 100000000, 0, -6627)], 1, [[(("pincl_mod", 962), 0, ((("a")), 100000000, 0, -6627), (("astlib/ast_411.ml", 876, 27463, 27469), ("astlib/ast_411.ml", 876, 27463, 27483), 0), 0, Tag1 ("Astlib__Ast_411", 359)); (("pincl_loc", 963), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6628), (("astlib/ast_411.ml", 877, 27484, 27490), ("astlib/ast_411.ml", 877, 27484, 27512), 0), 0, Tag1 ("Astlib__Ast_411", 360)); (("pincl_attributes", 964), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6629), (("astlib/ast_411.ml", 878, 27513, 27519), ("astlib/ast_411.ml", 878, 27513, 27548), 0), 0, Tag1 ("Astlib__Ast_411", 361))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -6627)], (0)), 100000000, 0, -6626)), [25], [0], 0, 0, (("astlib/ast_411.ml", 874, 27387, 27389), ("astlib/ast_411.ml", 879, 27549, 27554), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 103)), 2, 0); Tag1 (("include_description", 7585), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7584)), [(Tag3 ((("module_type", 7572)), 0, (0)), 100000000, 0, -6625)], (0)), 100000000, 0, -6624)), 0, 0, 0, 0, (("astlib/ast_411.ml", 881, 27556, 27558), ("astlib/ast_411.ml", 881, 27556, 27609), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 104)), 2, 0); Tag1 (("include_declaration", 7586), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7584)), [(Tag3 ((("module_expr", 7588)), 0, (0)), 100000000, 0, -6623)], (0)), 100000000, 0, -6622)), 0, 0, 0, 0, (("astlib/ast_411.ml", 884, 27630, 27632), ("astlib/ast_411.ml", 884, 27630, 27683), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 105)), 2, 0); Tag1 (("with_constraint", 7587), (0, 0, Tag1 ([(("Pwith_type", 965), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6609)], (0)), 100000000, 0, -6608); (Tag3 ((("type_declaration", 7548)), 0, (0)), 100000000, 0, -6610)]), 0, (("astlib/ast_411.ml", 888, 27772, 27776), ("astlib/ast_411.ml", 888, 27772, 27826), 0), 0, Tag1 ("Astlib__Ast_411", 362)); (("Pwith_module", 966), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6612)], (0)), 100000000, 0, -6611); (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6614)], (0)), 100000000, 0, -6613)]), 0, (("astlib/ast_411.ml", 893, 27959, 27963), ("astlib/ast_411.ml", 893, 27959, 28014), 0), 0, Tag1 ("Astlib__Ast_411", 363)); (("Pwith_typesubst", 967), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6616)], (0)), 100000000, 0, -6615); (Tag3 ((("type_declaration", 7548)), 0, (0)), 100000000, 0, -6617)]), 0, (("astlib/ast_411.ml", 895, 28045, 28049), ("astlib/ast_411.ml", 895, 28045, 28104), 0), 0, Tag1 ("Astlib__Ast_411", 364)); (("Pwith_modsubst", 968), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6619)], (0)), 100000000, 0, -6618); (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6621)], (0)), 100000000, 0, -6620)]), 0, (("astlib/ast_411.ml", 897, 28165, 28169), ("astlib/ast_411.ml", 897, 28165, 28222), 0), 0, Tag1 ("Astlib__Ast_411", 365))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -6607)), 0, 0, 0, 0, (("astlib/ast_411.ml", 887, 27704, 27706), ("astlib/ast_411.ml", 897, 28165, 28222), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 106)), 2, 0); Tag1 (("module_expr", 7588), (0, 0, [[(("pmod_desc", 969), 0, (Tag3 ((("module_expr_desc", 7589)), 0, (0)), 100000000, 0, -6604), (("astlib/ast_411.ml", 904, 28372, 28378), ("astlib/ast_411.ml", 904, 28372, 28406), 0), 0, Tag1 ("Astlib__Ast_411", 366)); (("pmod_loc", 970), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6605), (("astlib/ast_411.ml", 905, 28407, 28413), ("astlib/ast_411.ml", 905, 28407, 28434), 0), 0, Tag1 ("Astlib__Ast_411", 367)); (("pmod_attributes", 971), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6606), (("astlib/ast_411.ml", 906, 28435, 28441), ("astlib/ast_411.ml", 906, 28435, 28469), 0), 0, Tag1 ("Astlib__Ast_411", 368))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -6603)), 0, 0, 0, 0, (("astlib/ast_411.ml", 902, 28306, 28308), ("astlib/ast_411.ml", 907, 28494, 28499), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 107)), 2, 0); Tag1 (("module_expr_desc", 7589), (0, 0, Tag1 ([(("Pmod_ident", 972), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6593)], (0)), 100000000, 0, -6592)]), 0, (("astlib/ast_411.ml", 910, 28571, 28575), ("astlib/ast_411.ml", 910, 28571, 28606), 0), 0, Tag1 ("Astlib__Ast_411", 369)); (("Pmod_structure", 973), ([(Tag3 ((("structure", 7590)), 0, (0)), 100000000, 0, -6594)]), 0, (("astlib/ast_411.ml", 912, 28619, 28623), ("astlib/ast_411.ml", 912, 28619, 28652), 0), 0, Tag1 ("Astlib__Ast_411", 370)); (("Pmod_functor", 974), ([(Tag3 ((("functor_parameter", 7574)), 0, (0)), 100000000, 0, -6595); (Tag3 ((("module_expr", 7588)), 0, (0)), 100000000, 0, -6596)]), 0, (("astlib/ast_411.ml", 914, 28678, 28682), ("astlib/ast_411.ml", 914, 28678, 28731), 0), 0, Tag1 ("Astlib__Ast_411", 371)); (("Pmod_apply", 975), ([(Tag3 ((("module_expr", 7588)), 0, (0)), 100000000, 0, -6597); (Tag3 ((("module_expr", 7588)), 0, (0)), 100000000, 0, -6598)]), 0, (("astlib/ast_411.ml", 916, 28765, 28769), ("astlib/ast_411.ml", 916, 28765, 28810), 0), 0, Tag1 ("Astlib__Ast_411", 372)); (("Pmod_constraint", 976), ([(Tag3 ((("module_expr", 7588)), 0, (0)), 100000000, 0, -6599); (Tag3 ((("module_type", 7572)), 0, (0)), 100000000, 0, -6600)]), 0, (("astlib/ast_411.ml", 918, 28830, 28834), ("astlib/ast_411.ml", 918, 28830, 28880), 0), 0, Tag1 ("Astlib__Ast_411", 373)); (("Pmod_unpack", 977), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6601)]), 0, (("astlib/ast_411.ml", 920, 28901, 28905), ("astlib/ast_411.ml", 920, 28901, 28932), 0), 0, Tag1 ("Astlib__Ast_411", 374)); (("Pmod_extension", 978), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -6602)]), 0, (("astlib/ast_411.ml", 922, 28951, 28955), ("astlib/ast_411.ml", 922, 28951, 28984), 0), 0, Tag1 ("Astlib__Ast_411", 375))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -6591)), 0, 0, 0, 0, (("astlib/ast_411.ml", 909, 28501, 28503), ("astlib/ast_411.ml", 922, 28951, 28984), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 108)), 2, 0); Tag1 (("structure", 7590), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7591)), 0, (0)), 100000000, 0, -6590)], (0)), 100000000, 0, -6589)), 0, 0, 0, 0, (("astlib/ast_411.ml", 925, 29002, 29004), ("astlib/ast_411.ml", 925, 29002, 29039), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 109)), 2, 0); Tag1 (("structure_item", 7591), (0, 0, [[(("pstr_desc", 979), 0, (Tag3 ((("structure_item_desc", 7592)), 0, (0)), 100000000, 0, -6587), (("astlib/ast_411.ml", 929, 29113, 29119), ("astlib/ast_411.ml", 929, 29113, 29150), 0), 0, Tag1 ("Astlib__Ast_411", 376)); (("pstr_loc", 980), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6588), (("astlib/ast_411.ml", 930, 29151, 29157), ("astlib/ast_411.ml", 930, 29151, 29178), 0), 0, Tag1 ("Astlib__Ast_411", 377))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -6586)), 0, 0, 0, 0, (("astlib/ast_411.ml", 927, 29041, 29043), ("astlib/ast_411.ml", 931, 29179, 29184), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 110)), 2, 0); Tag1 (("structure_item_desc", 7592), (0, 0, Tag1 ([(("Pstr_eval", 981), ([(Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6562); (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6563)]), 0, (("astlib/ast_411.ml", 934, 29262, 29266), ("astlib/ast_411.ml", 934, 29262, 29304), 0), 0, Tag1 ("Astlib__Ast_411", 378)); (("Pstr_value", 982), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "rec_flag"), 0, (0)), 100000000, 0, -6564); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7593)), 0, (0)), 100000000, 0, -6566)], (0)), 100000000, 0, -6565)]), 0, (("astlib/ast_411.ml", 936, 29317, 29321), ("astlib/ast_411.ml", 936, 29317, 29366), 0), 0, Tag1 ("Astlib__Ast_411", 379)); (("Pstr_primitive", 983), ([(Tag3 ((("value_description", 7547)), 0, (0)), 100000000, 0, -6567)]), 0, (("astlib/ast_411.ml", 940, 29505, 29509), ("astlib/ast_411.ml", 940, 29505, 29546), 0), 0, Tag1 ("Astlib__Ast_411", 380)); (("Pstr_type", 984), ([(Tag3 (Tag1 ((("Asttypes", 7512)), "rec_flag"), 0, (0)), 100000000, 0, -6568); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7548)), 0, (0)), 100000000, 0, -6570)], (0)), 100000000, 0, -6569)]), 0, (("astlib/ast_411.ml", 943, 29605, 29609), ("astlib/ast_411.ml", 943, 29605, 29656), 0), 0, Tag1 ("Astlib__Ast_411", 381)); (("Pstr_typext", 985), ([(Tag3 ((("type_extension", 7553)), 0, (0)), 100000000, 0, -6571)]), 0, (("astlib/ast_411.ml", 945, 29702, 29706), ("astlib/ast_411.ml", 945, 29702, 29737), 0), 0, Tag1 ("Astlib__Ast_411", 382)); (("Pstr_exception", 986), ([(Tag3 ((("type_exception", 7555)), 0, (0)), 100000000, 0, -6572)]), 0, (("astlib/ast_411.ml", 947, 29763, 29767), ("astlib/ast_411.ml", 947, 29763, 29801), 0), 0, Tag1 ("Astlib__Ast_411", 383)); (("Pstr_module", 987), ([(Tag3 ((("module_binding", 7594)), 0, (0)), 100000000, 0, -6573)]), 0, (("astlib/ast_411.ml", 950, 29854, 29858), ("astlib/ast_411.ml", 950, 29854, 29889), 0), 0, Tag1 ("Astlib__Ast_411", 384)); (("Pstr_recmodule", 988), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7594)), 0, (0)), 100000000, 0, -6575)], (0)), 100000000, 0, -6574)]), 0, (("astlib/ast_411.ml", 952, 29914, 29918), ("astlib/ast_411.ml", 952, 29914, 29957), 0), 0, Tag1 ("Astlib__Ast_411", 385)); (("Pstr_modtype", 989), ([(Tag3 ((("module_type_declaration", 7580)), 0, (0)), 100000000, 0, -6576)]), 0, (("astlib/ast_411.ml", 954, 30009, 30013), ("astlib/ast_411.ml", 954, 30009, 30054), 0), 0, Tag1 ("Astlib__Ast_411", 386)); (("Pstr_open", 990), ([(Tag3 ((("open_declaration", 7583)), 0, (0)), 100000000, 0, -6577)]), 0, (("astlib/ast_411.ml", 956, 30084, 30088), ("astlib/ast_411.ml", 956, 30084, 30119), 0), 0, Tag1 ("Astlib__Ast_411", 387)); (("Pstr_class", 991), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7571)), 0, (0)), 100000000, 0, -6579)], (0)), 100000000, 0, -6578)]), 0, (("astlib/ast_411.ml", 958, 30137, 30141), ("astlib/ast_411.ml", 958, 30137, 30179), 0), 0, Tag1 ("Astlib__Ast_411", 388)); (("Pstr_class_type", 992), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7564)), 0, (0)), 100000000, 0, -6581)], (0)), 100000000, 0, -6580)]), 0, (("astlib/ast_411.ml", 960, 30226, 30230), ("astlib/ast_411.ml", 960, 30226, 30278), 0), 0, Tag1 ("Astlib__Ast_411", 389)); (("Pstr_include", 993), ([(Tag3 ((("include_declaration", 7586)), 0, (0)), 100000000, 0, -6582)]), 0, (("astlib/ast_411.ml", 962, 30332, 30336), ("astlib/ast_411.ml", 962, 30332, 30373), 0), 0, Tag1 ("Astlib__Ast_411", 390)); (("Pstr_attribute", 994), ([(Tag3 ((("attribute", 7529)), 0, (0)), 100000000, 0, -6583)]), 0, (("astlib/ast_411.ml", 964, 30395, 30399), ("astlib/ast_411.ml", 964, 30395, 30428), 0), 0, Tag1 ("Astlib__Ast_411", 391)); (("Pstr_extension", 995), ([(Tag3 ((("extension", 7530)), 0, (0)), 100000000, 0, -6584); (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6585)]), 0, (("astlib/ast_411.ml", 966, 30447, 30451), ("astlib/ast_411.ml", 966, 30447, 30493), 0), 0, Tag1 ("Astlib__Ast_411", 392))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -6561)), 0, 0, 0, 0, (("astlib/ast_411.ml", 933, 29186, 29188), ("astlib/ast_411.ml", 966, 30447, 30493), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 111)), 2, 0); Tag1 (("value_binding", 7593), (0, 0, [[(("pvb_pat", 996), 0, (Tag3 ((("pattern", 7540)), 0, (0)), 100000000, 0, -6557), (("astlib/ast_411.ml", 971, 30582, 30588), ("astlib/ast_411.ml", 971, 30582, 30605), 0), 0, Tag1 ("Astlib__Ast_411", 393)); (("pvb_expr", 997), 0, (Tag3 ((("expression", 7542)), 0, (0)), 100000000, 0, -6558), (("astlib/ast_411.ml", 972, 30606, 30612), ("astlib/ast_411.ml", 972, 30606, 30633), 0), 0, Tag1 ("Astlib__Ast_411", 394)); (("pvb_attributes", 998), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6559), (("astlib/ast_411.ml", 973, 30634, 30640), ("astlib/ast_411.ml", 973, 30634, 30667), 0), 0, Tag1 ("Astlib__Ast_411", 395)); (("pvb_loc", 999), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6560), (("astlib/ast_411.ml", 974, 30668, 30674), ("astlib/ast_411.ml", 974, 30668, 30694), 0), 0, Tag1 ("Astlib__Ast_411", 396))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -6556)), 0, 0, 0, 0, (("astlib/ast_411.ml", 969, 30512, 30514), ("astlib/ast_411.ml", 975, 30695, 30700), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 112)), 2, 0); Tag1 (("module_binding", 7594), (0, 0, [[(("pmb_name", 1000), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6552)], (0)), 100000000, 0, -6551)], (0)), 100000000, 0, -6550), (("astlib/ast_411.ml", 979, 30774, 30780), ("astlib/ast_411.ml", 979, 30774, 30808), 0), 0, Tag1 ("Astlib__Ast_411", 397)); (("pmb_expr", 1001), 0, (Tag3 ((("module_expr", 7588)), 0, (0)), 100000000, 0, -6553), (("astlib/ast_411.ml", 980, 30809, 30815), ("astlib/ast_411.ml", 980, 30809, 30837), 0), 0, Tag1 ("Astlib__Ast_411", 398)); (("pmb_attributes", 1002), 0, (Tag3 ((("attributes", 7531)), 0, (0)), 100000000, 0, -6554), (("astlib/ast_411.ml", 981, 30838, 30844), ("astlib/ast_411.ml", 981, 30838, 30871), 0), 0, Tag1 ("Astlib__Ast_411", 399)); (("pmb_loc", 1003), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6555), (("astlib/ast_411.ml", 982, 30872, 30878), ("astlib/ast_411.ml", 982, 30872, 30898), 0), 0, Tag1 ("Astlib__Ast_411", 400))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -6549)), 0, 0, 0, 0, (("astlib/ast_411.ml", 977, 30702, 30704), ("astlib/ast_411.ml", 983, 30899, 30904), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 113)), 2, 0); Tag1 (("toplevel_phrase", 7595), (0, 0, Tag1 ([(("Ptop_def", 1018), ([(Tag3 ((("structure", 7590)), 0, (0)), 100000000, 0, -6547)]), 0, (("astlib/ast_411.ml", 991, 31039, 31043), ("astlib/ast_411.ml", 991, 31039, 31066), 0), 0, Tag1 ("Astlib__Ast_411", 405)); (("Ptop_dir", 1019), ([(Tag3 ((("toplevel_directive", 7596)), 0, (0)), 100000000, 0, -6548)]), 0, (("astlib/ast_411.ml", 992, 31067, 31071), ("astlib/ast_411.ml", 992, 31067, 31103), 0), 0, Tag1 ("Astlib__Ast_411", 406))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -6546)), 0, 0, 0, 0, (("astlib/ast_411.ml", 990, 30970, 30972), ("astlib/ast_411.ml", 992, 31067, 31103), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 401)), 1, 0); Tag1 (("toplevel_directive", 7596), (0, 0, [[(("pdir_name", 1020), 0, (Tag3 (Tag1 ((("Asttypes", 7512)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6542)], (0)), 100000000, 0, -6541), (("astlib/ast_411.ml", 997, 31211, 31217), ("astlib/ast_411.ml", 997, 31211, 31240), 0), 0, Tag1 ("Astlib__Ast_411", 407)); (("pdir_arg", 1021), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("directive_argument", 7597)), 0, (0)), 100000000, 0, -6544)], (0)), 100000000, 0, -6543), (("astlib/ast_411.ml", 998, 31241, 31247), ("astlib/ast_411.ml", 998, 31241, 31284), 0), 0, Tag1 ("Astlib__Ast_411", 408)); (("pdir_loc", 1022), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6545), (("astlib/ast_411.ml", 999, 31285, 31291), ("astlib/ast_411.ml", 999, 31285, 31313), 0), 0, Tag1 ("Astlib__Ast_411", 409))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "toplevel_directive"), 0, (0)), 100000000, 0, -6540)), 0, 0, 0, 0, (("astlib/ast_411.ml", 995, 31131, 31133), ("astlib/ast_411.ml", 1000, 31314, 31319), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 402)), 2, 0); Tag1 (("directive_argument", 7597), (0, 0, [[(("pdira_desc", 1023), 0, (Tag3 ((("directive_argument_desc", 7598)), 0, (0)), 100000000, 0, -6538), (("astlib/ast_411.ml", 1004, 31401, 31407), ("astlib/ast_411.ml", 1004, 31401, 31444), 0), 0, Tag1 ("Astlib__Ast_411", 410)); (("pdira_loc", 1024), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -6539), (("astlib/ast_411.ml", 1005, 31445, 31451), ("astlib/ast_411.ml", 1005, 31445, 31474), 0), 0, Tag1 ("Astlib__Ast_411", 411))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -6537)), 0, 0, 0, 0, (("astlib/ast_411.ml", 1002, 31321, 31323), ("astlib/ast_411.ml", 1006, 31475, 31480), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 403)), 2, 0); Tag1 (("directive_argument_desc", 7598), (0, 0, Tag1 ([(("Pdir_string", 1025), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6531)]), 0, (("astlib/ast_411.ml", 1009, 31566, 31570), ("astlib/ast_411.ml", 1009, 31566, 31593), 0), 0, Tag1 ("Astlib__Ast_411", 412)); (("Pdir_int", 1026), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6532); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -6534)], (0)), 100000000, 0, -6533)]), 0, (("astlib/ast_411.ml", 1010, 31594, 31598), ("astlib/ast_411.ml", 1010, 31594, 31632), 0), 0, Tag1 ("Astlib__Ast_411", 413)); (("Pdir_ident", 1027), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -6535)]), 0, (("astlib/ast_411.ml", 1011, 31633, 31637), ("astlib/ast_411.ml", 1011, 31633, 31664), 0), 0, Tag1 ("Astlib__Ast_411", 414)); (("Pdir_bool", 1028), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -6536)]), 0, (("astlib/ast_411.ml", 1012, 31665, 31669), ("astlib/ast_411.ml", 1012, 31665, 31688), 0), 0, Tag1 ("Astlib__Ast_411", 415))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_411")), "Parsetree"), "directive_argument_desc"), 0, (0)), 100000000, 0, -6530)), 0, 0, 0, 0, (("astlib/ast_411.ml", 1008, 31482, 31484), ("astlib/ast_411.ml", 1012, 31665, 31688), 0), 0, 0, 0, Tag1 ("Astlib__Ast_411", 404)), 2, 0)]), 0, (("astlib/ast_411.ml", 64, 2712, 2712), ("astlib/ast_411.ml", 1013, 31689, 31692), 0), Tag1 ("Astlib__Ast_411", 416)), 0, 0); Tag3 (("Config", 7514), 0, (Tag1 ([(("ast_impl_magic_number", 7599), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7182), 0, (("astlib/ast_411.ml", 1016, 31717, 31723), ("astlib/ast_411.ml", 1016, 31717, 31744), 0), 0, Tag1 ("Astlib__Ast_411", 417)), 0); (("ast_intf_magic_number", 7600), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7181), 0, (("astlib/ast_411.ml", 1017, 31762, 31768), ("astlib/ast_411.ml", 1017, 31762, 31789), 0), 0, Tag1 ("Astlib__Ast_411", 418)), 0)]), 0, (("astlib/ast_411.ml", 1015, 31694, 31694), ("astlib/ast_411.ml", 1018, 31807, 31810), 0), Tag1 ("Astlib__Ast_411", 419)), 0, 0)]), 0, (("astlib/astlib.ml", 34, 1588, 1588), ("astlib/astlib.ml", 34, 1588, 1612), 0), Tag1 ("Astlib", 9)), 0, 0); (("version", 7507), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6503), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7508), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -6502), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7509), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -6483), 0), 100000000, 0, -6482), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -6499), 0), 100000000, 0, -6498), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -6501), 0), 100000000, 0, -6500), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -6493), 0), 100000000, 0, -6492), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -6465), 0), 100000000, 0, -6464), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -6479), 0), 100000000, 0, -6478), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -6469), 0), 100000000, 0, -6468), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -6491), 0), 100000000, 0, -6490), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -6477), 0), 100000000, 0, -6476), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -6475), 0), 100000000, 0, -6474), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -6473), 0), 100000000, 0, -6472), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -6471), 0), 100000000, 0, -6470), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -6487), 0), 100000000, 0, -6486), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -6495), 0), 100000000, 0, -6494), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -6489), 0), 100000000, 0, -6488), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -6467), 0), 100000000, 0, -6466), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -6481), 0), 100000000, 0, -6480), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -6497), 0), 100000000, 0, -6496), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7506)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -6485), 0), 100000000, 0, -6484), (0, 100000000, 0, -6463)), 100000000, 0, 930)), 100000000, 0, 931)), 100000000, 0, 932)), 100000000, 0, 933)), 100000000, 0, 934)), 100000000, 0, 935)), 100000000, 0, 936)), 100000000, 0, 937)), 100000000, 0, 938)), 100000000, 0, 939)), 100000000, 0, 940)), 100000000, 0, 941)), 100000000, 0, 942)), 100000000, 0, 943)), 100000000, 0, 944)), 100000000, 0, 945)), 100000000, 0, 946)), 100000000, 0, 947)), 100000000, 0, -6444), (0)), 100000000, 0, -6443)], (0)), 100000000, 0, -6442)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7510), ((("witnesses", 6673)), [((("_")), 100000000, 0, -6441)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7509)), 0, (0)), 100000000, 0, -6440)], (0)), 100000000, 0, -6439)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7511), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7509)), 0, (0)), 100000000, 0, -6438)], (0)), 100000000, 0, -6437), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 154, 5742, 5742), ("ast/versions.mli", 154, 5742, 5807), 0), Tag1 ("Ppxlib_ast__Versions", 43)), 0, 0); Tag3 (("OCaml_412", 6686), 0, (Tag1 ([Tag3 (("Ast", 7601), 0, (Tag1 ([Tag3 (("Asttypes", 7607), 0, (Tag1 ([Tag1 (("constant", 7610), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7267)]), 0, (("astlib/ast_412.ml", 22, 1494, 1500), ("astlib/ast_412.ml", 22, 1494, 1516), 0), 0, Tag1 ("Astlib__Ast_412", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7268)]), 0, (("astlib/ast_412.ml", 23, 1517, 1521), ("astlib/ast_412.ml", 23, 1517, 1541), 0), 0, Tag1 ("Astlib__Ast_412", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7269); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7270); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7272)], (0)), 100000000, 0, -7271)]), 0, (("astlib/ast_412.ml", 24, 1542, 1546), ("astlib/ast_412.ml", 24, 1542, 1599), 0), 0, Tag1 ("Astlib__Ast_412", 3)); (("Const_float", 333), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7273)]), 0, (("astlib/ast_412.ml", 25, 1600, 1604), ("astlib/ast_412.ml", 25, 1600, 1627), 0), 0, Tag1 ("Astlib__Ast_412", 4)); (("Const_int32", 334), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -7274)]), 0, (("astlib/ast_412.ml", 26, 1628, 1632), ("astlib/ast_412.ml", 26, 1628, 1654), 0), 0, Tag1 ("Astlib__Ast_412", 5)); (("Const_int64", 335), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -7275)]), 0, (("astlib/ast_412.ml", 27, 1655, 1659), ("astlib/ast_412.ml", 27, 1655, 1681), 0), 0, Tag1 ("Astlib__Ast_412", 6)); (("Const_nativeint", 336), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -7276)]), 0, (("astlib/ast_412.ml", 28, 1682, 1686), ("astlib/ast_412.ml", 28, 1682, 1716), 0), 0, Tag1 ("Astlib__Ast_412", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -7266)), 0, 0, 0, 0, (("astlib/ast_412.ml", 21, 1440, 1442), ("astlib/ast_412.ml", 28, 1682, 1716), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 0)), 1, 0); Tag1 (("rec_flag", 7611), (0, 0, Tag1 ([(("Nonrecursive", 543), (0), 0, (("astlib/ast_412.ml", 30, 1718, 1772), ("astlib/ast_412.ml", 30, 1718, 1784), 0), 0, Tag1 ("Astlib__Ast_412", 9)); (("Recursive", 544), (0), 0, (("astlib/ast_412.ml", 30, 1718, 1785), ("astlib/ast_412.ml", 30, 1718, 1796), 0), 0, Tag1 ("Astlib__Ast_412", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -7265)), 0, 0, 0, 0, (("astlib/ast_412.ml", 30, 1718, 1720), ("astlib/ast_412.ml", 30, 1718, 1796), 0), 0, 1, 0, Tag1 ("Astlib__Ast_412", 8)), 1, 0); Tag1 (("direction_flag", 7612), (0, 0, Tag1 ([(("Upto", 546), (0), 0, (("astlib/ast_412.ml", 32, 1798, 1864), ("astlib/ast_412.ml", 32, 1798, 1868), 0), 0, Tag1 ("Astlib__Ast_412", 12)); (("Downto", 547), (0), 0, (("astlib/ast_412.ml", 32, 1798, 1869), ("astlib/ast_412.ml", 32, 1798, 1877), 0), 0, Tag1 ("Astlib__Ast_412", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -7264)), 0, 0, 0, 0, (("astlib/ast_412.ml", 32, 1798, 1800), ("astlib/ast_412.ml", 32, 1798, 1877), 0), 0, 1, 0, Tag1 ("Astlib__Ast_412", 11)), 1, 0); Tag1 (("private_flag", 7613), (0, 0, Tag1 ([(("Private", 549), (0), 0, (("astlib/ast_412.ml", 35, 1933, 1995), ("astlib/ast_412.ml", 35, 1933, 2002), 0), 0, Tag1 ("Astlib__Ast_412", 15)); (("Public", 550), (0), 0, (("astlib/ast_412.ml", 35, 1933, 2003), ("astlib/ast_412.ml", 35, 1933, 2011), 0), 0, Tag1 ("Astlib__Ast_412", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -7263)), 0, 0, 0, 0, (("astlib/ast_412.ml", 35, 1933, 1935), ("astlib/ast_412.ml", 35, 1933, 2011), 0), 0, 1, 0, Tag1 ("Astlib__Ast_412", 14)), 1, 0); Tag1 (("mutable_flag", 7614), (0, 0, Tag1 ([(("Immutable", 552), (0), 0, (("astlib/ast_412.ml", 37, 2013, 2075), ("astlib/ast_412.ml", 37, 2013, 2084), 0), 0, Tag1 ("Astlib__Ast_412", 18)); (("Mutable", 553), (0), 0, (("astlib/ast_412.ml", 37, 2013, 2085), ("astlib/ast_412.ml", 37, 2013, 2094), 0), 0, Tag1 ("Astlib__Ast_412", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -7262)), 0, 0, 0, 0, (("astlib/ast_412.ml", 37, 2013, 2015), ("astlib/ast_412.ml", 37, 2013, 2094), 0), 0, 1, 0, Tag1 ("Astlib__Ast_412", 17)), 1, 0); Tag1 (("virtual_flag", 7615), (0, 0, Tag1 ([(("Virtual", 555), (0), 0, (("astlib/ast_412.ml", 39, 2096, 2158), ("astlib/ast_412.ml", 39, 2096, 2165), 0), 0, Tag1 ("Astlib__Ast_412", 21)); (("Concrete", 556), (0), 0, (("astlib/ast_412.ml", 39, 2096, 2166), ("astlib/ast_412.ml", 39, 2096, 2176), 0), 0, Tag1 ("Astlib__Ast_412", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -7261)), 0, 0, 0, 0, (("astlib/ast_412.ml", 39, 2096, 2098), ("astlib/ast_412.ml", 39, 2096, 2176), 0), 0, 1, 0, Tag1 ("Astlib__Ast_412", 20)), 1, 0); Tag1 (("override_flag", 7616), (0, 0, Tag1 ([(("Override", 558), (0), 0, (("astlib/ast_412.ml", 41, 2178, 2242), ("astlib/ast_412.ml", 41, 2178, 2250), 0), 0, Tag1 ("Astlib__Ast_412", 24)); (("Fresh", 559), (0), 0, (("astlib/ast_412.ml", 41, 2178, 2251), ("astlib/ast_412.ml", 41, 2178, 2258), 0), 0, Tag1 ("Astlib__Ast_412", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -7260)), 0, 0, 0, 0, (("astlib/ast_412.ml", 41, 2178, 2180), ("astlib/ast_412.ml", 41, 2178, 2258), 0), 0, 1, 0, Tag1 ("Astlib__Ast_412", 23)), 1, 0); Tag1 (("closed_flag", 7617), (0, 0, Tag1 ([(("Closed", 561), (0), 0, (("astlib/ast_412.ml", 43, 2260, 2320), ("astlib/ast_412.ml", 43, 2260, 2326), 0), 0, Tag1 ("Astlib__Ast_412", 27)); (("Open", 562), (0), 0, (("astlib/ast_412.ml", 43, 2260, 2327), ("astlib/ast_412.ml", 43, 2260, 2333), 0), 0, Tag1 ("Astlib__Ast_412", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -7259)), 0, 0, 0, 0, (("astlib/ast_412.ml", 43, 2260, 2262), ("astlib/ast_412.ml", 43, 2260, 2333), 0), 0, 1, 0, Tag1 ("Astlib__Ast_412", 26)), 1, 0); Tag1 (("label", 7618), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7258)), 0, 0, 0, 0, (("astlib/ast_412.ml", 45, 2335, 2337), ("astlib/ast_412.ml", 45, 2335, 2356), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 29)), 1, 0); Tag1 (("arg_label", 7619), (0, 0, Tag1 ([(("Nolabel", 565), (0), 0, (("astlib/ast_412.ml", 48, 2414, 2420), ("astlib/ast_412.ml", 48, 2414, 2427), 0), 0, Tag1 ("Astlib__Ast_412", 31)); (("Labelled", 566), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7256)]), 0, (("astlib/ast_412.ml", 49, 2428, 2432), ("astlib/ast_412.ml", 49, 2428, 2452), 0), 0, Tag1 ("Astlib__Ast_412", 32)); (("Optional", 567), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7257)]), 0, (("astlib/ast_412.ml", 50, 2475, 2479), ("astlib/ast_412.ml", 50, 2475, 2499), 0), 0, Tag1 ("Astlib__Ast_412", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -7255)), 0, 0, 0, 0, (("astlib/ast_412.ml", 47, 2358, 2360), ("astlib/ast_412.ml", 50, 2475, 2499), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 30)), 1, 0); Tag1 (("loc", 7620), ([((("a")), 100000000, 0, -7253)], 1, [[(("txt", 569), 0, ((("a")), 100000000, 0, -7253), (("astlib/ast_412.ml", 53, 2559, 2563), ("astlib/ast_412.ml", 53, 2559, 2572), 0), 0, Tag1 ("Astlib__Ast_412", 35)); (("loc", 570), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7254), (("astlib/ast_412.ml", 54, 2573, 2577), ("astlib/ast_412.ml", 54, 2573, 2594), 0), 0, Tag1 ("Astlib__Ast_412", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -7253)], (0)), 100000000, 0, -7252)), [25], [0], 0, 0, (("astlib/ast_412.ml", 52, 2523, 2525), ("astlib/ast_412.ml", 55, 2595, 2598), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 34)), 1, 0); Tag1 (("variance", 7621), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_412.ml", 58, 2654, 2658), ("astlib/ast_412.ml", 58, 2654, 2669), 0), 0, Tag1 ("Astlib__Ast_412", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_412.ml", 59, 2670, 2674), ("astlib/ast_412.ml", 59, 2670, 2689), 0), 0, Tag1 ("Astlib__Ast_412", 39)); (("NoVariance", 640), (0), 0, (("astlib/ast_412.ml", 60, 2690, 2694), ("astlib/ast_412.ml", 60, 2690, 2706), 0), 0, Tag1 ("Astlib__Ast_412", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -7251)), 0, 0, 0, 0, (("astlib/ast_412.ml", 57, 2600, 2602), ("astlib/ast_412.ml", 60, 2690, 2706), 0), 0, 1, 0, Tag1 ("Astlib__Ast_412", 37)), 1, 0); Tag1 (("injectivity", 7622), (0, 0, Tag1 ([(("Injective", 642), (0), 0, (("astlib/ast_412.ml", 63, 2768, 2772), ("astlib/ast_412.ml", 63, 2768, 2783), 0), 0, Tag1 ("Astlib__Ast_412", 42)); (("NoInjectivity", 643), (0), 0, (("astlib/ast_412.ml", 64, 2784, 2788), ("astlib/ast_412.ml", 64, 2784, 2803), 0), 0, Tag1 ("Astlib__Ast_412", 43))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Asttypes"), "injectivity"), 0, (0)), 100000000, 0, -7250)), 0, 0, 0, 0, (("astlib/ast_412.ml", 62, 2708, 2710), ("astlib/ast_412.ml", 64, 2784, 2803), 0), 0, 1, 0, Tag1 ("Astlib__Ast_412", 41)), 1, 0)]), 0, (("astlib/ast_412.ml", 20, 1415, 1415), ("astlib/ast_412.ml", 65, 2804, 2807), 0), Tag1 ("Astlib__Ast_412", 44)), 0, 0); Tag3 (("Parsetree", 7608), 0, (Tag1 ([Tag1 (("constant", 7623), (0, 0, Tag1 ([(("Pconst_integer", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7923); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7925)], (0)), 100000000, 0, -7924)]), 0, (("astlib/ast_412.ml", 71, 2907, 2913), ("astlib/ast_412.ml", 71, 2907, 2951), 0), 0, Tag1 ("Astlib__Ast_412", 46)); (("Pconst_char", 647), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7926)]), 0, (("astlib/ast_412.ml", 77, 3105, 3109), ("astlib/ast_412.ml", 77, 3105, 3130), 0), 0, Tag1 ("Astlib__Ast_412", 47)); (("Pconst_string", 648), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7927); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7928); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7930)], (0)), 100000000, 0, -7929)]), 0, (("astlib/ast_412.ml", 79, 3145, 3149), ("astlib/ast_412.ml", 79, 3145, 3203), 0), 0, Tag1 ("Astlib__Ast_412", 48)); (("Pconst_float", 649), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7931); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7933)], (0)), 100000000, 0, -7932)]), 0, (("astlib/ast_412.ml", 85, 3342, 3346), ("astlib/ast_412.ml", 85, 3342, 3384), 0), 0, Tag1 ("Astlib__Ast_412", 49))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -7922)), 0, 0, 0, 0, (("astlib/ast_412.ml", 70, 2852, 2854), ("astlib/ast_412.ml", 85, 3342, 3384), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 45)), 1, 0); Tag1 (("location_stack", 7624), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7921)], (0)), 100000000, 0, -7920)), 0, 0, 0, 0, (("astlib/ast_412.ml", 92, 3520, 3522), ("astlib/ast_412.ml", 92, 3520, 3559), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 50)), 1, 0); Tag1 (("attribute", 7625), (0, 0, [[(("attr_name", 717), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7917)], (0)), 100000000, 0, -7916), (("astlib/ast_412.ml", 97, 3651, 3655), ("astlib/ast_412.ml", 97, 3651, 3678), 0), 0, Tag1 ("Astlib__Ast_412", 117)); (("attr_payload", 718), 0, (Tag3 ((("payload", 7628)), 0, (0)), 100000000, 0, -7918), (("astlib/ast_412.ml", 98, 3679, 3683), ("astlib/ast_412.ml", 98, 3679, 3706), 0), 0, Tag1 ("Astlib__Ast_412", 118)); (("attr_loc", 719), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7919), (("astlib/ast_412.ml", 99, 3707, 3711), ("astlib/ast_412.ml", 99, 3707, 3733), 0), 0, Tag1 ("Astlib__Ast_412", 119))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "attribute"), 0, (0)), 100000000, 0, -7915)), 0, 0, 0, 0, (("astlib/ast_412.ml", 96, 3592, 3594), ("astlib/ast_412.ml", 100, 3734, 3737), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 51)), 1, 0); Tag1 (("extension", 7626), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7913)], (0)), 100000000, 0, -7912); (Tag3 ((("payload", 7628)), 0, (0)), 100000000, 0, -7914)]), 100000000, 0, -7911)), 0, 0, 0, 0, (("astlib/ast_412.ml", 108, 3877, 3879), ("astlib/ast_412.ml", 108, 3877, 3915), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 52)), 2, 0); Tag1 (("attributes", 7627), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 7625)), 0, (0)), 100000000, 0, -7910)], (0)), 100000000, 0, -7909)), 0, 0, 0, 0, (("astlib/ast_412.ml", 115, 4016, 4018), ("astlib/ast_412.ml", 115, 4016, 4049), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 53)), 2, 0); Tag1 (("payload", 7628), (0, 0, Tag1 ([(("PStr", 720), ([(Tag3 ((("structure", 7686)), 0, (0)), 100000000, 0, -7903)]), 0, (("astlib/ast_412.ml", 118, 4103, 4107), ("astlib/ast_412.ml", 118, 4103, 4126), 0), 0, Tag1 ("Astlib__Ast_412", 120)); (("PSig", 721), ([(Tag3 ((("signature", 7671)), 0, (0)), 100000000, 0, -7904)]), 0, (("astlib/ast_412.ml", 119, 4127, 4131), ("astlib/ast_412.ml", 119, 4127, 4150), 0), 0, Tag1 ("Astlib__Ast_412", 121)); (("PTyp", 722), ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7905)]), 0, (("astlib/ast_412.ml", 120, 4163, 4167), ("astlib/ast_412.ml", 120, 4163, 4186), 0), 0, Tag1 ("Astlib__Ast_412", 122)); (("PPat", 723), ([(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7906); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7908)], (0)), 100000000, 0, -7907)]), 0, (("astlib/ast_412.ml", 121, 4198, 4202), ("astlib/ast_412.ml", 121, 4198, 4239), 0), 0, Tag1 ("Astlib__Ast_412", 123))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -7902)), 0, 0, 0, 0, (("astlib/ast_412.ml", 117, 4051, 4053), ("astlib/ast_412.ml", 121, 4198, 4239), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 54)), 2, 0); Tag1 (("core_type", 7629), (0, 0, [[(("ptyp_desc", 724), 0, (Tag3 ((("core_type_desc", 7630)), 0, (0)), 100000000, 0, -7898), (("astlib/ast_412.ml", 129, 4384, 4390), ("astlib/ast_412.ml", 129, 4384, 4416), 0), 0, Tag1 ("Astlib__Ast_412", 124)); (("ptyp_loc", 725), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7899), (("astlib/ast_412.ml", 130, 4417, 4423), ("astlib/ast_412.ml", 130, 4417, 4444), 0), 0, Tag1 ("Astlib__Ast_412", 125)); (("ptyp_loc_stack", 726), 0, (Tag3 ((("location_stack", 7624)), 0, (0)), 100000000, 0, -7900), (("astlib/ast_412.ml", 131, 4445, 4451), ("astlib/ast_412.ml", 131, 4445, 4482), 0), 0, Tag1 ("Astlib__Ast_412", 126)); (("ptyp_attributes", 727), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7901), (("astlib/ast_412.ml", 132, 4483, 4489), ("astlib/ast_412.ml", 132, 4483, 4517), 0), 0, Tag1 ("Astlib__Ast_412", 127))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -7897)), 0, 0, 0, 0, (("astlib/ast_412.ml", 127, 4322, 4324), ("astlib/ast_412.ml", 133, 4542, 4547), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 55)), 2, 0); Tag1 (("core_type_desc", 7630), (0, 0, Tag1 ([(("Ptyp_any", 728), (0), 0, (("astlib/ast_412.ml", 136, 4615, 4619), ("astlib/ast_412.ml", 136, 4615, 4629), 0), 0, Tag1 ("Astlib__Ast_412", 128)); (("Ptyp_var", 729), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7866)]), 0, (("astlib/ast_412.ml", 138, 4643, 4647), ("astlib/ast_412.ml", 138, 4643, 4667), 0), 0, Tag1 ("Astlib__Ast_412", 129)); (("Ptyp_arrow", 730), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "arg_label"), 0, (0)), 100000000, 0, -7867); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7868); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7869)]), 0, (("astlib/ast_412.ml", 140, 4681, 4685), ("astlib/ast_412.ml", 140, 4681, 4734), 0), 0, Tag1 ("Astlib__Ast_412", 130)); (("Ptyp_tuple", 731), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7871)], (0)), 100000000, 0, -7870)]), 0, (("astlib/ast_412.ml", 145, 4833, 4837), ("astlib/ast_412.ml", 145, 4833, 4867), 0), 0, Tag1 ("Astlib__Ast_412", 131)); (("Ptyp_constr", 732), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7873)], (0)), 100000000, 0, -7872); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7875)], (0)), 100000000, 0, -7874)]), 0, (("astlib/ast_412.ml", 150, 4922, 4926), ("astlib/ast_412.ml", 150, 4922, 4975), 0), 0, Tag1 ("Astlib__Ast_412", 132)); (("Ptyp_object", 736), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 7634)), 0, (0)), 100000000, 0, -7877)], (0)), 100000000, 0, -7876); (Tag3 (Tag1 ((("Asttypes", 7607)), "closed_flag"), 0, (0)), 100000000, 0, -7878)]), 0, (("astlib/ast_412.ml", 155, 5044, 5048), ("astlib/ast_412.ml", 155, 5044, 5096), 0), 0, Tag1 ("Astlib__Ast_412", 133)); (("Ptyp_class", 737), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7880)], (0)), 100000000, 0, -7879); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7882)], (0)), 100000000, 0, -7881)]), 0, (("astlib/ast_412.ml", 159, 5200, 5204), ("astlib/ast_412.ml", 159, 5200, 5252), 0), 0, Tag1 ("Astlib__Ast_412", 134)); (("Ptyp_alias", 738), ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7883); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7884)]), 0, (("astlib/ast_412.ml", 164, 5324, 5328), ("astlib/ast_412.ml", 164, 5324, 5362), 0), 0, Tag1 ("Astlib__Ast_412", 135)); (("Ptyp_variant", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 7632)), 0, (0)), 100000000, 0, -7886)], (0)), 100000000, 0, -7885); (Tag3 (Tag1 ((("Asttypes", 7607)), "closed_flag"), 0, (0)), 100000000, 0, -7887); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7890)], (0)), 100000000, 0, -7889)], (0)), 100000000, 0, -7888)]), 0, (("astlib/ast_412.ml", 166, 5381, 5385), ("astlib/ast_412.ml", 166, 5381, 5451), 0), 0, Tag1 ("Astlib__Ast_412", 136)); (("Ptyp_poly", 740), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7893)], (0)), 100000000, 0, -7892)], (0)), 100000000, 0, -7891); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7894)]), 0, (("astlib/ast_412.ml", 172, 5696, 5700), ("astlib/ast_412.ml", 172, 5696, 5742), 0), 0, Tag1 ("Astlib__Ast_412", 137)); (("Ptyp_package", 741), ([(Tag3 ((("package_type", 7631)), 0, (0)), 100000000, 0, -7895)]), 0, (("astlib/ast_412.ml", 192, 6229, 6233), ("astlib/ast_412.ml", 192, 6229, 6263), 0), 0, Tag1 ("Astlib__Ast_412", 138)); (("Ptyp_extension", 742), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7896)]), 0, (("astlib/ast_412.ml", 194, 6285, 6289), ("astlib/ast_412.ml", 194, 6285, 6318), 0), 0, Tag1 ("Astlib__Ast_412", 139))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -7865)), 0, 0, 0, 0, (("astlib/ast_412.ml", 135, 4549, 4551), ("astlib/ast_412.ml", 194, 6285, 6318), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 56)), 2, 0); Tag1 (("package_type", 7631), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7859)], (0)), 100000000, 0, -7858); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7863)], (0)), 100000000, 0, -7862); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7864)]), 100000000, 0, -7861)], (0)), 100000000, 0, -7860)]), 100000000, 0, -7857)), 0, 0, 0, 0, (("astlib/ast_412.ml", 197, 6336, 6338), ("astlib/ast_412.ml", 197, 6336, 6409), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 57)), 2, 0); Tag1 (("row_field", 7632), (0, 0, [[(("prf_desc", 743), 0, (Tag3 ((("row_field_desc", 7633)), 0, (0)), 100000000, 0, -7854), (("astlib/ast_412.ml", 204, 6564, 6568), ("astlib/ast_412.ml", 204, 6564, 6594), 0), 0, Tag1 ("Astlib__Ast_412", 140)); (("prf_loc", 744), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7855), (("astlib/ast_412.ml", 205, 6595, 6599), ("astlib/ast_412.ml", 205, 6595, 6620), 0), 0, Tag1 ("Astlib__Ast_412", 141)); (("prf_attributes", 745), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7856), (("astlib/ast_412.ml", 206, 6621, 6625), ("astlib/ast_412.ml", 206, 6621, 6653), 0), 0, Tag1 ("Astlib__Ast_412", 142))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -7853)), 0, 0, 0, 0, (("astlib/ast_412.ml", 203, 6506, 6508), ("astlib/ast_412.ml", 207, 6654, 6657), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 58)), 2, 0); Tag1 (("row_field_desc", 7633), (0, 0, Tag1 ([(("Rtag", 746), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7848)], (0)), 100000000, 0, -7847); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7849); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7851)], (0)), 100000000, 0, -7850)]), 0, (("astlib/ast_412.ml", 210, 6725, 6729), ("astlib/ast_412.ml", 210, 6725, 6772), 0), 0, Tag1 ("Astlib__Ast_412", 143)); (("Rinherit", 747), ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7852)]), 0, (("astlib/ast_412.ml", 221, 7175, 7179), ("astlib/ast_412.ml", 221, 7175, 7202), 0), 0, Tag1 ("Astlib__Ast_412", 144))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "row_field_desc"), 0, (0)), 100000000, 0, -7846)), 0, 0, 0, 0, (("astlib/ast_412.ml", 209, 6659, 6661), ("astlib/ast_412.ml", 221, 7175, 7202), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 59)), 2, 0); Tag1 (("object_field", 7634), (0, 0, [[(("pof_desc", 748), 0, (Tag3 ((("object_field_desc", 7635)), 0, (0)), 100000000, 0, -7843), (("astlib/ast_412.ml", 225, 7284, 7288), ("astlib/ast_412.ml", 225, 7284, 7317), 0), 0, Tag1 ("Astlib__Ast_412", 145)); (("pof_loc", 749), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7844), (("astlib/ast_412.ml", 226, 7318, 7322), ("astlib/ast_412.ml", 226, 7318, 7343), 0), 0, Tag1 ("Astlib__Ast_412", 146)); (("pof_attributes", 750), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7845), (("astlib/ast_412.ml", 227, 7344, 7348), ("astlib/ast_412.ml", 227, 7344, 7376), 0), 0, Tag1 ("Astlib__Ast_412", 147))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "object_field"), 0, (0)), 100000000, 0, -7842)), 0, 0, 0, 0, (("astlib/ast_412.ml", 224, 7220, 7222), ("astlib/ast_412.ml", 228, 7377, 7380), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 60)), 2, 0); Tag1 (("object_field_desc", 7635), (0, 0, Tag1 ([(("Otag", 751), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7839)], (0)), 100000000, 0, -7838); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7840)]), 0, (("astlib/ast_412.ml", 231, 7454, 7458), ("astlib/ast_412.ml", 231, 7454, 7489), 0), 0, Tag1 ("Astlib__Ast_412", 148)); (("Oinherit", 752), ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7841)]), 0, (("astlib/ast_412.ml", 232, 7490, 7494), ("astlib/ast_412.ml", 232, 7490, 7517), 0), 0, Tag1 ("Astlib__Ast_412", 149))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "object_field_desc"), 0, (0)), 100000000, 0, -7837)), 0, 0, 0, 0, (("astlib/ast_412.ml", 230, 7382, 7384), ("astlib/ast_412.ml", 232, 7490, 7517), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 61)), 2, 0); Tag1 (("pattern", 7636), (0, 0, [[(("ppat_desc", 753), 0, (Tag3 ((("pattern_desc", 7637)), 0, (0)), 100000000, 0, -7833), (("astlib/ast_412.ml", 238, 7595, 7601), ("astlib/ast_412.ml", 238, 7595, 7625), 0), 0, Tag1 ("Astlib__Ast_412", 150)); (("ppat_loc", 754), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7834), (("astlib/ast_412.ml", 239, 7626, 7632), ("astlib/ast_412.ml", 239, 7626, 7653), 0), 0, Tag1 ("Astlib__Ast_412", 151)); (("ppat_loc_stack", 755), 0, (Tag3 ((("location_stack", 7624)), 0, (0)), 100000000, 0, -7835), (("astlib/ast_412.ml", 240, 7654, 7660), ("astlib/ast_412.ml", 240, 7654, 7691), 0), 0, Tag1 ("Astlib__Ast_412", 152)); (("ppat_attributes", 756), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7836), (("astlib/ast_412.ml", 241, 7692, 7698), ("astlib/ast_412.ml", 241, 7692, 7726), 0), 0, Tag1 ("Astlib__Ast_412", 153))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -7832)), 0, 0, 0, 0, (("astlib/ast_412.ml", 236, 7537, 7539), ("astlib/ast_412.ml", 242, 7751, 7756), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 62)), 2, 0); Tag1 (("pattern_desc", 7637), (0, 0, Tag1 ([(("Ppat_any", 757), (0), 0, (("astlib/ast_412.ml", 245, 7820, 7824), ("astlib/ast_412.ml", 245, 7820, 7834), 0), 0, Tag1 ("Astlib__Ast_412", 154)); (("Ppat_var", 758), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7793)], (0)), 100000000, 0, -7792)]), 0, (("astlib/ast_412.ml", 247, 7847, 7851), ("astlib/ast_412.ml", 247, 7847, 7875), 0), 0, Tag1 ("Astlib__Ast_412", 155)); (("Ppat_alias", 759), ([(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7794); (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7796)], (0)), 100000000, 0, -7795)]), 0, (("astlib/ast_412.ml", 249, 7888, 7892), ("astlib/ast_412.ml", 249, 7888, 7928), 0), 0, Tag1 ("Astlib__Ast_412", 156)); (("Ppat_constant", 760), ([(Tag3 ((("constant", 7623)), 0, (0)), 100000000, 0, -7797)]), 0, (("astlib/ast_412.ml", 251, 7947, 7951), ("astlib/ast_412.ml", 251, 7947, 7978), 0), 0, Tag1 ("Astlib__Ast_412", 157)); (("Ppat_interval", 761), ([(Tag3 ((("constant", 7623)), 0, (0)), 100000000, 0, -7798); (Tag3 ((("constant", 7623)), 0, (0)), 100000000, 0, -7799)]), 0, (("astlib/ast_412.ml", 253, 8021, 8025), ("astlib/ast_412.ml", 253, 8021, 8063), 0), 0, Tag1 ("Astlib__Ast_412", 158)); (("Ppat_tuple", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7801)], (0)), 100000000, 0, -7800)]), 0, (("astlib/ast_412.ml", 258, 8185, 8189), ("astlib/ast_412.ml", 258, 8185, 8217), 0), 0, Tag1 ("Astlib__Ast_412", 159)); (("Ppat_construct", 763), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7803)], (0)), 100000000, 0, -7802); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7805)], (0)), 100000000, 0, -7804)]), 0, (("astlib/ast_412.ml", 263, 8272, 8276), ("astlib/ast_412.ml", 263, 8272, 8328), 0), 0, Tag1 ("Astlib__Ast_412", 160)); (("Ppat_variant", 764), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7806); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7808)], (0)), 100000000, 0, -7807)]), 0, (("astlib/ast_412.ml", 268, 8452, 8456), ("astlib/ast_412.ml", 268, 8452, 8496), 0), 0, Tag1 ("Astlib__Ast_412", 161)); (("Ppat_record", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7812)], (0)), 100000000, 0, -7811); (Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7813)]), 100000000, 0, -7810)], (0)), 100000000, 0, -7809); (Tag3 (Tag1 ((("Asttypes", 7607)), "closed_flag"), 0, (0)), 100000000, 0, -7814)]), 0, (("astlib/ast_412.ml", 272, 8564, 8568), ("astlib/ast_412.ml", 272, 8564, 8631), 0), 0, Tag1 ("Astlib__Ast_412", 162)); (("Ppat_array", 766), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7816)], (0)), 100000000, 0, -7815)]), 0, (("astlib/ast_412.ml", 278, 8760, 8764), ("astlib/ast_412.ml", 278, 8760, 8792), 0), 0, Tag1 ("Astlib__Ast_412", 163)); (("Ppat_or", 767), ([(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7817); (Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7818)]), 0, (("astlib/ast_412.ml", 280, 8821, 8825), ("astlib/ast_412.ml", 280, 8821, 8855), 0), 0, Tag1 ("Astlib__Ast_412", 164)); (("Ppat_constraint", 768), ([(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7819); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7820)]), 0, (("astlib/ast_412.ml", 282, 8874, 8878), ("astlib/ast_412.ml", 282, 8874, 8918), 0), 0, Tag1 ("Astlib__Ast_412", 165)); (("Ppat_type", 769), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7822)], (0)), 100000000, 0, -7821)]), 0, (("astlib/ast_412.ml", 284, 8937, 8941), ("astlib/ast_412.ml", 284, 8937, 8971), 0), 0, Tag1 ("Astlib__Ast_412", 166)); (("Ppat_lazy", 770), ([(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7823)]), 0, (("astlib/ast_412.ml", 286, 8990, 8994), ("astlib/ast_412.ml", 286, 8990, 9016), 0), 0, Tag1 ("Astlib__Ast_412", 167)); (("Ppat_unpack", 771), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7826)], (0)), 100000000, 0, -7825)], (0)), 100000000, 0, -7824)]), 0, (("astlib/ast_412.ml", 288, 9034, 9038), ("astlib/ast_412.ml", 288, 9034, 9072), 0), 0, Tag1 ("Astlib__Ast_412", 168)); (("Ppat_exception", 772), ([(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7827)]), 0, (("astlib/ast_412.ml", 295, 9241, 9245), ("astlib/ast_412.ml", 295, 9241, 9272), 0), 0, Tag1 ("Astlib__Ast_412", 169)); (("Ppat_extension", 773), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7828)]), 0, (("astlib/ast_412.ml", 297, 9295, 9299), ("astlib/ast_412.ml", 297, 9295, 9328), 0), 0, Tag1 ("Astlib__Ast_412", 170)); (("Ppat_open", 774), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7830)], (0)), 100000000, 0, -7829); (Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7831)]), 0, (("astlib/ast_412.ml", 299, 9345, 9349), ("astlib/ast_412.ml", 299, 9345, 9389), 0), 0, Tag1 ("Astlib__Ast_412", 171))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -7791)), 0, 0, 0, 0, (("astlib/ast_412.ml", 244, 7758, 7760), ("astlib/ast_412.ml", 299, 9345, 9389), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 63)), 2, 0); Tag1 (("expression", 7638), (0, 0, [[(("pexp_desc", 775), 0, (Tag3 ((("expression_desc", 7639)), 0, (0)), 100000000, 0, -7787), (("astlib/ast_412.ml", 306, 9498, 9504), ("astlib/ast_412.ml", 306, 9498, 9531), 0), 0, Tag1 ("Astlib__Ast_412", 172)); (("pexp_loc", 776), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7788), (("astlib/ast_412.ml", 307, 9532, 9538), ("astlib/ast_412.ml", 307, 9532, 9559), 0), 0, Tag1 ("Astlib__Ast_412", 173)); (("pexp_loc_stack", 777), 0, (Tag3 ((("location_stack", 7624)), 0, (0)), 100000000, 0, -7789), (("astlib/ast_412.ml", 308, 9560, 9566), ("astlib/ast_412.ml", 308, 9560, 9597), 0), 0, Tag1 ("Astlib__Ast_412", 174)); (("pexp_attributes", 778), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7790), (("astlib/ast_412.ml", 309, 9598, 9604), ("astlib/ast_412.ml", 309, 9598, 9632), 0), 0, Tag1 ("Astlib__Ast_412", 175))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -7786)), 0, 0, 0, 0, (("astlib/ast_412.ml", 304, 9434, 9436), ("astlib/ast_412.ml", 310, 9657, 9662), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 64)), 2, 0); Tag1 (("expression_desc", 7639), (0, 0, Tag1 ([(("Pexp_ident", 779), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7684)], (0)), 100000000, 0, -7683)]), 0, (("astlib/ast_412.ml", 313, 9732, 9736), ("astlib/ast_412.ml", 313, 9732, 9767), 0), 0, Tag1 ("Astlib__Ast_412", 176)); (("Pexp_constant", 780), ([(Tag3 ((("constant", 7623)), 0, (0)), 100000000, 0, -7685)]), 0, (("astlib/ast_412.ml", 317, 9795, 9799), ("astlib/ast_412.ml", 317, 9795, 9826), 0), 0, Tag1 ("Astlib__Ast_412", 177)); (("Pexp_let", 781), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "rec_flag"), 0, (0)), 100000000, 0, -7686); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7689)), 0, (0)), 100000000, 0, -7688)], (0)), 100000000, 0, -7687); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7689)]), 0, (("astlib/ast_412.ml", 319, 9869, 9873), ("astlib/ast_412.ml", 319, 9869, 9929), 0), 0, Tag1 ("Astlib__Ast_412", 178)); (("Pexp_function", 782), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7640)), 0, (0)), 100000000, 0, -7691)], (0)), 100000000, 0, -7690)]), 0, (("astlib/ast_412.ml", 323, 10078, 10082), ("astlib/ast_412.ml", 323, 10078, 10110), 0), 0, Tag1 ("Astlib__Ast_412", 179)); (("Pexp_fun", 783), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "arg_label"), 0, (0)), 100000000, 0, -7692); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7694)], (0)), 100000000, 0, -7693); (Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7695); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7696)]), 0, (("astlib/ast_412.ml", 325, 10156, 10160), ("astlib/ast_412.ml", 325, 10156, 10226), 0), 0, Tag1 ("Astlib__Ast_412", 180)); (("Pexp_apply", 784), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7697); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "arg_label"), 0, (0)), 100000000, 0, -7700); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7701)]), 100000000, 0, -7699)], (0)), 100000000, 0, -7698)]), 0, (("astlib/ast_412.ml", 336, 10676, 10680), ("astlib/ast_412.ml", 336, 10676, 10738), 0), 0, Tag1 ("Astlib__Ast_412", 181)); (("Pexp_match", 785), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7702); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7640)), 0, (0)), 100000000, 0, -7704)], (0)), 100000000, 0, -7703)]), 0, (("astlib/ast_412.ml", 343, 10891, 10895), ("astlib/ast_412.ml", 343, 10891, 10933), 0), 0, Tag1 ("Astlib__Ast_412", 182)); (("Pexp_try", 786), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7705); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7640)), 0, (0)), 100000000, 0, -7707)], (0)), 100000000, 0, -7706)]), 0, (("astlib/ast_412.ml", 345, 10984, 10988), ("astlib/ast_412.ml", 345, 10984, 11024), 0), 0, Tag1 ("Astlib__Ast_412", 183)); (("Pexp_tuple", 787), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7709)], (0)), 100000000, 0, -7708)]), 0, (("astlib/ast_412.ml", 347, 11073, 11077), ("astlib/ast_412.ml", 347, 11073, 11108), 0), 0, Tag1 ("Astlib__Ast_412", 184)); (("Pexp_construct", 788), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7711)], (0)), 100000000, 0, -7710); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7713)], (0)), 100000000, 0, -7712)]), 0, (("astlib/ast_412.ml", 352, 11163, 11167), ("astlib/ast_412.ml", 352, 11163, 11222), 0), 0, Tag1 ("Astlib__Ast_412", 185)); (("Pexp_variant", 789), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7714); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7716)], (0)), 100000000, 0, -7715)]), 0, (("astlib/ast_412.ml", 357, 11343, 11347), ("astlib/ast_412.ml", 357, 11343, 11390), 0), 0, Tag1 ("Astlib__Ast_412", 186)); (("Pexp_record", 790), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7720)], (0)), 100000000, 0, -7719); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7721)]), 100000000, 0, -7718)], (0)), 100000000, 0, -7717); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7723)], (0)), 100000000, 0, -7722)]), 0, (("astlib/ast_412.ml", 361, 11458, 11462), ("astlib/ast_412.ml", 361, 11458, 11534), 0), 0, Tag1 ("Astlib__Ast_412", 187)); (("Pexp_field", 791), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7724); (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7726)], (0)), 100000000, 0, -7725)]), 0, (("astlib/ast_412.ml", 367, 11656, 11660), ("astlib/ast_412.ml", 367, 11656, 11704), 0), 0, Tag1 ("Astlib__Ast_412", 188)); (("Pexp_setfield", 792), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7727); (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7729)], (0)), 100000000, 0, -7728); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7730)]), 0, (("astlib/ast_412.ml", 369, 11719, 11723), ("astlib/ast_412.ml", 369, 11719, 11783), 0), 0, Tag1 ("Astlib__Ast_412", 189)); (("Pexp_array", 793), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7732)], (0)), 100000000, 0, -7731)]), 0, (("astlib/ast_412.ml", 371, 11805, 11809), ("astlib/ast_412.ml", 371, 11805, 11840), 0), 0, Tag1 ("Astlib__Ast_412", 190)); (("Pexp_ifthenelse", 794), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7733); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7734); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7736)], (0)), 100000000, 0, -7735)]), 0, (("astlib/ast_412.ml", 373, 11869, 11873), ("astlib/ast_412.ml", 373, 11869, 11937), 0), 0, Tag1 ("Astlib__Ast_412", 191)); (("Pexp_sequence", 795), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7737); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7738)]), 0, (("astlib/ast_412.ml", 375, 11970, 11974), ("astlib/ast_412.ml", 375, 11970, 12016), 0), 0, Tag1 ("Astlib__Ast_412", 192)); (("Pexp_while", 796), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7739); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7740)]), 0, (("astlib/ast_412.ml", 377, 12034, 12038), ("astlib/ast_412.ml", 377, 12034, 12077), 0), 0, Tag1 ("Astlib__Ast_412", 193)); (("Pexp_for", 797), ([(Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7741); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7742); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7743); (Tag3 (Tag1 ((("Asttypes", 7607)), "direction_flag"), 0, (0)), 100000000, 0, -7744); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7745)]), 0, (("astlib/ast_412.ml", 379, 12108, 12112), ("astlib/ast_412.ml", 380, 12126, 12198), 0), 0, Tag1 ("Astlib__Ast_412", 194)); (("Pexp_constraint", 798), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7746); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7747)]), 0, (("astlib/ast_412.ml", 384, 12316, 12320), ("astlib/ast_412.ml", 384, 12316, 12363), 0), 0, Tag1 ("Astlib__Ast_412", 195)); (("Pexp_coerce", 799), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7748); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7750)], (0)), 100000000, 0, -7749); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7751)]), 0, (("astlib/ast_412.ml", 386, 12382, 12386), ("astlib/ast_412.ml", 386, 12382, 12444), 0), 0, Tag1 ("Astlib__Ast_412", 196)); (("Pexp_send", 800), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7752); (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7754)], (0)), 100000000, 0, -7753)]), 0, (("astlib/ast_412.ml", 390, 12521, 12525), ("astlib/ast_412.ml", 390, 12521, 12562), 0), 0, Tag1 ("Astlib__Ast_412", 197)); (("Pexp_new", 801), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7756)], (0)), 100000000, 0, -7755)]), 0, (("astlib/ast_412.ml", 392, 12580, 12584), ("astlib/ast_412.ml", 392, 12580, 12613), 0), 0, Tag1 ("Astlib__Ast_412", 198)); (("Pexp_setinstvar", 802), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7758)], (0)), 100000000, 0, -7757); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7759)]), 0, (("astlib/ast_412.ml", 394, 12632, 12636), ("astlib/ast_412.ml", 394, 12632, 12679), 0), 0, Tag1 ("Astlib__Ast_412", 199)); (("Pexp_override", 803), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7763)], (0)), 100000000, 0, -7762); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7764)]), 100000000, 0, -7761)], (0)), 100000000, 0, -7760)]), 0, (("astlib/ast_412.ml", 396, 12697, 12701), ("astlib/ast_412.ml", 396, 12697, 12749), 0), 0, Tag1 ("Astlib__Ast_412", 200)); (("Pexp_letmodule", 804), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7767)], (0)), 100000000, 0, -7766)], (0)), 100000000, 0, -7765); (Tag3 ((("module_expr", 7684)), 0, (0)), 100000000, 0, -7768); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7769)]), 0, (("astlib/ast_412.ml", 398, 12788, 12792), ("astlib/ast_412.ml", 398, 12788, 12856), 0), 0, Tag1 ("Astlib__Ast_412", 201)); (("Pexp_letexception", 805), ([(Tag3 ((("extension_constructor", 7650)), 0, (0)), 100000000, 0, -7770); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7771)]), 0, (("astlib/ast_412.ml", 400, 12890, 12894), ("astlib/ast_412.ml", 400, 12890, 12951), 0), 0, Tag1 ("Astlib__Ast_412", 202)); (("Pexp_assert", 806), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7772)]), 0, (("astlib/ast_412.ml", 402, 12983, 12987), ("astlib/ast_412.ml", 402, 12983, 13014), 0), 0, Tag1 ("Astlib__Ast_412", 203)); (("Pexp_lazy", 807), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7773)]), 0, (("astlib/ast_412.ml", 406, 13118, 13122), ("astlib/ast_412.ml", 406, 13118, 13147), 0), 0, Tag1 ("Astlib__Ast_412", 204)); (("Pexp_poly", 808), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7774); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7776)], (0)), 100000000, 0, -7775)]), 0, (("astlib/ast_412.ml", 408, 13165, 13169), ("astlib/ast_412.ml", 408, 13165, 13213), 0), 0, Tag1 ("Astlib__Ast_412", 205)); (("Pexp_object", 809), ([(Tag3 ((("class_structure", 7663)), 0, (0)), 100000000, 0, -7777)]), 0, (("astlib/ast_412.ml", 413, 13343, 13347), ("astlib/ast_412.ml", 413, 13343, 13379), 0), 0, Tag1 ("Astlib__Ast_412", 206)); (("Pexp_newtype", 810), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7779)], (0)), 100000000, 0, -7778); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7780)]), 0, (("astlib/ast_412.ml", 415, 13405, 13409), ("astlib/ast_412.ml", 415, 13405, 13450), 0), 0, Tag1 ("Astlib__Ast_412", 207)); (("Pexp_pack", 811), ([(Tag3 ((("module_expr", 7684)), 0, (0)), 100000000, 0, -7781)]), 0, (("astlib/ast_412.ml", 417, 13479, 13483), ("astlib/ast_412.ml", 417, 13479, 13509), 0), 0, Tag1 ("Astlib__Ast_412", 208)); (("Pexp_open", 812), ([(Tag3 ((("open_declaration", 7679)), 0, (0)), 100000000, 0, -7782); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7783)]), 0, (("astlib/ast_412.ml", 422, 13624, 13628), ("astlib/ast_412.ml", 422, 13624, 13672), 0), 0, Tag1 ("Astlib__Ast_412", 209)); (("Pexp_letop", 813), ([(Tag3 ((("letop", 7641)), 0, (0)), 100000000, 0, -7784)]), 0, (("astlib/ast_412.ml", 426, 13736, 13740), ("astlib/ast_412.ml", 426, 13736, 13761), 0), 0, Tag1 ("Astlib__Ast_412", 210)); (("Pexp_extension", 814), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7785)]), 0, (("astlib/ast_412.ml", 429, 13822, 13826), ("astlib/ast_412.ml", 429, 13822, 13855), 0), 0, Tag1 ("Astlib__Ast_412", 211)); (("Pexp_unreachable", 815), (0), 0, (("astlib/ast_412.ml", 431, 13872, 13876), ("astlib/ast_412.ml", 431, 13872, 13894), 0), 0, Tag1 ("Astlib__Ast_412", 212))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -7682)), 0, 0, 0, 0, (("astlib/ast_412.ml", 312, 9664, 9666), ("astlib/ast_412.ml", 431, 13872, 13894), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 65)), 2, 0); Tag1 (("case", 7640), (0, 0, [[(("pc_lhs", 816), 0, (Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7678), (("astlib/ast_412.ml", 436, 13997, 14003), ("astlib/ast_412.ml", 436, 13997, 14019), 0), 0, Tag1 ("Astlib__Ast_412", 213)); (("pc_guard", 817), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7680)], (0)), 100000000, 0, -7679), (("astlib/ast_412.ml", 437, 14020, 14026), ("astlib/ast_412.ml", 437, 14020, 14054), 0), 0, Tag1 ("Astlib__Ast_412", 214)); (("pc_rhs", 818), 0, (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7681), (("astlib/ast_412.ml", 438, 14055, 14061), ("astlib/ast_412.ml", 438, 14055, 14080), 0), 0, Tag1 ("Astlib__Ast_412", 215))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -7677)), 0, 0, 0, 0, (("astlib/ast_412.ml", 434, 13908, 13910), ("astlib/ast_412.ml", 439, 14081, 14086), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 66)), 2, 0); Tag1 (("letop", 7641), (0, 0, [[(("let_", 819), 0, (Tag3 ((("binding_op", 7642)), 0, (0)), 100000000, 0, -7673), (("astlib/ast_412.ml", 443, 14142, 14148), ("astlib/ast_412.ml", 443, 14142, 14166), 0), 0, Tag1 ("Astlib__Ast_412", 216)); (("ands", 820), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binding_op", 7642)), 0, (0)), 100000000, 0, -7675)], (0)), 100000000, 0, -7674), (("astlib/ast_412.ml", 444, 14167, 14173), ("astlib/ast_412.ml", 444, 14167, 14196), 0), 0, Tag1 ("Astlib__Ast_412", 217)); (("body", 821), 0, (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7676), (("astlib/ast_412.ml", 445, 14197, 14203), ("astlib/ast_412.ml", 445, 14197, 14221), 0), 0, Tag1 ("Astlib__Ast_412", 218))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "letop"), 0, (0)), 100000000, 0, -7672)), 0, 0, 0, 0, (("astlib/ast_412.ml", 441, 14088, 14090), ("astlib/ast_412.ml", 446, 14222, 14227), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 67)), 2, 0); Tag1 (("binding_op", 7642), (0, 0, [[(("pbop_op", 822), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7668)], (0)), 100000000, 0, -7667), (("astlib/ast_412.ml", 450, 14293, 14299), ("astlib/ast_412.ml", 450, 14293, 14320), 0), 0, Tag1 ("Astlib__Ast_412", 219)); (("pbop_pat", 823), 0, (Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7669), (("astlib/ast_412.ml", 451, 14321, 14327), ("astlib/ast_412.ml", 451, 14321, 14346), 0), 0, Tag1 ("Astlib__Ast_412", 220)); (("pbop_exp", 824), 0, (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7670), (("astlib/ast_412.ml", 452, 14347, 14353), ("astlib/ast_412.ml", 452, 14347, 14375), 0), 0, Tag1 ("Astlib__Ast_412", 221)); (("pbop_loc", 825), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7671), (("astlib/ast_412.ml", 453, 14376, 14382), ("astlib/ast_412.ml", 453, 14376, 14404), 0), 0, Tag1 ("Astlib__Ast_412", 222))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "binding_op"), 0, (0)), 100000000, 0, -7666)), 0, 0, 0, 0, (("astlib/ast_412.ml", 448, 14229, 14231), ("astlib/ast_412.ml", 454, 14405, 14410), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 68)), 2, 0); Tag1 (("value_description", 7643), (0, 0, [[(("pval_name", 826), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7660)], (0)), 100000000, 0, -7659), (("astlib/ast_412.ml", 460, 14518, 14524), ("astlib/ast_412.ml", 460, 14518, 14546), 0), 0, Tag1 ("Astlib__Ast_412", 223)); (("pval_type", 827), 0, (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7661), (("astlib/ast_412.ml", 461, 14547, 14553), ("astlib/ast_412.ml", 461, 14547, 14574), 0), 0, Tag1 ("Astlib__Ast_412", 224)); (("pval_prim", 828), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7663)], (0)), 100000000, 0, -7662), (("astlib/ast_412.ml", 462, 14575, 14581), ("astlib/ast_412.ml", 462, 14575, 14604), 0), 0, Tag1 ("Astlib__Ast_412", 225)); (("pval_attributes", 829), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7664), (("astlib/ast_412.ml", 463, 14605, 14611), ("astlib/ast_412.ml", 463, 14605, 14639), 0), 0, Tag1 ("Astlib__Ast_412", 226)); (("pval_loc", 830), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7665), (("astlib/ast_412.ml", 464, 14667, 14673), ("astlib/ast_412.ml", 464, 14667, 14694), 0), 0, Tag1 ("Astlib__Ast_412", 227))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -7658)), 0, 0, 0, 0, (("astlib/ast_412.ml", 458, 14440, 14442), ("astlib/ast_412.ml", 465, 14695, 14700), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 69)), 2, 0); Tag1 (("type_declaration", 7644), (0, 0, [[(("ptype_name", 831), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7640)], (0)), 100000000, 0, -7639), (("astlib/ast_412.ml", 476, 14924, 14930), ("astlib/ast_412.ml", 476, 14924, 14953), 0), 0, Tag1 ("Astlib__Ast_412", 228)); (("ptype_params", 832), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7643); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "variance"), 0, (0)), 100000000, 0, -7645); (Tag3 (Tag1 ((("Asttypes", 7607)), "injectivity"), 0, (0)), 100000000, 0, -7646)]), 100000000, 0, -7644)]), 100000000, 0, -7642)], (0)), 100000000, 0, -7641), (("astlib/ast_412.ml", 477, 14954, 14960), ("astlib/ast_412.ml", 477, 14954, 15018), 0), 0, Tag1 ("Astlib__Ast_412", 229)); (("ptype_cstrs", 833), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7649); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7650); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7651)]), 100000000, 0, -7648)], (0)), 100000000, 0, -7647), (("astlib/ast_412.ml", 479, 15065, 15071), ("astlib/ast_412.ml", 479, 15065, 15126), 0), 0, Tag1 ("Astlib__Ast_412", 230)); (("ptype_kind", 834), 0, (Tag3 ((("type_kind", 7645)), 0, (0)), 100000000, 0, -7652), (("astlib/ast_412.ml", 481, 15184, 15190), ("astlib/ast_412.ml", 481, 15184, 15212), 0), 0, Tag1 ("Astlib__Ast_412", 231)); (("ptype_private", 835), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "private_flag"), 0, (0)), 100000000, 0, -7653), (("astlib/ast_412.ml", 482, 15213, 15219), ("astlib/ast_412.ml", 482, 15213, 15247), 0), 0, Tag1 ("Astlib__Ast_412", 232)); (("ptype_manifest", 836), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7655)], (0)), 100000000, 0, -7654), (("astlib/ast_412.ml", 483, 15270, 15276), ("astlib/ast_412.ml", 483, 15270, 15309), 0), 0, Tag1 ("Astlib__Ast_412", 233)); (("ptype_attributes", 837), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7656), (("astlib/ast_412.ml", 484, 15321, 15327), ("astlib/ast_412.ml", 484, 15321, 15356), 0), 0, Tag1 ("Astlib__Ast_412", 234)); (("ptype_loc", 838), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7657), (("astlib/ast_412.ml", 485, 15385, 15391), ("astlib/ast_412.ml", 485, 15385, 15413), 0), 0, Tag1 ("Astlib__Ast_412", 235))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -7638)), 0, 0, 0, 0, (("astlib/ast_412.ml", 474, 14848, 14850), ("astlib/ast_412.ml", 486, 15414, 15419), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 70)), 2, 0); Tag1 (("type_kind", 7645), (0, 0, Tag1 ([(("Ptype_abstract", 839), (0), 0, (("astlib/ast_412.ml", 499, 15855, 15859), ("astlib/ast_412.ml", 499, 15855, 15875), 0), 0, Tag1 ("Astlib__Ast_412", 236)); (("Ptype_variant", 840), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7647)), 0, (0)), 100000000, 0, -7635)], (0)), 100000000, 0, -7634)]), 0, (("astlib/ast_412.ml", 500, 15876, 15880), ("astlib/ast_412.ml", 500, 15876, 15927), 0), 0, Tag1 ("Astlib__Ast_412", 237)); (("Ptype_record", 841), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7646)), 0, (0)), 100000000, 0, -7637)], (0)), 100000000, 0, -7636)]), 0, (("astlib/ast_412.ml", 501, 15928, 15932), ("astlib/ast_412.ml", 501, 15928, 15972), 0), 0, Tag1 ("Astlib__Ast_412", 238)); (("Ptype_open", 842), (0), 0, (("astlib/ast_412.ml", 503, 16009, 16013), ("astlib/ast_412.ml", 503, 16009, 16025), 0), 0, Tag1 ("Astlib__Ast_412", 239))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -7633)), 0, 0, 0, 0, (("astlib/ast_412.ml", 498, 15799, 15801), ("astlib/ast_412.ml", 503, 16009, 16025), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 71)), 2, 0); Tag1 (("label_declaration", 7646), (0, 0, [[(("pld_name", 843), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7628)], (0)), 100000000, 0, -7627), (("astlib/ast_412.ml", 507, 16105, 16111), ("astlib/ast_412.ml", 507, 16105, 16132), 0), 0, Tag1 ("Astlib__Ast_412", 240)); (("pld_mutable", 844), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "mutable_flag"), 0, (0)), 100000000, 0, -7629), (("astlib/ast_412.ml", 508, 16133, 16139), ("astlib/ast_412.ml", 508, 16133, 16165), 0), 0, Tag1 ("Astlib__Ast_412", 241)); (("pld_type", 845), 0, (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7630), (("astlib/ast_412.ml", 509, 16166, 16172), ("astlib/ast_412.ml", 509, 16166, 16192), 0), 0, Tag1 ("Astlib__Ast_412", 242)); (("pld_loc", 846), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7631), (("astlib/ast_412.ml", 510, 16193, 16199), ("astlib/ast_412.ml", 510, 16193, 16219), 0), 0, Tag1 ("Astlib__Ast_412", 243)); (("pld_attributes", 847), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7632), (("astlib/ast_412.ml", 511, 16220, 16226), ("astlib/ast_412.ml", 511, 16220, 16253), 0), 0, Tag1 ("Astlib__Ast_412", 244))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -7626)), 0, 0, 0, 0, (("astlib/ast_412.ml", 505, 16027, 16029), ("astlib/ast_412.ml", 512, 16280, 16285), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 72)), 2, 0); Tag1 (("constructor_declaration", 7647), (0, 0, [[(("pcd_name", 848), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7620)], (0)), 100000000, 0, -7619), (("astlib/ast_412.ml", 522, 16528, 16534), ("astlib/ast_412.ml", 522, 16528, 16555), 0), 0, Tag1 ("Astlib__Ast_412", 245)); (("pcd_args", 849), 0, (Tag3 ((("constructor_arguments", 7648)), 0, (0)), 100000000, 0, -7621), (("astlib/ast_412.ml", 523, 16556, 16562), ("astlib/ast_412.ml", 523, 16556, 16594), 0), 0, Tag1 ("Astlib__Ast_412", 246)); (("pcd_res", 850), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7623)], (0)), 100000000, 0, -7622), (("astlib/ast_412.ml", 524, 16595, 16601), ("astlib/ast_412.ml", 524, 16595, 16627), 0), 0, Tag1 ("Astlib__Ast_412", 247)); (("pcd_loc", 851), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7624), (("astlib/ast_412.ml", 525, 16628, 16634), ("astlib/ast_412.ml", 525, 16628, 16654), 0), 0, Tag1 ("Astlib__Ast_412", 248)); (("pcd_attributes", 852), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7625), (("astlib/ast_412.ml", 526, 16655, 16661), ("astlib/ast_412.ml", 526, 16655, 16688), 0), 0, Tag1 ("Astlib__Ast_412", 249))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -7618)), 0, 0, 0, 0, (("astlib/ast_412.ml", 520, 16438, 16440), ("astlib/ast_412.ml", 527, 16718, 16723), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 73)), 2, 0); Tag1 (("constructor_arguments", 7648), (0, 0, Tag1 ([(("Pcstr_tuple", 853), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7615)], (0)), 100000000, 0, -7614)]), 0, (("astlib/ast_412.ml", 530, 16805, 16809), ("astlib/ast_412.ml", 530, 16805, 16840), 0), 0, Tag1 ("Astlib__Ast_412", 250)); (("Pcstr_record", 854), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7646)), 0, (0)), 100000000, 0, -7617)], (0)), 100000000, 0, -7616)]), 0, (("astlib/ast_412.ml", 531, 16841, 16845), ("astlib/ast_412.ml", 531, 16841, 16885), 0), 0, Tag1 ("Astlib__Ast_412", 251))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -7613)), 0, 0, 0, 0, (("astlib/ast_412.ml", 529, 16725, 16727), ("astlib/ast_412.ml", 531, 16841, 16885), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 74)), 2, 0); Tag1 (("type_extension", 7649), (0, 0, [[(("ptyext_path", 855), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7601)], (0)), 100000000, 0, -7600), (("astlib/ast_412.ml", 544, 17341, 17347), ("astlib/ast_412.ml", 544, 17341, 17376), 0), 0, Tag1 ("Astlib__Ast_412", 252)); (("ptyext_params", 856), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7604); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "variance"), 0, (0)), 100000000, 0, -7606); (Tag3 (Tag1 ((("Asttypes", 7607)), "injectivity"), 0, (0)), 100000000, 0, -7607)]), 100000000, 0, -7605)]), 100000000, 0, -7603)], (0)), 100000000, 0, -7602), (("astlib/ast_412.ml", 545, 17377, 17383), ("astlib/ast_412.ml", 545, 17377, 17442), 0), 0, Tag1 ("Astlib__Ast_412", 253)); (("ptyext_constructors", 857), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7650)), 0, (0)), 100000000, 0, -7609)], (0)), 100000000, 0, -7608), (("astlib/ast_412.ml", 546, 17443, 17449), ("astlib/ast_412.ml", 546, 17443, 17497), 0), 0, Tag1 ("Astlib__Ast_412", 254)); (("ptyext_private", 858), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "private_flag"), 0, (0)), 100000000, 0, -7610), (("astlib/ast_412.ml", 547, 17498, 17504), ("astlib/ast_412.ml", 547, 17498, 17533), 0), 0, Tag1 ("Astlib__Ast_412", 255)); (("ptyext_loc", 859), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7611), (("astlib/ast_412.ml", 548, 17534, 17540), ("astlib/ast_412.ml", 548, 17534, 17563), 0), 0, Tag1 ("Astlib__Ast_412", 256)); (("ptyext_attributes", 860), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7612), (("astlib/ast_412.ml", 549, 17564, 17570), ("astlib/ast_412.ml", 549, 17564, 17600), 0), 0, Tag1 ("Astlib__Ast_412", 257))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -7599)), 0, 0, 0, 0, (("astlib/ast_412.ml", 542, 17269, 17271), ("astlib/ast_412.ml", 550, 17629, 17634), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 75)), 2, 0); Tag1 (("extension_constructor", 7650), (0, 0, [[(("pext_name", 861), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7595)], (0)), 100000000, 0, -7594), (("astlib/ast_412.ml", 557, 17744, 17750), ("astlib/ast_412.ml", 557, 17744, 17772), 0), 0, Tag1 ("Astlib__Ast_412", 258)); (("pext_kind", 862), 0, (Tag3 ((("extension_constructor_kind", 7652)), 0, (0)), 100000000, 0, -7596), (("astlib/ast_412.ml", 558, 17773, 17779), ("astlib/ast_412.ml", 558, 17773, 17818), 0), 0, Tag1 ("Astlib__Ast_412", 259)); (("pext_loc", 863), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7597), (("astlib/ast_412.ml", 559, 17819, 17825), ("astlib/ast_412.ml", 559, 17819, 17847), 0), 0, Tag1 ("Astlib__Ast_412", 260)); (("pext_attributes", 864), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7598), (("astlib/ast_412.ml", 560, 17848, 17854), ("astlib/ast_412.ml", 560, 17848, 17882), 0), 0, Tag1 ("Astlib__Ast_412", 261))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -7593)), 0, 0, 0, 0, (("astlib/ast_412.ml", 555, 17658, 17660), ("astlib/ast_412.ml", 561, 17912, 17917), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 76)), 2, 0); Tag1 (("type_exception", 7651), (0, 0, [[(("ptyexn_constructor", 865), 0, (Tag3 ((("extension_constructor", 7650)), 0, (0)), 100000000, 0, -7590), (("astlib/ast_412.ml", 566, 18011, 18017), ("astlib/ast_412.ml", 566, 18011, 18059), 0), 0, Tag1 ("Astlib__Ast_412", 262)); (("ptyexn_loc", 866), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7591), (("astlib/ast_412.ml", 567, 18060, 18066), ("astlib/ast_412.ml", 567, 18060, 18089), 0), 0, Tag1 ("Astlib__Ast_412", 263)); (("ptyexn_attributes", 867), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7592), (("astlib/ast_412.ml", 568, 18090, 18096), ("astlib/ast_412.ml", 568, 18090, 18126), 0), 0, Tag1 ("Astlib__Ast_412", 264))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "type_exception"), 0, (0)), 100000000, 0, -7589)), 0, 0, 0, 0, (("astlib/ast_412.ml", 564, 17939, 17941), ("astlib/ast_412.ml", 569, 18153, 18158), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 77)), 2, 0); Tag1 (("extension_constructor_kind", 7652), (0, 0, Tag1 ([(("Pext_decl", 868), ([(Tag3 ((("constructor_arguments", 7648)), 0, (0)), 100000000, 0, -7584); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7586)], (0)), 100000000, 0, -7585)]), 0, (("astlib/ast_412.ml", 572, 18250, 18256), ("astlib/ast_412.ml", 572, 18250, 18309), 0), 0, Tag1 ("Astlib__Ast_412", 265)); (("Pext_rebind", 869), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7588)], (0)), 100000000, 0, -7587)]), 0, (("astlib/ast_412.ml", 578, 18492, 18496), ("astlib/ast_412.ml", 578, 18492, 18528), 0), 0, Tag1 ("Astlib__Ast_412", 266))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -7583)), 0, 0, 0, 0, (("astlib/ast_412.ml", 571, 18160, 18162), ("astlib/ast_412.ml", 578, 18492, 18528), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 78)), 2, 0); Tag1 (("class_type", 7653), (0, 0, [[(("pcty_desc", 870), 0, (Tag3 ((("class_type_desc", 7654)), 0, (0)), 100000000, 0, -7580), (("astlib/ast_412.ml", 589, 18708, 18714), ("astlib/ast_412.ml", 589, 18708, 18741), 0), 0, Tag1 ("Astlib__Ast_412", 267)); (("pcty_loc", 871), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7581), (("astlib/ast_412.ml", 590, 18742, 18748), ("astlib/ast_412.ml", 590, 18742, 18769), 0), 0, Tag1 ("Astlib__Ast_412", 268)); (("pcty_attributes", 872), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7582), (("astlib/ast_412.ml", 591, 18770, 18776), ("astlib/ast_412.ml", 591, 18770, 18804), 0), 0, Tag1 ("Astlib__Ast_412", 269))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -7579)), 0, 0, 0, 0, (("astlib/ast_412.ml", 587, 18644, 18646), ("astlib/ast_412.ml", 592, 18829, 18834), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 79)), 2, 0); Tag1 (("class_type_desc", 7654), (0, 0, Tag1 ([(("Pcty_constr", 873), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7569)], (0)), 100000000, 0, -7568); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7571)], (0)), 100000000, 0, -7570)]), 0, (("astlib/ast_412.ml", 595, 18904, 18908), ("astlib/ast_412.ml", 595, 18904, 18957), 0), 0, Tag1 ("Astlib__Ast_412", 270)); (("Pcty_signature", 874), ([(Tag3 ((("class_signature", 7655)), 0, (0)), 100000000, 0, -7572)]), 0, (("astlib/ast_412.ml", 598, 18995, 18999), ("astlib/ast_412.ml", 598, 18995, 19034), 0), 0, Tag1 ("Astlib__Ast_412", 271)); (("Pcty_arrow", 875), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "arg_label"), 0, (0)), 100000000, 0, -7573); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7574); (Tag3 ((("class_type", 7653)), 0, (0)), 100000000, 0, -7575)]), 0, (("astlib/ast_412.ml", 600, 19060, 19064), ("astlib/ast_412.ml", 600, 19060, 19114), 0), 0, Tag1 ("Astlib__Ast_412", 272)); (("Pcty_extension", 876), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7576)]), 0, (("astlib/ast_412.ml", 605, 19214, 19218), ("astlib/ast_412.ml", 605, 19214, 19247), 0), 0, Tag1 ("Astlib__Ast_412", 273)); (("Pcty_open", 877), ([(Tag3 ((("open_description", 7678)), 0, (0)), 100000000, 0, -7577); (Tag3 ((("class_type", 7653)), 0, (0)), 100000000, 0, -7578)]), 0, (("astlib/ast_412.ml", 607, 19264, 19268), ("astlib/ast_412.ml", 607, 19264, 19312), 0), 0, Tag1 ("Astlib__Ast_412", 274))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -7567)), 0, 0, 0, 0, (("astlib/ast_412.ml", 594, 18836, 18838), ("astlib/ast_412.ml", 607, 19264, 19312), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 80)), 2, 0); Tag1 (("class_signature", 7655), (0, 0, [[(("pcsig_self", 878), 0, (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7564), (("astlib/ast_412.ml", 612, 19415, 19421), ("astlib/ast_412.ml", 612, 19415, 19443), 0), 0, Tag1 ("Astlib__Ast_412", 275)); (("pcsig_fields", 879), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7656)), 0, (0)), 100000000, 0, -7566)], (0)), 100000000, 0, -7565), (("astlib/ast_412.ml", 613, 19444, 19450), ("astlib/ast_412.ml", 613, 19444, 19486), 0), 0, Tag1 ("Astlib__Ast_412", 276))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -7563)), 0, 0, 0, 0, (("astlib/ast_412.ml", 610, 19341, 19343), ("astlib/ast_412.ml", 614, 19487, 19492), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 81)), 2, 0); Tag1 (("class_type_field", 7656), (0, 0, [[(("pctf_desc", 880), 0, (Tag3 ((("class_type_field_desc", 7657)), 0, (0)), 100000000, 0, -7560), (("astlib/ast_412.ml", 621, 19655, 19661), ("astlib/ast_412.ml", 621, 19655, 19694), 0), 0, Tag1 ("Astlib__Ast_412", 277)); (("pctf_loc", 881), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7561), (("astlib/ast_412.ml", 622, 19695, 19701), ("astlib/ast_412.ml", 622, 19695, 19722), 0), 0, Tag1 ("Astlib__Ast_412", 278)); (("pctf_attributes", 882), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7562), (("astlib/ast_412.ml", 623, 19723, 19729), ("astlib/ast_412.ml", 623, 19723, 19757), 0), 0, Tag1 ("Astlib__Ast_412", 279))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -7559)), 0, 0, 0, 0, (("astlib/ast_412.ml", 619, 19579, 19581), ("astlib/ast_412.ml", 624, 19784, 19789), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 82)), 2, 0); Tag1 (("class_type_field_desc", 7657), (0, 0, Tag1 ([(("Pctf_inherit", 883), ([(Tag3 ((("class_type", 7653)), 0, (0)), 100000000, 0, -7541)]), 0, (("astlib/ast_412.ml", 627, 19871, 19875), ("astlib/ast_412.ml", 627, 19871, 19903), 0), 0, Tag1 ("Astlib__Ast_412", 280)); (("Pctf_val", 884), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7544)], (0)), 100000000, 0, -7543); (Tag3 (Tag1 ((("Asttypes", 7607)), "mutable_flag"), 0, (0)), 100000000, 0, -7545); (Tag3 (Tag1 ((("Asttypes", 7607)), "virtual_flag"), 0, (0)), 100000000, 0, -7546); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7547)]), 100000000, 0, -7542)]), 0, (("astlib/ast_412.ml", 629, 19925, 19929), ("astlib/ast_412.ml", 629, 19925, 19996), 0), 0, Tag1 ("Astlib__Ast_412", 281)); (("Pctf_method", 885), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7550)], (0)), 100000000, 0, -7549); (Tag3 (Tag1 ((("Asttypes", 7607)), "private_flag"), 0, (0)), 100000000, 0, -7551); (Tag3 (Tag1 ((("Asttypes", 7607)), "virtual_flag"), 0, (0)), 100000000, 0, -7552); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7553)]), 100000000, 0, -7548)]), 0, (("astlib/ast_412.ml", 631, 20016, 20020), ("astlib/ast_412.ml", 631, 20016, 20091), 0), 0, Tag1 ("Astlib__Ast_412", 282)); (("Pctf_constraint", 886), ([(Tag2 ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7555); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7556)]), 100000000, 0, -7554)]), 0, (("astlib/ast_412.ml", 636, 20154, 20158), ("astlib/ast_412.ml", 636, 20154, 20203), 0), 0, Tag1 ("Astlib__Ast_412", 283)); (("Pctf_attribute", 887), ([(Tag3 ((("attribute", 7625)), 0, (0)), 100000000, 0, -7557)]), 0, (("astlib/ast_412.ml", 638, 20233, 20237), ("astlib/ast_412.ml", 638, 20233, 20266), 0), 0, Tag1 ("Astlib__Ast_412", 284)); (("Pctf_extension", 888), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7558)]), 0, (("astlib/ast_412.ml", 640, 20285, 20289), ("astlib/ast_412.ml", 640, 20285, 20318), 0), 0, Tag1 ("Astlib__Ast_412", 285))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -7540)), 0, 0, 0, 0, (("astlib/ast_412.ml", 626, 19791, 19793), ("astlib/ast_412.ml", 640, 20285, 20318), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 83)), 2, 0); Tag1 (("class_infos", 7658), ([((("a")), 100000000, 0, -7528)], 1, [[(("pci_virt", 889), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "virtual_flag"), 0, (0)), 100000000, 0, -7529), (("astlib/ast_412.ml", 645, 20409, 20415), ("astlib/ast_412.ml", 645, 20409, 20438), 0), 0, Tag1 ("Astlib__Ast_412", 286)); (("pci_params", 890), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7532); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "variance"), 0, (0)), 100000000, 0, -7534); (Tag3 (Tag1 ((("Asttypes", 7607)), "injectivity"), 0, (0)), 100000000, 0, -7535)]), 100000000, 0, -7533)]), 100000000, 0, -7531)], (0)), 100000000, 0, -7530), (("astlib/ast_412.ml", 646, 20439, 20445), ("astlib/ast_412.ml", 646, 20439, 20501), 0), 0, Tag1 ("Astlib__Ast_412", 287)); (("pci_name", 891), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7537)], (0)), 100000000, 0, -7536), (("astlib/ast_412.ml", 647, 20502, 20508), ("astlib/ast_412.ml", 647, 20502, 20529), 0), 0, Tag1 ("Astlib__Ast_412", 288)); (("pci_expr", 892), 0, ((("a")), 100000000, 0, -7528), (("astlib/ast_412.ml", 648, 20530, 20536), ("astlib/ast_412.ml", 648, 20530, 20549), 0), 0, Tag1 ("Astlib__Ast_412", 289)); (("pci_loc", 893), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7538), (("astlib/ast_412.ml", 649, 20550, 20556), ("astlib/ast_412.ml", 649, 20550, 20576), 0), 0, Tag1 ("Astlib__Ast_412", 290)); (("pci_attributes", 894), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7539), (("astlib/ast_412.ml", 650, 20577, 20583), ("astlib/ast_412.ml", 650, 20577, 20610), 0), 0, Tag1 ("Astlib__Ast_412", 291))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -7528)], (0)), 100000000, 0, -7527)), [25], [0], 0, 0, (("astlib/ast_412.ml", 643, 20337, 20339), ("astlib/ast_412.ml", 651, 20638, 20643), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 84)), 2, 0); Tag1 (("class_description", 7659), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7658)), [(Tag3 ((("class_type", 7653)), 0, (0)), 100000000, 0, -7526)], (0)), 100000000, 0, -7525)), 0, 0, 0, 0, (("astlib/ast_412.ml", 659, 20775, 20777), ("astlib/ast_412.ml", 659, 20775, 20823), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 85)), 2, 0); Tag1 (("class_type_declaration", 7660), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7658)), [(Tag3 ((("class_type", 7653)), 0, (0)), 100000000, 0, -7524)], (0)), 100000000, 0, -7523)), 0, 0, 0, 0, (("astlib/ast_412.ml", 661, 20825, 20827), ("astlib/ast_412.ml", 661, 20825, 20878), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 86)), 2, 0); Tag1 (("class_expr", 7661), (0, 0, [[(("pcl_desc", 895), 0, (Tag3 ((("class_expr_desc", 7662)), 0, (0)), 100000000, 0, -7520), (("astlib/ast_412.ml", 667, 20994, 21000), ("astlib/ast_412.ml", 667, 20994, 21026), 0), 0, Tag1 ("Astlib__Ast_412", 292)); (("pcl_loc", 896), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7521), (("astlib/ast_412.ml", 668, 21027, 21033), ("astlib/ast_412.ml", 668, 21027, 21053), 0), 0, Tag1 ("Astlib__Ast_412", 293)); (("pcl_attributes", 897), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7522), (("astlib/ast_412.ml", 669, 21054, 21060), ("astlib/ast_412.ml", 669, 21054, 21087), 0), 0, Tag1 ("Astlib__Ast_412", 294))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -7519)), 0, 0, 0, 0, (("astlib/ast_412.ml", 665, 20930, 20932), ("astlib/ast_412.ml", 670, 21112, 21117), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 87)), 2, 0); Tag1 (("class_expr_desc", 7662), (0, 0, Tag1 ([(("Pcl_constr", 898), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7496)], (0)), 100000000, 0, -7495); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7498)], (0)), 100000000, 0, -7497)]), 0, (("astlib/ast_412.ml", 673, 21187, 21191), ("astlib/ast_412.ml", 673, 21187, 21239), 0), 0, Tag1 ("Astlib__Ast_412", 295)); (("Pcl_structure", 899), ([(Tag3 ((("class_structure", 7663)), 0, (0)), 100000000, 0, -7499)]), 0, (("astlib/ast_412.ml", 676, 21277, 21281), ("astlib/ast_412.ml", 676, 21277, 21315), 0), 0, Tag1 ("Astlib__Ast_412", 296)); (("Pcl_fun", 900), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "arg_label"), 0, (0)), 100000000, 0, -7500); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7502)], (0)), 100000000, 0, -7501); (Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7503); (Tag3 ((("class_expr", 7661)), 0, (0)), 100000000, 0, -7504)]), 0, (("astlib/ast_412.ml", 678, 21341, 21345), ("astlib/ast_412.ml", 678, 21341, 21410), 0), 0, Tag1 ("Astlib__Ast_412", 297)); (("Pcl_apply", 901), ([(Tag3 ((("class_expr", 7661)), 0, (0)), 100000000, 0, -7505); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "arg_label"), 0, (0)), 100000000, 0, -7508); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7509)]), 100000000, 0, -7507)], (0)), 100000000, 0, -7506)]), 0, (("astlib/ast_412.ml", 684, 21669, 21673), ("astlib/ast_412.ml", 684, 21669, 21730), 0), 0, Tag1 ("Astlib__Ast_412", 298)); (("Pcl_let", 902), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "rec_flag"), 0, (0)), 100000000, 0, -7510); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7689)), 0, (0)), 100000000, 0, -7512)], (0)), 100000000, 0, -7511); (Tag3 ((("class_expr", 7661)), 0, (0)), 100000000, 0, -7513)]), 0, (("astlib/ast_412.ml", 691, 21883, 21887), ("astlib/ast_412.ml", 691, 21883, 21942), 0), 0, Tag1 ("Astlib__Ast_412", 299)); (("Pcl_constraint", 903), ([(Tag3 ((("class_expr", 7661)), 0, (0)), 100000000, 0, -7514); (Tag3 ((("class_type", 7653)), 0, (0)), 100000000, 0, -7515)]), 0, (("astlib/ast_412.ml", 695, 22091, 22095), ("astlib/ast_412.ml", 695, 22091, 22138), 0), 0, Tag1 ("Astlib__Ast_412", 300)); (("Pcl_extension", 904), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7516)]), 0, (("astlib/ast_412.ml", 697, 22159, 22163), ("astlib/ast_412.ml", 697, 22159, 22191), 0), 0, Tag1 ("Astlib__Ast_412", 301)); (("Pcl_open", 905), ([(Tag3 ((("open_description", 7678)), 0, (0)), 100000000, 0, -7517); (Tag3 ((("class_expr", 7661)), 0, (0)), 100000000, 0, -7518)]), 0, (("astlib/ast_412.ml", 699, 22208, 22212), ("astlib/ast_412.ml", 699, 22208, 22255), 0), 0, Tag1 ("Astlib__Ast_412", 302))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -7494)), 0, 0, 0, 0, (("astlib/ast_412.ml", 672, 21119, 21121), ("astlib/ast_412.ml", 699, 22208, 22255), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 88)), 2, 0); Tag1 (("class_structure", 7663), (0, 0, [[(("pcstr_self", 906), 0, (Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7491), (("astlib/ast_412.ml", 705, 22359, 22365), ("astlib/ast_412.ml", 705, 22359, 22385), 0), 0, Tag1 ("Astlib__Ast_412", 303)); (("pcstr_fields", 907), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7664)), 0, (0)), 100000000, 0, -7493)], (0)), 100000000, 0, -7492), (("astlib/ast_412.ml", 706, 22386, 22392), ("astlib/ast_412.ml", 706, 22386, 22423), 0), 0, Tag1 ("Astlib__Ast_412", 304))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -7490)), 0, 0, 0, 0, (("astlib/ast_412.ml", 703, 22285, 22287), ("astlib/ast_412.ml", 707, 22424, 22429), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 89)), 2, 0); Tag1 (("class_field", 7664), (0, 0, [[(("pcf_desc", 908), 0, (Tag3 ((("class_field_desc", 7665)), 0, (0)), 100000000, 0, -7487), (("astlib/ast_412.ml", 714, 22579, 22585), ("astlib/ast_412.ml", 714, 22579, 22612), 0), 0, Tag1 ("Astlib__Ast_412", 305)); (("pcf_loc", 909), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7488), (("astlib/ast_412.ml", 715, 22613, 22619), ("astlib/ast_412.ml", 715, 22613, 22639), 0), 0, Tag1 ("Astlib__Ast_412", 306)); (("pcf_attributes", 910), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7489), (("astlib/ast_412.ml", 716, 22640, 22646), ("astlib/ast_412.ml", 716, 22640, 22673), 0), 0, Tag1 ("Astlib__Ast_412", 307))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -7486)), 0, 0, 0, 0, (("astlib/ast_412.ml", 712, 22513, 22515), ("astlib/ast_412.ml", 717, 22700, 22705), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 90)), 2, 0); Tag1 (("class_field_desc", 7665), (0, 0, Tag1 ([(("Pcf_inherit", 911), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "override_flag"), 0, (0)), 100000000, 0, -7465); (Tag3 ((("class_expr", 7661)), 0, (0)), 100000000, 0, -7466); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7469)], (0)), 100000000, 0, -7468)], (0)), 100000000, 0, -7467)]), 0, (("astlib/ast_412.ml", 720, 22777, 22781), ("astlib/ast_412.ml", 720, 22777, 22844), 0), 0, Tag1 ("Astlib__Ast_412", 308)); (("Pcf_val", 912), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7472)], (0)), 100000000, 0, -7471); (Tag3 (Tag1 ((("Asttypes", 7607)), "mutable_flag"), 0, (0)), 100000000, 0, -7473); (Tag3 ((("class_field_kind", 7666)), 0, (0)), 100000000, 0, -7474)]), 100000000, 0, -7470)]), 0, (("astlib/ast_412.ml", 726, 22936, 22940), ("astlib/ast_412.ml", 726, 22936, 22998), 0), 0, Tag1 ("Astlib__Ast_412", 309)); (("Pcf_method", 913), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7607)), "label"), 0, (0)), 100000000, 0, -7477)], (0)), 100000000, 0, -7476); (Tag3 (Tag1 ((("Asttypes", 7607)), "private_flag"), 0, (0)), 100000000, 0, -7478); (Tag3 ((("class_field_kind", 7666)), 0, (0)), 100000000, 0, -7479)]), 100000000, 0, -7475)]), 0, (("astlib/ast_412.ml", 730, 23047, 23051), ("astlib/ast_412.ml", 730, 23047, 23112), 0), 0, Tag1 ("Astlib__Ast_412", 310)); (("Pcf_constraint", 914), ([(Tag2 ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7481); (Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7482)]), 100000000, 0, -7480)]), 0, (("astlib/ast_412.ml", 734, 23228, 23232), ("astlib/ast_412.ml", 734, 23228, 23275), 0), 0, Tag1 ("Astlib__Ast_412", 311)); (("Pcf_initializer", 915), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7483)]), 0, (("astlib/ast_412.ml", 736, 23305, 23309), ("astlib/ast_412.ml", 736, 23305, 23340), 0), 0, Tag1 ("Astlib__Ast_412", 312)); (("Pcf_attribute", 916), ([(Tag3 ((("attribute", 7625)), 0, (0)), 100000000, 0, -7484)]), 0, (("astlib/ast_412.ml", 738, 23365, 23369), ("astlib/ast_412.ml", 738, 23365, 23397), 0), 0, Tag1 ("Astlib__Ast_412", 313)); (("Pcf_extension", 917), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7485)]), 0, (("astlib/ast_412.ml", 740, 23416, 23420), ("astlib/ast_412.ml", 740, 23416, 23448), 0), 0, Tag1 ("Astlib__Ast_412", 314))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -7464)), 0, 0, 0, 0, (("astlib/ast_412.ml", 719, 22707, 22709), ("astlib/ast_412.ml", 740, 23416, 23448), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 91)), 2, 0); Tag1 (("class_field_kind", 7666), (0, 0, Tag1 ([(("Cfk_virtual", 918), ([(Tag3 ((("core_type", 7629)), 0, (0)), 100000000, 0, -7461)]), 0, (("astlib/ast_412.ml", 744, 23537, 23541), ("astlib/ast_412.ml", 744, 23537, 23567), 0), 0, Tag1 ("Astlib__Ast_412", 315)); (("Cfk_concrete", 919), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "override_flag"), 0, (0)), 100000000, 0, -7462); (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7463)]), 0, (("astlib/ast_412.ml", 745, 23568, 23572), ("astlib/ast_412.ml", 745, 23568, 23616), 0), 0, Tag1 ("Astlib__Ast_412", 316))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -7460)), 0, 0, 0, 0, (("astlib/ast_412.ml", 743, 23467, 23469), ("astlib/ast_412.ml", 745, 23568, 23616), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 92)), 2, 0); Tag1 (("class_declaration", 7667), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7658)), [(Tag3 ((("class_expr", 7661)), 0, (0)), 100000000, 0, -7459)], (0)), 100000000, 0, -7458)), 0, 0, 0, 0, (("astlib/ast_412.ml", 747, 23618, 23620), ("astlib/ast_412.ml", 747, 23618, 23666), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 93)), 2, 0); Tag1 (("module_type", 7668), (0, 0, [[(("pmty_desc", 920), 0, (Tag3 ((("module_type_desc", 7669)), 0, (0)), 100000000, 0, -7455), (("astlib/ast_412.ml", 755, 23814, 23820), ("astlib/ast_412.ml", 755, 23814, 23848), 0), 0, Tag1 ("Astlib__Ast_412", 317)); (("pmty_loc", 921), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7456), (("astlib/ast_412.ml", 756, 23849, 23855), ("astlib/ast_412.ml", 756, 23849, 23876), 0), 0, Tag1 ("Astlib__Ast_412", 318)); (("pmty_attributes", 922), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7457), (("astlib/ast_412.ml", 757, 23877, 23883), ("astlib/ast_412.ml", 757, 23877, 23911), 0), 0, Tag1 ("Astlib__Ast_412", 319))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -7454)), 0, 0, 0, 0, (("astlib/ast_412.ml", 753, 23748, 23750), ("astlib/ast_412.ml", 758, 23936, 23941), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 94)), 2, 0); Tag1 (("module_type_desc", 7669), (0, 0, Tag1 ([(("Pmty_ident", 923), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7443)], (0)), 100000000, 0, -7442)]), 0, (("astlib/ast_412.ml", 761, 24013, 24017), ("astlib/ast_412.ml", 761, 24013, 24048), 0), 0, Tag1 ("Astlib__Ast_412", 320)); (("Pmty_signature", 924), ([(Tag3 ((("signature", 7671)), 0, (0)), 100000000, 0, -7444)]), 0, (("astlib/ast_412.ml", 763, 24061, 24065), ("astlib/ast_412.ml", 763, 24061, 24094), 0), 0, Tag1 ("Astlib__Ast_412", 321)); (("Pmty_functor", 925), ([(Tag3 ((("functor_parameter", 7670)), 0, (0)), 100000000, 0, -7445); (Tag3 ((("module_type", 7668)), 0, (0)), 100000000, 0, -7446)]), 0, (("astlib/ast_412.ml", 765, 24117, 24121), ("astlib/ast_412.ml", 765, 24117, 24170), 0), 0, Tag1 ("Astlib__Ast_412", 322)); (("Pmty_with", 926), ([(Tag3 ((("module_type", 7668)), 0, (0)), 100000000, 0, -7447); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7683)), 0, (0)), 100000000, 0, -7449)], (0)), 100000000, 0, -7448)]), 0, (("astlib/ast_412.ml", 767, 24205, 24209), ("astlib/ast_412.ml", 767, 24205, 24258), 0), 0, Tag1 ("Astlib__Ast_412", 323)); (("Pmty_typeof", 927), ([(Tag3 ((("module_expr", 7684)), 0, (0)), 100000000, 0, -7450)]), 0, (("astlib/ast_412.ml", 769, 24281, 24285), ("astlib/ast_412.ml", 769, 24281, 24313), 0), 0, Tag1 ("Astlib__Ast_412", 324)); (("Pmty_extension", 928), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7451)]), 0, (("astlib/ast_412.ml", 771, 24342, 24346), ("astlib/ast_412.ml", 771, 24342, 24375), 0), 0, Tag1 ("Astlib__Ast_412", 325)); (("Pmty_alias", 929), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7453)], (0)), 100000000, 0, -7452)]), 0, (("astlib/ast_412.ml", 773, 24392, 24396), ("astlib/ast_412.ml", 773, 24392, 24427), 0), 0, Tag1 ("Astlib__Ast_412", 326))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -7441)), 0, 0, 0, 0, (("astlib/ast_412.ml", 760, 23943, 23945), ("astlib/ast_412.ml", 773, 24392, 24427), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 95)), 2, 0); Tag1 (("functor_parameter", 7670), (0, 0, Tag1 ([(("Unit", 930), (0), 0, (("astlib/ast_412.ml", 777, 24522, 24526), ("astlib/ast_412.ml", 777, 24522, 24532), 0), 0, Tag1 ("Astlib__Ast_412", 327)); (("Named", 931), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7439)], (0)), 100000000, 0, -7438)], (0)), 100000000, 0, -7437); (Tag3 ((("module_type", 7668)), 0, (0)), 100000000, 0, -7440)]), 0, (("astlib/ast_412.ml", 779, 24546, 24550), ("astlib/ast_412.ml", 779, 24546, 24592), 0), 0, Tag1 ("Astlib__Ast_412", 328))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "functor_parameter"), 0, (0)), 100000000, 0, -7436)), 0, 0, 0, 0, (("astlib/ast_412.ml", 776, 24450, 24452), ("astlib/ast_412.ml", 779, 24546, 24592), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 96)), 2, 0); Tag1 (("signature", 7671), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7672)), 0, (0)), 100000000, 0, -7435)], (0)), 100000000, 0, -7434)), 0, 0, 0, 0, (("astlib/ast_412.ml", 783, 24667, 24669), ("astlib/ast_412.ml", 783, 24667, 24704), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 97)), 2, 0); Tag1 (("signature_item", 7672), (0, 0, [[(("psig_desc", 932), 0, (Tag3 ((("signature_item_desc", 7673)), 0, (0)), 100000000, 0, -7432), (("astlib/ast_412.ml", 787, 24778, 24784), ("astlib/ast_412.ml", 787, 24778, 24815), 0), 0, Tag1 ("Astlib__Ast_412", 329)); (("psig_loc", 933), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7433), (("astlib/ast_412.ml", 788, 24816, 24822), ("astlib/ast_412.ml", 788, 24816, 24843), 0), 0, Tag1 ("Astlib__Ast_412", 330))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -7431)), 0, 0, 0, 0, (("astlib/ast_412.ml", 785, 24706, 24708), ("astlib/ast_412.ml", 789, 24844, 24849), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 98)), 2, 0); Tag1 (("signature_item_desc", 7673), (0, 0, Tag1 ([(("Psig_value", 934), ([(Tag3 ((("value_description", 7643)), 0, (0)), 100000000, 0, -7409)]), 0, (("astlib/ast_412.ml", 792, 24927, 24931), ("astlib/ast_412.ml", 792, 24927, 24964), 0), 0, Tag1 ("Astlib__Ast_412", 331)); (("Psig_type", 935), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "rec_flag"), 0, (0)), 100000000, 0, -7410); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7644)), 0, (0)), 100000000, 0, -7412)], (0)), 100000000, 0, -7411)]), 0, (("astlib/ast_412.ml", 797, 25047, 25051), ("astlib/ast_412.ml", 797, 25047, 25098), 0), 0, Tag1 ("Astlib__Ast_412", 332)); (("Psig_typesubst", 936), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7644)), 0, (0)), 100000000, 0, -7414)], (0)), 100000000, 0, -7413)]), 0, (("astlib/ast_412.ml", 799, 25145, 25149), ("astlib/ast_412.ml", 799, 25145, 25190), 0), 0, Tag1 ("Astlib__Ast_412", 333)); (("Psig_typext", 937), ([(Tag3 ((("type_extension", 7649)), 0, (0)), 100000000, 0, -7415)]), 0, (("astlib/ast_412.ml", 801, 25239, 25243), ("astlib/ast_412.ml", 801, 25239, 25274), 0), 0, Tag1 ("Astlib__Ast_412", 334)); (("Psig_exception", 938), ([(Tag3 ((("type_exception", 7651)), 0, (0)), 100000000, 0, -7416)]), 0, (("astlib/ast_412.ml", 803, 25300, 25304), ("astlib/ast_412.ml", 803, 25300, 25338), 0), 0, Tag1 ("Astlib__Ast_412", 335)); (("Psig_module", 939), ([(Tag3 ((("module_declaration", 7674)), 0, (0)), 100000000, 0, -7417)]), 0, (("astlib/ast_412.ml", 805, 25366, 25370), ("astlib/ast_412.ml", 805, 25366, 25405), 0), 0, Tag1 ("Astlib__Ast_412", 336)); (("Psig_modsubst", 940), ([(Tag3 ((("module_substitution", 7675)), 0, (0)), 100000000, 0, -7418)]), 0, (("astlib/ast_412.ml", 808, 25450, 25454), ("astlib/ast_412.ml", 808, 25450, 25492), 0), 0, Tag1 ("Astlib__Ast_412", 337)); (("Psig_recmodule", 941), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7674)), 0, (0)), 100000000, 0, -7420)], (0)), 100000000, 0, -7419)]), 0, (("astlib/ast_412.ml", 810, 25517, 25521), ("astlib/ast_412.ml", 810, 25517, 25564), 0), 0, Tag1 ("Astlib__Ast_412", 338)); (("Psig_modtype", 942), ([(Tag3 ((("module_type_declaration", 7676)), 0, (0)), 100000000, 0, -7421)]), 0, (("astlib/ast_412.ml", 812, 25616, 25620), ("astlib/ast_412.ml", 812, 25616, 25661), 0), 0, Tag1 ("Astlib__Ast_412", 339)); (("Psig_open", 943), ([(Tag3 ((("open_description", 7678)), 0, (0)), 100000000, 0, -7422)]), 0, (("astlib/ast_412.ml", 815, 25712, 25716), ("astlib/ast_412.ml", 815, 25712, 25747), 0), 0, Tag1 ("Astlib__Ast_412", 340)); (("Psig_include", 944), ([(Tag3 ((("include_description", 7681)), 0, (0)), 100000000, 0, -7423)]), 0, (("astlib/ast_412.ml", 817, 25765, 25769), ("astlib/ast_412.ml", 817, 25765, 25806), 0), 0, Tag1 ("Astlib__Ast_412", 341)); (("Psig_class", 945), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7659)), 0, (0)), 100000000, 0, -7425)], (0)), 100000000, 0, -7424)]), 0, (("astlib/ast_412.ml", 819, 25828, 25832), ("astlib/ast_412.ml", 819, 25828, 25870), 0), 0, Tag1 ("Astlib__Ast_412", 342)); (("Psig_class_type", 946), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7660)), 0, (0)), 100000000, 0, -7427)], (0)), 100000000, 0, -7426)]), 0, (("astlib/ast_412.ml", 821, 25917, 25921), ("astlib/ast_412.ml", 821, 25917, 25969), 0), 0, Tag1 ("Astlib__Ast_412", 343)); (("Psig_attribute", 947), ([(Tag3 ((("attribute", 7625)), 0, (0)), 100000000, 0, -7428)]), 0, (("astlib/ast_412.ml", 823, 26023, 26027), ("astlib/ast_412.ml", 823, 26023, 26056), 0), 0, Tag1 ("Astlib__Ast_412", 344)); (("Psig_extension", 948), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7429); (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7430)]), 0, (("astlib/ast_412.ml", 825, 26075, 26079), ("astlib/ast_412.ml", 825, 26075, 26121), 0), 0, Tag1 ("Astlib__Ast_412", 345))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -7408)), 0, 0, 0, 0, (("astlib/ast_412.ml", 791, 24851, 24853), ("astlib/ast_412.ml", 825, 26075, 26121), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 99)), 2, 0); Tag1 (("module_declaration", 7674), (0, 0, [[(("pmd_name", 949), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7404)], (0)), 100000000, 0, -7403)], (0)), 100000000, 0, -7402), (("astlib/ast_412.ml", 830, 26220, 26226), ("astlib/ast_412.ml", 830, 26220, 26254), 0), 0, Tag1 ("Astlib__Ast_412", 346)); (("pmd_type", 950), 0, (Tag3 ((("module_type", 7668)), 0, (0)), 100000000, 0, -7405), (("astlib/ast_412.ml", 831, 26255, 26261), ("astlib/ast_412.ml", 831, 26255, 26283), 0), 0, Tag1 ("Astlib__Ast_412", 347)); (("pmd_attributes", 951), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7406), (("astlib/ast_412.ml", 832, 26284, 26290), ("astlib/ast_412.ml", 832, 26284, 26317), 0), 0, Tag1 ("Astlib__Ast_412", 348)); (("pmd_loc", 952), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7407), (("astlib/ast_412.ml", 833, 26344, 26350), ("astlib/ast_412.ml", 833, 26344, 26370), 0), 0, Tag1 ("Astlib__Ast_412", 349))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -7401)), 0, 0, 0, 0, (("astlib/ast_412.ml", 828, 26140, 26142), ("astlib/ast_412.ml", 834, 26371, 26376), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 100)), 2, 0); Tag1 (("module_substitution", 7675), (0, 0, [[(("pms_name", 953), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7396)], (0)), 100000000, 0, -7395), (("astlib/ast_412.ml", 839, 26475, 26481), ("astlib/ast_412.ml", 839, 26475, 26502), 0), 0, Tag1 ("Astlib__Ast_412", 350)); (("pms_manifest", 954), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7398)], (0)), 100000000, 0, -7397), (("astlib/ast_412.ml", 840, 26503, 26509), ("astlib/ast_412.ml", 840, 26503, 26539), 0), 0, Tag1 ("Astlib__Ast_412", 351)); (("pms_attributes", 955), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7399), (("astlib/ast_412.ml", 841, 26540, 26546), ("astlib/ast_412.ml", 841, 26540, 26573), 0), 0, Tag1 ("Astlib__Ast_412", 352)); (("pms_loc", 956), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7400), (("astlib/ast_412.ml", 842, 26600, 26606), ("astlib/ast_412.ml", 842, 26600, 26626), 0), 0, Tag1 ("Astlib__Ast_412", 353))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "module_substitution"), 0, (0)), 100000000, 0, -7394)), 0, 0, 0, 0, (("astlib/ast_412.ml", 837, 26393, 26395), ("astlib/ast_412.ml", 843, 26627, 26632), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 101)), 2, 0); Tag1 (("module_type_declaration", 7676), (0, 0, [[(("pmtd_name", 957), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7389)], (0)), 100000000, 0, -7388), (("astlib/ast_412.ml", 847, 26724, 26730), ("astlib/ast_412.ml", 847, 26724, 26752), 0), 0, Tag1 ("Astlib__Ast_412", 354)); (("pmtd_type", 958), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7668)), 0, (0)), 100000000, 0, -7391)], (0)), 100000000, 0, -7390), (("astlib/ast_412.ml", 848, 26753, 26759), ("astlib/ast_412.ml", 848, 26753, 26789), 0), 0, Tag1 ("Astlib__Ast_412", 355)); (("pmtd_attributes", 959), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7392), (("astlib/ast_412.ml", 849, 26790, 26796), ("astlib/ast_412.ml", 849, 26790, 26824), 0), 0, Tag1 ("Astlib__Ast_412", 356)); (("pmtd_loc", 960), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7393), (("astlib/ast_412.ml", 850, 26851, 26857), ("astlib/ast_412.ml", 850, 26851, 26878), 0), 0, Tag1 ("Astlib__Ast_412", 357))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -7387)), 0, 0, 0, 0, (("astlib/ast_412.ml", 845, 26634, 26636), ("astlib/ast_412.ml", 851, 26879, 26884), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 102)), 2, 0); Tag1 (("open_infos", 7677), ([((("a")), 100000000, 0, -7383)], 1, [[(("popen_expr", 961), 0, ((("a")), 100000000, 0, -7383), (("astlib/ast_412.ml", 858, 27039, 27045), ("astlib/ast_412.ml", 858, 27039, 27060), 0), 0, Tag1 ("Astlib__Ast_412", 358)); (("popen_override", 962), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "override_flag"), 0, (0)), 100000000, 0, -7384), (("astlib/ast_412.ml", 859, 27061, 27067), ("astlib/ast_412.ml", 859, 27061, 27097), 0), 0, Tag1 ("Astlib__Ast_412", 359)); (("popen_loc", 963), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7385), (("astlib/ast_412.ml", 860, 27098, 27104), ("astlib/ast_412.ml", 860, 27098, 27126), 0), 0, Tag1 ("Astlib__Ast_412", 360)); (("popen_attributes", 964), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7386), (("astlib/ast_412.ml", 861, 27127, 27133), ("astlib/ast_412.ml", 861, 27127, 27162), 0), 0, Tag1 ("Astlib__Ast_412", 361))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "open_infos"), [((("a")), 100000000, 0, -7383)], (0)), 100000000, 0, -7382)), [25], [0], 0, 0, (("astlib/ast_412.ml", 856, 26969, 26971), ("astlib/ast_412.ml", 862, 27163, 27168), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 103)), 2, 0); Tag1 (("open_description", 7678), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7677)), [(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7381)], (0)), 100000000, 0, -7380)], (0)), 100000000, 0, -7379)), 0, 0, 0, 0, (("astlib/ast_412.ml", 868, 27337, 27339), ("astlib/ast_412.ml", 868, 27337, 27388), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 104)), 2, 0); Tag1 (("open_declaration", 7679), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7677)), [(Tag3 ((("module_expr", 7684)), 0, (0)), 100000000, 0, -7378)], (0)), 100000000, 0, -7377)), 0, 0, 0, 0, (("astlib/ast_412.ml", 872, 27424, 27426), ("astlib/ast_412.ml", 872, 27424, 27471), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 105)), 2, 0); Tag1 (("include_infos", 7680), ([((("a")), 100000000, 0, -7374)], 1, [[(("pincl_mod", 965), 0, ((("a")), 100000000, 0, -7374), (("astlib/ast_412.ml", 879, 27608, 27614), ("astlib/ast_412.ml", 879, 27608, 27628), 0), 0, Tag1 ("Astlib__Ast_412", 362)); (("pincl_loc", 966), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7375), (("astlib/ast_412.ml", 880, 27629, 27635), ("astlib/ast_412.ml", 880, 27629, 27657), 0), 0, Tag1 ("Astlib__Ast_412", 363)); (("pincl_attributes", 967), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7376), (("astlib/ast_412.ml", 881, 27658, 27664), ("astlib/ast_412.ml", 881, 27658, 27693), 0), 0, Tag1 ("Astlib__Ast_412", 364))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -7374)], (0)), 100000000, 0, -7373)), [25], [0], 0, 0, (("astlib/ast_412.ml", 877, 27532, 27534), ("astlib/ast_412.ml", 882, 27694, 27699), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 106)), 2, 0); Tag1 (("include_description", 7681), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7680)), [(Tag3 ((("module_type", 7668)), 0, (0)), 100000000, 0, -7372)], (0)), 100000000, 0, -7371)), 0, 0, 0, 0, (("astlib/ast_412.ml", 884, 27701, 27703), ("astlib/ast_412.ml", 884, 27701, 27754), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 107)), 2, 0); Tag1 (("include_declaration", 7682), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7680)), [(Tag3 ((("module_expr", 7684)), 0, (0)), 100000000, 0, -7370)], (0)), 100000000, 0, -7369)), 0, 0, 0, 0, (("astlib/ast_412.ml", 887, 27775, 27777), ("astlib/ast_412.ml", 887, 27775, 27828), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 108)), 2, 0); Tag1 (("with_constraint", 7683), (0, 0, Tag1 ([(("Pwith_type", 968), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7356)], (0)), 100000000, 0, -7355); (Tag3 ((("type_declaration", 7644)), 0, (0)), 100000000, 0, -7357)]), 0, (("astlib/ast_412.ml", 891, 27917, 27921), ("astlib/ast_412.ml", 891, 27917, 27971), 0), 0, Tag1 ("Astlib__Ast_412", 365)); (("Pwith_module", 969), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7359)], (0)), 100000000, 0, -7358); (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7361)], (0)), 100000000, 0, -7360)]), 0, (("astlib/ast_412.ml", 896, 28104, 28108), ("astlib/ast_412.ml", 896, 28104, 28159), 0), 0, Tag1 ("Astlib__Ast_412", 366)); (("Pwith_typesubst", 970), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7363)], (0)), 100000000, 0, -7362); (Tag3 ((("type_declaration", 7644)), 0, (0)), 100000000, 0, -7364)]), 0, (("astlib/ast_412.ml", 898, 28190, 28194), ("astlib/ast_412.ml", 898, 28190, 28249), 0), 0, Tag1 ("Astlib__Ast_412", 367)); (("Pwith_modsubst", 971), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7366)], (0)), 100000000, 0, -7365); (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7368)], (0)), 100000000, 0, -7367)]), 0, (("astlib/ast_412.ml", 900, 28310, 28314), ("astlib/ast_412.ml", 900, 28310, 28367), 0), 0, Tag1 ("Astlib__Ast_412", 368))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -7354)), 0, 0, 0, 0, (("astlib/ast_412.ml", 890, 27849, 27851), ("astlib/ast_412.ml", 900, 28310, 28367), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 109)), 2, 0); Tag1 (("module_expr", 7684), (0, 0, [[(("pmod_desc", 972), 0, (Tag3 ((("module_expr_desc", 7685)), 0, (0)), 100000000, 0, -7351), (("astlib/ast_412.ml", 907, 28517, 28523), ("astlib/ast_412.ml", 907, 28517, 28551), 0), 0, Tag1 ("Astlib__Ast_412", 369)); (("pmod_loc", 973), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7352), (("astlib/ast_412.ml", 908, 28552, 28558), ("astlib/ast_412.ml", 908, 28552, 28579), 0), 0, Tag1 ("Astlib__Ast_412", 370)); (("pmod_attributes", 974), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7353), (("astlib/ast_412.ml", 909, 28580, 28586), ("astlib/ast_412.ml", 909, 28580, 28614), 0), 0, Tag1 ("Astlib__Ast_412", 371))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -7350)), 0, 0, 0, 0, (("astlib/ast_412.ml", 905, 28451, 28453), ("astlib/ast_412.ml", 910, 28639, 28644), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 110)), 2, 0); Tag1 (("module_expr_desc", 7685), (0, 0, Tag1 ([(("Pmod_ident", 975), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7340)], (0)), 100000000, 0, -7339)]), 0, (("astlib/ast_412.ml", 913, 28716, 28720), ("astlib/ast_412.ml", 913, 28716, 28751), 0), 0, Tag1 ("Astlib__Ast_412", 372)); (("Pmod_structure", 976), ([(Tag3 ((("structure", 7686)), 0, (0)), 100000000, 0, -7341)]), 0, (("astlib/ast_412.ml", 915, 28764, 28768), ("astlib/ast_412.ml", 915, 28764, 28797), 0), 0, Tag1 ("Astlib__Ast_412", 373)); (("Pmod_functor", 977), ([(Tag3 ((("functor_parameter", 7670)), 0, (0)), 100000000, 0, -7342); (Tag3 ((("module_expr", 7684)), 0, (0)), 100000000, 0, -7343)]), 0, (("astlib/ast_412.ml", 917, 28823, 28827), ("astlib/ast_412.ml", 917, 28823, 28876), 0), 0, Tag1 ("Astlib__Ast_412", 374)); (("Pmod_apply", 978), ([(Tag3 ((("module_expr", 7684)), 0, (0)), 100000000, 0, -7344); (Tag3 ((("module_expr", 7684)), 0, (0)), 100000000, 0, -7345)]), 0, (("astlib/ast_412.ml", 919, 28910, 28914), ("astlib/ast_412.ml", 919, 28910, 28955), 0), 0, Tag1 ("Astlib__Ast_412", 375)); (("Pmod_constraint", 979), ([(Tag3 ((("module_expr", 7684)), 0, (0)), 100000000, 0, -7346); (Tag3 ((("module_type", 7668)), 0, (0)), 100000000, 0, -7347)]), 0, (("astlib/ast_412.ml", 921, 28975, 28979), ("astlib/ast_412.ml", 921, 28975, 29025), 0), 0, Tag1 ("Astlib__Ast_412", 376)); (("Pmod_unpack", 980), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7348)]), 0, (("astlib/ast_412.ml", 923, 29046, 29050), ("astlib/ast_412.ml", 923, 29046, 29077), 0), 0, Tag1 ("Astlib__Ast_412", 377)); (("Pmod_extension", 981), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7349)]), 0, (("astlib/ast_412.ml", 925, 29096, 29100), ("astlib/ast_412.ml", 925, 29096, 29129), 0), 0, Tag1 ("Astlib__Ast_412", 378))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -7338)), 0, 0, 0, 0, (("astlib/ast_412.ml", 912, 28646, 28648), ("astlib/ast_412.ml", 925, 29096, 29129), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 111)), 2, 0); Tag1 (("structure", 7686), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7687)), 0, (0)), 100000000, 0, -7337)], (0)), 100000000, 0, -7336)), 0, 0, 0, 0, (("astlib/ast_412.ml", 928, 29147, 29149), ("astlib/ast_412.ml", 928, 29147, 29184), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 112)), 2, 0); Tag1 (("structure_item", 7687), (0, 0, [[(("pstr_desc", 982), 0, (Tag3 ((("structure_item_desc", 7688)), 0, (0)), 100000000, 0, -7334), (("astlib/ast_412.ml", 932, 29258, 29264), ("astlib/ast_412.ml", 932, 29258, 29295), 0), 0, Tag1 ("Astlib__Ast_412", 379)); (("pstr_loc", 983), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7335), (("astlib/ast_412.ml", 933, 29296, 29302), ("astlib/ast_412.ml", 933, 29296, 29323), 0), 0, Tag1 ("Astlib__Ast_412", 380))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -7333)), 0, 0, 0, 0, (("astlib/ast_412.ml", 930, 29186, 29188), ("astlib/ast_412.ml", 934, 29324, 29329), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 113)), 2, 0); Tag1 (("structure_item_desc", 7688), (0, 0, Tag1 ([(("Pstr_eval", 984), ([(Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7309); (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7310)]), 0, (("astlib/ast_412.ml", 937, 29407, 29411), ("astlib/ast_412.ml", 937, 29407, 29449), 0), 0, Tag1 ("Astlib__Ast_412", 381)); (("Pstr_value", 985), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "rec_flag"), 0, (0)), 100000000, 0, -7311); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7689)), 0, (0)), 100000000, 0, -7313)], (0)), 100000000, 0, -7312)]), 0, (("astlib/ast_412.ml", 939, 29462, 29466), ("astlib/ast_412.ml", 939, 29462, 29511), 0), 0, Tag1 ("Astlib__Ast_412", 382)); (("Pstr_primitive", 986), ([(Tag3 ((("value_description", 7643)), 0, (0)), 100000000, 0, -7314)]), 0, (("astlib/ast_412.ml", 943, 29650, 29654), ("astlib/ast_412.ml", 943, 29650, 29691), 0), 0, Tag1 ("Astlib__Ast_412", 383)); (("Pstr_type", 987), ([(Tag3 (Tag1 ((("Asttypes", 7607)), "rec_flag"), 0, (0)), 100000000, 0, -7315); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7644)), 0, (0)), 100000000, 0, -7317)], (0)), 100000000, 0, -7316)]), 0, (("astlib/ast_412.ml", 946, 29750, 29754), ("astlib/ast_412.ml", 946, 29750, 29801), 0), 0, Tag1 ("Astlib__Ast_412", 384)); (("Pstr_typext", 988), ([(Tag3 ((("type_extension", 7649)), 0, (0)), 100000000, 0, -7318)]), 0, (("astlib/ast_412.ml", 948, 29847, 29851), ("astlib/ast_412.ml", 948, 29847, 29882), 0), 0, Tag1 ("Astlib__Ast_412", 385)); (("Pstr_exception", 989), ([(Tag3 ((("type_exception", 7651)), 0, (0)), 100000000, 0, -7319)]), 0, (("astlib/ast_412.ml", 950, 29908, 29912), ("astlib/ast_412.ml", 950, 29908, 29946), 0), 0, Tag1 ("Astlib__Ast_412", 386)); (("Pstr_module", 990), ([(Tag3 ((("module_binding", 7690)), 0, (0)), 100000000, 0, -7320)]), 0, (("astlib/ast_412.ml", 953, 29999, 30003), ("astlib/ast_412.ml", 953, 29999, 30034), 0), 0, Tag1 ("Astlib__Ast_412", 387)); (("Pstr_recmodule", 991), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7690)), 0, (0)), 100000000, 0, -7322)], (0)), 100000000, 0, -7321)]), 0, (("astlib/ast_412.ml", 955, 30059, 30063), ("astlib/ast_412.ml", 955, 30059, 30102), 0), 0, Tag1 ("Astlib__Ast_412", 388)); (("Pstr_modtype", 992), ([(Tag3 ((("module_type_declaration", 7676)), 0, (0)), 100000000, 0, -7323)]), 0, (("astlib/ast_412.ml", 957, 30154, 30158), ("astlib/ast_412.ml", 957, 30154, 30199), 0), 0, Tag1 ("Astlib__Ast_412", 389)); (("Pstr_open", 993), ([(Tag3 ((("open_declaration", 7679)), 0, (0)), 100000000, 0, -7324)]), 0, (("astlib/ast_412.ml", 959, 30229, 30233), ("astlib/ast_412.ml", 959, 30229, 30264), 0), 0, Tag1 ("Astlib__Ast_412", 390)); (("Pstr_class", 994), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7667)), 0, (0)), 100000000, 0, -7326)], (0)), 100000000, 0, -7325)]), 0, (("astlib/ast_412.ml", 961, 30282, 30286), ("astlib/ast_412.ml", 961, 30282, 30324), 0), 0, Tag1 ("Astlib__Ast_412", 391)); (("Pstr_class_type", 995), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7660)), 0, (0)), 100000000, 0, -7328)], (0)), 100000000, 0, -7327)]), 0, (("astlib/ast_412.ml", 963, 30371, 30375), ("astlib/ast_412.ml", 963, 30371, 30423), 0), 0, Tag1 ("Astlib__Ast_412", 392)); (("Pstr_include", 996), ([(Tag3 ((("include_declaration", 7682)), 0, (0)), 100000000, 0, -7329)]), 0, (("astlib/ast_412.ml", 965, 30477, 30481), ("astlib/ast_412.ml", 965, 30477, 30518), 0), 0, Tag1 ("Astlib__Ast_412", 393)); (("Pstr_attribute", 997), ([(Tag3 ((("attribute", 7625)), 0, (0)), 100000000, 0, -7330)]), 0, (("astlib/ast_412.ml", 967, 30540, 30544), ("astlib/ast_412.ml", 967, 30540, 30573), 0), 0, Tag1 ("Astlib__Ast_412", 394)); (("Pstr_extension", 998), ([(Tag3 ((("extension", 7626)), 0, (0)), 100000000, 0, -7331); (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7332)]), 0, (("astlib/ast_412.ml", 969, 30592, 30596), ("astlib/ast_412.ml", 969, 30592, 30638), 0), 0, Tag1 ("Astlib__Ast_412", 395))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -7308)), 0, 0, 0, 0, (("astlib/ast_412.ml", 936, 29331, 29333), ("astlib/ast_412.ml", 969, 30592, 30638), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 114)), 2, 0); Tag1 (("value_binding", 7689), (0, 0, [[(("pvb_pat", 999), 0, (Tag3 ((("pattern", 7636)), 0, (0)), 100000000, 0, -7304), (("astlib/ast_412.ml", 974, 30727, 30733), ("astlib/ast_412.ml", 974, 30727, 30750), 0), 0, Tag1 ("Astlib__Ast_412", 396)); (("pvb_expr", 1000), 0, (Tag3 ((("expression", 7638)), 0, (0)), 100000000, 0, -7305), (("astlib/ast_412.ml", 975, 30751, 30757), ("astlib/ast_412.ml", 975, 30751, 30778), 0), 0, Tag1 ("Astlib__Ast_412", 397)); (("pvb_attributes", 1001), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7306), (("astlib/ast_412.ml", 976, 30779, 30785), ("astlib/ast_412.ml", 976, 30779, 30812), 0), 0, Tag1 ("Astlib__Ast_412", 398)); (("pvb_loc", 1002), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7307), (("astlib/ast_412.ml", 977, 30813, 30819), ("astlib/ast_412.ml", 977, 30813, 30839), 0), 0, Tag1 ("Astlib__Ast_412", 399))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -7303)), 0, 0, 0, 0, (("astlib/ast_412.ml", 972, 30657, 30659), ("astlib/ast_412.ml", 978, 30840, 30845), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 115)), 2, 0); Tag1 (("module_binding", 7690), (0, 0, [[(("pmb_name", 1003), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7299)], (0)), 100000000, 0, -7298)], (0)), 100000000, 0, -7297), (("astlib/ast_412.ml", 982, 30919, 30925), ("astlib/ast_412.ml", 982, 30919, 30953), 0), 0, Tag1 ("Astlib__Ast_412", 400)); (("pmb_expr", 1004), 0, (Tag3 ((("module_expr", 7684)), 0, (0)), 100000000, 0, -7300), (("astlib/ast_412.ml", 983, 30954, 30960), ("astlib/ast_412.ml", 983, 30954, 30982), 0), 0, Tag1 ("Astlib__Ast_412", 401)); (("pmb_attributes", 1005), 0, (Tag3 ((("attributes", 7627)), 0, (0)), 100000000, 0, -7301), (("astlib/ast_412.ml", 984, 30983, 30989), ("astlib/ast_412.ml", 984, 30983, 31016), 0), 0, Tag1 ("Astlib__Ast_412", 402)); (("pmb_loc", 1006), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7302), (("astlib/ast_412.ml", 985, 31017, 31023), ("astlib/ast_412.ml", 985, 31017, 31043), 0), 0, Tag1 ("Astlib__Ast_412", 403))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -7296)), 0, 0, 0, 0, (("astlib/ast_412.ml", 980, 30847, 30849), ("astlib/ast_412.ml", 986, 31044, 31049), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 116)), 2, 0); Tag1 (("toplevel_phrase", 7691), (0, 0, Tag1 ([(("Ptop_def", 1021), ([(Tag3 ((("structure", 7686)), 0, (0)), 100000000, 0, -7294)]), 0, (("astlib/ast_412.ml", 994, 31184, 31188), ("astlib/ast_412.ml", 994, 31184, 31211), 0), 0, Tag1 ("Astlib__Ast_412", 408)); (("Ptop_dir", 1022), ([(Tag3 ((("toplevel_directive", 7692)), 0, (0)), 100000000, 0, -7295)]), 0, (("astlib/ast_412.ml", 995, 31212, 31216), ("astlib/ast_412.ml", 995, 31212, 31248), 0), 0, Tag1 ("Astlib__Ast_412", 409))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -7293)), 0, 0, 0, 0, (("astlib/ast_412.ml", 993, 31115, 31117), ("astlib/ast_412.ml", 995, 31212, 31248), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 404)), 1, 0); Tag1 (("toplevel_directive", 7692), (0, 0, [[(("pdir_name", 1023), 0, (Tag3 (Tag1 ((("Asttypes", 7607)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7289)], (0)), 100000000, 0, -7288), (("astlib/ast_412.ml", 1000, 31356, 31362), ("astlib/ast_412.ml", 1000, 31356, 31385), 0), 0, Tag1 ("Astlib__Ast_412", 410)); (("pdir_arg", 1024), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("directive_argument", 7693)), 0, (0)), 100000000, 0, -7291)], (0)), 100000000, 0, -7290), (("astlib/ast_412.ml", 1001, 31386, 31392), ("astlib/ast_412.ml", 1001, 31386, 31429), 0), 0, Tag1 ("Astlib__Ast_412", 411)); (("pdir_loc", 1025), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7292), (("astlib/ast_412.ml", 1002, 31430, 31436), ("astlib/ast_412.ml", 1002, 31430, 31458), 0), 0, Tag1 ("Astlib__Ast_412", 412))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "toplevel_directive"), 0, (0)), 100000000, 0, -7287)), 0, 0, 0, 0, (("astlib/ast_412.ml", 998, 31276, 31278), ("astlib/ast_412.ml", 1003, 31459, 31464), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 405)), 2, 0); Tag1 (("directive_argument", 7693), (0, 0, [[(("pdira_desc", 1026), 0, (Tag3 ((("directive_argument_desc", 7694)), 0, (0)), 100000000, 0, -7285), (("astlib/ast_412.ml", 1007, 31546, 31552), ("astlib/ast_412.ml", 1007, 31546, 31589), 0), 0, Tag1 ("Astlib__Ast_412", 413)); (("pdira_loc", 1027), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -7286), (("astlib/ast_412.ml", 1008, 31590, 31596), ("astlib/ast_412.ml", 1008, 31590, 31619), 0), 0, Tag1 ("Astlib__Ast_412", 414))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -7284)), 0, 0, 0, 0, (("astlib/ast_412.ml", 1005, 31466, 31468), ("astlib/ast_412.ml", 1009, 31620, 31625), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 406)), 2, 0); Tag1 (("directive_argument_desc", 7694), (0, 0, Tag1 ([(("Pdir_string", 1028), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7278)]), 0, (("astlib/ast_412.ml", 1012, 31711, 31715), ("astlib/ast_412.ml", 1012, 31711, 31738), 0), 0, Tag1 ("Astlib__Ast_412", 415)); (("Pdir_int", 1029), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7279); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -7281)], (0)), 100000000, 0, -7280)]), 0, (("astlib/ast_412.ml", 1013, 31739, 31743), ("astlib/ast_412.ml", 1013, 31739, 31777), 0), 0, Tag1 ("Astlib__Ast_412", 416)); (("Pdir_ident", 1030), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -7282)]), 0, (("astlib/ast_412.ml", 1014, 31778, 31782), ("astlib/ast_412.ml", 1014, 31778, 31809), 0), 0, Tag1 ("Astlib__Ast_412", 417)); (("Pdir_bool", 1031), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -7283)]), 0, (("astlib/ast_412.ml", 1015, 31810, 31814), ("astlib/ast_412.ml", 1015, 31810, 31833), 0), 0, Tag1 ("Astlib__Ast_412", 418))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_412")), "Parsetree"), "directive_argument_desc"), 0, (0)), 100000000, 0, -7277)), 0, 0, 0, 0, (("astlib/ast_412.ml", 1011, 31627, 31629), ("astlib/ast_412.ml", 1015, 31810, 31833), 0), 0, 0, 0, Tag1 ("Astlib__Ast_412", 407)), 2, 0)]), 0, (("astlib/ast_412.ml", 67, 2809, 2809), ("astlib/ast_412.ml", 1016, 31834, 31837), 0), Tag1 ("Astlib__Ast_412", 419)), 0, 0); Tag3 (("Config", 7609), 0, (Tag1 ([(("ast_impl_magic_number", 7695), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7935), 0, (("astlib/ast_412.ml", 1019, 31862, 31868), ("astlib/ast_412.ml", 1019, 31862, 31889), 0), 0, Tag1 ("Astlib__Ast_412", 420)), 0); (("ast_intf_magic_number", 7696), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7934), 0, (("astlib/ast_412.ml", 1020, 31907, 31913), ("astlib/ast_412.ml", 1020, 31907, 31934), 0), 0, Tag1 ("Astlib__Ast_412", 421)), 0)]), 0, (("astlib/ast_412.ml", 1018, 31839, 31839), ("astlib/ast_412.ml", 1021, 31952, 31955), 0), Tag1 ("Astlib__Ast_412", 422)), 0, 0)]), 0, (("astlib/astlib.ml", 35, 1613, 1613), ("astlib/astlib.ml", 35, 1613, 1637), 0), Tag1 ("Astlib", 10)), 0, 0); (("version", 7602), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7249), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7603), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -7248), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7604), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -7229), 0), 100000000, 0, -7228), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -7245), 0), 100000000, 0, -7244), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -7247), 0), 100000000, 0, -7246), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -7239), 0), 100000000, 0, -7238), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -7211), 0), 100000000, 0, -7210), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -7225), 0), 100000000, 0, -7224), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -7215), 0), 100000000, 0, -7214), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -7237), 0), 100000000, 0, -7236), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -7223), 0), 100000000, 0, -7222), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -7221), 0), 100000000, 0, -7220), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -7219), 0), 100000000, 0, -7218), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -7217), 0), 100000000, 0, -7216), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -7233), 0), 100000000, 0, -7232), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -7241), 0), 100000000, 0, -7240), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -7235), 0), 100000000, 0, -7234), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -7213), 0), 100000000, 0, -7212), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -7227), 0), 100000000, 0, -7226), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -7243), 0), 100000000, 0, -7242), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7601)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -7231), 0), 100000000, 0, -7230), (0, 100000000, 0, -7209)), 100000000, 0, 1021)), 100000000, 0, 1022)), 100000000, 0, 1023)), 100000000, 0, 1024)), 100000000, 0, 1025)), 100000000, 0, 1026)), 100000000, 0, 1027)), 100000000, 0, 1028)), 100000000, 0, 1029)), 100000000, 0, 1030)), 100000000, 0, 1031)), 100000000, 0, 1032)), 100000000, 0, 1033)), 100000000, 0, 1034)), 100000000, 0, 1035)), 100000000, 0, 1036)), 100000000, 0, 1037)), 100000000, 0, 1038)), 100000000, 0, -7190), (0)), 100000000, 0, -7189)], (0)), 100000000, 0, -7188)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7605), ((("witnesses", 6673)), [((("_")), 100000000, 0, -7187)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7604)), 0, (0)), 100000000, 0, -7186)], (0)), 100000000, 0, -7185)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7606), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7604)), 0, (0)), 100000000, 0, -7184)], (0)), 100000000, 0, -7183), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 155, 5808, 5808), ("ast/versions.mli", 155, 5808, 5873), 0), Tag1 ("Ppxlib_ast__Versions", 44)), 0, 0); Tag3 (("OCaml_413", 6687), 0, (Tag1 ([Tag3 (("Ast", 7697), 0, (Tag1 ([Tag3 (("Asttypes", 7703), 0, (Tag1 ([Tag1 (("constant", 7706), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8020)]), 0, (("astlib/ast_413.ml", 22, 1494, 1500), ("astlib/ast_413.ml", 22, 1494, 1516), 0), 0, Tag1 ("Astlib__Ast_413", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -8021)]), 0, (("astlib/ast_413.ml", 23, 1517, 1521), ("astlib/ast_413.ml", 23, 1517, 1541), 0), 0, Tag1 ("Astlib__Ast_413", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8022); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8023); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8025)], (0)), 100000000, 0, -8024)]), 0, (("astlib/ast_413.ml", 24, 1542, 1546), ("astlib/ast_413.ml", 24, 1542, 1599), 0), 0, Tag1 ("Astlib__Ast_413", 3)); (("Const_float", 333), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8026)]), 0, (("astlib/ast_413.ml", 25, 1600, 1604), ("astlib/ast_413.ml", 25, 1600, 1627), 0), 0, Tag1 ("Astlib__Ast_413", 4)); (("Const_int32", 334), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -8027)]), 0, (("astlib/ast_413.ml", 26, 1628, 1632), ("astlib/ast_413.ml", 26, 1628, 1654), 0), 0, Tag1 ("Astlib__Ast_413", 5)); (("Const_int64", 335), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -8028)]), 0, (("astlib/ast_413.ml", 27, 1655, 1659), ("astlib/ast_413.ml", 27, 1655, 1681), 0), 0, Tag1 ("Astlib__Ast_413", 6)); (("Const_nativeint", 336), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -8029)]), 0, (("astlib/ast_413.ml", 28, 1682, 1686), ("astlib/ast_413.ml", 28, 1682, 1716), 0), 0, Tag1 ("Astlib__Ast_413", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -8019)), 0, 0, 0, 0, (("astlib/ast_413.ml", 21, 1440, 1442), ("astlib/ast_413.ml", 28, 1682, 1716), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 0)), 1, 0); Tag1 (("rec_flag", 7707), (0, 0, Tag1 ([(("Nonrecursive", 543), (0), 0, (("astlib/ast_413.ml", 30, 1718, 1772), ("astlib/ast_413.ml", 30, 1718, 1784), 0), 0, Tag1 ("Astlib__Ast_413", 9)); (("Recursive", 544), (0), 0, (("astlib/ast_413.ml", 30, 1718, 1785), ("astlib/ast_413.ml", 30, 1718, 1796), 0), 0, Tag1 ("Astlib__Ast_413", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -8018)), 0, 0, 0, 0, (("astlib/ast_413.ml", 30, 1718, 1720), ("astlib/ast_413.ml", 30, 1718, 1796), 0), 0, 1, 0, Tag1 ("Astlib__Ast_413", 8)), 1, 0); Tag1 (("direction_flag", 7708), (0, 0, Tag1 ([(("Upto", 546), (0), 0, (("astlib/ast_413.ml", 32, 1798, 1864), ("astlib/ast_413.ml", 32, 1798, 1868), 0), 0, Tag1 ("Astlib__Ast_413", 12)); (("Downto", 547), (0), 0, (("astlib/ast_413.ml", 32, 1798, 1869), ("astlib/ast_413.ml", 32, 1798, 1877), 0), 0, Tag1 ("Astlib__Ast_413", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -8017)), 0, 0, 0, 0, (("astlib/ast_413.ml", 32, 1798, 1800), ("astlib/ast_413.ml", 32, 1798, 1877), 0), 0, 1, 0, Tag1 ("Astlib__Ast_413", 11)), 1, 0); Tag1 (("private_flag", 7709), (0, 0, Tag1 ([(("Private", 549), (0), 0, (("astlib/ast_413.ml", 35, 1933, 1995), ("astlib/ast_413.ml", 35, 1933, 2002), 0), 0, Tag1 ("Astlib__Ast_413", 15)); (("Public", 550), (0), 0, (("astlib/ast_413.ml", 35, 1933, 2003), ("astlib/ast_413.ml", 35, 1933, 2011), 0), 0, Tag1 ("Astlib__Ast_413", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -8016)), 0, 0, 0, 0, (("astlib/ast_413.ml", 35, 1933, 1935), ("astlib/ast_413.ml", 35, 1933, 2011), 0), 0, 1, 0, Tag1 ("Astlib__Ast_413", 14)), 1, 0); Tag1 (("mutable_flag", 7710), (0, 0, Tag1 ([(("Immutable", 552), (0), 0, (("astlib/ast_413.ml", 37, 2013, 2075), ("astlib/ast_413.ml", 37, 2013, 2084), 0), 0, Tag1 ("Astlib__Ast_413", 18)); (("Mutable", 553), (0), 0, (("astlib/ast_413.ml", 37, 2013, 2085), ("astlib/ast_413.ml", 37, 2013, 2094), 0), 0, Tag1 ("Astlib__Ast_413", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -8015)), 0, 0, 0, 0, (("astlib/ast_413.ml", 37, 2013, 2015), ("astlib/ast_413.ml", 37, 2013, 2094), 0), 0, 1, 0, Tag1 ("Astlib__Ast_413", 17)), 1, 0); Tag1 (("virtual_flag", 7711), (0, 0, Tag1 ([(("Virtual", 555), (0), 0, (("astlib/ast_413.ml", 39, 2096, 2158), ("astlib/ast_413.ml", 39, 2096, 2165), 0), 0, Tag1 ("Astlib__Ast_413", 21)); (("Concrete", 556), (0), 0, (("astlib/ast_413.ml", 39, 2096, 2166), ("astlib/ast_413.ml", 39, 2096, 2176), 0), 0, Tag1 ("Astlib__Ast_413", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -8014)), 0, 0, 0, 0, (("astlib/ast_413.ml", 39, 2096, 2098), ("astlib/ast_413.ml", 39, 2096, 2176), 0), 0, 1, 0, Tag1 ("Astlib__Ast_413", 20)), 1, 0); Tag1 (("override_flag", 7712), (0, 0, Tag1 ([(("Override", 558), (0), 0, (("astlib/ast_413.ml", 41, 2178, 2242), ("astlib/ast_413.ml", 41, 2178, 2250), 0), 0, Tag1 ("Astlib__Ast_413", 24)); (("Fresh", 559), (0), 0, (("astlib/ast_413.ml", 41, 2178, 2251), ("astlib/ast_413.ml", 41, 2178, 2258), 0), 0, Tag1 ("Astlib__Ast_413", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -8013)), 0, 0, 0, 0, (("astlib/ast_413.ml", 41, 2178, 2180), ("astlib/ast_413.ml", 41, 2178, 2258), 0), 0, 1, 0, Tag1 ("Astlib__Ast_413", 23)), 1, 0); Tag1 (("closed_flag", 7713), (0, 0, Tag1 ([(("Closed", 561), (0), 0, (("astlib/ast_413.ml", 43, 2260, 2320), ("astlib/ast_413.ml", 43, 2260, 2326), 0), 0, Tag1 ("Astlib__Ast_413", 27)); (("Open", 562), (0), 0, (("astlib/ast_413.ml", 43, 2260, 2327), ("astlib/ast_413.ml", 43, 2260, 2333), 0), 0, Tag1 ("Astlib__Ast_413", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -8012)), 0, 0, 0, 0, (("astlib/ast_413.ml", 43, 2260, 2262), ("astlib/ast_413.ml", 43, 2260, 2333), 0), 0, 1, 0, Tag1 ("Astlib__Ast_413", 26)), 1, 0); Tag1 (("label", 7714), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8011)), 0, 0, 0, 0, (("astlib/ast_413.ml", 45, 2335, 2337), ("astlib/ast_413.ml", 45, 2335, 2356), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 29)), 1, 0); Tag1 (("arg_label", 7715), (0, 0, Tag1 ([(("Nolabel", 565), (0), 0, (("astlib/ast_413.ml", 48, 2414, 2420), ("astlib/ast_413.ml", 48, 2414, 2427), 0), 0, Tag1 ("Astlib__Ast_413", 31)); (("Labelled", 566), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8009)]), 0, (("astlib/ast_413.ml", 49, 2428, 2432), ("astlib/ast_413.ml", 49, 2428, 2452), 0), 0, Tag1 ("Astlib__Ast_413", 32)); (("Optional", 567), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8010)]), 0, (("astlib/ast_413.ml", 50, 2475, 2479), ("astlib/ast_413.ml", 50, 2475, 2499), 0), 0, Tag1 ("Astlib__Ast_413", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -8008)), 0, 0, 0, 0, (("astlib/ast_413.ml", 47, 2358, 2360), ("astlib/ast_413.ml", 50, 2475, 2499), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 30)), 1, 0); Tag1 (("loc", 7716), ([((("a")), 100000000, 0, -8006)], 1, [[(("txt", 569), 0, ((("a")), 100000000, 0, -8006), (("astlib/ast_413.ml", 53, 2559, 2563), ("astlib/ast_413.ml", 53, 2559, 2572), 0), 0, Tag1 ("Astlib__Ast_413", 35)); (("loc", 570), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8007), (("astlib/ast_413.ml", 54, 2573, 2577), ("astlib/ast_413.ml", 54, 2573, 2594), 0), 0, Tag1 ("Astlib__Ast_413", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -8006)], (0)), 100000000, 0, -8005)), [25], [0], 0, 0, (("astlib/ast_413.ml", 52, 2523, 2525), ("astlib/ast_413.ml", 55, 2595, 2598), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 34)), 1, 0); Tag1 (("variance", 7717), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_413.ml", 58, 2654, 2658), ("astlib/ast_413.ml", 58, 2654, 2669), 0), 0, Tag1 ("Astlib__Ast_413", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_413.ml", 59, 2670, 2674), ("astlib/ast_413.ml", 59, 2670, 2689), 0), 0, Tag1 ("Astlib__Ast_413", 39)); (("NoVariance", 640), (0), 0, (("astlib/ast_413.ml", 60, 2690, 2694), ("astlib/ast_413.ml", 60, 2690, 2706), 0), 0, Tag1 ("Astlib__Ast_413", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -8004)), 0, 0, 0, 0, (("astlib/ast_413.ml", 57, 2600, 2602), ("astlib/ast_413.ml", 60, 2690, 2706), 0), 0, 1, 0, Tag1 ("Astlib__Ast_413", 37)), 1, 0); Tag1 (("injectivity", 7718), (0, 0, Tag1 ([(("Injective", 642), (0), 0, (("astlib/ast_413.ml", 63, 2768, 2772), ("astlib/ast_413.ml", 63, 2768, 2783), 0), 0, Tag1 ("Astlib__Ast_413", 42)); (("NoInjectivity", 643), (0), 0, (("astlib/ast_413.ml", 64, 2784, 2788), ("astlib/ast_413.ml", 64, 2784, 2803), 0), 0, Tag1 ("Astlib__Ast_413", 43))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Asttypes"), "injectivity"), 0, (0)), 100000000, 0, -8003)), 0, 0, 0, 0, (("astlib/ast_413.ml", 62, 2708, 2710), ("astlib/ast_413.ml", 64, 2784, 2803), 0), 0, 1, 0, Tag1 ("Astlib__Ast_413", 41)), 1, 0)]), 0, (("astlib/ast_413.ml", 20, 1415, 1415), ("astlib/ast_413.ml", 65, 2804, 2807), 0), Tag1 ("Astlib__Ast_413", 44)), 0, 0); Tag3 (("Parsetree", 7704), 0, (Tag1 ([Tag1 (("constant", 7719), (0, 0, Tag1 ([(("Pconst_integer", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8687); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -8689)], (0)), 100000000, 0, -8688)]), 0, (("astlib/ast_413.ml", 71, 2907, 2913), ("astlib/ast_413.ml", 71, 2907, 2951), 0), 0, Tag1 ("Astlib__Ast_413", 46)); (("Pconst_char", 647), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -8690)]), 0, (("astlib/ast_413.ml", 77, 3105, 3109), ("astlib/ast_413.ml", 77, 3105, 3130), 0), 0, Tag1 ("Astlib__Ast_413", 47)); (("Pconst_string", 648), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8691); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8692); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8694)], (0)), 100000000, 0, -8693)]), 0, (("astlib/ast_413.ml", 79, 3145, 3149), ("astlib/ast_413.ml", 79, 3145, 3203), 0), 0, Tag1 ("Astlib__Ast_413", 48)); (("Pconst_float", 649), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8695); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -8697)], (0)), 100000000, 0, -8696)]), 0, (("astlib/ast_413.ml", 85, 3342, 3346), ("astlib/ast_413.ml", 85, 3342, 3384), 0), 0, Tag1 ("Astlib__Ast_413", 49))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -8686)), 0, 0, 0, 0, (("astlib/ast_413.ml", 70, 2852, 2854), ("astlib/ast_413.ml", 85, 3342, 3384), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 45)), 1, 0); Tag1 (("location_stack", 7720), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8685)], (0)), 100000000, 0, -8684)), 0, 0, 0, 0, (("astlib/ast_413.ml", 92, 3520, 3522), ("astlib/ast_413.ml", 92, 3520, 3559), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 50)), 1, 0); Tag1 (("attribute", 7721), (0, 0, [[(("attr_name", 717), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8681)], (0)), 100000000, 0, -8680), (("astlib/ast_413.ml", 97, 3651, 3655), ("astlib/ast_413.ml", 97, 3651, 3678), 0), 0, Tag1 ("Astlib__Ast_413", 117)); (("attr_payload", 718), 0, (Tag3 ((("payload", 7724)), 0, (0)), 100000000, 0, -8682), (("astlib/ast_413.ml", 98, 3679, 3683), ("astlib/ast_413.ml", 98, 3679, 3706), 0), 0, Tag1 ("Astlib__Ast_413", 118)); (("attr_loc", 719), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8683), (("astlib/ast_413.ml", 99, 3707, 3711), ("astlib/ast_413.ml", 99, 3707, 3733), 0), 0, Tag1 ("Astlib__Ast_413", 119))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "attribute"), 0, (0)), 100000000, 0, -8679)), 0, 0, 0, 0, (("astlib/ast_413.ml", 96, 3592, 3594), ("astlib/ast_413.ml", 100, 3734, 3737), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 51)), 1, 0); Tag1 (("extension", 7722), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8677)], (0)), 100000000, 0, -8676); (Tag3 ((("payload", 7724)), 0, (0)), 100000000, 0, -8678)]), 100000000, 0, -8675)), 0, 0, 0, 0, (("astlib/ast_413.ml", 108, 3877, 3879), ("astlib/ast_413.ml", 108, 3877, 3915), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 52)), 2, 0); Tag1 (("attributes", 7723), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 7721)), 0, (0)), 100000000, 0, -8674)], (0)), 100000000, 0, -8673)), 0, 0, 0, 0, (("astlib/ast_413.ml", 115, 4016, 4018), ("astlib/ast_413.ml", 115, 4016, 4049), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 53)), 2, 0); Tag1 (("payload", 7724), (0, 0, Tag1 ([(("PStr", 720), ([(Tag3 ((("structure", 7782)), 0, (0)), 100000000, 0, -8667)]), 0, (("astlib/ast_413.ml", 118, 4103, 4107), ("astlib/ast_413.ml", 118, 4103, 4126), 0), 0, Tag1 ("Astlib__Ast_413", 120)); (("PSig", 721), ([(Tag3 ((("signature", 7767)), 0, (0)), 100000000, 0, -8668)]), 0, (("astlib/ast_413.ml", 119, 4127, 4131), ("astlib/ast_413.ml", 119, 4127, 4150), 0), 0, Tag1 ("Astlib__Ast_413", 121)); (("PTyp", 722), ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8669)]), 0, (("astlib/ast_413.ml", 120, 4163, 4167), ("astlib/ast_413.ml", 120, 4163, 4186), 0), 0, Tag1 ("Astlib__Ast_413", 122)); (("PPat", 723), ([(Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8670); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8672)], (0)), 100000000, 0, -8671)]), 0, (("astlib/ast_413.ml", 121, 4198, 4202), ("astlib/ast_413.ml", 121, 4198, 4239), 0), 0, Tag1 ("Astlib__Ast_413", 123))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -8666)), 0, 0, 0, 0, (("astlib/ast_413.ml", 117, 4051, 4053), ("astlib/ast_413.ml", 121, 4198, 4239), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 54)), 2, 0); Tag1 (("core_type", 7725), (0, 0, [[(("ptyp_desc", 724), 0, (Tag3 ((("core_type_desc", 7726)), 0, (0)), 100000000, 0, -8662), (("astlib/ast_413.ml", 129, 4384, 4390), ("astlib/ast_413.ml", 129, 4384, 4416), 0), 0, Tag1 ("Astlib__Ast_413", 124)); (("ptyp_loc", 725), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8663), (("astlib/ast_413.ml", 130, 4417, 4423), ("astlib/ast_413.ml", 130, 4417, 4444), 0), 0, Tag1 ("Astlib__Ast_413", 125)); (("ptyp_loc_stack", 726), 0, (Tag3 ((("location_stack", 7720)), 0, (0)), 100000000, 0, -8664), (("astlib/ast_413.ml", 131, 4445, 4451), ("astlib/ast_413.ml", 131, 4445, 4482), 0), 0, Tag1 ("Astlib__Ast_413", 126)); (("ptyp_attributes", 727), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8665), (("astlib/ast_413.ml", 132, 4483, 4489), ("astlib/ast_413.ml", 132, 4483, 4517), 0), 0, Tag1 ("Astlib__Ast_413", 127))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -8661)), 0, 0, 0, 0, (("astlib/ast_413.ml", 127, 4322, 4324), ("astlib/ast_413.ml", 133, 4542, 4547), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 55)), 2, 0); Tag1 (("core_type_desc", 7726), (0, 0, Tag1 ([(("Ptyp_any", 728), (0), 0, (("astlib/ast_413.ml", 136, 4615, 4619), ("astlib/ast_413.ml", 136, 4615, 4629), 0), 0, Tag1 ("Astlib__Ast_413", 128)); (("Ptyp_var", 729), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8630)]), 0, (("astlib/ast_413.ml", 138, 4643, 4647), ("astlib/ast_413.ml", 138, 4643, 4667), 0), 0, Tag1 ("Astlib__Ast_413", 129)); (("Ptyp_arrow", 730), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "arg_label"), 0, (0)), 100000000, 0, -8631); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8632); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8633)]), 0, (("astlib/ast_413.ml", 140, 4681, 4685), ("astlib/ast_413.ml", 140, 4681, 4734), 0), 0, Tag1 ("Astlib__Ast_413", 130)); (("Ptyp_tuple", 731), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8635)], (0)), 100000000, 0, -8634)]), 0, (("astlib/ast_413.ml", 145, 4833, 4837), ("astlib/ast_413.ml", 145, 4833, 4867), 0), 0, Tag1 ("Astlib__Ast_413", 131)); (("Ptyp_constr", 732), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8637)], (0)), 100000000, 0, -8636); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8639)], (0)), 100000000, 0, -8638)]), 0, (("astlib/ast_413.ml", 150, 4922, 4926), ("astlib/ast_413.ml", 150, 4922, 4975), 0), 0, Tag1 ("Astlib__Ast_413", 132)); (("Ptyp_object", 736), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 7730)), 0, (0)), 100000000, 0, -8641)], (0)), 100000000, 0, -8640); (Tag3 (Tag1 ((("Asttypes", 7703)), "closed_flag"), 0, (0)), 100000000, 0, -8642)]), 0, (("astlib/ast_413.ml", 155, 5044, 5048), ("astlib/ast_413.ml", 155, 5044, 5096), 0), 0, Tag1 ("Astlib__Ast_413", 133)); (("Ptyp_class", 737), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8644)], (0)), 100000000, 0, -8643); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8646)], (0)), 100000000, 0, -8645)]), 0, (("astlib/ast_413.ml", 159, 5200, 5204), ("astlib/ast_413.ml", 159, 5200, 5252), 0), 0, Tag1 ("Astlib__Ast_413", 134)); (("Ptyp_alias", 738), ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8647); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8648)]), 0, (("astlib/ast_413.ml", 164, 5324, 5328), ("astlib/ast_413.ml", 164, 5324, 5362), 0), 0, Tag1 ("Astlib__Ast_413", 135)); (("Ptyp_variant", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 7728)), 0, (0)), 100000000, 0, -8650)], (0)), 100000000, 0, -8649); (Tag3 (Tag1 ((("Asttypes", 7703)), "closed_flag"), 0, (0)), 100000000, 0, -8651); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8654)], (0)), 100000000, 0, -8653)], (0)), 100000000, 0, -8652)]), 0, (("astlib/ast_413.ml", 166, 5381, 5385), ("astlib/ast_413.ml", 166, 5381, 5451), 0), 0, Tag1 ("Astlib__Ast_413", 136)); (("Ptyp_poly", 740), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8657)], (0)), 100000000, 0, -8656)], (0)), 100000000, 0, -8655); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8658)]), 0, (("astlib/ast_413.ml", 172, 5696, 5700), ("astlib/ast_413.ml", 172, 5696, 5742), 0), 0, Tag1 ("Astlib__Ast_413", 137)); (("Ptyp_package", 741), ([(Tag3 ((("package_type", 7727)), 0, (0)), 100000000, 0, -8659)]), 0, (("astlib/ast_413.ml", 192, 6229, 6233), ("astlib/ast_413.ml", 192, 6229, 6263), 0), 0, Tag1 ("Astlib__Ast_413", 138)); (("Ptyp_extension", 742), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8660)]), 0, (("astlib/ast_413.ml", 194, 6285, 6289), ("astlib/ast_413.ml", 194, 6285, 6318), 0), 0, Tag1 ("Astlib__Ast_413", 139))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -8629)), 0, 0, 0, 0, (("astlib/ast_413.ml", 135, 4549, 4551), ("astlib/ast_413.ml", 194, 6285, 6318), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 56)), 2, 0); Tag1 (("package_type", 7727), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8623)], (0)), 100000000, 0, -8622); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8627)], (0)), 100000000, 0, -8626); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8628)]), 100000000, 0, -8625)], (0)), 100000000, 0, -8624)]), 100000000, 0, -8621)), 0, 0, 0, 0, (("astlib/ast_413.ml", 197, 6336, 6338), ("astlib/ast_413.ml", 197, 6336, 6409), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 57)), 2, 0); Tag1 (("row_field", 7728), (0, 0, [[(("prf_desc", 743), 0, (Tag3 ((("row_field_desc", 7729)), 0, (0)), 100000000, 0, -8618), (("astlib/ast_413.ml", 204, 6564, 6568), ("astlib/ast_413.ml", 204, 6564, 6594), 0), 0, Tag1 ("Astlib__Ast_413", 140)); (("prf_loc", 744), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8619), (("astlib/ast_413.ml", 205, 6595, 6599), ("astlib/ast_413.ml", 205, 6595, 6620), 0), 0, Tag1 ("Astlib__Ast_413", 141)); (("prf_attributes", 745), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8620), (("astlib/ast_413.ml", 206, 6621, 6625), ("astlib/ast_413.ml", 206, 6621, 6653), 0), 0, Tag1 ("Astlib__Ast_413", 142))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -8617)), 0, 0, 0, 0, (("astlib/ast_413.ml", 203, 6506, 6508), ("astlib/ast_413.ml", 207, 6654, 6657), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 58)), 2, 0); Tag1 (("row_field_desc", 7729), (0, 0, Tag1 ([(("Rtag", 746), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8612)], (0)), 100000000, 0, -8611); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -8613); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8615)], (0)), 100000000, 0, -8614)]), 0, (("astlib/ast_413.ml", 210, 6725, 6729), ("astlib/ast_413.ml", 210, 6725, 6772), 0), 0, Tag1 ("Astlib__Ast_413", 143)); (("Rinherit", 747), ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8616)]), 0, (("astlib/ast_413.ml", 221, 7175, 7179), ("astlib/ast_413.ml", 221, 7175, 7202), 0), 0, Tag1 ("Astlib__Ast_413", 144))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "row_field_desc"), 0, (0)), 100000000, 0, -8610)), 0, 0, 0, 0, (("astlib/ast_413.ml", 209, 6659, 6661), ("astlib/ast_413.ml", 221, 7175, 7202), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 59)), 2, 0); Tag1 (("object_field", 7730), (0, 0, [[(("pof_desc", 748), 0, (Tag3 ((("object_field_desc", 7731)), 0, (0)), 100000000, 0, -8607), (("astlib/ast_413.ml", 225, 7284, 7288), ("astlib/ast_413.ml", 225, 7284, 7317), 0), 0, Tag1 ("Astlib__Ast_413", 145)); (("pof_loc", 749), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8608), (("astlib/ast_413.ml", 226, 7318, 7322), ("astlib/ast_413.ml", 226, 7318, 7343), 0), 0, Tag1 ("Astlib__Ast_413", 146)); (("pof_attributes", 750), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8609), (("astlib/ast_413.ml", 227, 7344, 7348), ("astlib/ast_413.ml", 227, 7344, 7376), 0), 0, Tag1 ("Astlib__Ast_413", 147))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "object_field"), 0, (0)), 100000000, 0, -8606)), 0, 0, 0, 0, (("astlib/ast_413.ml", 224, 7220, 7222), ("astlib/ast_413.ml", 228, 7377, 7380), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 60)), 2, 0); Tag1 (("object_field_desc", 7731), (0, 0, Tag1 ([(("Otag", 751), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8603)], (0)), 100000000, 0, -8602); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8604)]), 0, (("astlib/ast_413.ml", 231, 7454, 7458), ("astlib/ast_413.ml", 231, 7454, 7489), 0), 0, Tag1 ("Astlib__Ast_413", 148)); (("Oinherit", 752), ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8605)]), 0, (("astlib/ast_413.ml", 232, 7490, 7494), ("astlib/ast_413.ml", 232, 7490, 7517), 0), 0, Tag1 ("Astlib__Ast_413", 149))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "object_field_desc"), 0, (0)), 100000000, 0, -8601)), 0, 0, 0, 0, (("astlib/ast_413.ml", 230, 7382, 7384), ("astlib/ast_413.ml", 232, 7490, 7517), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 61)), 2, 0); Tag1 (("pattern", 7732), (0, 0, [[(("ppat_desc", 753), 0, (Tag3 ((("pattern_desc", 7733)), 0, (0)), 100000000, 0, -8597), (("astlib/ast_413.ml", 238, 7595, 7601), ("astlib/ast_413.ml", 238, 7595, 7625), 0), 0, Tag1 ("Astlib__Ast_413", 150)); (("ppat_loc", 754), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8598), (("astlib/ast_413.ml", 239, 7626, 7632), ("astlib/ast_413.ml", 239, 7626, 7653), 0), 0, Tag1 ("Astlib__Ast_413", 151)); (("ppat_loc_stack", 755), 0, (Tag3 ((("location_stack", 7720)), 0, (0)), 100000000, 0, -8599), (("astlib/ast_413.ml", 240, 7654, 7660), ("astlib/ast_413.ml", 240, 7654, 7691), 0), 0, Tag1 ("Astlib__Ast_413", 152)); (("ppat_attributes", 756), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8600), (("astlib/ast_413.ml", 241, 7692, 7698), ("astlib/ast_413.ml", 241, 7692, 7726), 0), 0, Tag1 ("Astlib__Ast_413", 153))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -8596)), 0, 0, 0, 0, (("astlib/ast_413.ml", 236, 7537, 7539), ("astlib/ast_413.ml", 242, 7751, 7756), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 62)), 2, 0); Tag1 (("pattern_desc", 7733), (0, 0, Tag1 ([(("Ppat_any", 757), (0), 0, (("astlib/ast_413.ml", 245, 7820, 7824), ("astlib/ast_413.ml", 245, 7820, 7834), 0), 0, Tag1 ("Astlib__Ast_413", 154)); (("Ppat_var", 758), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8553)], (0)), 100000000, 0, -8552)]), 0, (("astlib/ast_413.ml", 247, 7847, 7851), ("astlib/ast_413.ml", 247, 7847, 7875), 0), 0, Tag1 ("Astlib__Ast_413", 155)); (("Ppat_alias", 759), ([(Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8554); (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8556)], (0)), 100000000, 0, -8555)]), 0, (("astlib/ast_413.ml", 249, 7888, 7892), ("astlib/ast_413.ml", 249, 7888, 7928), 0), 0, Tag1 ("Astlib__Ast_413", 156)); (("Ppat_constant", 760), ([(Tag3 ((("constant", 7719)), 0, (0)), 100000000, 0, -8557)]), 0, (("astlib/ast_413.ml", 251, 7947, 7951), ("astlib/ast_413.ml", 251, 7947, 7978), 0), 0, Tag1 ("Astlib__Ast_413", 157)); (("Ppat_interval", 761), ([(Tag3 ((("constant", 7719)), 0, (0)), 100000000, 0, -8558); (Tag3 ((("constant", 7719)), 0, (0)), 100000000, 0, -8559)]), 0, (("astlib/ast_413.ml", 253, 8021, 8025), ("astlib/ast_413.ml", 253, 8021, 8063), 0), 0, Tag1 ("Astlib__Ast_413", 158)); (("Ppat_tuple", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8561)], (0)), 100000000, 0, -8560)]), 0, (("astlib/ast_413.ml", 258, 8185, 8189), ("astlib/ast_413.ml", 258, 8185, 8217), 0), 0, Tag1 ("Astlib__Ast_413", 159)); (("Ppat_construct", 763), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8563)], (0)), 100000000, 0, -8562); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8568)], (0)), 100000000, 0, -8567)], (0)), 100000000, 0, -8566); (Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8569)]), 100000000, 0, -8565)], (0)), 100000000, 0, -8564)]), 0, (("astlib/ast_413.ml", 263, 8272, 8276), ("astlib/ast_413.ml", 263, 8272, 8348), 0), 0, Tag1 ("Astlib__Ast_413", 160)); (("Ppat_variant", 764), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8570); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8572)], (0)), 100000000, 0, -8571)]), 0, (("astlib/ast_413.ml", 269, 8523, 8527), ("astlib/ast_413.ml", 269, 8523, 8567), 0), 0, Tag1 ("Astlib__Ast_413", 161)); (("Ppat_record", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8576)], (0)), 100000000, 0, -8575); (Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8577)]), 100000000, 0, -8574)], (0)), 100000000, 0, -8573); (Tag3 (Tag1 ((("Asttypes", 7703)), "closed_flag"), 0, (0)), 100000000, 0, -8578)]), 0, (("astlib/ast_413.ml", 273, 8635, 8639), ("astlib/ast_413.ml", 273, 8635, 8702), 0), 0, Tag1 ("Astlib__Ast_413", 162)); (("Ppat_array", 766), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8580)], (0)), 100000000, 0, -8579)]), 0, (("astlib/ast_413.ml", 279, 8831, 8835), ("astlib/ast_413.ml", 279, 8831, 8863), 0), 0, Tag1 ("Astlib__Ast_413", 163)); (("Ppat_or", 767), ([(Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8581); (Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8582)]), 0, (("astlib/ast_413.ml", 281, 8892, 8896), ("astlib/ast_413.ml", 281, 8892, 8926), 0), 0, Tag1 ("Astlib__Ast_413", 164)); (("Ppat_constraint", 768), ([(Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8583); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8584)]), 0, (("astlib/ast_413.ml", 283, 8945, 8949), ("astlib/ast_413.ml", 283, 8945, 8989), 0), 0, Tag1 ("Astlib__Ast_413", 165)); (("Ppat_type", 769), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8586)], (0)), 100000000, 0, -8585)]), 0, (("astlib/ast_413.ml", 285, 9008, 9012), ("astlib/ast_413.ml", 285, 9008, 9042), 0), 0, Tag1 ("Astlib__Ast_413", 166)); (("Ppat_lazy", 770), ([(Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8587)]), 0, (("astlib/ast_413.ml", 287, 9061, 9065), ("astlib/ast_413.ml", 287, 9061, 9087), 0), 0, Tag1 ("Astlib__Ast_413", 167)); (("Ppat_unpack", 771), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8590)], (0)), 100000000, 0, -8589)], (0)), 100000000, 0, -8588)]), 0, (("astlib/ast_413.ml", 289, 9105, 9109), ("astlib/ast_413.ml", 289, 9105, 9143), 0), 0, Tag1 ("Astlib__Ast_413", 168)); (("Ppat_exception", 772), ([(Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8591)]), 0, (("astlib/ast_413.ml", 296, 9312, 9316), ("astlib/ast_413.ml", 296, 9312, 9343), 0), 0, Tag1 ("Astlib__Ast_413", 169)); (("Ppat_extension", 773), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8592)]), 0, (("astlib/ast_413.ml", 298, 9366, 9370), ("astlib/ast_413.ml", 298, 9366, 9399), 0), 0, Tag1 ("Astlib__Ast_413", 170)); (("Ppat_open", 774), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8594)], (0)), 100000000, 0, -8593); (Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8595)]), 0, (("astlib/ast_413.ml", 300, 9416, 9420), ("astlib/ast_413.ml", 300, 9416, 9460), 0), 0, Tag1 ("Astlib__Ast_413", 171))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -8551)), 0, 0, 0, 0, (("astlib/ast_413.ml", 244, 7758, 7760), ("astlib/ast_413.ml", 300, 9416, 9460), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 63)), 2, 0); Tag1 (("expression", 7734), (0, 0, [[(("pexp_desc", 775), 0, (Tag3 ((("expression_desc", 7735)), 0, (0)), 100000000, 0, -8547), (("astlib/ast_413.ml", 307, 9569, 9575), ("astlib/ast_413.ml", 307, 9569, 9602), 0), 0, Tag1 ("Astlib__Ast_413", 172)); (("pexp_loc", 776), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8548), (("astlib/ast_413.ml", 308, 9603, 9609), ("astlib/ast_413.ml", 308, 9603, 9630), 0), 0, Tag1 ("Astlib__Ast_413", 173)); (("pexp_loc_stack", 777), 0, (Tag3 ((("location_stack", 7720)), 0, (0)), 100000000, 0, -8549), (("astlib/ast_413.ml", 309, 9631, 9637), ("astlib/ast_413.ml", 309, 9631, 9668), 0), 0, Tag1 ("Astlib__Ast_413", 174)); (("pexp_attributes", 778), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8550), (("astlib/ast_413.ml", 310, 9669, 9675), ("astlib/ast_413.ml", 310, 9669, 9703), 0), 0, Tag1 ("Astlib__Ast_413", 175))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -8546)), 0, 0, 0, 0, (("astlib/ast_413.ml", 305, 9505, 9507), ("astlib/ast_413.ml", 311, 9728, 9733), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 64)), 2, 0); Tag1 (("expression_desc", 7735), (0, 0, Tag1 ([(("Pexp_ident", 779), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8444)], (0)), 100000000, 0, -8443)]), 0, (("astlib/ast_413.ml", 314, 9803, 9807), ("astlib/ast_413.ml", 314, 9803, 9838), 0), 0, Tag1 ("Astlib__Ast_413", 176)); (("Pexp_constant", 780), ([(Tag3 ((("constant", 7719)), 0, (0)), 100000000, 0, -8445)]), 0, (("astlib/ast_413.ml", 318, 9866, 9870), ("astlib/ast_413.ml", 318, 9866, 9897), 0), 0, Tag1 ("Astlib__Ast_413", 177)); (("Pexp_let", 781), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "rec_flag"), 0, (0)), 100000000, 0, -8446); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7785)), 0, (0)), 100000000, 0, -8448)], (0)), 100000000, 0, -8447); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8449)]), 0, (("astlib/ast_413.ml", 320, 9940, 9944), ("astlib/ast_413.ml", 320, 9940, 10000), 0), 0, Tag1 ("Astlib__Ast_413", 178)); (("Pexp_function", 782), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7736)), 0, (0)), 100000000, 0, -8451)], (0)), 100000000, 0, -8450)]), 0, (("astlib/ast_413.ml", 324, 10149, 10153), ("astlib/ast_413.ml", 324, 10149, 10181), 0), 0, Tag1 ("Astlib__Ast_413", 179)); (("Pexp_fun", 783), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "arg_label"), 0, (0)), 100000000, 0, -8452); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8454)], (0)), 100000000, 0, -8453); (Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8455); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8456)]), 0, (("astlib/ast_413.ml", 326, 10227, 10231), ("astlib/ast_413.ml", 326, 10227, 10297), 0), 0, Tag1 ("Astlib__Ast_413", 180)); (("Pexp_apply", 784), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8457); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "arg_label"), 0, (0)), 100000000, 0, -8460); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8461)]), 100000000, 0, -8459)], (0)), 100000000, 0, -8458)]), 0, (("astlib/ast_413.ml", 337, 10747, 10751), ("astlib/ast_413.ml", 337, 10747, 10809), 0), 0, Tag1 ("Astlib__Ast_413", 181)); (("Pexp_match", 785), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8462); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7736)), 0, (0)), 100000000, 0, -8464)], (0)), 100000000, 0, -8463)]), 0, (("astlib/ast_413.ml", 344, 10962, 10966), ("astlib/ast_413.ml", 344, 10962, 11004), 0), 0, Tag1 ("Astlib__Ast_413", 182)); (("Pexp_try", 786), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8465); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7736)), 0, (0)), 100000000, 0, -8467)], (0)), 100000000, 0, -8466)]), 0, (("astlib/ast_413.ml", 346, 11055, 11059), ("astlib/ast_413.ml", 346, 11055, 11095), 0), 0, Tag1 ("Astlib__Ast_413", 183)); (("Pexp_tuple", 787), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8469)], (0)), 100000000, 0, -8468)]), 0, (("astlib/ast_413.ml", 348, 11144, 11148), ("astlib/ast_413.ml", 348, 11144, 11179), 0), 0, Tag1 ("Astlib__Ast_413", 184)); (("Pexp_construct", 788), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8471)], (0)), 100000000, 0, -8470); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8473)], (0)), 100000000, 0, -8472)]), 0, (("astlib/ast_413.ml", 353, 11234, 11238), ("astlib/ast_413.ml", 353, 11234, 11293), 0), 0, Tag1 ("Astlib__Ast_413", 185)); (("Pexp_variant", 789), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8474); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8476)], (0)), 100000000, 0, -8475)]), 0, (("astlib/ast_413.ml", 358, 11414, 11418), ("astlib/ast_413.ml", 358, 11414, 11461), 0), 0, Tag1 ("Astlib__Ast_413", 186)); (("Pexp_record", 790), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8480)], (0)), 100000000, 0, -8479); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8481)]), 100000000, 0, -8478)], (0)), 100000000, 0, -8477); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8483)], (0)), 100000000, 0, -8482)]), 0, (("astlib/ast_413.ml", 362, 11529, 11533), ("astlib/ast_413.ml", 362, 11529, 11605), 0), 0, Tag1 ("Astlib__Ast_413", 187)); (("Pexp_field", 791), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8484); (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8486)], (0)), 100000000, 0, -8485)]), 0, (("astlib/ast_413.ml", 368, 11727, 11731), ("astlib/ast_413.ml", 368, 11727, 11775), 0), 0, Tag1 ("Astlib__Ast_413", 188)); (("Pexp_setfield", 792), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8487); (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8489)], (0)), 100000000, 0, -8488); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8490)]), 0, (("astlib/ast_413.ml", 370, 11790, 11794), ("astlib/ast_413.ml", 370, 11790, 11854), 0), 0, Tag1 ("Astlib__Ast_413", 189)); (("Pexp_array", 793), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8492)], (0)), 100000000, 0, -8491)]), 0, (("astlib/ast_413.ml", 372, 11876, 11880), ("astlib/ast_413.ml", 372, 11876, 11911), 0), 0, Tag1 ("Astlib__Ast_413", 190)); (("Pexp_ifthenelse", 794), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8493); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8494); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8496)], (0)), 100000000, 0, -8495)]), 0, (("astlib/ast_413.ml", 374, 11940, 11944), ("astlib/ast_413.ml", 374, 11940, 12008), 0), 0, Tag1 ("Astlib__Ast_413", 191)); (("Pexp_sequence", 795), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8497); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8498)]), 0, (("astlib/ast_413.ml", 376, 12041, 12045), ("astlib/ast_413.ml", 376, 12041, 12087), 0), 0, Tag1 ("Astlib__Ast_413", 192)); (("Pexp_while", 796), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8499); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8500)]), 0, (("astlib/ast_413.ml", 378, 12105, 12109), ("astlib/ast_413.ml", 378, 12105, 12148), 0), 0, Tag1 ("Astlib__Ast_413", 193)); (("Pexp_for", 797), ([(Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8501); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8502); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8503); (Tag3 (Tag1 ((("Asttypes", 7703)), "direction_flag"), 0, (0)), 100000000, 0, -8504); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8505)]), 0, (("astlib/ast_413.ml", 380, 12179, 12183), ("astlib/ast_413.ml", 381, 12197, 12269), 0), 0, Tag1 ("Astlib__Ast_413", 194)); (("Pexp_constraint", 798), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8506); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8507)]), 0, (("astlib/ast_413.ml", 385, 12387, 12391), ("astlib/ast_413.ml", 385, 12387, 12434), 0), 0, Tag1 ("Astlib__Ast_413", 195)); (("Pexp_coerce", 799), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8508); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8510)], (0)), 100000000, 0, -8509); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8511)]), 0, (("astlib/ast_413.ml", 387, 12453, 12457), ("astlib/ast_413.ml", 387, 12453, 12515), 0), 0, Tag1 ("Astlib__Ast_413", 196)); (("Pexp_send", 800), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8512); (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8514)], (0)), 100000000, 0, -8513)]), 0, (("astlib/ast_413.ml", 391, 12592, 12596), ("astlib/ast_413.ml", 391, 12592, 12633), 0), 0, Tag1 ("Astlib__Ast_413", 197)); (("Pexp_new", 801), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8516)], (0)), 100000000, 0, -8515)]), 0, (("astlib/ast_413.ml", 393, 12651, 12655), ("astlib/ast_413.ml", 393, 12651, 12684), 0), 0, Tag1 ("Astlib__Ast_413", 198)); (("Pexp_setinstvar", 802), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8518)], (0)), 100000000, 0, -8517); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8519)]), 0, (("astlib/ast_413.ml", 395, 12703, 12707), ("astlib/ast_413.ml", 395, 12703, 12750), 0), 0, Tag1 ("Astlib__Ast_413", 199)); (("Pexp_override", 803), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8523)], (0)), 100000000, 0, -8522); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8524)]), 100000000, 0, -8521)], (0)), 100000000, 0, -8520)]), 0, (("astlib/ast_413.ml", 397, 12768, 12772), ("astlib/ast_413.ml", 397, 12768, 12820), 0), 0, Tag1 ("Astlib__Ast_413", 200)); (("Pexp_letmodule", 804), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8527)], (0)), 100000000, 0, -8526)], (0)), 100000000, 0, -8525); (Tag3 ((("module_expr", 7780)), 0, (0)), 100000000, 0, -8528); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8529)]), 0, (("astlib/ast_413.ml", 399, 12859, 12863), ("astlib/ast_413.ml", 399, 12859, 12927), 0), 0, Tag1 ("Astlib__Ast_413", 201)); (("Pexp_letexception", 805), ([(Tag3 ((("extension_constructor", 7746)), 0, (0)), 100000000, 0, -8530); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8531)]), 0, (("astlib/ast_413.ml", 401, 12961, 12965), ("astlib/ast_413.ml", 401, 12961, 13022), 0), 0, Tag1 ("Astlib__Ast_413", 202)); (("Pexp_assert", 806), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8532)]), 0, (("astlib/ast_413.ml", 403, 13054, 13058), ("astlib/ast_413.ml", 403, 13054, 13085), 0), 0, Tag1 ("Astlib__Ast_413", 203)); (("Pexp_lazy", 807), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8533)]), 0, (("astlib/ast_413.ml", 407, 13189, 13193), ("astlib/ast_413.ml", 407, 13189, 13218), 0), 0, Tag1 ("Astlib__Ast_413", 204)); (("Pexp_poly", 808), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8534); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8536)], (0)), 100000000, 0, -8535)]), 0, (("astlib/ast_413.ml", 409, 13236, 13240), ("astlib/ast_413.ml", 409, 13236, 13284), 0), 0, Tag1 ("Astlib__Ast_413", 205)); (("Pexp_object", 809), ([(Tag3 ((("class_structure", 7759)), 0, (0)), 100000000, 0, -8537)]), 0, (("astlib/ast_413.ml", 414, 13414, 13418), ("astlib/ast_413.ml", 414, 13414, 13450), 0), 0, Tag1 ("Astlib__Ast_413", 206)); (("Pexp_newtype", 810), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8539)], (0)), 100000000, 0, -8538); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8540)]), 0, (("astlib/ast_413.ml", 416, 13476, 13480), ("astlib/ast_413.ml", 416, 13476, 13521), 0), 0, Tag1 ("Astlib__Ast_413", 207)); (("Pexp_pack", 811), ([(Tag3 ((("module_expr", 7780)), 0, (0)), 100000000, 0, -8541)]), 0, (("astlib/ast_413.ml", 418, 13550, 13554), ("astlib/ast_413.ml", 418, 13550, 13580), 0), 0, Tag1 ("Astlib__Ast_413", 208)); (("Pexp_open", 812), ([(Tag3 ((("open_declaration", 7775)), 0, (0)), 100000000, 0, -8542); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8543)]), 0, (("astlib/ast_413.ml", 423, 13695, 13699), ("astlib/ast_413.ml", 423, 13695, 13743), 0), 0, Tag1 ("Astlib__Ast_413", 209)); (("Pexp_letop", 813), ([(Tag3 ((("letop", 7737)), 0, (0)), 100000000, 0, -8544)]), 0, (("astlib/ast_413.ml", 427, 13807, 13811), ("astlib/ast_413.ml", 427, 13807, 13832), 0), 0, Tag1 ("Astlib__Ast_413", 210)); (("Pexp_extension", 814), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8545)]), 0, (("astlib/ast_413.ml", 430, 13893, 13897), ("astlib/ast_413.ml", 430, 13893, 13926), 0), 0, Tag1 ("Astlib__Ast_413", 211)); (("Pexp_unreachable", 815), (0), 0, (("astlib/ast_413.ml", 432, 13943, 13947), ("astlib/ast_413.ml", 432, 13943, 13965), 0), 0, Tag1 ("Astlib__Ast_413", 212))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -8442)), 0, 0, 0, 0, (("astlib/ast_413.ml", 313, 9735, 9737), ("astlib/ast_413.ml", 432, 13943, 13965), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 65)), 2, 0); Tag1 (("case", 7736), (0, 0, [[(("pc_lhs", 816), 0, (Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8438), (("astlib/ast_413.ml", 437, 14068, 14074), ("astlib/ast_413.ml", 437, 14068, 14090), 0), 0, Tag1 ("Astlib__Ast_413", 213)); (("pc_guard", 817), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8440)], (0)), 100000000, 0, -8439), (("astlib/ast_413.ml", 438, 14091, 14097), ("astlib/ast_413.ml", 438, 14091, 14125), 0), 0, Tag1 ("Astlib__Ast_413", 214)); (("pc_rhs", 818), 0, (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8441), (("astlib/ast_413.ml", 439, 14126, 14132), ("astlib/ast_413.ml", 439, 14126, 14151), 0), 0, Tag1 ("Astlib__Ast_413", 215))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -8437)), 0, 0, 0, 0, (("astlib/ast_413.ml", 435, 13979, 13981), ("astlib/ast_413.ml", 440, 14152, 14157), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 66)), 2, 0); Tag1 (("letop", 7737), (0, 0, [[(("let_", 819), 0, (Tag3 ((("binding_op", 7738)), 0, (0)), 100000000, 0, -8433), (("astlib/ast_413.ml", 444, 14213, 14219), ("astlib/ast_413.ml", 444, 14213, 14237), 0), 0, Tag1 ("Astlib__Ast_413", 216)); (("ands", 820), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binding_op", 7738)), 0, (0)), 100000000, 0, -8435)], (0)), 100000000, 0, -8434), (("astlib/ast_413.ml", 445, 14238, 14244), ("astlib/ast_413.ml", 445, 14238, 14267), 0), 0, Tag1 ("Astlib__Ast_413", 217)); (("body", 821), 0, (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8436), (("astlib/ast_413.ml", 446, 14268, 14274), ("astlib/ast_413.ml", 446, 14268, 14292), 0), 0, Tag1 ("Astlib__Ast_413", 218))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "letop"), 0, (0)), 100000000, 0, -8432)), 0, 0, 0, 0, (("astlib/ast_413.ml", 442, 14159, 14161), ("astlib/ast_413.ml", 447, 14293, 14298), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 67)), 2, 0); Tag1 (("binding_op", 7738), (0, 0, [[(("pbop_op", 822), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8428)], (0)), 100000000, 0, -8427), (("astlib/ast_413.ml", 451, 14364, 14370), ("astlib/ast_413.ml", 451, 14364, 14391), 0), 0, Tag1 ("Astlib__Ast_413", 219)); (("pbop_pat", 823), 0, (Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8429), (("astlib/ast_413.ml", 452, 14392, 14398), ("astlib/ast_413.ml", 452, 14392, 14417), 0), 0, Tag1 ("Astlib__Ast_413", 220)); (("pbop_exp", 824), 0, (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8430), (("astlib/ast_413.ml", 453, 14418, 14424), ("astlib/ast_413.ml", 453, 14418, 14446), 0), 0, Tag1 ("Astlib__Ast_413", 221)); (("pbop_loc", 825), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8431), (("astlib/ast_413.ml", 454, 14447, 14453), ("astlib/ast_413.ml", 454, 14447, 14475), 0), 0, Tag1 ("Astlib__Ast_413", 222))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "binding_op"), 0, (0)), 100000000, 0, -8426)), 0, 0, 0, 0, (("astlib/ast_413.ml", 449, 14300, 14302), ("astlib/ast_413.ml", 455, 14476, 14481), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 68)), 2, 0); Tag1 (("value_description", 7739), (0, 0, [[(("pval_name", 826), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8420)], (0)), 100000000, 0, -8419), (("astlib/ast_413.ml", 461, 14589, 14595), ("astlib/ast_413.ml", 461, 14589, 14617), 0), 0, Tag1 ("Astlib__Ast_413", 223)); (("pval_type", 827), 0, (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8421), (("astlib/ast_413.ml", 462, 14618, 14624), ("astlib/ast_413.ml", 462, 14618, 14645), 0), 0, Tag1 ("Astlib__Ast_413", 224)); (("pval_prim", 828), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8423)], (0)), 100000000, 0, -8422), (("astlib/ast_413.ml", 463, 14646, 14652), ("astlib/ast_413.ml", 463, 14646, 14675), 0), 0, Tag1 ("Astlib__Ast_413", 225)); (("pval_attributes", 829), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8424), (("astlib/ast_413.ml", 464, 14676, 14682), ("astlib/ast_413.ml", 464, 14676, 14710), 0), 0, Tag1 ("Astlib__Ast_413", 226)); (("pval_loc", 830), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8425), (("astlib/ast_413.ml", 465, 14738, 14744), ("astlib/ast_413.ml", 465, 14738, 14765), 0), 0, Tag1 ("Astlib__Ast_413", 227))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -8418)), 0, 0, 0, 0, (("astlib/ast_413.ml", 459, 14511, 14513), ("astlib/ast_413.ml", 466, 14766, 14771), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 69)), 2, 0); Tag1 (("type_declaration", 7740), (0, 0, [[(("ptype_name", 831), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8400)], (0)), 100000000, 0, -8399), (("astlib/ast_413.ml", 477, 14995, 15001), ("astlib/ast_413.ml", 477, 14995, 15024), 0), 0, Tag1 ("Astlib__Ast_413", 228)); (("ptype_params", 832), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8403); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "variance"), 0, (0)), 100000000, 0, -8405); (Tag3 (Tag1 ((("Asttypes", 7703)), "injectivity"), 0, (0)), 100000000, 0, -8406)]), 100000000, 0, -8404)]), 100000000, 0, -8402)], (0)), 100000000, 0, -8401), (("astlib/ast_413.ml", 478, 15025, 15031), ("astlib/ast_413.ml", 478, 15025, 15089), 0), 0, Tag1 ("Astlib__Ast_413", 229)); (("ptype_cstrs", 833), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8409); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8410); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8411)]), 100000000, 0, -8408)], (0)), 100000000, 0, -8407), (("astlib/ast_413.ml", 480, 15136, 15142), ("astlib/ast_413.ml", 480, 15136, 15197), 0), 0, Tag1 ("Astlib__Ast_413", 230)); (("ptype_kind", 834), 0, (Tag3 ((("type_kind", 7741)), 0, (0)), 100000000, 0, -8412), (("astlib/ast_413.ml", 482, 15255, 15261), ("astlib/ast_413.ml", 482, 15255, 15283), 0), 0, Tag1 ("Astlib__Ast_413", 231)); (("ptype_private", 835), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "private_flag"), 0, (0)), 100000000, 0, -8413), (("astlib/ast_413.ml", 483, 15284, 15290), ("astlib/ast_413.ml", 483, 15284, 15318), 0), 0, Tag1 ("Astlib__Ast_413", 232)); (("ptype_manifest", 836), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8415)], (0)), 100000000, 0, -8414), (("astlib/ast_413.ml", 484, 15341, 15347), ("astlib/ast_413.ml", 484, 15341, 15380), 0), 0, Tag1 ("Astlib__Ast_413", 233)); (("ptype_attributes", 837), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8416), (("astlib/ast_413.ml", 485, 15392, 15398), ("astlib/ast_413.ml", 485, 15392, 15427), 0), 0, Tag1 ("Astlib__Ast_413", 234)); (("ptype_loc", 838), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8417), (("astlib/ast_413.ml", 486, 15456, 15462), ("astlib/ast_413.ml", 486, 15456, 15484), 0), 0, Tag1 ("Astlib__Ast_413", 235))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -8398)), 0, 0, 0, 0, (("astlib/ast_413.ml", 475, 14919, 14921), ("astlib/ast_413.ml", 487, 15485, 15490), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 70)), 2, 0); Tag1 (("type_kind", 7741), (0, 0, Tag1 ([(("Ptype_abstract", 839), (0), 0, (("astlib/ast_413.ml", 500, 15926, 15930), ("astlib/ast_413.ml", 500, 15926, 15946), 0), 0, Tag1 ("Astlib__Ast_413", 236)); (("Ptype_variant", 840), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7743)), 0, (0)), 100000000, 0, -8395)], (0)), 100000000, 0, -8394)]), 0, (("astlib/ast_413.ml", 501, 15947, 15951), ("astlib/ast_413.ml", 501, 15947, 15998), 0), 0, Tag1 ("Astlib__Ast_413", 237)); (("Ptype_record", 841), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7742)), 0, (0)), 100000000, 0, -8397)], (0)), 100000000, 0, -8396)]), 0, (("astlib/ast_413.ml", 502, 15999, 16003), ("astlib/ast_413.ml", 502, 15999, 16043), 0), 0, Tag1 ("Astlib__Ast_413", 238)); (("Ptype_open", 842), (0), 0, (("astlib/ast_413.ml", 504, 16080, 16084), ("astlib/ast_413.ml", 504, 16080, 16096), 0), 0, Tag1 ("Astlib__Ast_413", 239))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -8393)), 0, 0, 0, 0, (("astlib/ast_413.ml", 499, 15870, 15872), ("astlib/ast_413.ml", 504, 16080, 16096), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 71)), 2, 0); Tag1 (("label_declaration", 7742), (0, 0, [[(("pld_name", 843), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8388)], (0)), 100000000, 0, -8387), (("astlib/ast_413.ml", 508, 16176, 16182), ("astlib/ast_413.ml", 508, 16176, 16203), 0), 0, Tag1 ("Astlib__Ast_413", 240)); (("pld_mutable", 844), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "mutable_flag"), 0, (0)), 100000000, 0, -8389), (("astlib/ast_413.ml", 509, 16204, 16210), ("astlib/ast_413.ml", 509, 16204, 16236), 0), 0, Tag1 ("Astlib__Ast_413", 241)); (("pld_type", 845), 0, (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8390), (("astlib/ast_413.ml", 510, 16237, 16243), ("astlib/ast_413.ml", 510, 16237, 16263), 0), 0, Tag1 ("Astlib__Ast_413", 242)); (("pld_loc", 846), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8391), (("astlib/ast_413.ml", 511, 16264, 16270), ("astlib/ast_413.ml", 511, 16264, 16290), 0), 0, Tag1 ("Astlib__Ast_413", 243)); (("pld_attributes", 847), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8392), (("astlib/ast_413.ml", 512, 16291, 16297), ("astlib/ast_413.ml", 512, 16291, 16324), 0), 0, Tag1 ("Astlib__Ast_413", 244))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -8386)), 0, 0, 0, 0, (("astlib/ast_413.ml", 506, 16098, 16100), ("astlib/ast_413.ml", 513, 16351, 16356), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 72)), 2, 0); Tag1 (("constructor_declaration", 7743), (0, 0, [[(("pcd_name", 848), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8380)], (0)), 100000000, 0, -8379), (("astlib/ast_413.ml", 523, 16599, 16605), ("astlib/ast_413.ml", 523, 16599, 16626), 0), 0, Tag1 ("Astlib__Ast_413", 245)); (("pcd_args", 849), 0, (Tag3 ((("constructor_arguments", 7744)), 0, (0)), 100000000, 0, -8381), (("astlib/ast_413.ml", 524, 16627, 16633), ("astlib/ast_413.ml", 524, 16627, 16665), 0), 0, Tag1 ("Astlib__Ast_413", 246)); (("pcd_res", 850), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8383)], (0)), 100000000, 0, -8382), (("astlib/ast_413.ml", 525, 16666, 16672), ("astlib/ast_413.ml", 525, 16666, 16698), 0), 0, Tag1 ("Astlib__Ast_413", 247)); (("pcd_loc", 851), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8384), (("astlib/ast_413.ml", 526, 16699, 16705), ("astlib/ast_413.ml", 526, 16699, 16725), 0), 0, Tag1 ("Astlib__Ast_413", 248)); (("pcd_attributes", 852), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8385), (("astlib/ast_413.ml", 527, 16726, 16732), ("astlib/ast_413.ml", 527, 16726, 16759), 0), 0, Tag1 ("Astlib__Ast_413", 249))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -8378)), 0, 0, 0, 0, (("astlib/ast_413.ml", 521, 16509, 16511), ("astlib/ast_413.ml", 528, 16789, 16794), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 73)), 2, 0); Tag1 (("constructor_arguments", 7744), (0, 0, Tag1 ([(("Pcstr_tuple", 853), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8375)], (0)), 100000000, 0, -8374)]), 0, (("astlib/ast_413.ml", 531, 16876, 16880), ("astlib/ast_413.ml", 531, 16876, 16911), 0), 0, Tag1 ("Astlib__Ast_413", 250)); (("Pcstr_record", 854), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7742)), 0, (0)), 100000000, 0, -8377)], (0)), 100000000, 0, -8376)]), 0, (("astlib/ast_413.ml", 532, 16912, 16916), ("astlib/ast_413.ml", 532, 16912, 16956), 0), 0, Tag1 ("Astlib__Ast_413", 251))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -8373)), 0, 0, 0, 0, (("astlib/ast_413.ml", 530, 16796, 16798), ("astlib/ast_413.ml", 532, 16912, 16956), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 74)), 2, 0); Tag1 (("type_extension", 7745), (0, 0, [[(("ptyext_path", 855), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8361)], (0)), 100000000, 0, -8360), (("astlib/ast_413.ml", 545, 17412, 17418), ("astlib/ast_413.ml", 545, 17412, 17447), 0), 0, Tag1 ("Astlib__Ast_413", 252)); (("ptyext_params", 856), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8364); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "variance"), 0, (0)), 100000000, 0, -8366); (Tag3 (Tag1 ((("Asttypes", 7703)), "injectivity"), 0, (0)), 100000000, 0, -8367)]), 100000000, 0, -8365)]), 100000000, 0, -8363)], (0)), 100000000, 0, -8362), (("astlib/ast_413.ml", 546, 17448, 17454), ("astlib/ast_413.ml", 546, 17448, 17513), 0), 0, Tag1 ("Astlib__Ast_413", 253)); (("ptyext_constructors", 857), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7746)), 0, (0)), 100000000, 0, -8369)], (0)), 100000000, 0, -8368), (("astlib/ast_413.ml", 547, 17514, 17520), ("astlib/ast_413.ml", 547, 17514, 17568), 0), 0, Tag1 ("Astlib__Ast_413", 254)); (("ptyext_private", 858), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "private_flag"), 0, (0)), 100000000, 0, -8370), (("astlib/ast_413.ml", 548, 17569, 17575), ("astlib/ast_413.ml", 548, 17569, 17604), 0), 0, Tag1 ("Astlib__Ast_413", 255)); (("ptyext_loc", 859), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8371), (("astlib/ast_413.ml", 549, 17605, 17611), ("astlib/ast_413.ml", 549, 17605, 17634), 0), 0, Tag1 ("Astlib__Ast_413", 256)); (("ptyext_attributes", 860), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8372), (("astlib/ast_413.ml", 550, 17635, 17641), ("astlib/ast_413.ml", 550, 17635, 17671), 0), 0, Tag1 ("Astlib__Ast_413", 257))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -8359)), 0, 0, 0, 0, (("astlib/ast_413.ml", 543, 17340, 17342), ("astlib/ast_413.ml", 551, 17700, 17705), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 75)), 2, 0); Tag1 (("extension_constructor", 7746), (0, 0, [[(("pext_name", 861), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8355)], (0)), 100000000, 0, -8354), (("astlib/ast_413.ml", 558, 17815, 17821), ("astlib/ast_413.ml", 558, 17815, 17843), 0), 0, Tag1 ("Astlib__Ast_413", 258)); (("pext_kind", 862), 0, (Tag3 ((("extension_constructor_kind", 7748)), 0, (0)), 100000000, 0, -8356), (("astlib/ast_413.ml", 559, 17844, 17850), ("astlib/ast_413.ml", 559, 17844, 17889), 0), 0, Tag1 ("Astlib__Ast_413", 259)); (("pext_loc", 863), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8357), (("astlib/ast_413.ml", 560, 17890, 17896), ("astlib/ast_413.ml", 560, 17890, 17918), 0), 0, Tag1 ("Astlib__Ast_413", 260)); (("pext_attributes", 864), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8358), (("astlib/ast_413.ml", 561, 17919, 17925), ("astlib/ast_413.ml", 561, 17919, 17953), 0), 0, Tag1 ("Astlib__Ast_413", 261))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -8353)), 0, 0, 0, 0, (("astlib/ast_413.ml", 556, 17729, 17731), ("astlib/ast_413.ml", 562, 17983, 17988), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 76)), 2, 0); Tag1 (("type_exception", 7747), (0, 0, [[(("ptyexn_constructor", 865), 0, (Tag3 ((("extension_constructor", 7746)), 0, (0)), 100000000, 0, -8350), (("astlib/ast_413.ml", 567, 18082, 18088), ("astlib/ast_413.ml", 567, 18082, 18130), 0), 0, Tag1 ("Astlib__Ast_413", 262)); (("ptyexn_loc", 866), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8351), (("astlib/ast_413.ml", 568, 18131, 18137), ("astlib/ast_413.ml", 568, 18131, 18160), 0), 0, Tag1 ("Astlib__Ast_413", 263)); (("ptyexn_attributes", 867), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8352), (("astlib/ast_413.ml", 569, 18161, 18167), ("astlib/ast_413.ml", 569, 18161, 18197), 0), 0, Tag1 ("Astlib__Ast_413", 264))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "type_exception"), 0, (0)), 100000000, 0, -8349)), 0, 0, 0, 0, (("astlib/ast_413.ml", 565, 18010, 18012), ("astlib/ast_413.ml", 570, 18224, 18229), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 77)), 2, 0); Tag1 (("extension_constructor_kind", 7748), (0, 0, Tag1 ([(("Pext_decl", 868), ([(Tag3 ((("constructor_arguments", 7744)), 0, (0)), 100000000, 0, -8344); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8346)], (0)), 100000000, 0, -8345)]), 0, (("astlib/ast_413.ml", 573, 18321, 18327), ("astlib/ast_413.ml", 573, 18321, 18380), 0), 0, Tag1 ("Astlib__Ast_413", 265)); (("Pext_rebind", 869), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8348)], (0)), 100000000, 0, -8347)]), 0, (("astlib/ast_413.ml", 579, 18563, 18567), ("astlib/ast_413.ml", 579, 18563, 18599), 0), 0, Tag1 ("Astlib__Ast_413", 266))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -8343)), 0, 0, 0, 0, (("astlib/ast_413.ml", 572, 18231, 18233), ("astlib/ast_413.ml", 579, 18563, 18599), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 78)), 2, 0); Tag1 (("class_type", 7749), (0, 0, [[(("pcty_desc", 870), 0, (Tag3 ((("class_type_desc", 7750)), 0, (0)), 100000000, 0, -8340), (("astlib/ast_413.ml", 590, 18779, 18785), ("astlib/ast_413.ml", 590, 18779, 18812), 0), 0, Tag1 ("Astlib__Ast_413", 267)); (("pcty_loc", 871), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8341), (("astlib/ast_413.ml", 591, 18813, 18819), ("astlib/ast_413.ml", 591, 18813, 18840), 0), 0, Tag1 ("Astlib__Ast_413", 268)); (("pcty_attributes", 872), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8342), (("astlib/ast_413.ml", 592, 18841, 18847), ("astlib/ast_413.ml", 592, 18841, 18875), 0), 0, Tag1 ("Astlib__Ast_413", 269))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -8339)), 0, 0, 0, 0, (("astlib/ast_413.ml", 588, 18715, 18717), ("astlib/ast_413.ml", 593, 18900, 18905), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 79)), 2, 0); Tag1 (("class_type_desc", 7750), (0, 0, Tag1 ([(("Pcty_constr", 873), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8329)], (0)), 100000000, 0, -8328); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8331)], (0)), 100000000, 0, -8330)]), 0, (("astlib/ast_413.ml", 596, 18975, 18979), ("astlib/ast_413.ml", 596, 18975, 19028), 0), 0, Tag1 ("Astlib__Ast_413", 270)); (("Pcty_signature", 874), ([(Tag3 ((("class_signature", 7751)), 0, (0)), 100000000, 0, -8332)]), 0, (("astlib/ast_413.ml", 599, 19066, 19070), ("astlib/ast_413.ml", 599, 19066, 19105), 0), 0, Tag1 ("Astlib__Ast_413", 271)); (("Pcty_arrow", 875), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "arg_label"), 0, (0)), 100000000, 0, -8333); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8334); (Tag3 ((("class_type", 7749)), 0, (0)), 100000000, 0, -8335)]), 0, (("astlib/ast_413.ml", 601, 19131, 19135), ("astlib/ast_413.ml", 601, 19131, 19185), 0), 0, Tag1 ("Astlib__Ast_413", 272)); (("Pcty_extension", 876), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8336)]), 0, (("astlib/ast_413.ml", 606, 19285, 19289), ("astlib/ast_413.ml", 606, 19285, 19318), 0), 0, Tag1 ("Astlib__Ast_413", 273)); (("Pcty_open", 877), ([(Tag3 ((("open_description", 7774)), 0, (0)), 100000000, 0, -8337); (Tag3 ((("class_type", 7749)), 0, (0)), 100000000, 0, -8338)]), 0, (("astlib/ast_413.ml", 608, 19335, 19339), ("astlib/ast_413.ml", 608, 19335, 19383), 0), 0, Tag1 ("Astlib__Ast_413", 274))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -8327)), 0, 0, 0, 0, (("astlib/ast_413.ml", 595, 18907, 18909), ("astlib/ast_413.ml", 608, 19335, 19383), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 80)), 2, 0); Tag1 (("class_signature", 7751), (0, 0, [[(("pcsig_self", 878), 0, (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8324), (("astlib/ast_413.ml", 613, 19486, 19492), ("astlib/ast_413.ml", 613, 19486, 19514), 0), 0, Tag1 ("Astlib__Ast_413", 275)); (("pcsig_fields", 879), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7752)), 0, (0)), 100000000, 0, -8326)], (0)), 100000000, 0, -8325), (("astlib/ast_413.ml", 614, 19515, 19521), ("astlib/ast_413.ml", 614, 19515, 19557), 0), 0, Tag1 ("Astlib__Ast_413", 276))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -8323)), 0, 0, 0, 0, (("astlib/ast_413.ml", 611, 19412, 19414), ("astlib/ast_413.ml", 615, 19558, 19563), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 81)), 2, 0); Tag1 (("class_type_field", 7752), (0, 0, [[(("pctf_desc", 880), 0, (Tag3 ((("class_type_field_desc", 7753)), 0, (0)), 100000000, 0, -8320), (("astlib/ast_413.ml", 622, 19726, 19732), ("astlib/ast_413.ml", 622, 19726, 19765), 0), 0, Tag1 ("Astlib__Ast_413", 277)); (("pctf_loc", 881), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8321), (("astlib/ast_413.ml", 623, 19766, 19772), ("astlib/ast_413.ml", 623, 19766, 19793), 0), 0, Tag1 ("Astlib__Ast_413", 278)); (("pctf_attributes", 882), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8322), (("astlib/ast_413.ml", 624, 19794, 19800), ("astlib/ast_413.ml", 624, 19794, 19828), 0), 0, Tag1 ("Astlib__Ast_413", 279))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -8319)), 0, 0, 0, 0, (("astlib/ast_413.ml", 620, 19650, 19652), ("astlib/ast_413.ml", 625, 19855, 19860), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 82)), 2, 0); Tag1 (("class_type_field_desc", 7753), (0, 0, Tag1 ([(("Pctf_inherit", 883), ([(Tag3 ((("class_type", 7749)), 0, (0)), 100000000, 0, -8301)]), 0, (("astlib/ast_413.ml", 628, 19942, 19946), ("astlib/ast_413.ml", 628, 19942, 19974), 0), 0, Tag1 ("Astlib__Ast_413", 280)); (("Pctf_val", 884), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8304)], (0)), 100000000, 0, -8303); (Tag3 (Tag1 ((("Asttypes", 7703)), "mutable_flag"), 0, (0)), 100000000, 0, -8305); (Tag3 (Tag1 ((("Asttypes", 7703)), "virtual_flag"), 0, (0)), 100000000, 0, -8306); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8307)]), 100000000, 0, -8302)]), 0, (("astlib/ast_413.ml", 630, 19996, 20000), ("astlib/ast_413.ml", 630, 19996, 20067), 0), 0, Tag1 ("Astlib__Ast_413", 281)); (("Pctf_method", 885), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8310)], (0)), 100000000, 0, -8309); (Tag3 (Tag1 ((("Asttypes", 7703)), "private_flag"), 0, (0)), 100000000, 0, -8311); (Tag3 (Tag1 ((("Asttypes", 7703)), "virtual_flag"), 0, (0)), 100000000, 0, -8312); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8313)]), 100000000, 0, -8308)]), 0, (("astlib/ast_413.ml", 632, 20087, 20091), ("astlib/ast_413.ml", 632, 20087, 20162), 0), 0, Tag1 ("Astlib__Ast_413", 282)); (("Pctf_constraint", 886), ([(Tag2 ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8315); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8316)]), 100000000, 0, -8314)]), 0, (("astlib/ast_413.ml", 637, 20225, 20229), ("astlib/ast_413.ml", 637, 20225, 20274), 0), 0, Tag1 ("Astlib__Ast_413", 283)); (("Pctf_attribute", 887), ([(Tag3 ((("attribute", 7721)), 0, (0)), 100000000, 0, -8317)]), 0, (("astlib/ast_413.ml", 639, 20304, 20308), ("astlib/ast_413.ml", 639, 20304, 20337), 0), 0, Tag1 ("Astlib__Ast_413", 284)); (("Pctf_extension", 888), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8318)]), 0, (("astlib/ast_413.ml", 641, 20356, 20360), ("astlib/ast_413.ml", 641, 20356, 20389), 0), 0, Tag1 ("Astlib__Ast_413", 285))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -8300)), 0, 0, 0, 0, (("astlib/ast_413.ml", 627, 19862, 19864), ("astlib/ast_413.ml", 641, 20356, 20389), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 83)), 2, 0); Tag1 (("class_infos", 7754), ([((("a")), 100000000, 0, -8288)], 1, [[(("pci_virt", 889), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "virtual_flag"), 0, (0)), 100000000, 0, -8289), (("astlib/ast_413.ml", 646, 20480, 20486), ("astlib/ast_413.ml", 646, 20480, 20509), 0), 0, Tag1 ("Astlib__Ast_413", 286)); (("pci_params", 890), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8292); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "variance"), 0, (0)), 100000000, 0, -8294); (Tag3 (Tag1 ((("Asttypes", 7703)), "injectivity"), 0, (0)), 100000000, 0, -8295)]), 100000000, 0, -8293)]), 100000000, 0, -8291)], (0)), 100000000, 0, -8290), (("astlib/ast_413.ml", 647, 20510, 20516), ("astlib/ast_413.ml", 647, 20510, 20572), 0), 0, Tag1 ("Astlib__Ast_413", 287)); (("pci_name", 891), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8297)], (0)), 100000000, 0, -8296), (("astlib/ast_413.ml", 648, 20573, 20579), ("astlib/ast_413.ml", 648, 20573, 20600), 0), 0, Tag1 ("Astlib__Ast_413", 288)); (("pci_expr", 892), 0, ((("a")), 100000000, 0, -8288), (("astlib/ast_413.ml", 649, 20601, 20607), ("astlib/ast_413.ml", 649, 20601, 20620), 0), 0, Tag1 ("Astlib__Ast_413", 289)); (("pci_loc", 893), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8298), (("astlib/ast_413.ml", 650, 20621, 20627), ("astlib/ast_413.ml", 650, 20621, 20647), 0), 0, Tag1 ("Astlib__Ast_413", 290)); (("pci_attributes", 894), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8299), (("astlib/ast_413.ml", 651, 20648, 20654), ("astlib/ast_413.ml", 651, 20648, 20681), 0), 0, Tag1 ("Astlib__Ast_413", 291))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -8288)], (0)), 100000000, 0, -8287)), [25], [0], 0, 0, (("astlib/ast_413.ml", 644, 20408, 20410), ("astlib/ast_413.ml", 652, 20709, 20714), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 84)), 2, 0); Tag1 (("class_description", 7755), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7754)), [(Tag3 ((("class_type", 7749)), 0, (0)), 100000000, 0, -8286)], (0)), 100000000, 0, -8285)), 0, 0, 0, 0, (("astlib/ast_413.ml", 660, 20846, 20848), ("astlib/ast_413.ml", 660, 20846, 20894), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 85)), 2, 0); Tag1 (("class_type_declaration", 7756), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7754)), [(Tag3 ((("class_type", 7749)), 0, (0)), 100000000, 0, -8284)], (0)), 100000000, 0, -8283)), 0, 0, 0, 0, (("astlib/ast_413.ml", 662, 20896, 20898), ("astlib/ast_413.ml", 662, 20896, 20949), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 86)), 2, 0); Tag1 (("class_expr", 7757), (0, 0, [[(("pcl_desc", 895), 0, (Tag3 ((("class_expr_desc", 7758)), 0, (0)), 100000000, 0, -8280), (("astlib/ast_413.ml", 668, 21065, 21071), ("astlib/ast_413.ml", 668, 21065, 21097), 0), 0, Tag1 ("Astlib__Ast_413", 292)); (("pcl_loc", 896), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8281), (("astlib/ast_413.ml", 669, 21098, 21104), ("astlib/ast_413.ml", 669, 21098, 21124), 0), 0, Tag1 ("Astlib__Ast_413", 293)); (("pcl_attributes", 897), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8282), (("astlib/ast_413.ml", 670, 21125, 21131), ("astlib/ast_413.ml", 670, 21125, 21158), 0), 0, Tag1 ("Astlib__Ast_413", 294))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -8279)), 0, 0, 0, 0, (("astlib/ast_413.ml", 666, 21001, 21003), ("astlib/ast_413.ml", 671, 21183, 21188), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 87)), 2, 0); Tag1 (("class_expr_desc", 7758), (0, 0, Tag1 ([(("Pcl_constr", 898), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8256)], (0)), 100000000, 0, -8255); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8258)], (0)), 100000000, 0, -8257)]), 0, (("astlib/ast_413.ml", 674, 21258, 21262), ("astlib/ast_413.ml", 674, 21258, 21310), 0), 0, Tag1 ("Astlib__Ast_413", 295)); (("Pcl_structure", 899), ([(Tag3 ((("class_structure", 7759)), 0, (0)), 100000000, 0, -8259)]), 0, (("astlib/ast_413.ml", 677, 21348, 21352), ("astlib/ast_413.ml", 677, 21348, 21386), 0), 0, Tag1 ("Astlib__Ast_413", 296)); (("Pcl_fun", 900), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "arg_label"), 0, (0)), 100000000, 0, -8260); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8262)], (0)), 100000000, 0, -8261); (Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8263); (Tag3 ((("class_expr", 7757)), 0, (0)), 100000000, 0, -8264)]), 0, (("astlib/ast_413.ml", 679, 21412, 21416), ("astlib/ast_413.ml", 679, 21412, 21481), 0), 0, Tag1 ("Astlib__Ast_413", 297)); (("Pcl_apply", 901), ([(Tag3 ((("class_expr", 7757)), 0, (0)), 100000000, 0, -8265); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "arg_label"), 0, (0)), 100000000, 0, -8268); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8269)]), 100000000, 0, -8267)], (0)), 100000000, 0, -8266)]), 0, (("astlib/ast_413.ml", 685, 21740, 21744), ("astlib/ast_413.ml", 685, 21740, 21801), 0), 0, Tag1 ("Astlib__Ast_413", 298)); (("Pcl_let", 902), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "rec_flag"), 0, (0)), 100000000, 0, -8270); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7785)), 0, (0)), 100000000, 0, -8272)], (0)), 100000000, 0, -8271); (Tag3 ((("class_expr", 7757)), 0, (0)), 100000000, 0, -8273)]), 0, (("astlib/ast_413.ml", 692, 21954, 21958), ("astlib/ast_413.ml", 692, 21954, 22013), 0), 0, Tag1 ("Astlib__Ast_413", 299)); (("Pcl_constraint", 903), ([(Tag3 ((("class_expr", 7757)), 0, (0)), 100000000, 0, -8274); (Tag3 ((("class_type", 7749)), 0, (0)), 100000000, 0, -8275)]), 0, (("astlib/ast_413.ml", 696, 22162, 22166), ("astlib/ast_413.ml", 696, 22162, 22209), 0), 0, Tag1 ("Astlib__Ast_413", 300)); (("Pcl_extension", 904), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8276)]), 0, (("astlib/ast_413.ml", 698, 22230, 22234), ("astlib/ast_413.ml", 698, 22230, 22262), 0), 0, Tag1 ("Astlib__Ast_413", 301)); (("Pcl_open", 905), ([(Tag3 ((("open_description", 7774)), 0, (0)), 100000000, 0, -8277); (Tag3 ((("class_expr", 7757)), 0, (0)), 100000000, 0, -8278)]), 0, (("astlib/ast_413.ml", 700, 22279, 22283), ("astlib/ast_413.ml", 700, 22279, 22326), 0), 0, Tag1 ("Astlib__Ast_413", 302))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -8254)), 0, 0, 0, 0, (("astlib/ast_413.ml", 673, 21190, 21192), ("astlib/ast_413.ml", 700, 22279, 22326), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 88)), 2, 0); Tag1 (("class_structure", 7759), (0, 0, [[(("pcstr_self", 906), 0, (Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8251), (("astlib/ast_413.ml", 706, 22430, 22436), ("astlib/ast_413.ml", 706, 22430, 22456), 0), 0, Tag1 ("Astlib__Ast_413", 303)); (("pcstr_fields", 907), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7760)), 0, (0)), 100000000, 0, -8253)], (0)), 100000000, 0, -8252), (("astlib/ast_413.ml", 707, 22457, 22463), ("astlib/ast_413.ml", 707, 22457, 22494), 0), 0, Tag1 ("Astlib__Ast_413", 304))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -8250)), 0, 0, 0, 0, (("astlib/ast_413.ml", 704, 22356, 22358), ("astlib/ast_413.ml", 708, 22495, 22500), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 89)), 2, 0); Tag1 (("class_field", 7760), (0, 0, [[(("pcf_desc", 908), 0, (Tag3 ((("class_field_desc", 7761)), 0, (0)), 100000000, 0, -8247), (("astlib/ast_413.ml", 715, 22650, 22656), ("astlib/ast_413.ml", 715, 22650, 22683), 0), 0, Tag1 ("Astlib__Ast_413", 305)); (("pcf_loc", 909), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8248), (("astlib/ast_413.ml", 716, 22684, 22690), ("astlib/ast_413.ml", 716, 22684, 22710), 0), 0, Tag1 ("Astlib__Ast_413", 306)); (("pcf_attributes", 910), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8249), (("astlib/ast_413.ml", 717, 22711, 22717), ("astlib/ast_413.ml", 717, 22711, 22744), 0), 0, Tag1 ("Astlib__Ast_413", 307))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -8246)), 0, 0, 0, 0, (("astlib/ast_413.ml", 713, 22584, 22586), ("astlib/ast_413.ml", 718, 22771, 22776), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 90)), 2, 0); Tag1 (("class_field_desc", 7761), (0, 0, Tag1 ([(("Pcf_inherit", 911), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "override_flag"), 0, (0)), 100000000, 0, -8225); (Tag3 ((("class_expr", 7757)), 0, (0)), 100000000, 0, -8226); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8229)], (0)), 100000000, 0, -8228)], (0)), 100000000, 0, -8227)]), 0, (("astlib/ast_413.ml", 721, 22848, 22852), ("astlib/ast_413.ml", 721, 22848, 22915), 0), 0, Tag1 ("Astlib__Ast_413", 308)); (("Pcf_val", 912), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8232)], (0)), 100000000, 0, -8231); (Tag3 (Tag1 ((("Asttypes", 7703)), "mutable_flag"), 0, (0)), 100000000, 0, -8233); (Tag3 ((("class_field_kind", 7762)), 0, (0)), 100000000, 0, -8234)]), 100000000, 0, -8230)]), 0, (("astlib/ast_413.ml", 727, 23007, 23011), ("astlib/ast_413.ml", 727, 23007, 23069), 0), 0, Tag1 ("Astlib__Ast_413", 309)); (("Pcf_method", 913), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7703)), "label"), 0, (0)), 100000000, 0, -8237)], (0)), 100000000, 0, -8236); (Tag3 (Tag1 ((("Asttypes", 7703)), "private_flag"), 0, (0)), 100000000, 0, -8238); (Tag3 ((("class_field_kind", 7762)), 0, (0)), 100000000, 0, -8239)]), 100000000, 0, -8235)]), 0, (("astlib/ast_413.ml", 731, 23118, 23122), ("astlib/ast_413.ml", 731, 23118, 23183), 0), 0, Tag1 ("Astlib__Ast_413", 310)); (("Pcf_constraint", 914), ([(Tag2 ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8241); (Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8242)]), 100000000, 0, -8240)]), 0, (("astlib/ast_413.ml", 735, 23299, 23303), ("astlib/ast_413.ml", 735, 23299, 23346), 0), 0, Tag1 ("Astlib__Ast_413", 311)); (("Pcf_initializer", 915), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8243)]), 0, (("astlib/ast_413.ml", 737, 23376, 23380), ("astlib/ast_413.ml", 737, 23376, 23411), 0), 0, Tag1 ("Astlib__Ast_413", 312)); (("Pcf_attribute", 916), ([(Tag3 ((("attribute", 7721)), 0, (0)), 100000000, 0, -8244)]), 0, (("astlib/ast_413.ml", 739, 23436, 23440), ("astlib/ast_413.ml", 739, 23436, 23468), 0), 0, Tag1 ("Astlib__Ast_413", 313)); (("Pcf_extension", 917), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8245)]), 0, (("astlib/ast_413.ml", 741, 23487, 23491), ("astlib/ast_413.ml", 741, 23487, 23519), 0), 0, Tag1 ("Astlib__Ast_413", 314))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -8224)), 0, 0, 0, 0, (("astlib/ast_413.ml", 720, 22778, 22780), ("astlib/ast_413.ml", 741, 23487, 23519), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 91)), 2, 0); Tag1 (("class_field_kind", 7762), (0, 0, Tag1 ([(("Cfk_virtual", 918), ([(Tag3 ((("core_type", 7725)), 0, (0)), 100000000, 0, -8221)]), 0, (("astlib/ast_413.ml", 745, 23608, 23612), ("astlib/ast_413.ml", 745, 23608, 23638), 0), 0, Tag1 ("Astlib__Ast_413", 315)); (("Cfk_concrete", 919), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "override_flag"), 0, (0)), 100000000, 0, -8222); (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8223)]), 0, (("astlib/ast_413.ml", 746, 23639, 23643), ("astlib/ast_413.ml", 746, 23639, 23687), 0), 0, Tag1 ("Astlib__Ast_413", 316))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -8220)), 0, 0, 0, 0, (("astlib/ast_413.ml", 744, 23538, 23540), ("astlib/ast_413.ml", 746, 23639, 23687), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 92)), 2, 0); Tag1 (("class_declaration", 7763), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7754)), [(Tag3 ((("class_expr", 7757)), 0, (0)), 100000000, 0, -8219)], (0)), 100000000, 0, -8218)), 0, 0, 0, 0, (("astlib/ast_413.ml", 748, 23689, 23691), ("astlib/ast_413.ml", 748, 23689, 23737), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 93)), 2, 0); Tag1 (("module_type", 7764), (0, 0, [[(("pmty_desc", 920), 0, (Tag3 ((("module_type_desc", 7765)), 0, (0)), 100000000, 0, -8215), (("astlib/ast_413.ml", 756, 23885, 23891), ("astlib/ast_413.ml", 756, 23885, 23919), 0), 0, Tag1 ("Astlib__Ast_413", 317)); (("pmty_loc", 921), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8216), (("astlib/ast_413.ml", 757, 23920, 23926), ("astlib/ast_413.ml", 757, 23920, 23947), 0), 0, Tag1 ("Astlib__Ast_413", 318)); (("pmty_attributes", 922), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8217), (("astlib/ast_413.ml", 758, 23948, 23954), ("astlib/ast_413.ml", 758, 23948, 23982), 0), 0, Tag1 ("Astlib__Ast_413", 319))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -8214)), 0, 0, 0, 0, (("astlib/ast_413.ml", 754, 23819, 23821), ("astlib/ast_413.ml", 759, 24007, 24012), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 94)), 2, 0); Tag1 (("module_type_desc", 7765), (0, 0, Tag1 ([(("Pmty_ident", 923), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8203)], (0)), 100000000, 0, -8202)]), 0, (("astlib/ast_413.ml", 762, 24084, 24088), ("astlib/ast_413.ml", 762, 24084, 24119), 0), 0, Tag1 ("Astlib__Ast_413", 320)); (("Pmty_signature", 924), ([(Tag3 ((("signature", 7767)), 0, (0)), 100000000, 0, -8204)]), 0, (("astlib/ast_413.ml", 764, 24132, 24136), ("astlib/ast_413.ml", 764, 24132, 24165), 0), 0, Tag1 ("Astlib__Ast_413", 321)); (("Pmty_functor", 925), ([(Tag3 ((("functor_parameter", 7766)), 0, (0)), 100000000, 0, -8205); (Tag3 ((("module_type", 7764)), 0, (0)), 100000000, 0, -8206)]), 0, (("astlib/ast_413.ml", 766, 24188, 24192), ("astlib/ast_413.ml", 766, 24188, 24241), 0), 0, Tag1 ("Astlib__Ast_413", 322)); (("Pmty_with", 926), ([(Tag3 ((("module_type", 7764)), 0, (0)), 100000000, 0, -8207); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7779)), 0, (0)), 100000000, 0, -8209)], (0)), 100000000, 0, -8208)]), 0, (("astlib/ast_413.ml", 768, 24276, 24280), ("astlib/ast_413.ml", 768, 24276, 24329), 0), 0, Tag1 ("Astlib__Ast_413", 323)); (("Pmty_typeof", 927), ([(Tag3 ((("module_expr", 7780)), 0, (0)), 100000000, 0, -8210)]), 0, (("astlib/ast_413.ml", 770, 24352, 24356), ("astlib/ast_413.ml", 770, 24352, 24384), 0), 0, Tag1 ("Astlib__Ast_413", 324)); (("Pmty_extension", 928), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8211)]), 0, (("astlib/ast_413.ml", 772, 24413, 24417), ("astlib/ast_413.ml", 772, 24413, 24446), 0), 0, Tag1 ("Astlib__Ast_413", 325)); (("Pmty_alias", 929), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8213)], (0)), 100000000, 0, -8212)]), 0, (("astlib/ast_413.ml", 774, 24463, 24467), ("astlib/ast_413.ml", 774, 24463, 24498), 0), 0, Tag1 ("Astlib__Ast_413", 326))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -8201)), 0, 0, 0, 0, (("astlib/ast_413.ml", 761, 24014, 24016), ("astlib/ast_413.ml", 774, 24463, 24498), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 95)), 2, 0); Tag1 (("functor_parameter", 7766), (0, 0, Tag1 ([(("Unit", 930), (0), 0, (("astlib/ast_413.ml", 778, 24593, 24597), ("astlib/ast_413.ml", 778, 24593, 24603), 0), 0, Tag1 ("Astlib__Ast_413", 327)); (("Named", 931), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8199)], (0)), 100000000, 0, -8198)], (0)), 100000000, 0, -8197); (Tag3 ((("module_type", 7764)), 0, (0)), 100000000, 0, -8200)]), 0, (("astlib/ast_413.ml", 780, 24617, 24621), ("astlib/ast_413.ml", 780, 24617, 24663), 0), 0, Tag1 ("Astlib__Ast_413", 328))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "functor_parameter"), 0, (0)), 100000000, 0, -8196)), 0, 0, 0, 0, (("astlib/ast_413.ml", 777, 24521, 24523), ("astlib/ast_413.ml", 780, 24617, 24663), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 96)), 2, 0); Tag1 (("signature", 7767), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7768)), 0, (0)), 100000000, 0, -8195)], (0)), 100000000, 0, -8194)), 0, 0, 0, 0, (("astlib/ast_413.ml", 784, 24738, 24740), ("astlib/ast_413.ml", 784, 24738, 24775), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 97)), 2, 0); Tag1 (("signature_item", 7768), (0, 0, [[(("psig_desc", 932), 0, (Tag3 ((("signature_item_desc", 7769)), 0, (0)), 100000000, 0, -8192), (("astlib/ast_413.ml", 788, 24849, 24855), ("astlib/ast_413.ml", 788, 24849, 24886), 0), 0, Tag1 ("Astlib__Ast_413", 329)); (("psig_loc", 933), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8193), (("astlib/ast_413.ml", 789, 24887, 24893), ("astlib/ast_413.ml", 789, 24887, 24914), 0), 0, Tag1 ("Astlib__Ast_413", 330))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -8191)), 0, 0, 0, 0, (("astlib/ast_413.ml", 786, 24777, 24779), ("astlib/ast_413.ml", 790, 24915, 24920), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 98)), 2, 0); Tag1 (("signature_item_desc", 7769), (0, 0, Tag1 ([(("Psig_value", 934), ([(Tag3 ((("value_description", 7739)), 0, (0)), 100000000, 0, -8168)]), 0, (("astlib/ast_413.ml", 793, 24998, 25002), ("astlib/ast_413.ml", 793, 24998, 25035), 0), 0, Tag1 ("Astlib__Ast_413", 331)); (("Psig_type", 935), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "rec_flag"), 0, (0)), 100000000, 0, -8169); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7740)), 0, (0)), 100000000, 0, -8171)], (0)), 100000000, 0, -8170)]), 0, (("astlib/ast_413.ml", 798, 25118, 25122), ("astlib/ast_413.ml", 798, 25118, 25169), 0), 0, Tag1 ("Astlib__Ast_413", 332)); (("Psig_typesubst", 936), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7740)), 0, (0)), 100000000, 0, -8173)], (0)), 100000000, 0, -8172)]), 0, (("astlib/ast_413.ml", 800, 25216, 25220), ("astlib/ast_413.ml", 800, 25216, 25261), 0), 0, Tag1 ("Astlib__Ast_413", 333)); (("Psig_typext", 937), ([(Tag3 ((("type_extension", 7745)), 0, (0)), 100000000, 0, -8174)]), 0, (("astlib/ast_413.ml", 802, 25310, 25314), ("astlib/ast_413.ml", 802, 25310, 25345), 0), 0, Tag1 ("Astlib__Ast_413", 334)); (("Psig_exception", 938), ([(Tag3 ((("type_exception", 7747)), 0, (0)), 100000000, 0, -8175)]), 0, (("astlib/ast_413.ml", 804, 25371, 25375), ("astlib/ast_413.ml", 804, 25371, 25409), 0), 0, Tag1 ("Astlib__Ast_413", 335)); (("Psig_module", 939), ([(Tag3 ((("module_declaration", 7770)), 0, (0)), 100000000, 0, -8176)]), 0, (("astlib/ast_413.ml", 806, 25437, 25441), ("astlib/ast_413.ml", 806, 25437, 25476), 0), 0, Tag1 ("Astlib__Ast_413", 336)); (("Psig_modsubst", 940), ([(Tag3 ((("module_substitution", 7771)), 0, (0)), 100000000, 0, -8177)]), 0, (("astlib/ast_413.ml", 809, 25521, 25525), ("astlib/ast_413.ml", 809, 25521, 25563), 0), 0, Tag1 ("Astlib__Ast_413", 337)); (("Psig_recmodule", 941), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7770)), 0, (0)), 100000000, 0, -8179)], (0)), 100000000, 0, -8178)]), 0, (("astlib/ast_413.ml", 811, 25588, 25592), ("astlib/ast_413.ml", 811, 25588, 25635), 0), 0, Tag1 ("Astlib__Ast_413", 338)); (("Psig_modtype", 942), ([(Tag3 ((("module_type_declaration", 7772)), 0, (0)), 100000000, 0, -8180)]), 0, (("astlib/ast_413.ml", 813, 25687, 25691), ("astlib/ast_413.ml", 813, 25687, 25732), 0), 0, Tag1 ("Astlib__Ast_413", 339)); (("Psig_modtypesubst", 943), ([(Tag3 ((("module_type_declaration", 7772)), 0, (0)), 100000000, 0, -8181)]), 0, (("astlib/ast_413.ml", 816, 25783, 25787), ("astlib/ast_413.ml", 816, 25783, 25833), 0), 0, Tag1 ("Astlib__Ast_413", 340)); (("Psig_open", 944), ([(Tag3 ((("open_description", 7774)), 0, (0)), 100000000, 0, -8182)]), 0, (("astlib/ast_413.ml", 818, 25867, 25871), ("astlib/ast_413.ml", 818, 25867, 25902), 0), 0, Tag1 ("Astlib__Ast_413", 341)); (("Psig_include", 945), ([(Tag3 ((("include_description", 7777)), 0, (0)), 100000000, 0, -8183)]), 0, (("astlib/ast_413.ml", 820, 25920, 25924), ("astlib/ast_413.ml", 820, 25920, 25961), 0), 0, Tag1 ("Astlib__Ast_413", 342)); (("Psig_class", 946), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7755)), 0, (0)), 100000000, 0, -8185)], (0)), 100000000, 0, -8184)]), 0, (("astlib/ast_413.ml", 822, 25983, 25987), ("astlib/ast_413.ml", 822, 25983, 26025), 0), 0, Tag1 ("Astlib__Ast_413", 343)); (("Psig_class_type", 947), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7756)), 0, (0)), 100000000, 0, -8187)], (0)), 100000000, 0, -8186)]), 0, (("astlib/ast_413.ml", 824, 26072, 26076), ("astlib/ast_413.ml", 824, 26072, 26124), 0), 0, Tag1 ("Astlib__Ast_413", 344)); (("Psig_attribute", 948), ([(Tag3 ((("attribute", 7721)), 0, (0)), 100000000, 0, -8188)]), 0, (("astlib/ast_413.ml", 826, 26178, 26182), ("astlib/ast_413.ml", 826, 26178, 26211), 0), 0, Tag1 ("Astlib__Ast_413", 345)); (("Psig_extension", 949), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8189); (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8190)]), 0, (("astlib/ast_413.ml", 828, 26230, 26234), ("astlib/ast_413.ml", 828, 26230, 26276), 0), 0, Tag1 ("Astlib__Ast_413", 346))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -8167)), 0, 0, 0, 0, (("astlib/ast_413.ml", 792, 24922, 24924), ("astlib/ast_413.ml", 828, 26230, 26276), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 99)), 2, 0); Tag1 (("module_declaration", 7770), (0, 0, [[(("pmd_name", 950), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8163)], (0)), 100000000, 0, -8162)], (0)), 100000000, 0, -8161), (("astlib/ast_413.ml", 833, 26375, 26381), ("astlib/ast_413.ml", 833, 26375, 26409), 0), 0, Tag1 ("Astlib__Ast_413", 347)); (("pmd_type", 951), 0, (Tag3 ((("module_type", 7764)), 0, (0)), 100000000, 0, -8164), (("astlib/ast_413.ml", 834, 26410, 26416), ("astlib/ast_413.ml", 834, 26410, 26438), 0), 0, Tag1 ("Astlib__Ast_413", 348)); (("pmd_attributes", 952), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8165), (("astlib/ast_413.ml", 835, 26439, 26445), ("astlib/ast_413.ml", 835, 26439, 26472), 0), 0, Tag1 ("Astlib__Ast_413", 349)); (("pmd_loc", 953), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8166), (("astlib/ast_413.ml", 836, 26499, 26505), ("astlib/ast_413.ml", 836, 26499, 26525), 0), 0, Tag1 ("Astlib__Ast_413", 350))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -8160)), 0, 0, 0, 0, (("astlib/ast_413.ml", 831, 26295, 26297), ("astlib/ast_413.ml", 837, 26526, 26531), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 100)), 2, 0); Tag1 (("module_substitution", 7771), (0, 0, [[(("pms_name", 954), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8155)], (0)), 100000000, 0, -8154), (("astlib/ast_413.ml", 842, 26630, 26636), ("astlib/ast_413.ml", 842, 26630, 26657), 0), 0, Tag1 ("Astlib__Ast_413", 351)); (("pms_manifest", 955), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8157)], (0)), 100000000, 0, -8156), (("astlib/ast_413.ml", 843, 26658, 26664), ("astlib/ast_413.ml", 843, 26658, 26694), 0), 0, Tag1 ("Astlib__Ast_413", 352)); (("pms_attributes", 956), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8158), (("astlib/ast_413.ml", 844, 26695, 26701), ("astlib/ast_413.ml", 844, 26695, 26728), 0), 0, Tag1 ("Astlib__Ast_413", 353)); (("pms_loc", 957), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8159), (("astlib/ast_413.ml", 845, 26755, 26761), ("astlib/ast_413.ml", 845, 26755, 26781), 0), 0, Tag1 ("Astlib__Ast_413", 354))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "module_substitution"), 0, (0)), 100000000, 0, -8153)), 0, 0, 0, 0, (("astlib/ast_413.ml", 840, 26548, 26550), ("astlib/ast_413.ml", 846, 26782, 26787), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 101)), 2, 0); Tag1 (("module_type_declaration", 7772), (0, 0, [[(("pmtd_name", 958), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8148)], (0)), 100000000, 0, -8147), (("astlib/ast_413.ml", 850, 26879, 26885), ("astlib/ast_413.ml", 850, 26879, 26907), 0), 0, Tag1 ("Astlib__Ast_413", 355)); (("pmtd_type", 959), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7764)), 0, (0)), 100000000, 0, -8150)], (0)), 100000000, 0, -8149), (("astlib/ast_413.ml", 851, 26908, 26914), ("astlib/ast_413.ml", 851, 26908, 26944), 0), 0, Tag1 ("Astlib__Ast_413", 356)); (("pmtd_attributes", 960), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8151), (("astlib/ast_413.ml", 852, 26945, 26951), ("astlib/ast_413.ml", 852, 26945, 26979), 0), 0, Tag1 ("Astlib__Ast_413", 357)); (("pmtd_loc", 961), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8152), (("astlib/ast_413.ml", 853, 27006, 27012), ("astlib/ast_413.ml", 853, 27006, 27033), 0), 0, Tag1 ("Astlib__Ast_413", 358))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -8146)), 0, 0, 0, 0, (("astlib/ast_413.ml", 848, 26789, 26791), ("astlib/ast_413.ml", 854, 27034, 27039), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 102)), 2, 0); Tag1 (("open_infos", 7773), ([((("a")), 100000000, 0, -8142)], 1, [[(("popen_expr", 962), 0, ((("a")), 100000000, 0, -8142), (("astlib/ast_413.ml", 861, 27194, 27200), ("astlib/ast_413.ml", 861, 27194, 27215), 0), 0, Tag1 ("Astlib__Ast_413", 359)); (("popen_override", 963), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "override_flag"), 0, (0)), 100000000, 0, -8143), (("astlib/ast_413.ml", 862, 27216, 27222), ("astlib/ast_413.ml", 862, 27216, 27252), 0), 0, Tag1 ("Astlib__Ast_413", 360)); (("popen_loc", 964), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8144), (("astlib/ast_413.ml", 863, 27253, 27259), ("astlib/ast_413.ml", 863, 27253, 27281), 0), 0, Tag1 ("Astlib__Ast_413", 361)); (("popen_attributes", 965), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8145), (("astlib/ast_413.ml", 864, 27282, 27288), ("astlib/ast_413.ml", 864, 27282, 27317), 0), 0, Tag1 ("Astlib__Ast_413", 362))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "open_infos"), [((("a")), 100000000, 0, -8142)], (0)), 100000000, 0, -8141)), [25], [0], 0, 0, (("astlib/ast_413.ml", 859, 27124, 27126), ("astlib/ast_413.ml", 865, 27318, 27323), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 103)), 2, 0); Tag1 (("open_description", 7774), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7773)), [(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8140)], (0)), 100000000, 0, -8139)], (0)), 100000000, 0, -8138)), 0, 0, 0, 0, (("astlib/ast_413.ml", 871, 27492, 27494), ("astlib/ast_413.ml", 871, 27492, 27543), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 104)), 2, 0); Tag1 (("open_declaration", 7775), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7773)), [(Tag3 ((("module_expr", 7780)), 0, (0)), 100000000, 0, -8137)], (0)), 100000000, 0, -8136)), 0, 0, 0, 0, (("astlib/ast_413.ml", 875, 27579, 27581), ("astlib/ast_413.ml", 875, 27579, 27626), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 105)), 2, 0); Tag1 (("include_infos", 7776), ([((("a")), 100000000, 0, -8133)], 1, [[(("pincl_mod", 966), 0, ((("a")), 100000000, 0, -8133), (("astlib/ast_413.ml", 882, 27763, 27769), ("astlib/ast_413.ml", 882, 27763, 27783), 0), 0, Tag1 ("Astlib__Ast_413", 363)); (("pincl_loc", 967), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8134), (("astlib/ast_413.ml", 883, 27784, 27790), ("astlib/ast_413.ml", 883, 27784, 27812), 0), 0, Tag1 ("Astlib__Ast_413", 364)); (("pincl_attributes", 968), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8135), (("astlib/ast_413.ml", 884, 27813, 27819), ("astlib/ast_413.ml", 884, 27813, 27848), 0), 0, Tag1 ("Astlib__Ast_413", 365))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -8133)], (0)), 100000000, 0, -8132)), [25], [0], 0, 0, (("astlib/ast_413.ml", 880, 27687, 27689), ("astlib/ast_413.ml", 885, 27849, 27854), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 106)), 2, 0); Tag1 (("include_description", 7777), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7776)), [(Tag3 ((("module_type", 7764)), 0, (0)), 100000000, 0, -8131)], (0)), 100000000, 0, -8130)), 0, 0, 0, 0, (("astlib/ast_413.ml", 887, 27856, 27858), ("astlib/ast_413.ml", 887, 27856, 27909), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 107)), 2, 0); Tag1 (("include_declaration", 7778), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7776)), [(Tag3 ((("module_expr", 7780)), 0, (0)), 100000000, 0, -8129)], (0)), 100000000, 0, -8128)), 0, 0, 0, 0, (("astlib/ast_413.ml", 890, 27930, 27932), ("astlib/ast_413.ml", 890, 27930, 27983), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 108)), 2, 0); Tag1 (("with_constraint", 7779), (0, 0, Tag1 ([(("Pwith_type", 969), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8109)], (0)), 100000000, 0, -8108); (Tag3 ((("type_declaration", 7740)), 0, (0)), 100000000, 0, -8110)]), 0, (("astlib/ast_413.ml", 894, 28072, 28076), ("astlib/ast_413.ml", 894, 28072, 28126), 0), 0, Tag1 ("Astlib__Ast_413", 366)); (("Pwith_module", 970), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8112)], (0)), 100000000, 0, -8111); (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8114)], (0)), 100000000, 0, -8113)]), 0, (("astlib/ast_413.ml", 899, 28259, 28263), ("astlib/ast_413.ml", 899, 28259, 28314), 0), 0, Tag1 ("Astlib__Ast_413", 367)); (("Pwith_modtype", 971), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8116)], (0)), 100000000, 0, -8115); (Tag3 ((("module_type", 7764)), 0, (0)), 100000000, 0, -8117)]), 0, (("astlib/ast_413.ml", 901, 28345, 28349), ("astlib/ast_413.ml", 901, 28345, 28397), 0), 0, Tag1 ("Astlib__Ast_413", 368)); (("Pwith_modtypesubst", 972), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8119)], (0)), 100000000, 0, -8118); (Tag3 ((("module_type", 7764)), 0, (0)), 100000000, 0, -8120)]), 0, (("astlib/ast_413.ml", 903, 28433, 28437), ("astlib/ast_413.ml", 903, 28433, 28490), 0), 0, Tag1 ("Astlib__Ast_413", 369)); (("Pwith_typesubst", 973), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8122)], (0)), 100000000, 0, -8121); (Tag3 ((("type_declaration", 7740)), 0, (0)), 100000000, 0, -8123)]), 0, (("astlib/ast_413.ml", 905, 28533, 28537), ("astlib/ast_413.ml", 905, 28533, 28592), 0), 0, Tag1 ("Astlib__Ast_413", 370)); (("Pwith_modsubst", 974), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8125)], (0)), 100000000, 0, -8124); (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8127)], (0)), 100000000, 0, -8126)]), 0, (("astlib/ast_413.ml", 907, 28653, 28657), ("astlib/ast_413.ml", 907, 28653, 28710), 0), 0, Tag1 ("Astlib__Ast_413", 371))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -8107)), 0, 0, 0, 0, (("astlib/ast_413.ml", 893, 28004, 28006), ("astlib/ast_413.ml", 907, 28653, 28710), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 109)), 2, 0); Tag1 (("module_expr", 7780), (0, 0, [[(("pmod_desc", 975), 0, (Tag3 ((("module_expr_desc", 7781)), 0, (0)), 100000000, 0, -8104), (("astlib/ast_413.ml", 914, 28860, 28866), ("astlib/ast_413.ml", 914, 28860, 28894), 0), 0, Tag1 ("Astlib__Ast_413", 372)); (("pmod_loc", 976), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8105), (("astlib/ast_413.ml", 915, 28895, 28901), ("astlib/ast_413.ml", 915, 28895, 28922), 0), 0, Tag1 ("Astlib__Ast_413", 373)); (("pmod_attributes", 977), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8106), (("astlib/ast_413.ml", 916, 28923, 28929), ("astlib/ast_413.ml", 916, 28923, 28957), 0), 0, Tag1 ("Astlib__Ast_413", 374))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -8103)), 0, 0, 0, 0, (("astlib/ast_413.ml", 912, 28794, 28796), ("astlib/ast_413.ml", 917, 28982, 28987), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 110)), 2, 0); Tag1 (("module_expr_desc", 7781), (0, 0, Tag1 ([(("Pmod_ident", 978), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8093)], (0)), 100000000, 0, -8092)]), 0, (("astlib/ast_413.ml", 920, 29059, 29063), ("astlib/ast_413.ml", 920, 29059, 29094), 0), 0, Tag1 ("Astlib__Ast_413", 375)); (("Pmod_structure", 979), ([(Tag3 ((("structure", 7782)), 0, (0)), 100000000, 0, -8094)]), 0, (("astlib/ast_413.ml", 922, 29107, 29111), ("astlib/ast_413.ml", 922, 29107, 29140), 0), 0, Tag1 ("Astlib__Ast_413", 376)); (("Pmod_functor", 980), ([(Tag3 ((("functor_parameter", 7766)), 0, (0)), 100000000, 0, -8095); (Tag3 ((("module_expr", 7780)), 0, (0)), 100000000, 0, -8096)]), 0, (("astlib/ast_413.ml", 924, 29166, 29170), ("astlib/ast_413.ml", 924, 29166, 29219), 0), 0, Tag1 ("Astlib__Ast_413", 377)); (("Pmod_apply", 981), ([(Tag3 ((("module_expr", 7780)), 0, (0)), 100000000, 0, -8097); (Tag3 ((("module_expr", 7780)), 0, (0)), 100000000, 0, -8098)]), 0, (("astlib/ast_413.ml", 926, 29253, 29257), ("astlib/ast_413.ml", 926, 29253, 29298), 0), 0, Tag1 ("Astlib__Ast_413", 378)); (("Pmod_constraint", 982), ([(Tag3 ((("module_expr", 7780)), 0, (0)), 100000000, 0, -8099); (Tag3 ((("module_type", 7764)), 0, (0)), 100000000, 0, -8100)]), 0, (("astlib/ast_413.ml", 928, 29318, 29322), ("astlib/ast_413.ml", 928, 29318, 29368), 0), 0, Tag1 ("Astlib__Ast_413", 379)); (("Pmod_unpack", 983), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8101)]), 0, (("astlib/ast_413.ml", 930, 29389, 29393), ("astlib/ast_413.ml", 930, 29389, 29420), 0), 0, Tag1 ("Astlib__Ast_413", 380)); (("Pmod_extension", 984), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8102)]), 0, (("astlib/ast_413.ml", 932, 29439, 29443), ("astlib/ast_413.ml", 932, 29439, 29472), 0), 0, Tag1 ("Astlib__Ast_413", 381))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -8091)), 0, 0, 0, 0, (("astlib/ast_413.ml", 919, 28989, 28991), ("astlib/ast_413.ml", 932, 29439, 29472), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 111)), 2, 0); Tag1 (("structure", 7782), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7783)), 0, (0)), 100000000, 0, -8090)], (0)), 100000000, 0, -8089)), 0, 0, 0, 0, (("astlib/ast_413.ml", 935, 29490, 29492), ("astlib/ast_413.ml", 935, 29490, 29527), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 112)), 2, 0); Tag1 (("structure_item", 7783), (0, 0, [[(("pstr_desc", 985), 0, (Tag3 ((("structure_item_desc", 7784)), 0, (0)), 100000000, 0, -8087), (("astlib/ast_413.ml", 939, 29601, 29607), ("astlib/ast_413.ml", 939, 29601, 29638), 0), 0, Tag1 ("Astlib__Ast_413", 382)); (("pstr_loc", 986), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8088), (("astlib/ast_413.ml", 940, 29639, 29645), ("astlib/ast_413.ml", 940, 29639, 29666), 0), 0, Tag1 ("Astlib__Ast_413", 383))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -8086)), 0, 0, 0, 0, (("astlib/ast_413.ml", 937, 29529, 29531), ("astlib/ast_413.ml", 941, 29667, 29672), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 113)), 2, 0); Tag1 (("structure_item_desc", 7784), (0, 0, Tag1 ([(("Pstr_eval", 987), ([(Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8062); (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8063)]), 0, (("astlib/ast_413.ml", 944, 29750, 29754), ("astlib/ast_413.ml", 944, 29750, 29792), 0), 0, Tag1 ("Astlib__Ast_413", 384)); (("Pstr_value", 988), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "rec_flag"), 0, (0)), 100000000, 0, -8064); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7785)), 0, (0)), 100000000, 0, -8066)], (0)), 100000000, 0, -8065)]), 0, (("astlib/ast_413.ml", 946, 29805, 29809), ("astlib/ast_413.ml", 946, 29805, 29854), 0), 0, Tag1 ("Astlib__Ast_413", 385)); (("Pstr_primitive", 989), ([(Tag3 ((("value_description", 7739)), 0, (0)), 100000000, 0, -8067)]), 0, (("astlib/ast_413.ml", 950, 29993, 29997), ("astlib/ast_413.ml", 950, 29993, 30034), 0), 0, Tag1 ("Astlib__Ast_413", 386)); (("Pstr_type", 990), ([(Tag3 (Tag1 ((("Asttypes", 7703)), "rec_flag"), 0, (0)), 100000000, 0, -8068); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7740)), 0, (0)), 100000000, 0, -8070)], (0)), 100000000, 0, -8069)]), 0, (("astlib/ast_413.ml", 953, 30093, 30097), ("astlib/ast_413.ml", 953, 30093, 30144), 0), 0, Tag1 ("Astlib__Ast_413", 387)); (("Pstr_typext", 991), ([(Tag3 ((("type_extension", 7745)), 0, (0)), 100000000, 0, -8071)]), 0, (("astlib/ast_413.ml", 955, 30190, 30194), ("astlib/ast_413.ml", 955, 30190, 30225), 0), 0, Tag1 ("Astlib__Ast_413", 388)); (("Pstr_exception", 992), ([(Tag3 ((("type_exception", 7747)), 0, (0)), 100000000, 0, -8072)]), 0, (("astlib/ast_413.ml", 957, 30251, 30255), ("astlib/ast_413.ml", 957, 30251, 30289), 0), 0, Tag1 ("Astlib__Ast_413", 389)); (("Pstr_module", 993), ([(Tag3 ((("module_binding", 7786)), 0, (0)), 100000000, 0, -8073)]), 0, (("astlib/ast_413.ml", 960, 30342, 30346), ("astlib/ast_413.ml", 960, 30342, 30377), 0), 0, Tag1 ("Astlib__Ast_413", 390)); (("Pstr_recmodule", 994), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7786)), 0, (0)), 100000000, 0, -8075)], (0)), 100000000, 0, -8074)]), 0, (("astlib/ast_413.ml", 962, 30402, 30406), ("astlib/ast_413.ml", 962, 30402, 30445), 0), 0, Tag1 ("Astlib__Ast_413", 391)); (("Pstr_modtype", 995), ([(Tag3 ((("module_type_declaration", 7772)), 0, (0)), 100000000, 0, -8076)]), 0, (("astlib/ast_413.ml", 964, 30497, 30501), ("astlib/ast_413.ml", 964, 30497, 30542), 0), 0, Tag1 ("Astlib__Ast_413", 392)); (("Pstr_open", 996), ([(Tag3 ((("open_declaration", 7775)), 0, (0)), 100000000, 0, -8077)]), 0, (("astlib/ast_413.ml", 966, 30572, 30576), ("astlib/ast_413.ml", 966, 30572, 30607), 0), 0, Tag1 ("Astlib__Ast_413", 393)); (("Pstr_class", 997), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7763)), 0, (0)), 100000000, 0, -8079)], (0)), 100000000, 0, -8078)]), 0, (("astlib/ast_413.ml", 968, 30625, 30629), ("astlib/ast_413.ml", 968, 30625, 30667), 0), 0, Tag1 ("Astlib__Ast_413", 394)); (("Pstr_class_type", 998), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7756)), 0, (0)), 100000000, 0, -8081)], (0)), 100000000, 0, -8080)]), 0, (("astlib/ast_413.ml", 970, 30714, 30718), ("astlib/ast_413.ml", 970, 30714, 30766), 0), 0, Tag1 ("Astlib__Ast_413", 395)); (("Pstr_include", 999), ([(Tag3 ((("include_declaration", 7778)), 0, (0)), 100000000, 0, -8082)]), 0, (("astlib/ast_413.ml", 972, 30820, 30824), ("astlib/ast_413.ml", 972, 30820, 30861), 0), 0, Tag1 ("Astlib__Ast_413", 396)); (("Pstr_attribute", 1000), ([(Tag3 ((("attribute", 7721)), 0, (0)), 100000000, 0, -8083)]), 0, (("astlib/ast_413.ml", 974, 30883, 30887), ("astlib/ast_413.ml", 974, 30883, 30916), 0), 0, Tag1 ("Astlib__Ast_413", 397)); (("Pstr_extension", 1001), ([(Tag3 ((("extension", 7722)), 0, (0)), 100000000, 0, -8084); (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8085)]), 0, (("astlib/ast_413.ml", 976, 30935, 30939), ("astlib/ast_413.ml", 976, 30935, 30981), 0), 0, Tag1 ("Astlib__Ast_413", 398))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -8061)), 0, 0, 0, 0, (("astlib/ast_413.ml", 943, 29674, 29676), ("astlib/ast_413.ml", 976, 30935, 30981), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 114)), 2, 0); Tag1 (("value_binding", 7785), (0, 0, [[(("pvb_pat", 1002), 0, (Tag3 ((("pattern", 7732)), 0, (0)), 100000000, 0, -8057), (("astlib/ast_413.ml", 981, 31070, 31076), ("astlib/ast_413.ml", 981, 31070, 31093), 0), 0, Tag1 ("Astlib__Ast_413", 399)); (("pvb_expr", 1003), 0, (Tag3 ((("expression", 7734)), 0, (0)), 100000000, 0, -8058), (("astlib/ast_413.ml", 982, 31094, 31100), ("astlib/ast_413.ml", 982, 31094, 31121), 0), 0, Tag1 ("Astlib__Ast_413", 400)); (("pvb_attributes", 1004), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8059), (("astlib/ast_413.ml", 983, 31122, 31128), ("astlib/ast_413.ml", 983, 31122, 31155), 0), 0, Tag1 ("Astlib__Ast_413", 401)); (("pvb_loc", 1005), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8060), (("astlib/ast_413.ml", 984, 31156, 31162), ("astlib/ast_413.ml", 984, 31156, 31182), 0), 0, Tag1 ("Astlib__Ast_413", 402))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -8056)), 0, 0, 0, 0, (("astlib/ast_413.ml", 979, 31000, 31002), ("astlib/ast_413.ml", 985, 31183, 31188), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 115)), 2, 0); Tag1 (("module_binding", 7786), (0, 0, [[(("pmb_name", 1006), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8052)], (0)), 100000000, 0, -8051)], (0)), 100000000, 0, -8050), (("astlib/ast_413.ml", 989, 31262, 31268), ("astlib/ast_413.ml", 989, 31262, 31296), 0), 0, Tag1 ("Astlib__Ast_413", 403)); (("pmb_expr", 1007), 0, (Tag3 ((("module_expr", 7780)), 0, (0)), 100000000, 0, -8053), (("astlib/ast_413.ml", 990, 31297, 31303), ("astlib/ast_413.ml", 990, 31297, 31325), 0), 0, Tag1 ("Astlib__Ast_413", 404)); (("pmb_attributes", 1008), 0, (Tag3 ((("attributes", 7723)), 0, (0)), 100000000, 0, -8054), (("astlib/ast_413.ml", 991, 31326, 31332), ("astlib/ast_413.ml", 991, 31326, 31359), 0), 0, Tag1 ("Astlib__Ast_413", 405)); (("pmb_loc", 1009), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8055), (("astlib/ast_413.ml", 992, 31360, 31366), ("astlib/ast_413.ml", 992, 31360, 31386), 0), 0, Tag1 ("Astlib__Ast_413", 406))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -8049)), 0, 0, 0, 0, (("astlib/ast_413.ml", 987, 31190, 31192), ("astlib/ast_413.ml", 993, 31387, 31392), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 116)), 2, 0); Tag1 (("toplevel_phrase", 7787), (0, 0, Tag1 ([(("Ptop_def", 1024), ([(Tag3 ((("structure", 7782)), 0, (0)), 100000000, 0, -8047)]), 0, (("astlib/ast_413.ml", 1001, 31527, 31531), ("astlib/ast_413.ml", 1001, 31527, 31554), 0), 0, Tag1 ("Astlib__Ast_413", 411)); (("Ptop_dir", 1025), ([(Tag3 ((("toplevel_directive", 7788)), 0, (0)), 100000000, 0, -8048)]), 0, (("astlib/ast_413.ml", 1002, 31555, 31559), ("astlib/ast_413.ml", 1002, 31555, 31591), 0), 0, Tag1 ("Astlib__Ast_413", 412))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -8046)), 0, 0, 0, 0, (("astlib/ast_413.ml", 1000, 31458, 31460), ("astlib/ast_413.ml", 1002, 31555, 31591), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 407)), 1, 0); Tag1 (("toplevel_directive", 7788), (0, 0, [[(("pdir_name", 1026), 0, (Tag3 (Tag1 ((("Asttypes", 7703)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8042)], (0)), 100000000, 0, -8041), (("astlib/ast_413.ml", 1007, 31699, 31705), ("astlib/ast_413.ml", 1007, 31699, 31728), 0), 0, Tag1 ("Astlib__Ast_413", 413)); (("pdir_arg", 1027), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("directive_argument", 7789)), 0, (0)), 100000000, 0, -8044)], (0)), 100000000, 0, -8043), (("astlib/ast_413.ml", 1008, 31729, 31735), ("astlib/ast_413.ml", 1008, 31729, 31772), 0), 0, Tag1 ("Astlib__Ast_413", 414)); (("pdir_loc", 1028), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8045), (("astlib/ast_413.ml", 1009, 31773, 31779), ("astlib/ast_413.ml", 1009, 31773, 31801), 0), 0, Tag1 ("Astlib__Ast_413", 415))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "toplevel_directive"), 0, (0)), 100000000, 0, -8040)), 0, 0, 0, 0, (("astlib/ast_413.ml", 1005, 31619, 31621), ("astlib/ast_413.ml", 1010, 31802, 31807), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 408)), 2, 0); Tag1 (("directive_argument", 7789), (0, 0, [[(("pdira_desc", 1029), 0, (Tag3 ((("directive_argument_desc", 7790)), 0, (0)), 100000000, 0, -8038), (("astlib/ast_413.ml", 1014, 31889, 31895), ("astlib/ast_413.ml", 1014, 31889, 31932), 0), 0, Tag1 ("Astlib__Ast_413", 416)); (("pdira_loc", 1030), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8039), (("astlib/ast_413.ml", 1015, 31933, 31939), ("astlib/ast_413.ml", 1015, 31933, 31962), 0), 0, Tag1 ("Astlib__Ast_413", 417))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -8037)), 0, 0, 0, 0, (("astlib/ast_413.ml", 1012, 31809, 31811), ("astlib/ast_413.ml", 1016, 31963, 31968), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 409)), 2, 0); Tag1 (("directive_argument_desc", 7790), (0, 0, Tag1 ([(("Pdir_string", 1031), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8031)]), 0, (("astlib/ast_413.ml", 1019, 32054, 32058), ("astlib/ast_413.ml", 1019, 32054, 32081), 0), 0, Tag1 ("Astlib__Ast_413", 418)); (("Pdir_int", 1032), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8032); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -8034)], (0)), 100000000, 0, -8033)]), 0, (("astlib/ast_413.ml", 1020, 32082, 32086), ("astlib/ast_413.ml", 1020, 32082, 32120), 0), 0, Tag1 ("Astlib__Ast_413", 419)); (("Pdir_ident", 1033), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8035)]), 0, (("astlib/ast_413.ml", 1021, 32121, 32125), ("astlib/ast_413.ml", 1021, 32121, 32152), 0), 0, Tag1 ("Astlib__Ast_413", 420)); (("Pdir_bool", 1034), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -8036)]), 0, (("astlib/ast_413.ml", 1022, 32153, 32157), ("astlib/ast_413.ml", 1022, 32153, 32176), 0), 0, Tag1 ("Astlib__Ast_413", 421))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_413")), "Parsetree"), "directive_argument_desc"), 0, (0)), 100000000, 0, -8030)), 0, 0, 0, 0, (("astlib/ast_413.ml", 1018, 31970, 31972), ("astlib/ast_413.ml", 1022, 32153, 32176), 0), 0, 0, 0, Tag1 ("Astlib__Ast_413", 410)), 2, 0)]), 0, (("astlib/ast_413.ml", 67, 2809, 2809), ("astlib/ast_413.ml", 1023, 32177, 32180), 0), Tag1 ("Astlib__Ast_413", 422)), 0, 0); Tag3 (("Config", 7705), 0, (Tag1 ([(("ast_impl_magic_number", 7791), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8699), 0, (("astlib/ast_413.ml", 1026, 32205, 32211), ("astlib/ast_413.ml", 1026, 32205, 32232), 0), 0, Tag1 ("Astlib__Ast_413", 423)), 0); (("ast_intf_magic_number", 7792), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8698), 0, (("astlib/ast_413.ml", 1027, 32250, 32256), ("astlib/ast_413.ml", 1027, 32250, 32277), 0), 0, Tag1 ("Astlib__Ast_413", 424)), 0)]), 0, (("astlib/ast_413.ml", 1025, 32182, 32182), ("astlib/ast_413.ml", 1028, 32295, 32298), 0), Tag1 ("Astlib__Ast_413", 425)), 0, 0)]), 0, (("astlib/astlib.ml", 36, 1638, 1638), ("astlib/astlib.ml", 36, 1638, 1662), 0), Tag1 ("Astlib", 11)), 0, 0); (("version", 7698), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8002), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7699), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8001), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7700), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -7982), 0), 100000000, 0, -7981), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -7998), 0), 100000000, 0, -7997), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -8000), 0), 100000000, 0, -7999), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -7992), 0), 100000000, 0, -7991), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -7964), 0), 100000000, 0, -7963), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -7978), 0), 100000000, 0, -7977), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -7968), 0), 100000000, 0, -7967), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -7990), 0), 100000000, 0, -7989), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -7976), 0), 100000000, 0, -7975), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -7974), 0), 100000000, 0, -7973), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -7972), 0), 100000000, 0, -7971), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -7970), 0), 100000000, 0, -7969), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -7986), 0), 100000000, 0, -7985), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -7994), 0), 100000000, 0, -7993), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -7988), 0), 100000000, 0, -7987), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -7966), 0), 100000000, 0, -7965), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -7980), 0), 100000000, 0, -7979), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -7996), 0), 100000000, 0, -7995), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7697)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -7984), 0), 100000000, 0, -7983), (0, 100000000, 0, -7962)), 100000000, 0, 1112)), 100000000, 0, 1113)), 100000000, 0, 1114)), 100000000, 0, 1115)), 100000000, 0, 1116)), 100000000, 0, 1117)), 100000000, 0, 1118)), 100000000, 0, 1119)), 100000000, 0, 1120)), 100000000, 0, 1121)), 100000000, 0, 1122)), 100000000, 0, 1123)), 100000000, 0, 1124)), 100000000, 0, 1125)), 100000000, 0, 1126)), 100000000, 0, 1127)), 100000000, 0, 1128)), 100000000, 0, 1129)), 100000000, 0, -7943), (0)), 100000000, 0, -7942)], (0)), 100000000, 0, -7941)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7701), ((("witnesses", 6673)), [((("_")), 100000000, 0, -7940)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7700)), 0, (0)), 100000000, 0, -7939)], (0)), 100000000, 0, -7938)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7702), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7700)), 0, (0)), 100000000, 0, -7937)], (0)), 100000000, 0, -7936), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 156, 5874, 5874), ("ast/versions.mli", 156, 5874, 5939), 0), Tag1 ("Ppxlib_ast__Versions", 45)), 0, 0); Tag3 (("OCaml_414", 6688), 0, (Tag1 ([Tag3 (("Ast", 7793), 0, (Tag1 ([Tag3 (("Asttypes", 7799), 0, (Tag1 ([Tag1 (("constant", 7802), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8784)]), 0, (("astlib/ast_414.ml", 22, 1494, 1500), ("astlib/ast_414.ml", 22, 1494, 1516), 0), 0, Tag1 ("Astlib__Ast_414", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -8785)]), 0, (("astlib/ast_414.ml", 23, 1517, 1521), ("astlib/ast_414.ml", 23, 1517, 1541), 0), 0, Tag1 ("Astlib__Ast_414", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8786); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8787); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8789)], (0)), 100000000, 0, -8788)]), 0, (("astlib/ast_414.ml", 24, 1542, 1546), ("astlib/ast_414.ml", 24, 1542, 1599), 0), 0, Tag1 ("Astlib__Ast_414", 3)); (("Const_float", 333), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8790)]), 0, (("astlib/ast_414.ml", 25, 1600, 1604), ("astlib/ast_414.ml", 25, 1600, 1627), 0), 0, Tag1 ("Astlib__Ast_414", 4)); (("Const_int32", 334), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -8791)]), 0, (("astlib/ast_414.ml", 26, 1628, 1632), ("astlib/ast_414.ml", 26, 1628, 1654), 0), 0, Tag1 ("Astlib__Ast_414", 5)); (("Const_int64", 335), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -8792)]), 0, (("astlib/ast_414.ml", 27, 1655, 1659), ("astlib/ast_414.ml", 27, 1655, 1681), 0), 0, Tag1 ("Astlib__Ast_414", 6)); (("Const_nativeint", 336), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -8793)]), 0, (("astlib/ast_414.ml", 28, 1682, 1686), ("astlib/ast_414.ml", 28, 1682, 1716), 0), 0, Tag1 ("Astlib__Ast_414", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -8783)), 0, 0, 0, 0, (("astlib/ast_414.ml", 21, 1440, 1442), ("astlib/ast_414.ml", 28, 1682, 1716), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 0)), 1, 0); Tag1 (("rec_flag", 7803), (0, 0, Tag1 ([(("Nonrecursive", 543), (0), 0, (("astlib/ast_414.ml", 30, 1718, 1772), ("astlib/ast_414.ml", 30, 1718, 1784), 0), 0, Tag1 ("Astlib__Ast_414", 9)); (("Recursive", 544), (0), 0, (("astlib/ast_414.ml", 30, 1718, 1785), ("astlib/ast_414.ml", 30, 1718, 1796), 0), 0, Tag1 ("Astlib__Ast_414", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -8782)), 0, 0, 0, 0, (("astlib/ast_414.ml", 30, 1718, 1720), ("astlib/ast_414.ml", 30, 1718, 1796), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 8)), 1, 0); Tag1 (("direction_flag", 7804), (0, 0, Tag1 ([(("Upto", 546), (0), 0, (("astlib/ast_414.ml", 32, 1798, 1864), ("astlib/ast_414.ml", 32, 1798, 1868), 0), 0, Tag1 ("Astlib__Ast_414", 12)); (("Downto", 547), (0), 0, (("astlib/ast_414.ml", 32, 1798, 1869), ("astlib/ast_414.ml", 32, 1798, 1877), 0), 0, Tag1 ("Astlib__Ast_414", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -8781)), 0, 0, 0, 0, (("astlib/ast_414.ml", 32, 1798, 1800), ("astlib/ast_414.ml", 32, 1798, 1877), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 11)), 1, 0); Tag1 (("private_flag", 7805), (0, 0, Tag1 ([(("Private", 549), (0), 0, (("astlib/ast_414.ml", 35, 1933, 1995), ("astlib/ast_414.ml", 35, 1933, 2002), 0), 0, Tag1 ("Astlib__Ast_414", 15)); (("Public", 550), (0), 0, (("astlib/ast_414.ml", 35, 1933, 2003), ("astlib/ast_414.ml", 35, 1933, 2011), 0), 0, Tag1 ("Astlib__Ast_414", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -8780)), 0, 0, 0, 0, (("astlib/ast_414.ml", 35, 1933, 1935), ("astlib/ast_414.ml", 35, 1933, 2011), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 14)), 1, 0); Tag1 (("mutable_flag", 7806), (0, 0, Tag1 ([(("Immutable", 552), (0), 0, (("astlib/ast_414.ml", 37, 2013, 2075), ("astlib/ast_414.ml", 37, 2013, 2084), 0), 0, Tag1 ("Astlib__Ast_414", 18)); (("Mutable", 553), (0), 0, (("astlib/ast_414.ml", 37, 2013, 2085), ("astlib/ast_414.ml", 37, 2013, 2094), 0), 0, Tag1 ("Astlib__Ast_414", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -8779)), 0, 0, 0, 0, (("astlib/ast_414.ml", 37, 2013, 2015), ("astlib/ast_414.ml", 37, 2013, 2094), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 17)), 1, 0); Tag1 (("virtual_flag", 7807), (0, 0, Tag1 ([(("Virtual", 555), (0), 0, (("astlib/ast_414.ml", 39, 2096, 2158), ("astlib/ast_414.ml", 39, 2096, 2165), 0), 0, Tag1 ("Astlib__Ast_414", 21)); (("Concrete", 556), (0), 0, (("astlib/ast_414.ml", 39, 2096, 2166), ("astlib/ast_414.ml", 39, 2096, 2176), 0), 0, Tag1 ("Astlib__Ast_414", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -8778)), 0, 0, 0, 0, (("astlib/ast_414.ml", 39, 2096, 2098), ("astlib/ast_414.ml", 39, 2096, 2176), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 20)), 1, 0); Tag1 (("override_flag", 7808), (0, 0, Tag1 ([(("Override", 558), (0), 0, (("astlib/ast_414.ml", 41, 2178, 2242), ("astlib/ast_414.ml", 41, 2178, 2250), 0), 0, Tag1 ("Astlib__Ast_414", 24)); (("Fresh", 559), (0), 0, (("astlib/ast_414.ml", 41, 2178, 2251), ("astlib/ast_414.ml", 41, 2178, 2258), 0), 0, Tag1 ("Astlib__Ast_414", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -8777)), 0, 0, 0, 0, (("astlib/ast_414.ml", 41, 2178, 2180), ("astlib/ast_414.ml", 41, 2178, 2258), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 23)), 1, 0); Tag1 (("closed_flag", 7809), (0, 0, Tag1 ([(("Closed", 561), (0), 0, (("astlib/ast_414.ml", 43, 2260, 2320), ("astlib/ast_414.ml", 43, 2260, 2326), 0), 0, Tag1 ("Astlib__Ast_414", 27)); (("Open", 562), (0), 0, (("astlib/ast_414.ml", 43, 2260, 2327), ("astlib/ast_414.ml", 43, 2260, 2333), 0), 0, Tag1 ("Astlib__Ast_414", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -8776)), 0, 0, 0, 0, (("astlib/ast_414.ml", 43, 2260, 2262), ("astlib/ast_414.ml", 43, 2260, 2333), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 26)), 1, 0); Tag1 (("label", 7810), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8775)), 0, 0, 0, 0, (("astlib/ast_414.ml", 45, 2335, 2337), ("astlib/ast_414.ml", 45, 2335, 2356), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 29)), 1, 0); Tag1 (("arg_label", 7811), (0, 0, Tag1 ([(("Nolabel", 565), (0), 0, (("astlib/ast_414.ml", 48, 2414, 2420), ("astlib/ast_414.ml", 48, 2414, 2427), 0), 0, Tag1 ("Astlib__Ast_414", 31)); (("Labelled", 566), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8773)]), 0, (("astlib/ast_414.ml", 49, 2428, 2432), ("astlib/ast_414.ml", 49, 2428, 2452), 0), 0, Tag1 ("Astlib__Ast_414", 32)); (("Optional", 567), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8774)]), 0, (("astlib/ast_414.ml", 50, 2477, 2481), ("astlib/ast_414.ml", 50, 2477, 2501), 0), 0, Tag1 ("Astlib__Ast_414", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -8772)), 0, 0, 0, 0, (("astlib/ast_414.ml", 47, 2358, 2360), ("astlib/ast_414.ml", 50, 2477, 2501), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 30)), 1, 0); Tag1 (("loc", 7812), ([((("a")), 100000000, 0, -8770)], 1, [[(("txt", 569), 0, ((("a")), 100000000, 0, -8770), (("astlib/ast_414.ml", 53, 2564, 2568), ("astlib/ast_414.ml", 53, 2564, 2577), 0), 0, Tag1 ("Astlib__Ast_414", 35)); (("loc", 570), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8771), (("astlib/ast_414.ml", 54, 2578, 2582), ("astlib/ast_414.ml", 54, 2578, 2599), 0), 0, Tag1 ("Astlib__Ast_414", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -8770)], (0)), 100000000, 0, -8769)), [25], [0], 0, 0, (("astlib/ast_414.ml", 52, 2528, 2530), ("astlib/ast_414.ml", 55, 2600, 2603), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 34)), 1, 0); Tag1 (("variance", 7813), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_414.ml", 58, 2659, 2663), ("astlib/ast_414.ml", 58, 2659, 2674), 0), 0, Tag1 ("Astlib__Ast_414", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_414.ml", 59, 2675, 2679), ("astlib/ast_414.ml", 59, 2675, 2694), 0), 0, Tag1 ("Astlib__Ast_414", 39)); (("NoVariance", 640), (0), 0, (("astlib/ast_414.ml", 60, 2695, 2699), ("astlib/ast_414.ml", 60, 2695, 2711), 0), 0, Tag1 ("Astlib__Ast_414", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -8768)), 0, 0, 0, 0, (("astlib/ast_414.ml", 57, 2605, 2607), ("astlib/ast_414.ml", 60, 2695, 2711), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 37)), 1, 0); Tag1 (("injectivity", 7814), (0, 0, Tag1 ([(("Injective", 642), (0), 0, (("astlib/ast_414.ml", 63, 2773, 2777), ("astlib/ast_414.ml", 63, 2773, 2788), 0), 0, Tag1 ("Astlib__Ast_414", 42)); (("NoInjectivity", 643), (0), 0, (("astlib/ast_414.ml", 64, 2789, 2793), ("astlib/ast_414.ml", 64, 2789, 2808), 0), 0, Tag1 ("Astlib__Ast_414", 43))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "injectivity"), 0, (0)), 100000000, 0, -8767)), 0, 0, 0, 0, (("astlib/ast_414.ml", 62, 2713, 2715), ("astlib/ast_414.ml", 64, 2789, 2808), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 41)), 1, 0)]), 0, (("astlib/ast_414.ml", 20, 1415, 1415), ("astlib/ast_414.ml", 65, 2809, 2812), 0), Tag1 ("Astlib__Ast_414", 44)), 0, 0); Tag3 (("Parsetree", 7800), 0, (Tag1 ([Tag1 (("constant", 7815), (0, 0, Tag1 ([(("Pconst_integer", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9457); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -9459)], (0)), 100000000, 0, -9458)]), 0, (("astlib/ast_414.ml", 71, 2912, 2916), ("astlib/ast_414.ml", 71, 2912, 2956), 0), 0, Tag1 ("Astlib__Ast_414", 46)); (("Pconst_char", 647), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -9460)]), 0, (("astlib/ast_414.ml", 77, 3168, 3172), ("astlib/ast_414.ml", 77, 3168, 3193), 0), 0, Tag1 ("Astlib__Ast_414", 47)); (("Pconst_string", 648), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9461); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9462); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9464)], (0)), 100000000, 0, -9463)]), 0, (("astlib/ast_414.ml", 78, 3227, 3231), ("astlib/ast_414.ml", 78, 3227, 3285), 0), 0, Tag1 ("Astlib__Ast_414", 48)); (("Pconst_float", 649), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9465); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -9467)], (0)), 100000000, 0, -9466)]), 0, (("astlib/ast_414.ml", 84, 3471, 3475), ("astlib/ast_414.ml", 84, 3471, 3513), 0), 0, Tag1 ("Astlib__Ast_414", 49))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -9456)), 0, 0, 0, 0, (("astlib/ast_414.ml", 70, 2857, 2859), ("astlib/ast_414.ml", 84, 3471, 3513), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 45)), 1, 0); Tag1 (("location_stack", 7816), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9455)], (0)), 100000000, 0, -9454)), 0, 0, 0, 0, (("astlib/ast_414.ml", 91, 3698, 3700), ("astlib/ast_414.ml", 91, 3698, 3737), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 50)), 1, 0); Tag1 (("attribute", 7817), (0, 0, [[(("attr_name", 717), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9451)], (0)), 100000000, 0, -9450), (("astlib/ast_414.ml", 96, 3829, 3833), ("astlib/ast_414.ml", 96, 3829, 3856), 0), 0, Tag1 ("Astlib__Ast_414", 117)); (("attr_payload", 718), 0, (Tag3 ((("payload", 7820)), 0, (0)), 100000000, 0, -9452), (("astlib/ast_414.ml", 97, 3857, 3861), ("astlib/ast_414.ml", 97, 3857, 3884), 0), 0, Tag1 ("Astlib__Ast_414", 118)); (("attr_loc", 719), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9453), (("astlib/ast_414.ml", 98, 3885, 3889), ("astlib/ast_414.ml", 98, 3885, 3911), 0), 0, Tag1 ("Astlib__Ast_414", 119))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "attribute"), 0, (0)), 100000000, 0, -9449)), 0, 0, 0, 0, (("astlib/ast_414.ml", 95, 3770, 3772), ("astlib/ast_414.ml", 99, 3912, 3915), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 51)), 1, 0); Tag1 (("extension", 7818), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9447)], (0)), 100000000, 0, -9446); (Tag3 ((("payload", 7820)), 0, (0)), 100000000, 0, -9448)]), 100000000, 0, -9445)), 0, 0, 0, 0, (("astlib/ast_414.ml", 106, 4082, 4084), ("astlib/ast_414.ml", 106, 4082, 4120), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 52)), 2, 0); Tag1 (("attributes", 7819), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 7817)), 0, (0)), 100000000, 0, -9444)], (0)), 100000000, 0, -9443)), 0, 0, 0, 0, (("astlib/ast_414.ml", 112, 4249, 4251), ("astlib/ast_414.ml", 112, 4249, 4282), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 53)), 2, 0); Tag1 (("payload", 7820), (0, 0, Tag1 ([(("PStr", 720), ([(Tag3 ((("structure", 7878)), 0, (0)), 100000000, 0, -9437)]), 0, (("astlib/ast_414.ml", 115, 4336, 4340), ("astlib/ast_414.ml", 115, 4336, 4359), 0), 0, Tag1 ("Astlib__Ast_414", 120)); (("PSig", 721), ([(Tag3 ((("signature", 7863)), 0, (0)), 100000000, 0, -9438)]), 0, (("astlib/ast_414.ml", 116, 4360, 4364), ("astlib/ast_414.ml", 116, 4360, 4383), 0), 0, Tag1 ("Astlib__Ast_414", 121)); (("PTyp", 722), ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9439)]), 0, (("astlib/ast_414.ml", 117, 4438, 4442), ("astlib/ast_414.ml", 117, 4438, 4461), 0), 0, Tag1 ("Astlib__Ast_414", 122)); (("PPat", 723), ([(Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9440); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9442)], (0)), 100000000, 0, -9441)]), 0, (("astlib/ast_414.ml", 118, 4514, 4518), ("astlib/ast_414.ml", 118, 4514, 4555), 0), 0, Tag1 ("Astlib__Ast_414", 123))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -9436)), 0, 0, 0, 0, (("astlib/ast_414.ml", 114, 4284, 4286), ("astlib/ast_414.ml", 118, 4514, 4555), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 54)), 2, 0); Tag1 (("core_type", 7821), (0, 0, [[(("ptyp_desc", 724), 0, (Tag3 ((("core_type_desc", 7822)), 0, (0)), 100000000, 0, -9432), (("astlib/ast_414.ml", 126, 4755, 4761), ("astlib/ast_414.ml", 126, 4755, 4787), 0), 0, Tag1 ("Astlib__Ast_414", 124)); (("ptyp_loc", 725), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9433), (("astlib/ast_414.ml", 127, 4788, 4794), ("astlib/ast_414.ml", 127, 4788, 4815), 0), 0, Tag1 ("Astlib__Ast_414", 125)); (("ptyp_loc_stack", 726), 0, (Tag3 ((("location_stack", 7816)), 0, (0)), 100000000, 0, -9434), (("astlib/ast_414.ml", 128, 4816, 4822), ("astlib/ast_414.ml", 128, 4816, 4853), 0), 0, Tag1 ("Astlib__Ast_414", 126)); (("ptyp_attributes", 727), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9435), (("astlib/ast_414.ml", 129, 4854, 4860), ("astlib/ast_414.ml", 129, 4854, 4888), 0), 0, Tag1 ("Astlib__Ast_414", 127))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -9431)), 0, 0, 0, 0, (("astlib/ast_414.ml", 124, 4693, 4695), ("astlib/ast_414.ml", 130, 4919, 4924), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 55)), 2, 0); Tag1 (("core_type_desc", 7822), (0, 0, Tag1 ([(("Ptyp_any", 728), (0), 0, (("astlib/ast_414.ml", 133, 4992, 4996), ("astlib/ast_414.ml", 133, 4992, 5006), 0), 0, Tag1 ("Astlib__Ast_414", 128)); (("Ptyp_var", 729), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9400)]), 0, (("astlib/ast_414.ml", 134, 5019, 5023), ("astlib/ast_414.ml", 134, 5019, 5043), 0), 0, Tag1 ("Astlib__Ast_414", 129)); (("Ptyp_arrow", 730), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "arg_label"), 0, (0)), 100000000, 0, -9401); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9402); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9403)]), 0, (("astlib/ast_414.ml", 135, 5081, 5085), ("astlib/ast_414.ml", 135, 5081, 5134), 0), 0, Tag1 ("Astlib__Ast_414", 130)); (("Ptyp_tuple", 731), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9405)], (0)), 100000000, 0, -9404)]), 0, (("astlib/ast_414.ml", 144, 5578, 5582), ("astlib/ast_414.ml", 144, 5578, 5612), 0), 0, Tag1 ("Astlib__Ast_414", 131)); (("Ptyp_constr", 732), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9407)], (0)), 100000000, 0, -9406); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9409)], (0)), 100000000, 0, -9408)]), 0, (("astlib/ast_414.ml", 150, 5758, 5762), ("astlib/ast_414.ml", 150, 5758, 5811), 0), 0, Tag1 ("Astlib__Ast_414", 132)); (("Ptyp_object", 736), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 7826)), 0, (0)), 100000000, 0, -9411)], (0)), 100000000, 0, -9410); (Tag3 (Tag1 ((("Asttypes", 7799)), "closed_flag"), 0, (0)), 100000000, 0, -9412)]), 0, (("astlib/ast_414.ml", 156, 6048, 6052), ("astlib/ast_414.ml", 156, 6048, 6100), 0), 0, Tag1 ("Astlib__Ast_414", 133)); (("Ptyp_class", 737), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9414)], (0)), 100000000, 0, -9413); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9416)], (0)), 100000000, 0, -9415)]), 0, (("astlib/ast_414.ml", 163, 6466, 6470), ("astlib/ast_414.ml", 163, 6466, 6518), 0), 0, Tag1 ("Astlib__Ast_414", 134)); (("Ptyp_alias", 738), ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9417); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9418)]), 0, (("astlib/ast_414.ml", 169, 6758, 6762), ("astlib/ast_414.ml", 169, 6758, 6796), 0), 0, Tag1 ("Astlib__Ast_414", 135)); (("Ptyp_variant", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 7824)), 0, (0)), 100000000, 0, -9420)], (0)), 100000000, 0, -9419); (Tag3 (Tag1 ((("Asttypes", 7799)), "closed_flag"), 0, (0)), 100000000, 0, -9421); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9424)], (0)), 100000000, 0, -9423)], (0)), 100000000, 0, -9422)]), 0, (("astlib/ast_414.ml", 170, 6816, 6820), ("astlib/ast_414.ml", 170, 6816, 6886), 0), 0, Tag1 ("Astlib__Ast_414", 136)); (("Ptyp_poly", 740), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9427)], (0)), 100000000, 0, -9426)], (0)), 100000000, 0, -9425); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9428)]), 0, (("astlib/ast_414.ml", 185, 7623, 7627), ("astlib/ast_414.ml", 185, 7623, 7669), 0), 0, Tag1 ("Astlib__Ast_414", 137)); (("Ptyp_package", 741), ([(Tag3 ((("package_type", 7823)), 0, (0)), 100000000, 0, -9429)]), 0, (("astlib/ast_414.ml", 213, 8634, 8638), ("astlib/ast_414.ml", 213, 8634, 8668), 0), 0, Tag1 ("Astlib__Ast_414", 138)); (("Ptyp_extension", 742), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -9430)]), 0, (("astlib/ast_414.ml", 214, 8691, 8695), ("astlib/ast_414.ml", 214, 8691, 8724), 0), 0, Tag1 ("Astlib__Ast_414", 139))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -9399)), 0, 0, 0, 0, (("astlib/ast_414.ml", 132, 4926, 4928), ("astlib/ast_414.ml", 214, 8691, 8724), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 56)), 2, 0); Tag1 (("package_type", 7823), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9393)], (0)), 100000000, 0, -9392); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9397)], (0)), 100000000, 0, -9396); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9398)]), 100000000, 0, -9395)], (0)), 100000000, 0, -9394)]), 100000000, 0, -9391)), 0, 0, 0, 0, (("astlib/ast_414.ml", 216, 8743, 8745), ("astlib/ast_414.ml", 216, 8743, 8816), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 57)), 2, 0); Tag1 (("row_field", 7824), (0, 0, [[(("prf_desc", 743), 0, (Tag3 ((("row_field_desc", 7825)), 0, (0)), 100000000, 0, -9388), (("astlib/ast_414.ml", 224, 9098, 9102), ("astlib/ast_414.ml", 224, 9098, 9128), 0), 0, Tag1 ("Astlib__Ast_414", 140)); (("prf_loc", 744), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9389), (("astlib/ast_414.ml", 225, 9129, 9133), ("astlib/ast_414.ml", 225, 9129, 9154), 0), 0, Tag1 ("Astlib__Ast_414", 141)); (("prf_attributes", 745), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9390), (("astlib/ast_414.ml", 226, 9155, 9159), ("astlib/ast_414.ml", 226, 9155, 9187), 0), 0, Tag1 ("Astlib__Ast_414", 142))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -9387)), 0, 0, 0, 0, (("astlib/ast_414.ml", 223, 9040, 9042), ("astlib/ast_414.ml", 227, 9188, 9191), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 58)), 2, 0); Tag1 (("row_field_desc", 7825), (0, 0, Tag1 ([(("Rtag", 746), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9382)], (0)), 100000000, 0, -9381); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -9383); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9385)], (0)), 100000000, 0, -9384)]), 0, (("astlib/ast_414.ml", 230, 9259, 9263), ("astlib/ast_414.ml", 230, 9259, 9306), 0), 0, Tag1 ("Astlib__Ast_414", 143)); (("Rinherit", 747), ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9386)]), 0, (("astlib/ast_414.ml", 242, 9900, 9904), ("astlib/ast_414.ml", 242, 9900, 9927), 0), 0, Tag1 ("Astlib__Ast_414", 144))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "row_field_desc"), 0, (0)), 100000000, 0, -9380)), 0, 0, 0, 0, (("astlib/ast_414.ml", 229, 9193, 9195), ("astlib/ast_414.ml", 242, 9900, 9927), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 59)), 2, 0); Tag1 (("object_field", 7826), (0, 0, [[(("pof_desc", 748), 0, (Tag3 ((("object_field_desc", 7827)), 0, (0)), 100000000, 0, -9377), (("astlib/ast_414.ml", 245, 10011, 10015), ("astlib/ast_414.ml", 245, 10011, 10044), 0), 0, Tag1 ("Astlib__Ast_414", 145)); (("pof_loc", 749), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9378), (("astlib/ast_414.ml", 246, 10045, 10049), ("astlib/ast_414.ml", 246, 10045, 10070), 0), 0, Tag1 ("Astlib__Ast_414", 146)); (("pof_attributes", 750), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9379), (("astlib/ast_414.ml", 247, 10071, 10075), ("astlib/ast_414.ml", 247, 10071, 10103), 0), 0, Tag1 ("Astlib__Ast_414", 147))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "object_field"), 0, (0)), 100000000, 0, -9376)), 0, 0, 0, 0, (("astlib/ast_414.ml", 244, 9947, 9949), ("astlib/ast_414.ml", 248, 10104, 10107), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 60)), 2, 0); Tag1 (("object_field_desc", 7827), (0, 0, Tag1 ([(("Otag", 751), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9373)], (0)), 100000000, 0, -9372); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9374)]), 0, (("astlib/ast_414.ml", 251, 10181, 10185), ("astlib/ast_414.ml", 251, 10181, 10216), 0), 0, Tag1 ("Astlib__Ast_414", 148)); (("Oinherit", 752), ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9375)]), 0, (("astlib/ast_414.ml", 252, 10217, 10221), ("astlib/ast_414.ml", 252, 10217, 10244), 0), 0, Tag1 ("Astlib__Ast_414", 149))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "object_field_desc"), 0, (0)), 100000000, 0, -9371)), 0, 0, 0, 0, (("astlib/ast_414.ml", 250, 10109, 10111), ("astlib/ast_414.ml", 252, 10217, 10244), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 61)), 2, 0); Tag1 (("pattern", 7828), (0, 0, [[(("ppat_desc", 753), 0, (Tag3 ((("pattern_desc", 7829)), 0, (0)), 100000000, 0, -9367), (("astlib/ast_414.ml", 258, 10327, 10333), ("astlib/ast_414.ml", 258, 10327, 10357), 0), 0, Tag1 ("Astlib__Ast_414", 150)); (("ppat_loc", 754), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9368), (("astlib/ast_414.ml", 259, 10358, 10364), ("astlib/ast_414.ml", 259, 10358, 10385), 0), 0, Tag1 ("Astlib__Ast_414", 151)); (("ppat_loc_stack", 755), 0, (Tag3 ((("location_stack", 7816)), 0, (0)), 100000000, 0, -9369), (("astlib/ast_414.ml", 260, 10386, 10392), ("astlib/ast_414.ml", 260, 10386, 10423), 0), 0, Tag1 ("Astlib__Ast_414", 152)); (("ppat_attributes", 756), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9370), (("astlib/ast_414.ml", 261, 10424, 10430), ("astlib/ast_414.ml", 261, 10424, 10458), 0), 0, Tag1 ("Astlib__Ast_414", 153))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -9366)), 0, 0, 0, 0, (("astlib/ast_414.ml", 256, 10269, 10271), ("astlib/ast_414.ml", 262, 10489, 10494), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 62)), 2, 0); Tag1 (("pattern_desc", 7829), (0, 0, Tag1 ([(("Ppat_any", 757), (0), 0, (("astlib/ast_414.ml", 265, 10558, 10562), ("astlib/ast_414.ml", 265, 10558, 10572), 0), 0, Tag1 ("Astlib__Ast_414", 154)); (("Ppat_var", 758), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9323)], (0)), 100000000, 0, -9322)]), 0, (("astlib/ast_414.ml", 266, 10598, 10602), ("astlib/ast_414.ml", 266, 10598, 10626), 0), 0, Tag1 ("Astlib__Ast_414", 155)); (("Ppat_alias", 759), ([(Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9324); (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9326)], (0)), 100000000, 0, -9325)]), 0, (("astlib/ast_414.ml", 267, 10666, 10670), ("astlib/ast_414.ml", 267, 10666, 10706), 0), 0, Tag1 ("Astlib__Ast_414", 156)); (("Ppat_constant", 760), ([(Tag3 ((("constant", 7815)), 0, (0)), 100000000, 0, -9327)]), 0, (("astlib/ast_414.ml", 269, 10757, 10761), ("astlib/ast_414.ml", 269, 10757, 10788), 0), 0, Tag1 ("Astlib__Ast_414", 157)); (("Ppat_interval", 761), ([(Tag3 ((("constant", 7815)), 0, (0)), 100000000, 0, -9328); (Tag3 ((("constant", 7815)), 0, (0)), 100000000, 0, -9329)]), 0, (("astlib/ast_414.ml", 271, 10867, 10871), ("astlib/ast_414.ml", 271, 10867, 10909), 0), 0, Tag1 ("Astlib__Ast_414", 158)); (("Ppat_tuple", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9331)], (0)), 100000000, 0, -9330)]), 0, (("astlib/ast_414.ml", 276, 11068, 11072), ("astlib/ast_414.ml", 276, 11068, 11100), 0), 0, Tag1 ("Astlib__Ast_414", 159)); (("Ppat_construct", 763), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9333)], (0)), 100000000, 0, -9332); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9338)], (0)), 100000000, 0, -9337)], (0)), 100000000, 0, -9336); (Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9339)]), 100000000, 0, -9335)], (0)), 100000000, 0, -9334)]), 0, (("astlib/ast_414.ml", 281, 11186, 11190), ("astlib/ast_414.ml", 281, 11186, 11262), 0), 0, Tag1 ("Astlib__Ast_414", 160)); (("Ppat_variant", 764), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9340); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9342)], (0)), 100000000, 0, -9341)]), 0, (("astlib/ast_414.ml", 289, 11648, 11652), ("astlib/ast_414.ml", 289, 11648, 11692), 0), 0, Tag1 ("Astlib__Ast_414", 161)); (("Ppat_record", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9346)], (0)), 100000000, 0, -9345); (Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9347)]), 100000000, 0, -9344)], (0)), 100000000, 0, -9343); (Tag3 (Tag1 ((("Asttypes", 7799)), "closed_flag"), 0, (0)), 100000000, 0, -9348)]), 0, (("astlib/ast_414.ml", 294, 11846, 11850), ("astlib/ast_414.ml", 294, 11846, 11913), 0), 0, Tag1 ("Astlib__Ast_414", 162)); (("Ppat_array", 766), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9350)], (0)), 100000000, 0, -9349)]), 0, (("astlib/ast_414.ml", 303, 12260, 12264), ("astlib/ast_414.ml", 303, 12260, 12292), 0), 0, Tag1 ("Astlib__Ast_414", 163)); (("Ppat_or", 767), ([(Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9351); (Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9352)]), 0, (("astlib/ast_414.ml", 304, 12329, 12333), ("astlib/ast_414.ml", 304, 12329, 12363), 0), 0, Tag1 ("Astlib__Ast_414", 164)); (("Ppat_constraint", 768), ([(Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9353); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9354)]), 0, (("astlib/ast_414.ml", 305, 12390, 12394), ("astlib/ast_414.ml", 305, 12390, 12434), 0), 0, Tag1 ("Astlib__Ast_414", 165)); (("Ppat_type", 769), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9356)], (0)), 100000000, 0, -9355)]), 0, (("astlib/ast_414.ml", 306, 12461, 12465), ("astlib/ast_414.ml", 306, 12461, 12495), 0), 0, Tag1 ("Astlib__Ast_414", 166)); (("Ppat_lazy", 770), ([(Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9357)]), 0, (("astlib/ast_414.ml", 307, 12522, 12526), ("astlib/ast_414.ml", 307, 12522, 12548), 0), 0, Tag1 ("Astlib__Ast_414", 167)); (("Ppat_unpack", 771), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9360)], (0)), 100000000, 0, -9359)], (0)), 100000000, 0, -9358)]), 0, (("astlib/ast_414.ml", 308, 12574, 12578), ("astlib/ast_414.ml", 308, 12574, 12612), 0), 0, Tag1 ("Astlib__Ast_414", 168)); (("Ppat_exception", 772), ([(Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9361)]), 0, (("astlib/ast_414.ml", 316, 12893, 12897), ("astlib/ast_414.ml", 316, 12893, 12924), 0), 0, Tag1 ("Astlib__Ast_414", 169)); (("Ppat_extension", 773), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -9362)]), 0, (("astlib/ast_414.ml", 317, 12955, 12959), ("astlib/ast_414.ml", 317, 12955, 12988), 0), 0, Tag1 ("Astlib__Ast_414", 170)); (("Ppat_open", 774), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9364)], (0)), 100000000, 0, -9363); (Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9365)]), 0, (("astlib/ast_414.ml", 318, 13013, 13017), ("astlib/ast_414.ml", 318, 13013, 13057), 0), 0, Tag1 ("Astlib__Ast_414", 171))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -9321)), 0, 0, 0, 0, (("astlib/ast_414.ml", 264, 10496, 10498), ("astlib/ast_414.ml", 318, 13013, 13057), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 63)), 2, 0); Tag1 (("expression", 7830), (0, 0, [[(("pexp_desc", 775), 0, (Tag3 ((("expression_desc", 7831)), 0, (0)), 100000000, 0, -9317), (("astlib/ast_414.ml", 324, 13181, 13188), ("astlib/ast_414.ml", 324, 13181, 13215), 0), 0, Tag1 ("Astlib__Ast_414", 172)); (("pexp_loc", 776), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9318), (("astlib/ast_414.ml", 325, 13216, 13223), ("astlib/ast_414.ml", 325, 13216, 13244), 0), 0, Tag1 ("Astlib__Ast_414", 173)); (("pexp_loc_stack", 777), 0, (Tag3 ((("location_stack", 7816)), 0, (0)), 100000000, 0, -9319), (("astlib/ast_414.ml", 326, 13245, 13252), ("astlib/ast_414.ml", 326, 13245, 13283), 0), 0, Tag1 ("Astlib__Ast_414", 174)); (("pexp_attributes", 778), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9320), (("astlib/ast_414.ml", 327, 13284, 13291), ("astlib/ast_414.ml", 327, 13284, 13319), 0), 0, Tag1 ("Astlib__Ast_414", 175))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -9316)), 0, 0, 0, 0, (("astlib/ast_414.ml", 322, 13115, 13117), ("astlib/ast_414.ml", 328, 13350, 13357), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 64)), 2, 0); Tag1 (("expression_desc", 7831), (0, 0, Tag1 ([(("Pexp_ident", 779), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9214)], (0)), 100000000, 0, -9213)]), 0, (("astlib/ast_414.ml", 331, 13427, 13431), ("astlib/ast_414.ml", 331, 13427, 13462), 0), 0, Tag1 ("Astlib__Ast_414", 176)); (("Pexp_constant", 780), ([(Tag3 ((("constant", 7815)), 0, (0)), 100000000, 0, -9215)]), 0, (("astlib/ast_414.ml", 334, 13523, 13527), ("astlib/ast_414.ml", 334, 13523, 13554), 0), 0, Tag1 ("Astlib__Ast_414", 177)); (("Pexp_let", 781), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "rec_flag"), 0, (0)), 100000000, 0, -9216); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7881)), 0, (0)), 100000000, 0, -9218)], (0)), 100000000, 0, -9217); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9219)]), 0, (("astlib/ast_414.ml", 337, 13659, 13663), ("astlib/ast_414.ml", 337, 13659, 13719), 0), 0, Tag1 ("Astlib__Ast_414", 178)); (("Pexp_function", 782), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7832)), 0, (0)), 100000000, 0, -9221)], (0)), 100000000, 0, -9220)]), 0, (("astlib/ast_414.ml", 344, 14079, 14083), ("astlib/ast_414.ml", 344, 14079, 14111), 0), 0, Tag1 ("Astlib__Ast_414", 179)); (("Pexp_fun", 783), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "arg_label"), 0, (0)), 100000000, 0, -9222); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9224)], (0)), 100000000, 0, -9223); (Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9225); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9226)]), 0, (("astlib/ast_414.ml", 345, 14157, 14161), ("astlib/ast_414.ml", 345, 14157, 14227), 0), 0, Tag1 ("Astlib__Ast_414", 180)); (("Pexp_apply", 784), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9227); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "arg_label"), 0, (0)), 100000000, 0, -9230); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9231)]), 100000000, 0, -9229)], (0)), 100000000, 0, -9228)]), 0, (("astlib/ast_414.ml", 368, 15304, 15308), ("astlib/ast_414.ml", 368, 15304, 15366), 0), 0, Tag1 ("Astlib__Ast_414", 181)); (("Pexp_match", 785), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9232); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7832)), 0, (0)), 100000000, 0, -9234)], (0)), 100000000, 0, -9233)]), 0, (("astlib/ast_414.ml", 379, 15793, 15797), ("astlib/ast_414.ml", 379, 15793, 15835), 0), 0, Tag1 ("Astlib__Ast_414", 182)); (("Pexp_try", 786), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9235); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7832)), 0, (0)), 100000000, 0, -9237)], (0)), 100000000, 0, -9236)]), 0, (("astlib/ast_414.ml", 381, 15893, 15897), ("astlib/ast_414.ml", 381, 15893, 15933), 0), 0, Tag1 ("Astlib__Ast_414", 183)); (("Pexp_tuple", 787), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9239)], (0)), 100000000, 0, -9238)]), 0, (("astlib/ast_414.ml", 383, 15989, 15993), ("astlib/ast_414.ml", 383, 15989, 16024), 0), 0, Tag1 ("Astlib__Ast_414", 184)); (("Pexp_construct", 788), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9241)], (0)), 100000000, 0, -9240); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9243)], (0)), 100000000, 0, -9242)]), 0, (("astlib/ast_414.ml", 388, 16112, 16116), ("astlib/ast_414.ml", 388, 16112, 16171), 0), 0, Tag1 ("Astlib__Ast_414", 185)); (("Pexp_variant", 789), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9244); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9246)], (0)), 100000000, 0, -9245)]), 0, (("astlib/ast_414.ml", 394, 16424, 16428), ("astlib/ast_414.ml", 394, 16424, 16471), 0), 0, Tag1 ("Astlib__Ast_414", 186)); (("Pexp_record", 790), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9250)], (0)), 100000000, 0, -9249); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9251)]), 100000000, 0, -9248)], (0)), 100000000, 0, -9247); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9253)], (0)), 100000000, 0, -9252)]), 0, (("astlib/ast_414.ml", 399, 16623, 16627), ("astlib/ast_414.ml", 399, 16623, 16699), 0), 0, Tag1 ("Astlib__Ast_414", 187)); (("Pexp_field", 791), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9254); (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9256)], (0)), 100000000, 0, -9255)]), 0, (("astlib/ast_414.ml", 406, 16960, 16964), ("astlib/ast_414.ml", 406, 16960, 17008), 0), 0, Tag1 ("Astlib__Ast_414", 188)); (("Pexp_setfield", 792), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9257); (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9259)], (0)), 100000000, 0, -9258); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9260)]), 0, (("astlib/ast_414.ml", 407, 17023, 17027), ("astlib/ast_414.ml", 407, 17023, 17087), 0), 0, Tag1 ("Astlib__Ast_414", 189)); (("Pexp_array", 793), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9262)], (0)), 100000000, 0, -9261)]), 0, (("astlib/ast_414.ml", 409, 17116, 17120), ("astlib/ast_414.ml", 409, 17116, 17151), 0), 0, Tag1 ("Astlib__Ast_414", 190)); (("Pexp_ifthenelse", 794), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9263); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9264); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9266)], (0)), 100000000, 0, -9265)]), 0, (("astlib/ast_414.ml", 410, 17180, 17184), ("astlib/ast_414.ml", 410, 17180, 17248), 0), 0, Tag1 ("Astlib__Ast_414", 191)); (("Pexp_sequence", 795), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9267); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9268)]), 0, (("astlib/ast_414.ml", 412, 17288, 17292), ("astlib/ast_414.ml", 412, 17288, 17334), 0), 0, Tag1 ("Astlib__Ast_414", 192)); (("Pexp_while", 796), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9269); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9270)]), 0, (("astlib/ast_414.ml", 413, 17352, 17356), ("astlib/ast_414.ml", 413, 17352, 17395), 0), 0, Tag1 ("Astlib__Ast_414", 193)); (("Pexp_for", 797), ([(Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9271); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9272); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9273); (Tag3 (Tag1 ((("Asttypes", 7799)), "direction_flag"), 0, (0)), 100000000, 0, -9274); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9275)]), 0, (("astlib/ast_414.ml", 414, 17426, 17430), ("astlib/ast_414.ml", 414, 17426, 17507), 0), 0, Tag1 ("Astlib__Ast_414", 194)); (("Pexp_constraint", 798), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9276); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9277)]), 0, (("astlib/ast_414.ml", 421, 17841, 17845), ("astlib/ast_414.ml", 421, 17841, 17888), 0), 0, Tag1 ("Astlib__Ast_414", 195)); (("Pexp_coerce", 799), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9278); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9280)], (0)), 100000000, 0, -9279); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9281)]), 0, (("astlib/ast_414.ml", 422, 17907, 17911), ("astlib/ast_414.ml", 422, 17907, 17969), 0), 0, Tag1 ("Astlib__Ast_414", 196)); (("Pexp_send", 800), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9282); (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9284)], (0)), 100000000, 0, -9283)]), 0, (("astlib/ast_414.ml", 427, 18146, 18150), ("astlib/ast_414.ml", 427, 18146, 18187), 0), 0, Tag1 ("Astlib__Ast_414", 197)); (("Pexp_new", 801), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9286)], (0)), 100000000, 0, -9285)]), 0, (("astlib/ast_414.ml", 428, 18204, 18208), ("astlib/ast_414.ml", 428, 18204, 18237), 0), 0, Tag1 ("Astlib__Ast_414", 198)); (("Pexp_setinstvar", 802), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9288)], (0)), 100000000, 0, -9287); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9289)]), 0, (("astlib/ast_414.ml", 429, 18256, 18260), ("astlib/ast_414.ml", 429, 18256, 18303), 0), 0, Tag1 ("Astlib__Ast_414", 199)); (("Pexp_override", 803), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9293)], (0)), 100000000, 0, -9292); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9294)]), 100000000, 0, -9291)], (0)), 100000000, 0, -9290)]), 0, (("astlib/ast_414.ml", 430, 18321, 18325), ("astlib/ast_414.ml", 430, 18321, 18373), 0), 0, Tag1 ("Astlib__Ast_414", 200)); (("Pexp_letmodule", 804), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9297)], (0)), 100000000, 0, -9296)], (0)), 100000000, 0, -9295); (Tag3 ((("module_expr", 7876)), 0, (0)), 100000000, 0, -9298); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9299)]), 0, (("astlib/ast_414.ml", 432, 18419, 18423), ("astlib/ast_414.ml", 432, 18419, 18487), 0), 0, Tag1 ("Astlib__Ast_414", 201)); (("Pexp_letexception", 805), ([(Tag3 ((("extension_constructor", 7842)), 0, (0)), 100000000, 0, -9300); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9301)]), 0, (("astlib/ast_414.ml", 434, 18528, 18532), ("astlib/ast_414.ml", 434, 18528, 18589), 0), 0, Tag1 ("Astlib__Ast_414", 202)); (("Pexp_assert", 806), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9302)]), 0, (("astlib/ast_414.ml", 436, 18628, 18632), ("astlib/ast_414.ml", 436, 18628, 18659), 0), 0, Tag1 ("Astlib__Ast_414", 203)); (("Pexp_lazy", 807), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9303)]), 0, (("astlib/ast_414.ml", 441, 18784, 18788), ("astlib/ast_414.ml", 441, 18784, 18813), 0), 0, Tag1 ("Astlib__Ast_414", 204)); (("Pexp_poly", 808), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9304); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9306)], (0)), 100000000, 0, -9305)]), 0, (("astlib/ast_414.ml", 442, 18831, 18835), ("astlib/ast_414.ml", 442, 18831, 18879), 0), 0, Tag1 ("Astlib__Ast_414", 205)); (("Pexp_object", 809), ([(Tag3 ((("class_structure", 7855)), 0, (0)), 100000000, 0, -9307)]), 0, (("astlib/ast_414.ml", 448, 19075, 19079), ("astlib/ast_414.ml", 448, 19075, 19111), 0), 0, Tag1 ("Astlib__Ast_414", 206)); (("Pexp_newtype", 810), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9309)], (0)), 100000000, 0, -9308); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9310)]), 0, (("astlib/ast_414.ml", 449, 19137, 19141), ("astlib/ast_414.ml", 449, 19137, 19182), 0), 0, Tag1 ("Astlib__Ast_414", 207)); (("Pexp_pack", 811), ([(Tag3 ((("module_expr", 7876)), 0, (0)), 100000000, 0, -9311)]), 0, (("astlib/ast_414.ml", 450, 19211, 19215), ("astlib/ast_414.ml", 450, 19211, 19241), 0), 0, Tag1 ("Astlib__Ast_414", 208)); (("Pexp_open", 812), ([(Tag3 ((("open_declaration", 7871)), 0, (0)), 100000000, 0, -9312); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9313)]), 0, (("astlib/ast_414.ml", 455, 19383, 19387), ("astlib/ast_414.ml", 455, 19383, 19431), 0), 0, Tag1 ("Astlib__Ast_414", 209)); (("Pexp_letop", 813), ([(Tag3 ((("letop", 7833)), 0, (0)), 100000000, 0, -9314)]), 0, (("astlib/ast_414.ml", 459, 19526, 19530), ("astlib/ast_414.ml", 459, 19526, 19551), 0), 0, Tag1 ("Astlib__Ast_414", 210)); (("Pexp_extension", 814), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -9315)]), 0, (("astlib/ast_414.ml", 462, 19641, 19645), ("astlib/ast_414.ml", 462, 19641, 19674), 0), 0, Tag1 ("Astlib__Ast_414", 211)); (("Pexp_unreachable", 815), (0), 0, (("astlib/ast_414.ml", 463, 19691, 19695), ("astlib/ast_414.ml", 463, 19691, 19713), 0), 0, Tag1 ("Astlib__Ast_414", 212))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -9212)), 0, 0, 0, 0, (("astlib/ast_414.ml", 330, 13359, 13361), ("astlib/ast_414.ml", 463, 19691, 19713), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 65)), 2, 0); Tag1 (("case", 7832), (0, 0, [[(("pc_lhs", 816), 0, (Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9208), (("astlib/ast_414.ml", 467, 19779, 19785), ("astlib/ast_414.ml", 467, 19779, 19801), 0), 0, Tag1 ("Astlib__Ast_414", 213)); (("pc_guard", 817), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9210)], (0)), 100000000, 0, -9209), (("astlib/ast_414.ml", 468, 19802, 19808), ("astlib/ast_414.ml", 468, 19802, 19836), 0), 0, Tag1 ("Astlib__Ast_414", 214)); (("pc_rhs", 818), 0, (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9211), (("astlib/ast_414.ml", 469, 19837, 19843), ("astlib/ast_414.ml", 469, 19837, 19862), 0), 0, Tag1 ("Astlib__Ast_414", 215))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -9207)), 0, 0, 0, 0, (("astlib/ast_414.ml", 465, 19727, 19729), ("astlib/ast_414.ml", 470, 19863, 19868), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 66)), 2, 0); Tag1 (("letop", 7833), (0, 0, [[(("let_", 819), 0, (Tag3 ((("binding_op", 7834)), 0, (0)), 100000000, 0, -9203), (("astlib/ast_414.ml", 475, 20000, 20006), ("astlib/ast_414.ml", 475, 20000, 20024), 0), 0, Tag1 ("Astlib__Ast_414", 216)); (("ands", 820), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binding_op", 7834)), 0, (0)), 100000000, 0, -9205)], (0)), 100000000, 0, -9204), (("astlib/ast_414.ml", 476, 20025, 20031), ("astlib/ast_414.ml", 476, 20025, 20054), 0), 0, Tag1 ("Astlib__Ast_414", 217)); (("body", 821), 0, (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9206), (("astlib/ast_414.ml", 477, 20055, 20061), ("astlib/ast_414.ml", 477, 20055, 20079), 0), 0, Tag1 ("Astlib__Ast_414", 218))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "letop"), 0, (0)), 100000000, 0, -9202)), 0, 0, 0, 0, (("astlib/ast_414.ml", 473, 19946, 19948), ("astlib/ast_414.ml", 478, 20080, 20085), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 67)), 2, 0); Tag1 (("binding_op", 7834), (0, 0, [[(("pbop_op", 822), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9198)], (0)), 100000000, 0, -9197), (("astlib/ast_414.ml", 482, 20151, 20157), ("astlib/ast_414.ml", 482, 20151, 20178), 0), 0, Tag1 ("Astlib__Ast_414", 219)); (("pbop_pat", 823), 0, (Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9199), (("astlib/ast_414.ml", 483, 20179, 20185), ("astlib/ast_414.ml", 483, 20179, 20204), 0), 0, Tag1 ("Astlib__Ast_414", 220)); (("pbop_exp", 824), 0, (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9200), (("astlib/ast_414.ml", 484, 20205, 20211), ("astlib/ast_414.ml", 484, 20205, 20233), 0), 0, Tag1 ("Astlib__Ast_414", 221)); (("pbop_loc", 825), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9201), (("astlib/ast_414.ml", 485, 20234, 20240), ("astlib/ast_414.ml", 485, 20234, 20262), 0), 0, Tag1 ("Astlib__Ast_414", 222))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "binding_op"), 0, (0)), 100000000, 0, -9196)), 0, 0, 0, 0, (("astlib/ast_414.ml", 480, 20087, 20089), ("astlib/ast_414.ml", 486, 20263, 20268), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 68)), 2, 0); Tag1 (("value_description", 7835), (0, 0, [[(("pval_name", 826), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9190)], (0)), 100000000, 0, -9189), (("astlib/ast_414.ml", 492, 20381, 20387), ("astlib/ast_414.ml", 492, 20381, 20409), 0), 0, Tag1 ("Astlib__Ast_414", 223)); (("pval_type", 827), 0, (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9191), (("astlib/ast_414.ml", 493, 20410, 20416), ("astlib/ast_414.ml", 493, 20410, 20437), 0), 0, Tag1 ("Astlib__Ast_414", 224)); (("pval_prim", 828), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9193)], (0)), 100000000, 0, -9192), (("astlib/ast_414.ml", 494, 20438, 20444), ("astlib/ast_414.ml", 494, 20438, 20467), 0), 0, Tag1 ("Astlib__Ast_414", 225)); (("pval_attributes", 829), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9194), (("astlib/ast_414.ml", 495, 20468, 20474), ("astlib/ast_414.ml", 495, 20468, 20502), 0), 0, Tag1 ("Astlib__Ast_414", 226)); (("pval_loc", 830), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9195), (("astlib/ast_414.ml", 496, 20537, 20543), ("astlib/ast_414.ml", 496, 20537, 20564), 0), 0, Tag1 ("Astlib__Ast_414", 227))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -9188)), 0, 0, 0, 0, (("astlib/ast_414.ml", 490, 20303, 20305), ("astlib/ast_414.ml", 497, 20565, 20570), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 69)), 2, 0); Tag1 (("type_declaration", 7836), (0, 0, [[(("ptype_name", 831), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9170)], (0)), 100000000, 0, -9169), (("astlib/ast_414.ml", 509, 20953, 20959), ("astlib/ast_414.ml", 509, 20953, 20982), 0), 0, Tag1 ("Astlib__Ast_414", 228)); (("ptype_params", 832), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9173); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "variance"), 0, (0)), 100000000, 0, -9175); (Tag3 (Tag1 ((("Asttypes", 7799)), "injectivity"), 0, (0)), 100000000, 0, -9176)]), 100000000, 0, -9174)]), 100000000, 0, -9172)], (0)), 100000000, 0, -9171), (("astlib/ast_414.ml", 510, 20983, 20989), ("astlib/ast_414.ml", 510, 20983, 21047), 0), 0, Tag1 ("Astlib__Ast_414", 229)); (("ptype_cstrs", 833), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9179); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9180); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9181)]), 100000000, 0, -9178)], (0)), 100000000, 0, -9177), (("astlib/ast_414.ml", 512, 21078, 21084), ("astlib/ast_414.ml", 512, 21078, 21139), 0), 0, Tag1 ("Astlib__Ast_414", 230)); (("ptype_kind", 834), 0, (Tag3 ((("type_kind", 7837)), 0, (0)), 100000000, 0, -9182), (("astlib/ast_414.ml", 514, 21200, 21206), ("astlib/ast_414.ml", 514, 21200, 21228), 0), 0, Tag1 ("Astlib__Ast_414", 231)); (("ptype_private", 835), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "private_flag"), 0, (0)), 100000000, 0, -9183), (("astlib/ast_414.ml", 515, 21229, 21235), ("astlib/ast_414.ml", 515, 21229, 21263), 0), 0, Tag1 ("Astlib__Ast_414", 232)); (("ptype_manifest", 836), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9185)], (0)), 100000000, 0, -9184), (("astlib/ast_414.ml", 516, 21292, 21298), ("astlib/ast_414.ml", 516, 21292, 21331), 0), 0, Tag1 ("Astlib__Ast_414", 233)); (("ptype_attributes", 837), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9186), (("astlib/ast_414.ml", 517, 21357, 21363), ("astlib/ast_414.ml", 517, 21357, 21392), 0), 0, Tag1 ("Astlib__Ast_414", 234)); (("ptype_loc", 838), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9187), (("astlib/ast_414.ml", 518, 21427, 21433), ("astlib/ast_414.ml", 518, 21427, 21455), 0), 0, Tag1 ("Astlib__Ast_414", 235))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -9168)), 0, 0, 0, 0, (("astlib/ast_414.ml", 507, 20877, 20879), ("astlib/ast_414.ml", 519, 21456, 21461), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 70)), 2, 0); Tag1 (("type_kind", 7837), (0, 0, Tag1 ([(("Ptype_abstract", 839), (0), 0, (("astlib/ast_414.ml", 547, 22769, 22773), ("astlib/ast_414.ml", 547, 22769, 22789), 0), 0, Tag1 ("Astlib__Ast_414", 236)); (("Ptype_variant", 840), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7839)), 0, (0)), 100000000, 0, -9165)], (0)), 100000000, 0, -9164)]), 0, (("astlib/ast_414.ml", 548, 22790, 22794), ("astlib/ast_414.ml", 548, 22790, 22841), 0), 0, Tag1 ("Astlib__Ast_414", 237)); (("Ptype_record", 841), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7838)), 0, (0)), 100000000, 0, -9167)], (0)), 100000000, 0, -9166)]), 0, (("astlib/ast_414.ml", 549, 22842, 22846), ("astlib/ast_414.ml", 549, 22842, 22886), 0), 0, Tag1 ("Astlib__Ast_414", 238)); (("Ptype_open", 842), (0), 0, (("astlib/ast_414.ml", 550, 22921, 22925), ("astlib/ast_414.ml", 550, 22921, 22937), 0), 0, Tag1 ("Astlib__Ast_414", 239))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -9163)), 0, 0, 0, 0, (("astlib/ast_414.ml", 546, 22713, 22715), ("astlib/ast_414.ml", 550, 22921, 22937), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 71)), 2, 0); Tag1 (("label_declaration", 7838), (0, 0, [[(("pld_name", 843), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9158)], (0)), 100000000, 0, -9157), (("astlib/ast_414.ml", 554, 23017, 23023), ("astlib/ast_414.ml", 554, 23017, 23044), 0), 0, Tag1 ("Astlib__Ast_414", 240)); (("pld_mutable", 844), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "mutable_flag"), 0, (0)), 100000000, 0, -9159), (("astlib/ast_414.ml", 555, 23045, 23051), ("astlib/ast_414.ml", 555, 23045, 23077), 0), 0, Tag1 ("Astlib__Ast_414", 241)); (("pld_type", 845), 0, (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9160), (("astlib/ast_414.ml", 556, 23078, 23084), ("astlib/ast_414.ml", 556, 23078, 23104), 0), 0, Tag1 ("Astlib__Ast_414", 242)); (("pld_loc", 846), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9161), (("astlib/ast_414.ml", 557, 23105, 23111), ("astlib/ast_414.ml", 557, 23105, 23131), 0), 0, Tag1 ("Astlib__Ast_414", 243)); (("pld_attributes", 847), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9162), (("astlib/ast_414.ml", 558, 23132, 23138), ("astlib/ast_414.ml", 558, 23132, 23165), 0), 0, Tag1 ("Astlib__Ast_414", 244))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -9156)), 0, 0, 0, 0, (("astlib/ast_414.ml", 552, 22939, 22941), ("astlib/ast_414.ml", 559, 23198, 23203), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 72)), 2, 0); Tag1 (("constructor_declaration", 7839), (0, 0, [[(("pcd_name", 848), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9147)], (0)), 100000000, 0, -9146), (("astlib/ast_414.ml", 573, 23763, 23769), ("astlib/ast_414.ml", 573, 23763, 23790), 0), 0, Tag1 ("Astlib__Ast_414", 245)); (("pcd_vars", 849), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9150)], (0)), 100000000, 0, -9149)], (0)), 100000000, 0, -9148), (("astlib/ast_414.ml", 574, 23791, 23797), ("astlib/ast_414.ml", 574, 23791, 23823), 0), 0, Tag1 ("Astlib__Ast_414", 246)); (("pcd_args", 850), 0, (Tag3 ((("constructor_arguments", 7840)), 0, (0)), 100000000, 0, -9151), (("astlib/ast_414.ml", 575, 23824, 23830), ("astlib/ast_414.ml", 575, 23824, 23862), 0), 0, Tag1 ("Astlib__Ast_414", 247)); (("pcd_res", 851), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9153)], (0)), 100000000, 0, -9152), (("astlib/ast_414.ml", 576, 23863, 23869), ("astlib/ast_414.ml", 576, 23863, 23895), 0), 0, Tag1 ("Astlib__Ast_414", 248)); (("pcd_loc", 852), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9154), (("astlib/ast_414.ml", 577, 23896, 23902), ("astlib/ast_414.ml", 577, 23896, 23922), 0), 0, Tag1 ("Astlib__Ast_414", 249)); (("pcd_attributes", 853), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9155), (("astlib/ast_414.ml", 578, 23923, 23929), ("astlib/ast_414.ml", 578, 23923, 23956), 0), 0, Tag1 ("Astlib__Ast_414", 250))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -9145)), 0, 0, 0, 0, (("astlib/ast_414.ml", 571, 23673, 23675), ("astlib/ast_414.ml", 579, 23992, 23997), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 73)), 2, 0); Tag1 (("constructor_arguments", 7840), (0, 0, Tag1 ([(("Pcstr_tuple", 854), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9142)], (0)), 100000000, 0, -9141)]), 0, (("astlib/ast_414.ml", 582, 24079, 24083), ("astlib/ast_414.ml", 582, 24079, 24114), 0), 0, Tag1 ("Astlib__Ast_414", 251)); (("Pcstr_record", 855), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7838)), 0, (0)), 100000000, 0, -9144)], (0)), 100000000, 0, -9143)]), 0, (("astlib/ast_414.ml", 583, 24115, 24119), ("astlib/ast_414.ml", 583, 24115, 24159), 0), 0, Tag1 ("Astlib__Ast_414", 252))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -9140)), 0, 0, 0, 0, (("astlib/ast_414.ml", 581, 23999, 24001), ("astlib/ast_414.ml", 583, 24115, 24159), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 74)), 2, 0); Tag1 (("type_extension", 7841), (0, 0, [[(("ptyext_path", 856), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9128)], (0)), 100000000, 0, -9127), (("astlib/ast_414.ml", 600, 24935, 24941), ("astlib/ast_414.ml", 600, 24935, 24970), 0), 0, Tag1 ("Astlib__Ast_414", 253)); (("ptyext_params", 857), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9131); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "variance"), 0, (0)), 100000000, 0, -9133); (Tag3 (Tag1 ((("Asttypes", 7799)), "injectivity"), 0, (0)), 100000000, 0, -9134)]), 100000000, 0, -9132)]), 100000000, 0, -9130)], (0)), 100000000, 0, -9129), (("astlib/ast_414.ml", 601, 24971, 24977), ("astlib/ast_414.ml", 601, 24971, 25036), 0), 0, Tag1 ("Astlib__Ast_414", 254)); (("ptyext_constructors", 858), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7842)), 0, (0)), 100000000, 0, -9136)], (0)), 100000000, 0, -9135), (("astlib/ast_414.ml", 602, 25037, 25043), ("astlib/ast_414.ml", 602, 25037, 25091), 0), 0, Tag1 ("Astlib__Ast_414", 255)); (("ptyext_private", 859), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "private_flag"), 0, (0)), 100000000, 0, -9137), (("astlib/ast_414.ml", 603, 25092, 25098), ("astlib/ast_414.ml", 603, 25092, 25127), 0), 0, Tag1 ("Astlib__Ast_414", 256)); (("ptyext_loc", 860), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9138), (("astlib/ast_414.ml", 604, 25128, 25134), ("astlib/ast_414.ml", 604, 25128, 25157), 0), 0, Tag1 ("Astlib__Ast_414", 257)); (("ptyext_attributes", 861), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9139), (("astlib/ast_414.ml", 605, 25158, 25164), ("astlib/ast_414.ml", 605, 25158, 25194), 0), 0, Tag1 ("Astlib__Ast_414", 258))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -9126)), 0, 0, 0, 0, (("astlib/ast_414.ml", 598, 24863, 24865), ("astlib/ast_414.ml", 606, 25227, 25232), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 75)), 2, 0); Tag1 (("extension_constructor", 7842), (0, 0, [[(("pext_name", 862), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9122)], (0)), 100000000, 0, -9121), (("astlib/ast_414.ml", 614, 25433, 25439), ("astlib/ast_414.ml", 614, 25433, 25461), 0), 0, Tag1 ("Astlib__Ast_414", 259)); (("pext_kind", 863), 0, (Tag3 ((("extension_constructor_kind", 7844)), 0, (0)), 100000000, 0, -9123), (("astlib/ast_414.ml", 615, 25462, 25468), ("astlib/ast_414.ml", 615, 25462, 25506), 0), 0, Tag1 ("Astlib__Ast_414", 260)); (("pext_loc", 864), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9124), (("astlib/ast_414.ml", 616, 25507, 25513), ("astlib/ast_414.ml", 616, 25507, 25534), 0), 0, Tag1 ("Astlib__Ast_414", 261)); (("pext_attributes", 865), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9125), (("astlib/ast_414.ml", 617, 25535, 25541), ("astlib/ast_414.ml", 617, 25535, 25569), 0), 0, Tag1 ("Astlib__Ast_414", 262))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -9120)), 0, 0, 0, 0, (("astlib/ast_414.ml", 612, 25347, 25349), ("astlib/ast_414.ml", 618, 25605, 25610), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 76)), 2, 0); Tag1 (("type_exception", 7843), (0, 0, [[(("ptyexn_constructor", 866), 0, (Tag3 ((("extension_constructor", 7842)), 0, (0)), 100000000, 0, -9117), (("astlib/ast_414.ml", 622, 25684, 25690), ("astlib/ast_414.ml", 622, 25684, 25733), 0), 0, Tag1 ("Astlib__Ast_414", 263)); (("ptyexn_loc", 867), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9118), (("astlib/ast_414.ml", 623, 25734, 25740), ("astlib/ast_414.ml", 623, 25734, 25764), 0), 0, Tag1 ("Astlib__Ast_414", 264)); (("ptyexn_attributes", 868), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9119), (("astlib/ast_414.ml", 624, 25765, 25771), ("astlib/ast_414.ml", 624, 25765, 25802), 0), 0, Tag1 ("Astlib__Ast_414", 265))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "type_exception"), 0, (0)), 100000000, 0, -9116)), 0, 0, 0, 0, (("astlib/ast_414.ml", 620, 25612, 25614), ("astlib/ast_414.ml", 625, 25837, 25842), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 77)), 2, 0); Tag1 (("extension_constructor_kind", 7844), (0, 0, Tag1 ([(("Pext_decl", 869), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9110)], (0)), 100000000, 0, -9109)], (0)), 100000000, 0, -9108); (Tag3 ((("constructor_arguments", 7840)), 0, (0)), 100000000, 0, -9111); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9113)], (0)), 100000000, 0, -9112)]), 0, (("astlib/ast_414.ml", 629, 25990, 25994), ("astlib/ast_414.ml", 629, 25990, 26067), 0), 0, Tag1 ("Astlib__Ast_414", 266)); (("Pext_rebind", 870), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9115)], (0)), 100000000, 0, -9114)]), 0, (("astlib/ast_414.ml", 649, 26956, 26960), ("astlib/ast_414.ml", 649, 26956, 26992), 0), 0, Tag1 ("Astlib__Ast_414", 267))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -9107)), 0, 0, 0, 0, (("astlib/ast_414.ml", 628, 25900, 25902), ("astlib/ast_414.ml", 649, 26956, 26992), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 78)), 2, 0); Tag1 (("class_type", 7845), (0, 0, [[(("pcty_desc", 871), 0, (Tag3 ((("class_type_desc", 7846)), 0, (0)), 100000000, 0, -9104), (("astlib/ast_414.ml", 657, 27220, 27226), ("astlib/ast_414.ml", 657, 27220, 27253), 0), 0, Tag1 ("Astlib__Ast_414", 268)); (("pcty_loc", 872), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9105), (("astlib/ast_414.ml", 658, 27254, 27260), ("astlib/ast_414.ml", 658, 27254, 27281), 0), 0, Tag1 ("Astlib__Ast_414", 269)); (("pcty_attributes", 873), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9106), (("astlib/ast_414.ml", 659, 27282, 27288), ("astlib/ast_414.ml", 659, 27282, 27316), 0), 0, Tag1 ("Astlib__Ast_414", 270))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -9103)), 0, 0, 0, 0, (("astlib/ast_414.ml", 655, 27156, 27158), ("astlib/ast_414.ml", 660, 27347, 27352), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 79)), 2, 0); Tag1 (("class_type_desc", 7846), (0, 0, Tag1 ([(("Pcty_constr", 874), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9093)], (0)), 100000000, 0, -9092); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9095)], (0)), 100000000, 0, -9094)]), 0, (("astlib/ast_414.ml", 663, 27422, 27426), ("astlib/ast_414.ml", 663, 27422, 27475), 0), 0, Tag1 ("Astlib__Ast_414", 271)); (("Pcty_signature", 875), ([(Tag3 ((("class_signature", 7847)), 0, (0)), 100000000, 0, -9096)]), 0, (("astlib/ast_414.ml", 666, 27533, 27537), ("astlib/ast_414.ml", 666, 27533, 27572), 0), 0, Tag1 ("Astlib__Ast_414", 272)); (("Pcty_arrow", 876), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "arg_label"), 0, (0)), 100000000, 0, -9097); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9098); (Tag3 ((("class_type", 7845)), 0, (0)), 100000000, 0, -9099)]), 0, (("astlib/ast_414.ml", 667, 27598, 27602), ("astlib/ast_414.ml", 667, 27598, 27652), 0), 0, Tag1 ("Astlib__Ast_414", 273)); (("Pcty_extension", 877), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -9100)]), 0, (("astlib/ast_414.ml", 676, 28045, 28049), ("astlib/ast_414.ml", 676, 28045, 28078), 0), 0, Tag1 ("Astlib__Ast_414", 274)); (("Pcty_open", 878), ([(Tag3 ((("open_description", 7870)), 0, (0)), 100000000, 0, -9101); (Tag3 ((("class_type", 7845)), 0, (0)), 100000000, 0, -9102)]), 0, (("astlib/ast_414.ml", 677, 28093, 28097), ("astlib/ast_414.ml", 677, 28093, 28141), 0), 0, Tag1 ("Astlib__Ast_414", 275))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -9091)), 0, 0, 0, 0, (("astlib/ast_414.ml", 662, 27354, 27356), ("astlib/ast_414.ml", 677, 28093, 28141), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 80)), 2, 0); Tag1 (("class_signature", 7847), (0, 0, [[(("pcsig_self", 879), 0, (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9088), (("astlib/ast_414.ml", 681, 28244, 28250), ("astlib/ast_414.ml", 681, 28244, 28272), 0), 0, Tag1 ("Astlib__Ast_414", 276)); (("pcsig_fields", 880), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7848)), 0, (0)), 100000000, 0, -9090)], (0)), 100000000, 0, -9089), (("astlib/ast_414.ml", 682, 28273, 28279), ("astlib/ast_414.ml", 682, 28273, 28315), 0), 0, Tag1 ("Astlib__Ast_414", 277))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -9087)), 0, 0, 0, 0, (("astlib/ast_414.ml", 679, 28170, 28172), ("astlib/ast_414.ml", 683, 28316, 28321), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 81)), 2, 0); Tag1 (("class_type_field", 7848), (0, 0, [[(("pctf_desc", 881), 0, (Tag3 ((("class_type_field_desc", 7849)), 0, (0)), 100000000, 0, -9084), (("astlib/ast_414.ml", 692, 28633, 28639), ("astlib/ast_414.ml", 692, 28633, 28672), 0), 0, Tag1 ("Astlib__Ast_414", 278)); (("pctf_loc", 882), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9085), (("astlib/ast_414.ml", 693, 28673, 28679), ("astlib/ast_414.ml", 693, 28673, 28700), 0), 0, Tag1 ("Astlib__Ast_414", 279)); (("pctf_attributes", 883), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9086), (("astlib/ast_414.ml", 694, 28701, 28707), ("astlib/ast_414.ml", 694, 28701, 28735), 0), 0, Tag1 ("Astlib__Ast_414", 280))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -9083)), 0, 0, 0, 0, (("astlib/ast_414.ml", 690, 28557, 28559), ("astlib/ast_414.ml", 695, 28770, 28775), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 82)), 2, 0); Tag1 (("class_type_field_desc", 7849), (0, 0, Tag1 ([(("Pctf_inherit", 884), ([(Tag3 ((("class_type", 7845)), 0, (0)), 100000000, 0, -9065)]), 0, (("astlib/ast_414.ml", 698, 28857, 28861), ("astlib/ast_414.ml", 698, 28857, 28889), 0), 0, Tag1 ("Astlib__Ast_414", 281)); (("Pctf_val", 885), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9068)], (0)), 100000000, 0, -9067); (Tag3 (Tag1 ((("Asttypes", 7799)), "mutable_flag"), 0, (0)), 100000000, 0, -9069); (Tag3 (Tag1 ((("Asttypes", 7799)), "virtual_flag"), 0, (0)), 100000000, 0, -9070); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9071)]), 100000000, 0, -9066)]), 0, (("astlib/ast_414.ml", 699, 28911, 28915), ("astlib/ast_414.ml", 699, 28911, 28982), 0), 0, Tag1 ("Astlib__Ast_414", 282)); (("Pctf_method", 886), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9074)], (0)), 100000000, 0, -9073); (Tag3 (Tag1 ((("Asttypes", 7799)), "private_flag"), 0, (0)), 100000000, 0, -9075); (Tag3 (Tag1 ((("Asttypes", 7799)), "virtual_flag"), 0, (0)), 100000000, 0, -9076); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9077)]), 100000000, 0, -9072)]), 0, (("astlib/ast_414.ml", 701, 29009, 29013), ("astlib/ast_414.ml", 701, 29009, 29083), 0), 0, Tag1 ("Astlib__Ast_414", 283)); (("Pctf_constraint", 887), ([(Tag2 ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9079); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9080)]), 100000000, 0, -9078)]), 0, (("astlib/ast_414.ml", 706, 29199, 29203), ("astlib/ast_414.ml", 706, 29199, 29247), 0), 0, Tag1 ("Astlib__Ast_414", 284)); (("Pctf_attribute", 888), ([(Tag3 ((("attribute", 7817)), 0, (0)), 100000000, 0, -9081)]), 0, (("astlib/ast_414.ml", 707, 29277, 29281), ("astlib/ast_414.ml", 707, 29277, 29310), 0), 0, Tag1 ("Astlib__Ast_414", 285)); (("Pctf_extension", 889), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -9082)]), 0, (("astlib/ast_414.ml", 708, 29332, 29336), ("astlib/ast_414.ml", 708, 29332, 29365), 0), 0, Tag1 ("Astlib__Ast_414", 286))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -9064)), 0, 0, 0, 0, (("astlib/ast_414.ml", 697, 28777, 28779), ("astlib/ast_414.ml", 708, 29332, 29365), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 83)), 2, 0); Tag1 (("class_infos", 7850), ([((("a")), 100000000, 0, -9052)], 1, [[(("pci_virt", 890), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "virtual_flag"), 0, (0)), 100000000, 0, -9053), (("astlib/ast_414.ml", 712, 29456, 29462), ("astlib/ast_414.ml", 712, 29456, 29485), 0), 0, Tag1 ("Astlib__Ast_414", 287)); (("pci_params", 891), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9056); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "variance"), 0, (0)), 100000000, 0, -9058); (Tag3 (Tag1 ((("Asttypes", 7799)), "injectivity"), 0, (0)), 100000000, 0, -9059)]), 100000000, 0, -9057)]), 100000000, 0, -9055)], (0)), 100000000, 0, -9054), (("astlib/ast_414.ml", 713, 29486, 29492), ("astlib/ast_414.ml", 713, 29486, 29548), 0), 0, Tag1 ("Astlib__Ast_414", 288)); (("pci_name", 892), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9061)], (0)), 100000000, 0, -9060), (("astlib/ast_414.ml", 714, 29549, 29555), ("astlib/ast_414.ml", 714, 29549, 29576), 0), 0, Tag1 ("Astlib__Ast_414", 289)); (("pci_expr", 893), 0, ((("a")), 100000000, 0, -9052), (("astlib/ast_414.ml", 715, 29577, 29583), ("astlib/ast_414.ml", 715, 29577, 29596), 0), 0, Tag1 ("Astlib__Ast_414", 290)); (("pci_loc", 894), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9062), (("astlib/ast_414.ml", 716, 29597, 29603), ("astlib/ast_414.ml", 716, 29597, 29623), 0), 0, Tag1 ("Astlib__Ast_414", 291)); (("pci_attributes", 895), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9063), (("astlib/ast_414.ml", 717, 29624, 29630), ("astlib/ast_414.ml", 717, 29624, 29657), 0), 0, Tag1 ("Astlib__Ast_414", 292))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -9052)], (0)), 100000000, 0, -9051)), [25], [0], 0, 0, (("astlib/ast_414.ml", 710, 29384, 29386), ("astlib/ast_414.ml", 718, 29692, 29697), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 84)), 2, 0); Tag1 (("class_description", 7851), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7850)), [(Tag3 ((("class_type", 7845)), 0, (0)), 100000000, 0, -9050)], (0)), 100000000, 0, -9049)), 0, 0, 0, 0, (("astlib/ast_414.ml", 727, 29911, 29913), ("astlib/ast_414.ml", 727, 29911, 29959), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 85)), 2, 0); Tag1 (("class_type_declaration", 7852), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7850)), [(Tag3 ((("class_type", 7845)), 0, (0)), 100000000, 0, -9048)], (0)), 100000000, 0, -9047)), 0, 0, 0, 0, (("astlib/ast_414.ml", 729, 29961, 29963), ("astlib/ast_414.ml", 729, 29961, 30014), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 86)), 2, 0); Tag1 (("class_expr", 7853), (0, 0, [[(("pcl_desc", 896), 0, (Tag3 ((("class_expr_desc", 7854)), 0, (0)), 100000000, 0, -9044), (("astlib/ast_414.ml", 735, 30137, 30144), ("astlib/ast_414.ml", 735, 30137, 30170), 0), 0, Tag1 ("Astlib__Ast_414", 293)); (("pcl_loc", 897), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9045), (("astlib/ast_414.ml", 736, 30171, 30178), ("astlib/ast_414.ml", 736, 30171, 30198), 0), 0, Tag1 ("Astlib__Ast_414", 294)); (("pcl_attributes", 898), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9046), (("astlib/ast_414.ml", 737, 30199, 30206), ("astlib/ast_414.ml", 737, 30199, 30233), 0), 0, Tag1 ("Astlib__Ast_414", 295))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -9043)), 0, 0, 0, 0, (("astlib/ast_414.ml", 733, 30071, 30073), ("astlib/ast_414.ml", 738, 30264, 30271), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 87)), 2, 0); Tag1 (("class_expr_desc", 7854), (0, 0, Tag1 ([(("Pcl_constr", 899), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9020)], (0)), 100000000, 0, -9019); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9022)], (0)), 100000000, 0, -9021)]), 0, (("astlib/ast_414.ml", 741, 30341, 30345), ("astlib/ast_414.ml", 741, 30341, 30393), 0), 0, Tag1 ("Astlib__Ast_414", 296)); (("Pcl_structure", 900), ([(Tag3 ((("class_structure", 7855)), 0, (0)), 100000000, 0, -9023)]), 0, (("astlib/ast_414.ml", 743, 30437, 30441), ("astlib/ast_414.ml", 743, 30437, 30475), 0), 0, Tag1 ("Astlib__Ast_414", 297)); (("Pcl_fun", 901), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "arg_label"), 0, (0)), 100000000, 0, -9024); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9026)], (0)), 100000000, 0, -9025); (Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9027); (Tag3 ((("class_expr", 7853)), 0, (0)), 100000000, 0, -9028)]), 0, (("astlib/ast_414.ml", 744, 30501, 30505), ("astlib/ast_414.ml", 744, 30501, 30570), 0), 0, Tag1 ("Astlib__Ast_414", 298)); (("Pcl_apply", 902), ([(Tag3 ((("class_expr", 7853)), 0, (0)), 100000000, 0, -9029); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "arg_label"), 0, (0)), 100000000, 0, -9032); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9033)]), 100000000, 0, -9031)], (0)), 100000000, 0, -9030)]), 0, (("astlib/ast_414.ml", 759, 31287, 31291), ("astlib/ast_414.ml", 759, 31287, 31348), 0), 0, Tag1 ("Astlib__Ast_414", 299)); (("Pcl_let", 903), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "rec_flag"), 0, (0)), 100000000, 0, -9034); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7881)), 0, (0)), 100000000, 0, -9036)], (0)), 100000000, 0, -9035); (Tag3 ((("class_expr", 7853)), 0, (0)), 100000000, 0, -9037)]), 0, (("astlib/ast_414.ml", 767, 31608, 31612), ("astlib/ast_414.ml", 767, 31608, 31667), 0), 0, Tag1 ("Astlib__Ast_414", 300)); (("Pcl_constraint", 904), ([(Tag3 ((("class_expr", 7853)), 0, (0)), 100000000, 0, -9038); (Tag3 ((("class_type", 7845)), 0, (0)), 100000000, 0, -9039)]), 0, (("astlib/ast_414.ml", 774, 32028, 32032), ("astlib/ast_414.ml", 774, 32028, 32075), 0), 0, Tag1 ("Astlib__Ast_414", 301)); (("Pcl_extension", 905), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -9040)]), 0, (("astlib/ast_414.ml", 775, 32096, 32100), ("astlib/ast_414.ml", 775, 32096, 32128), 0), 0, Tag1 ("Astlib__Ast_414", 302)); (("Pcl_open", 906), ([(Tag3 ((("open_description", 7870)), 0, (0)), 100000000, 0, -9041); (Tag3 ((("class_expr", 7853)), 0, (0)), 100000000, 0, -9042)]), 0, (("astlib/ast_414.ml", 776, 32145, 32149), ("astlib/ast_414.ml", 776, 32145, 32192), 0), 0, Tag1 ("Astlib__Ast_414", 303))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -9018)), 0, 0, 0, 0, (("astlib/ast_414.ml", 740, 30273, 30275), ("astlib/ast_414.ml", 776, 32145, 32192), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 88)), 2, 0); Tag1 (("class_structure", 7855), (0, 0, [[(("pcstr_self", 907), 0, (Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -9015), (("astlib/ast_414.ml", 780, 32295, 32301), ("astlib/ast_414.ml", 780, 32295, 32321), 0), 0, Tag1 ("Astlib__Ast_414", 304)); (("pcstr_fields", 908), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7856)), 0, (0)), 100000000, 0, -9017)], (0)), 100000000, 0, -9016), (("astlib/ast_414.ml", 781, 32322, 32328), ("astlib/ast_414.ml", 781, 32322, 32359), 0), 0, Tag1 ("Astlib__Ast_414", 305))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -9014)), 0, 0, 0, 0, (("astlib/ast_414.ml", 778, 32221, 32223), ("astlib/ast_414.ml", 782, 32360, 32365), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 89)), 2, 0); Tag1 (("class_field", 7856), (0, 0, [[(("pcf_desc", 909), 0, (Tag3 ((("class_field_desc", 7857)), 0, (0)), 100000000, 0, -9011), (("astlib/ast_414.ml", 791, 32665, 32671), ("astlib/ast_414.ml", 791, 32665, 32698), 0), 0, Tag1 ("Astlib__Ast_414", 306)); (("pcf_loc", 910), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9012), (("astlib/ast_414.ml", 792, 32699, 32705), ("astlib/ast_414.ml", 792, 32699, 32725), 0), 0, Tag1 ("Astlib__Ast_414", 307)); (("pcf_attributes", 911), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -9013), (("astlib/ast_414.ml", 793, 32726, 32732), ("astlib/ast_414.ml", 793, 32726, 32759), 0), 0, Tag1 ("Astlib__Ast_414", 308))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -9010)), 0, 0, 0, 0, (("astlib/ast_414.ml", 789, 32599, 32601), ("astlib/ast_414.ml", 794, 32794, 32799), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 90)), 2, 0); Tag1 (("class_field_desc", 7857), (0, 0, Tag1 ([(("Pcf_inherit", 912), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "override_flag"), 0, (0)), 100000000, 0, -8989); (Tag3 ((("class_expr", 7853)), 0, (0)), 100000000, 0, -8990); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8993)], (0)), 100000000, 0, -8992)], (0)), 100000000, 0, -8991)]), 0, (("astlib/ast_414.ml", 797, 32871, 32875), ("astlib/ast_414.ml", 797, 32871, 32938), 0), 0, Tag1 ("Astlib__Ast_414", 309)); (("Pcf_val", 913), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -8996)], (0)), 100000000, 0, -8995); (Tag3 (Tag1 ((("Asttypes", 7799)), "mutable_flag"), 0, (0)), 100000000, 0, -8997); (Tag3 ((("class_field_kind", 7858)), 0, (0)), 100000000, 0, -8998)]), 100000000, 0, -8994)]), 0, (("astlib/ast_414.ml", 812, 33614, 33618), ("astlib/ast_414.ml", 812, 33614, 33676), 0), 0, Tag1 ("Astlib__Ast_414", 310)); (("Pcf_method", 914), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7799)), "label"), 0, (0)), 100000000, 0, -9001)], (0)), 100000000, 0, -9000); (Tag3 (Tag1 ((("Asttypes", 7799)), "private_flag"), 0, (0)), 100000000, 0, -9002); (Tag3 ((("class_field_kind", 7858)), 0, (0)), 100000000, 0, -9003)]), 100000000, 0, -8999)]), 0, (("astlib/ast_414.ml", 827, 34468, 34472), ("astlib/ast_414.ml", 827, 34468, 34533), 0), 0, Tag1 ("Astlib__Ast_414", 311)); (("Pcf_constraint", 915), ([(Tag2 ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9005); (Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -9006)]), 100000000, 0, -9004)]), 0, (("astlib/ast_414.ml", 833, 34773, 34777), ("astlib/ast_414.ml", 833, 34773, 34820), 0), 0, Tag1 ("Astlib__Ast_414", 312)); (("Pcf_initializer", 916), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -9007)]), 0, (("astlib/ast_414.ml", 834, 34850, 34854), ("astlib/ast_414.ml", 834, 34850, 34885), 0), 0, Tag1 ("Astlib__Ast_414", 313)); (("Pcf_attribute", 917), ([(Tag3 ((("attribute", 7817)), 0, (0)), 100000000, 0, -9008)]), 0, (("astlib/ast_414.ml", 835, 34910, 34914), ("astlib/ast_414.ml", 835, 34910, 34942), 0), 0, Tag1 ("Astlib__Ast_414", 314)); (("Pcf_extension", 918), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -9009)]), 0, (("astlib/ast_414.ml", 836, 34964, 34968), ("astlib/ast_414.ml", 836, 34964, 34996), 0), 0, Tag1 ("Astlib__Ast_414", 315))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -8988)), 0, 0, 0, 0, (("astlib/ast_414.ml", 796, 32801, 32803), ("astlib/ast_414.ml", 836, 34964, 34996), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 91)), 2, 0); Tag1 (("class_field_kind", 7858), (0, 0, Tag1 ([(("Cfk_virtual", 919), ([(Tag3 ((("core_type", 7821)), 0, (0)), 100000000, 0, -8985)]), 0, (("astlib/ast_414.ml", 839, 35085, 35089), ("astlib/ast_414.ml", 839, 35085, 35115), 0), 0, Tag1 ("Astlib__Ast_414", 316)); (("Cfk_concrete", 920), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "override_flag"), 0, (0)), 100000000, 0, -8986); (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -8987)]), 0, (("astlib/ast_414.ml", 840, 35116, 35120), ("astlib/ast_414.ml", 840, 35116, 35164), 0), 0, Tag1 ("Astlib__Ast_414", 317))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -8984)), 0, 0, 0, 0, (("astlib/ast_414.ml", 838, 35015, 35017), ("astlib/ast_414.ml", 840, 35116, 35164), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 92)), 2, 0); Tag1 (("class_declaration", 7859), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7850)), [(Tag3 ((("class_expr", 7853)), 0, (0)), 100000000, 0, -8983)], (0)), 100000000, 0, -8982)), 0, 0, 0, 0, (("astlib/ast_414.ml", 842, 35166, 35168), ("astlib/ast_414.ml", 842, 35166, 35214), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 93)), 2, 0); Tag1 (("module_type", 7860), (0, 0, [[(("pmty_desc", 921), 0, (Tag3 ((("module_type_desc", 7861)), 0, (0)), 100000000, 0, -8979), (("astlib/ast_414.ml", 849, 35366, 35372), ("astlib/ast_414.ml", 849, 35366, 35400), 0), 0, Tag1 ("Astlib__Ast_414", 318)); (("pmty_loc", 922), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8980), (("astlib/ast_414.ml", 850, 35401, 35407), ("astlib/ast_414.ml", 850, 35401, 35428), 0), 0, Tag1 ("Astlib__Ast_414", 319)); (("pmty_attributes", 923), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8981), (("astlib/ast_414.ml", 851, 35429, 35435), ("astlib/ast_414.ml", 851, 35429, 35463), 0), 0, Tag1 ("Astlib__Ast_414", 320))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -8978)), 0, 0, 0, 0, (("astlib/ast_414.ml", 847, 35300, 35302), ("astlib/ast_414.ml", 852, 35494, 35499), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 94)), 2, 0); Tag1 (("module_type_desc", 7861), (0, 0, Tag1 ([(("Pmty_ident", 924), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8967)], (0)), 100000000, 0, -8966)]), 0, (("astlib/ast_414.ml", 855, 35571, 35575), ("astlib/ast_414.ml", 855, 35571, 35606), 0), 0, Tag1 ("Astlib__Ast_414", 321)); (("Pmty_signature", 925), ([(Tag3 ((("signature", 7863)), 0, (0)), 100000000, 0, -8968)]), 0, (("astlib/ast_414.ml", 856, 35646, 35650), ("astlib/ast_414.ml", 856, 35646, 35679), 0), 0, Tag1 ("Astlib__Ast_414", 322)); (("Pmty_functor", 926), ([(Tag3 ((("functor_parameter", 7862)), 0, (0)), 100000000, 0, -8969); (Tag3 ((("module_type", 7860)), 0, (0)), 100000000, 0, -8970)]), 0, (("astlib/ast_414.ml", 857, 35702, 35706), ("astlib/ast_414.ml", 857, 35702, 35755), 0), 0, Tag1 ("Astlib__Ast_414", 323)); (("Pmty_with", 927), ([(Tag3 ((("module_type", 7860)), 0, (0)), 100000000, 0, -8971); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7875)), 0, (0)), 100000000, 0, -8973)], (0)), 100000000, 0, -8972)]), 0, (("astlib/ast_414.ml", 859, 35797, 35801), ("astlib/ast_414.ml", 859, 35797, 35850), 0), 0, Tag1 ("Astlib__Ast_414", 324)); (("Pmty_typeof", 928), ([(Tag3 ((("module_expr", 7876)), 0, (0)), 100000000, 0, -8974)]), 0, (("astlib/ast_414.ml", 860, 35873, 35877), ("astlib/ast_414.ml", 860, 35873, 35905), 0), 0, Tag1 ("Astlib__Ast_414", 325)); (("Pmty_extension", 929), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -8975)]), 0, (("astlib/ast_414.ml", 861, 35934, 35938), ("astlib/ast_414.ml", 861, 35934, 35967), 0), 0, Tag1 ("Astlib__Ast_414", 326)); (("Pmty_alias", 930), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8977)], (0)), 100000000, 0, -8976)]), 0, (("astlib/ast_414.ml", 862, 35984, 35988), ("astlib/ast_414.ml", 862, 35984, 36019), 0), 0, Tag1 ("Astlib__Ast_414", 327))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -8965)), 0, 0, 0, 0, (("astlib/ast_414.ml", 854, 35501, 35503), ("astlib/ast_414.ml", 862, 35984, 36019), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 95)), 2, 0); Tag1 (("functor_parameter", 7862), (0, 0, Tag1 ([(("Unit", 931), (0), 0, (("astlib/ast_414.ml", 865, 36114, 36118), ("astlib/ast_414.ml", 865, 36114, 36124), 0), 0, Tag1 ("Astlib__Ast_414", 328)); (("Named", 932), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8963)], (0)), 100000000, 0, -8962)], (0)), 100000000, 0, -8961); (Tag3 ((("module_type", 7860)), 0, (0)), 100000000, 0, -8964)]), 0, (("astlib/ast_414.ml", 866, 36138, 36142), ("astlib/ast_414.ml", 866, 36138, 36184), 0), 0, Tag1 ("Astlib__Ast_414", 329))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "functor_parameter"), 0, (0)), 100000000, 0, -8960)), 0, 0, 0, 0, (("astlib/ast_414.ml", 864, 36042, 36044), ("astlib/ast_414.ml", 866, 36138, 36184), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 96)), 2, 0); Tag1 (("signature", 7863), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7864)), 0, (0)), 100000000, 0, -8959)], (0)), 100000000, 0, -8958)), 0, 0, 0, 0, (("astlib/ast_414.ml", 871, 36332, 36334), ("astlib/ast_414.ml", 871, 36332, 36369), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 97)), 2, 0); Tag1 (("signature_item", 7864), (0, 0, [[(("psig_desc", 933), 0, (Tag3 ((("signature_item_desc", 7865)), 0, (0)), 100000000, 0, -8956), (("astlib/ast_414.ml", 875, 36443, 36449), ("astlib/ast_414.ml", 875, 36443, 36480), 0), 0, Tag1 ("Astlib__Ast_414", 330)); (("psig_loc", 934), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8957), (("astlib/ast_414.ml", 876, 36481, 36487), ("astlib/ast_414.ml", 876, 36481, 36508), 0), 0, Tag1 ("Astlib__Ast_414", 331))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -8955)), 0, 0, 0, 0, (("astlib/ast_414.ml", 873, 36371, 36373), ("astlib/ast_414.ml", 877, 36509, 36514), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 98)), 2, 0); Tag1 (("signature_item_desc", 7865), (0, 0, Tag1 ([(("Psig_value", 935), ([(Tag3 ((("value_description", 7835)), 0, (0)), 100000000, 0, -8932)]), 0, (("astlib/ast_414.ml", 880, 36592, 36596), ("astlib/ast_414.ml", 880, 36592, 36629), 0), 0, Tag1 ("Astlib__Ast_414", 332)); (("Psig_type", 936), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "rec_flag"), 0, (0)), 100000000, 0, -8933); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7836)), 0, (0)), 100000000, 0, -8935)], (0)), 100000000, 0, -8934)]), 0, (("astlib/ast_414.ml", 884, 36717, 36721), ("astlib/ast_414.ml", 884, 36717, 36768), 0), 0, Tag1 ("Astlib__Ast_414", 333)); (("Psig_typesubst", 937), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7836)), 0, (0)), 100000000, 0, -8937)], (0)), 100000000, 0, -8936)]), 0, (("astlib/ast_414.ml", 886, 36822, 36826), ("astlib/ast_414.ml", 886, 36822, 36867), 0), 0, Tag1 ("Astlib__Ast_414", 334)); (("Psig_typext", 938), ([(Tag3 ((("type_extension", 7841)), 0, (0)), 100000000, 0, -8938)]), 0, (("astlib/ast_414.ml", 888, 36923, 36927), ("astlib/ast_414.ml", 888, 36923, 36958), 0), 0, Tag1 ("Astlib__Ast_414", 335)); (("Psig_exception", 939), ([(Tag3 ((("type_exception", 7843)), 0, (0)), 100000000, 0, -8939)]), 0, (("astlib/ast_414.ml", 889, 36984, 36988), ("astlib/ast_414.ml", 889, 36984, 37022), 0), 0, Tag1 ("Astlib__Ast_414", 336)); (("Psig_module", 940), ([(Tag3 ((("module_declaration", 7866)), 0, (0)), 100000000, 0, -8940)]), 0, (("astlib/ast_414.ml", 890, 37050, 37054), ("astlib/ast_414.ml", 890, 37050, 37089), 0), 0, Tag1 ("Astlib__Ast_414", 337)); (("Psig_modsubst", 941), ([(Tag3 ((("module_substitution", 7867)), 0, (0)), 100000000, 0, -8941)]), 0, (("astlib/ast_414.ml", 891, 37133, 37137), ("astlib/ast_414.ml", 891, 37133, 37175), 0), 0, Tag1 ("Astlib__Ast_414", 338)); (("Psig_recmodule", 942), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7866)), 0, (0)), 100000000, 0, -8943)], (0)), 100000000, 0, -8942)]), 0, (("astlib/ast_414.ml", 892, 37200, 37204), ("astlib/ast_414.ml", 892, 37200, 37247), 0), 0, Tag1 ("Astlib__Ast_414", 339)); (("Psig_modtype", 943), ([(Tag3 ((("module_type_declaration", 7868)), 0, (0)), 100000000, 0, -8944)]), 0, (("astlib/ast_414.ml", 894, 37306, 37310), ("astlib/ast_414.ml", 894, 37306, 37351), 0), 0, Tag1 ("Astlib__Ast_414", 340)); (("Psig_modtypesubst", 944), ([(Tag3 ((("module_type_declaration", 7868)), 0, (0)), 100000000, 0, -8945)]), 0, (("astlib/ast_414.ml", 896, 37408, 37412), ("astlib/ast_414.ml", 896, 37408, 37458), 0), 0, Tag1 ("Astlib__Ast_414", 341)); (("Psig_open", 945), ([(Tag3 ((("open_description", 7870)), 0, (0)), 100000000, 0, -8946)]), 0, (("astlib/ast_414.ml", 898, 37499, 37503), ("astlib/ast_414.ml", 898, 37499, 37534), 0), 0, Tag1 ("Astlib__Ast_414", 342)); (("Psig_include", 946), ([(Tag3 ((("include_description", 7873)), 0, (0)), 100000000, 0, -8947)]), 0, (("astlib/ast_414.ml", 899, 37552, 37556), ("astlib/ast_414.ml", 899, 37552, 37593), 0), 0, Tag1 ("Astlib__Ast_414", 343)); (("Psig_class", 947), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7851)), 0, (0)), 100000000, 0, -8949)], (0)), 100000000, 0, -8948)]), 0, (("astlib/ast_414.ml", 900, 37615, 37619), ("astlib/ast_414.ml", 900, 37615, 37657), 0), 0, Tag1 ("Astlib__Ast_414", 344)); (("Psig_class_type", 948), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7852)), 0, (0)), 100000000, 0, -8951)], (0)), 100000000, 0, -8950)]), 0, (("astlib/ast_414.ml", 902, 37711, 37715), ("astlib/ast_414.ml", 902, 37711, 37763), 0), 0, Tag1 ("Astlib__Ast_414", 345)); (("Psig_attribute", 949), ([(Tag3 ((("attribute", 7817)), 0, (0)), 100000000, 0, -8952)]), 0, (("astlib/ast_414.ml", 904, 37824, 37828), ("astlib/ast_414.ml", 904, 37824, 37857), 0), 0, Tag1 ("Astlib__Ast_414", 346)); (("Psig_extension", 950), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -8953); (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8954)]), 0, (("astlib/ast_414.ml", 905, 37879, 37883), ("astlib/ast_414.ml", 905, 37879, 37925), 0), 0, Tag1 ("Astlib__Ast_414", 347))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -8931)), 0, 0, 0, 0, (("astlib/ast_414.ml", 879, 36516, 36518), ("astlib/ast_414.ml", 905, 37879, 37925), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 99)), 2, 0); Tag1 (("module_declaration", 7866), (0, 0, [[(("pmd_name", 951), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8927)], (0)), 100000000, 0, -8926)], (0)), 100000000, 0, -8925), (("astlib/ast_414.ml", 909, 38024, 38030), ("astlib/ast_414.ml", 909, 38024, 38058), 0), 0, Tag1 ("Astlib__Ast_414", 348)); (("pmd_type", 952), 0, (Tag3 ((("module_type", 7860)), 0, (0)), 100000000, 0, -8928), (("astlib/ast_414.ml", 910, 38059, 38065), ("astlib/ast_414.ml", 910, 38059, 38087), 0), 0, Tag1 ("Astlib__Ast_414", 349)); (("pmd_attributes", 953), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8929), (("astlib/ast_414.ml", 911, 38088, 38094), ("astlib/ast_414.ml", 911, 38088, 38121), 0), 0, Tag1 ("Astlib__Ast_414", 350)); (("pmd_loc", 954), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8930), (("astlib/ast_414.ml", 912, 38156, 38162), ("astlib/ast_414.ml", 912, 38156, 38182), 0), 0, Tag1 ("Astlib__Ast_414", 351))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -8924)), 0, 0, 0, 0, (("astlib/ast_414.ml", 907, 37944, 37946), ("astlib/ast_414.ml", 913, 38183, 38188), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 100)), 2, 0); Tag1 (("module_substitution", 7867), (0, 0, [[(("pms_name", 955), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8919)], (0)), 100000000, 0, -8918), (("astlib/ast_414.ml", 918, 38337, 38343), ("astlib/ast_414.ml", 918, 38337, 38364), 0), 0, Tag1 ("Astlib__Ast_414", 352)); (("pms_manifest", 956), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8921)], (0)), 100000000, 0, -8920), (("astlib/ast_414.ml", 919, 38365, 38371), ("astlib/ast_414.ml", 919, 38365, 38401), 0), 0, Tag1 ("Astlib__Ast_414", 353)); (("pms_attributes", 957), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8922), (("astlib/ast_414.ml", 920, 38402, 38408), ("astlib/ast_414.ml", 920, 38402, 38435), 0), 0, Tag1 ("Astlib__Ast_414", 354)); (("pms_loc", 958), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8923), (("astlib/ast_414.ml", 921, 38470, 38476), ("astlib/ast_414.ml", 921, 38470, 38496), 0), 0, Tag1 ("Astlib__Ast_414", 355))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_substitution"), 0, (0)), 100000000, 0, -8917)), 0, 0, 0, 0, (("astlib/ast_414.ml", 916, 38255, 38257), ("astlib/ast_414.ml", 922, 38497, 38502), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 101)), 2, 0); Tag1 (("module_type_declaration", 7868), (0, 0, [[(("pmtd_name", 959), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8912)], (0)), 100000000, 0, -8911), (("astlib/ast_414.ml", 927, 38660, 38666), ("astlib/ast_414.ml", 927, 38660, 38688), 0), 0, Tag1 ("Astlib__Ast_414", 356)); (("pmtd_type", 960), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7860)), 0, (0)), 100000000, 0, -8914)], (0)), 100000000, 0, -8913), (("astlib/ast_414.ml", 928, 38689, 38695), ("astlib/ast_414.ml", 928, 38689, 38725), 0), 0, Tag1 ("Astlib__Ast_414", 357)); (("pmtd_attributes", 961), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8915), (("astlib/ast_414.ml", 929, 38726, 38732), ("astlib/ast_414.ml", 929, 38726, 38760), 0), 0, Tag1 ("Astlib__Ast_414", 358)); (("pmtd_loc", 962), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8916), (("astlib/ast_414.ml", 930, 38795, 38801), ("astlib/ast_414.ml", 930, 38795, 38822), 0), 0, Tag1 ("Astlib__Ast_414", 359))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -8910)), 0, 0, 0, 0, (("astlib/ast_414.ml", 925, 38570, 38572), ("astlib/ast_414.ml", 931, 38823, 38828), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 102)), 2, 0); Tag1 (("open_infos", 7869), ([((("a")), 100000000, 0, -8906)], 1, [[(("popen_expr", 963), 0, ((("a")), 100000000, 0, -8906), (("astlib/ast_414.ml", 940, 39103, 39109), ("astlib/ast_414.ml", 940, 39103, 39124), 0), 0, Tag1 ("Astlib__Ast_414", 360)); (("popen_override", 964), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "override_flag"), 0, (0)), 100000000, 0, -8907), (("astlib/ast_414.ml", 941, 39125, 39131), ("astlib/ast_414.ml", 941, 39125, 39161), 0), 0, Tag1 ("Astlib__Ast_414", 361)); (("popen_loc", 965), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8908), (("astlib/ast_414.ml", 942, 39162, 39168), ("astlib/ast_414.ml", 942, 39162, 39190), 0), 0, Tag1 ("Astlib__Ast_414", 362)); (("popen_attributes", 966), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8909), (("astlib/ast_414.ml", 943, 39191, 39197), ("astlib/ast_414.ml", 943, 39191, 39226), 0), 0, Tag1 ("Astlib__Ast_414", 363))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "open_infos"), [((("a")), 100000000, 0, -8906)], (0)), 100000000, 0, -8905)), [25], [0], 0, 0, (("astlib/ast_414.ml", 938, 39033, 39035), ("astlib/ast_414.ml", 944, 39227, 39232), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 103)), 2, 0); Tag1 (("open_description", 7870), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7869)), [(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8904)], (0)), 100000000, 0, -8903)], (0)), 100000000, 0, -8902)), 0, 0, 0, 0, (("astlib/ast_414.ml", 953, 39619, 39621), ("astlib/ast_414.ml", 953, 39619, 39670), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 104)), 2, 0); Tag1 (("open_declaration", 7871), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7869)), [(Tag3 ((("module_expr", 7876)), 0, (0)), 100000000, 0, -8901)], (0)), 100000000, 0, -8900)), 0, 0, 0, 0, (("astlib/ast_414.ml", 958, 39768, 39770), ("astlib/ast_414.ml", 958, 39768, 39815), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 105)), 2, 0); Tag1 (("include_infos", 7872), ([((("a")), 100000000, 0, -8897)], 1, [[(("pincl_mod", 967), 0, ((("a")), 100000000, 0, -8897), (("astlib/ast_414.ml", 966, 40019, 40025), ("astlib/ast_414.ml", 966, 40019, 40039), 0), 0, Tag1 ("Astlib__Ast_414", 364)); (("pincl_loc", 968), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8898), (("astlib/ast_414.ml", 967, 40040, 40046), ("astlib/ast_414.ml", 967, 40040, 40068), 0), 0, Tag1 ("Astlib__Ast_414", 365)); (("pincl_attributes", 969), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8899), (("astlib/ast_414.ml", 968, 40069, 40075), ("astlib/ast_414.ml", 968, 40069, 40104), 0), 0, Tag1 ("Astlib__Ast_414", 366))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -8897)], (0)), 100000000, 0, -8896)), [25], [0], 0, 0, (("astlib/ast_414.ml", 964, 39943, 39945), ("astlib/ast_414.ml", 969, 40105, 40110), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 106)), 2, 0); Tag1 (("include_description", 7873), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7872)), [(Tag3 ((("module_type", 7860)), 0, (0)), 100000000, 0, -8895)], (0)), 100000000, 0, -8894)), 0, 0, 0, 0, (("astlib/ast_414.ml", 971, 40112, 40114), ("astlib/ast_414.ml", 971, 40112, 40165), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 107)), 2, 0); Tag1 (("include_declaration", 7874), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7872)), [(Tag3 ((("module_expr", 7876)), 0, (0)), 100000000, 0, -8893)], (0)), 100000000, 0, -8892)), 0, 0, 0, 0, (("astlib/ast_414.ml", 974, 40237, 40239), ("astlib/ast_414.ml", 974, 40237, 40290), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 108)), 2, 0); Tag1 (("with_constraint", 7875), (0, 0, Tag1 ([(("Pwith_type", 970), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8873)], (0)), 100000000, 0, -8872); (Tag3 ((("type_declaration", 7836)), 0, (0)), 100000000, 0, -8874)]), 0, (("astlib/ast_414.ml", 978, 40430, 40434), ("astlib/ast_414.ml", 978, 40430, 40484), 0), 0, Tag1 ("Astlib__Ast_414", 367)); (("Pwith_module", 971), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8876)], (0)), 100000000, 0, -8875); (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8878)], (0)), 100000000, 0, -8877)]), 0, (("astlib/ast_414.ml", 983, 40634, 40638), ("astlib/ast_414.ml", 983, 40634, 40689), 0), 0, Tag1 ("Astlib__Ast_414", 368)); (("Pwith_modtype", 972), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8880)], (0)), 100000000, 0, -8879); (Tag3 ((("module_type", 7860)), 0, (0)), 100000000, 0, -8881)]), 0, (("astlib/ast_414.ml", 985, 40727, 40731), ("astlib/ast_414.ml", 985, 40727, 40779), 0), 0, Tag1 ("Astlib__Ast_414", 369)); (("Pwith_modtypesubst", 973), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8883)], (0)), 100000000, 0, -8882); (Tag3 ((("module_type", 7860)), 0, (0)), 100000000, 0, -8884)]), 0, (("astlib/ast_414.ml", 987, 40822, 40826), ("astlib/ast_414.ml", 987, 40822, 40879), 0), 0, Tag1 ("Astlib__Ast_414", 370)); (("Pwith_typesubst", 974), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8886)], (0)), 100000000, 0, -8885); (Tag3 ((("type_declaration", 7836)), 0, (0)), 100000000, 0, -8887)]), 0, (("astlib/ast_414.ml", 989, 40929, 40933), ("astlib/ast_414.ml", 989, 40929, 40988), 0), 0, Tag1 ("Astlib__Ast_414", 371)); (("Pwith_modsubst", 975), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8889)], (0)), 100000000, 0, -8888); (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8891)], (0)), 100000000, 0, -8890)]), 0, (("astlib/ast_414.ml", 991, 41056, 41060), ("astlib/ast_414.ml", 991, 41056, 41113), 0), 0, Tag1 ("Astlib__Ast_414", 372))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -8871)), 0, 0, 0, 0, (("astlib/ast_414.ml", 977, 40362, 40364), ("astlib/ast_414.ml", 991, 41056, 41113), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 109)), 2, 0); Tag1 (("module_expr", 7876), (0, 0, [[(("pmod_desc", 976), 0, (Tag3 ((("module_expr_desc", 7877)), 0, (0)), 100000000, 0, -8868), (("astlib/ast_414.ml", 998, 41275, 41281), ("astlib/ast_414.ml", 998, 41275, 41309), 0), 0, Tag1 ("Astlib__Ast_414", 373)); (("pmod_loc", 977), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8869), (("astlib/ast_414.ml", 999, 41310, 41316), ("astlib/ast_414.ml", 999, 41310, 41337), 0), 0, Tag1 ("Astlib__Ast_414", 374)); (("pmod_attributes", 978), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8870), (("astlib/ast_414.ml", 1000, 41338, 41344), ("astlib/ast_414.ml", 1000, 41338, 41372), 0), 0, Tag1 ("Astlib__Ast_414", 375))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -8867)), 0, 0, 0, 0, (("astlib/ast_414.ml", 996, 41209, 41211), ("astlib/ast_414.ml", 1001, 41403, 41408), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 110)), 2, 0); Tag1 (("module_expr_desc", 7877), (0, 0, Tag1 ([(("Pmod_ident", 979), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8857)], (0)), 100000000, 0, -8856)]), 0, (("astlib/ast_414.ml", 1004, 41480, 41484), ("astlib/ast_414.ml", 1004, 41480, 41515), 0), 0, Tag1 ("Astlib__Ast_414", 376)); (("Pmod_structure", 980), ([(Tag3 ((("structure", 7878)), 0, (0)), 100000000, 0, -8858)]), 0, (("astlib/ast_414.ml", 1005, 41528, 41532), ("astlib/ast_414.ml", 1005, 41528, 41561), 0), 0, Tag1 ("Astlib__Ast_414", 377)); (("Pmod_functor", 981), ([(Tag3 ((("functor_parameter", 7862)), 0, (0)), 100000000, 0, -8859); (Tag3 ((("module_expr", 7876)), 0, (0)), 100000000, 0, -8860)]), 0, (("astlib/ast_414.ml", 1006, 41587, 41591), ("astlib/ast_414.ml", 1006, 41587, 41640), 0), 0, Tag1 ("Astlib__Ast_414", 378)); (("Pmod_apply", 982), ([(Tag3 ((("module_expr", 7876)), 0, (0)), 100000000, 0, -8861); (Tag3 ((("module_expr", 7876)), 0, (0)), 100000000, 0, -8862)]), 0, (("astlib/ast_414.ml", 1008, 41681, 41685), ("astlib/ast_414.ml", 1008, 41681, 41726), 0), 0, Tag1 ("Astlib__Ast_414", 379)); (("Pmod_constraint", 983), ([(Tag3 ((("module_expr", 7876)), 0, (0)), 100000000, 0, -8863); (Tag3 ((("module_type", 7860)), 0, (0)), 100000000, 0, -8864)]), 0, (("astlib/ast_414.ml", 1009, 41746, 41750), ("astlib/ast_414.ml", 1009, 41746, 41796), 0), 0, Tag1 ("Astlib__Ast_414", 380)); (("Pmod_unpack", 984), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -8865)]), 0, (("astlib/ast_414.ml", 1010, 41817, 41821), ("astlib/ast_414.ml", 1010, 41817, 41848), 0), 0, Tag1 ("Astlib__Ast_414", 381)); (("Pmod_extension", 985), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -8866)]), 0, (("astlib/ast_414.ml", 1011, 41867, 41871), ("astlib/ast_414.ml", 1011, 41867, 41900), 0), 0, Tag1 ("Astlib__Ast_414", 382))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -8855)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1003, 41410, 41412), ("astlib/ast_414.ml", 1011, 41867, 41900), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 111)), 2, 0); Tag1 (("structure", 7878), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7879)), 0, (0)), 100000000, 0, -8854)], (0)), 100000000, 0, -8853)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1013, 41918, 41920), ("astlib/ast_414.ml", 1013, 41918, 41955), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 112)), 2, 0); Tag1 (("structure_item", 7879), (0, 0, [[(("pstr_desc", 986), 0, (Tag3 ((("structure_item_desc", 7880)), 0, (0)), 100000000, 0, -8851), (("astlib/ast_414.ml", 1017, 42029, 42035), ("astlib/ast_414.ml", 1017, 42029, 42066), 0), 0, Tag1 ("Astlib__Ast_414", 383)); (("pstr_loc", 987), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8852), (("astlib/ast_414.ml", 1018, 42067, 42073), ("astlib/ast_414.ml", 1018, 42067, 42094), 0), 0, Tag1 ("Astlib__Ast_414", 384))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -8850)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1015, 41957, 41959), ("astlib/ast_414.ml", 1019, 42095, 42100), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 113)), 2, 0); Tag1 (("structure_item_desc", 7880), (0, 0, Tag1 ([(("Pstr_eval", 988), ([(Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -8826); (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8827)]), 0, (("astlib/ast_414.ml", 1022, 42178, 42182), ("astlib/ast_414.ml", 1022, 42178, 42220), 0), 0, Tag1 ("Astlib__Ast_414", 385)); (("Pstr_value", 989), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "rec_flag"), 0, (0)), 100000000, 0, -8828); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7881)), 0, (0)), 100000000, 0, -8830)], (0)), 100000000, 0, -8829)]), 0, (("astlib/ast_414.ml", 1023, 42233, 42237), ("astlib/ast_414.ml", 1023, 42233, 42282), 0), 0, Tag1 ("Astlib__Ast_414", 386)); (("Pstr_primitive", 990), ([(Tag3 ((("value_description", 7835)), 0, (0)), 100000000, 0, -8831)]), 0, (("astlib/ast_414.ml", 1030, 42632, 42636), ("astlib/ast_414.ml", 1030, 42632, 42673), 0), 0, Tag1 ("Astlib__Ast_414", 387)); (("Pstr_type", 991), ([(Tag3 (Tag1 ((("Asttypes", 7799)), "rec_flag"), 0, (0)), 100000000, 0, -8832); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7836)), 0, (0)), 100000000, 0, -8834)], (0)), 100000000, 0, -8833)]), 0, (("astlib/ast_414.ml", 1033, 42750, 42754), ("astlib/ast_414.ml", 1033, 42750, 42801), 0), 0, Tag1 ("Astlib__Ast_414", 388)); (("Pstr_typext", 992), ([(Tag3 ((("type_extension", 7841)), 0, (0)), 100000000, 0, -8835)]), 0, (("astlib/ast_414.ml", 1035, 42854, 42858), ("astlib/ast_414.ml", 1035, 42854, 42889), 0), 0, Tag1 ("Astlib__Ast_414", 389)); (("Pstr_exception", 993), ([(Tag3 ((("type_exception", 7843)), 0, (0)), 100000000, 0, -8836)]), 0, (("astlib/ast_414.ml", 1036, 42915, 42919), ("astlib/ast_414.ml", 1036, 42915, 42953), 0), 0, Tag1 ("Astlib__Ast_414", 390)); (("Pstr_module", 994), ([(Tag3 ((("module_binding", 7882)), 0, (0)), 100000000, 0, -8837)]), 0, (("astlib/ast_414.ml", 1039, 43026, 43030), ("astlib/ast_414.ml", 1039, 43026, 43061), 0), 0, Tag1 ("Astlib__Ast_414", 391)); (("Pstr_recmodule", 995), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7882)), 0, (0)), 100000000, 0, -8839)], (0)), 100000000, 0, -8838)]), 0, (("astlib/ast_414.ml", 1040, 43086, 43090), ("astlib/ast_414.ml", 1040, 43086, 43129), 0), 0, Tag1 ("Astlib__Ast_414", 392)); (("Pstr_modtype", 996), ([(Tag3 ((("module_type_declaration", 7868)), 0, (0)), 100000000, 0, -8840)]), 0, (("astlib/ast_414.ml", 1042, 43188, 43192), ("astlib/ast_414.ml", 1042, 43188, 43233), 0), 0, Tag1 ("Astlib__Ast_414", 393)); (("Pstr_open", 997), ([(Tag3 ((("open_declaration", 7871)), 0, (0)), 100000000, 0, -8841)]), 0, (("astlib/ast_414.ml", 1043, 43263, 43267), ("astlib/ast_414.ml", 1043, 43263, 43298), 0), 0, Tag1 ("Astlib__Ast_414", 394)); (("Pstr_class", 998), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7859)), 0, (0)), 100000000, 0, -8843)], (0)), 100000000, 0, -8842)]), 0, (("astlib/ast_414.ml", 1044, 43316, 43320), ("astlib/ast_414.ml", 1044, 43316, 43358), 0), 0, Tag1 ("Astlib__Ast_414", 395)); (("Pstr_class_type", 999), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7852)), 0, (0)), 100000000, 0, -8845)], (0)), 100000000, 0, -8844)]), 0, (("astlib/ast_414.ml", 1046, 43412, 43416), ("astlib/ast_414.ml", 1046, 43412, 43464), 0), 0, Tag1 ("Astlib__Ast_414", 396)); (("Pstr_include", 1000), ([(Tag3 ((("include_declaration", 7874)), 0, (0)), 100000000, 0, -8846)]), 0, (("astlib/ast_414.ml", 1048, 43525, 43529), ("astlib/ast_414.ml", 1048, 43525, 43566), 0), 0, Tag1 ("Astlib__Ast_414", 397)); (("Pstr_attribute", 1001), ([(Tag3 ((("attribute", 7817)), 0, (0)), 100000000, 0, -8847)]), 0, (("astlib/ast_414.ml", 1049, 43588, 43592), ("astlib/ast_414.ml", 1049, 43588, 43621), 0), 0, Tag1 ("Astlib__Ast_414", 398)); (("Pstr_extension", 1002), ([(Tag3 ((("extension", 7818)), 0, (0)), 100000000, 0, -8848); (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8849)]), 0, (("astlib/ast_414.ml", 1050, 43643, 43647), ("astlib/ast_414.ml", 1050, 43643, 43689), 0), 0, Tag1 ("Astlib__Ast_414", 399))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -8825)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1021, 42102, 42104), ("astlib/ast_414.ml", 1050, 43643, 43689), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 114)), 2, 0); Tag1 (("value_binding", 7881), (0, 0, [[(("pvb_pat", 1003), 0, (Tag3 ((("pattern", 7828)), 0, (0)), 100000000, 0, -8821), (("astlib/ast_414.ml", 1054, 43778, 43784), ("astlib/ast_414.ml", 1054, 43778, 43801), 0), 0, Tag1 ("Astlib__Ast_414", 400)); (("pvb_expr", 1004), 0, (Tag3 ((("expression", 7830)), 0, (0)), 100000000, 0, -8822), (("astlib/ast_414.ml", 1055, 43802, 43808), ("astlib/ast_414.ml", 1055, 43802, 43829), 0), 0, Tag1 ("Astlib__Ast_414", 401)); (("pvb_attributes", 1005), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8823), (("astlib/ast_414.ml", 1056, 43830, 43836), ("astlib/ast_414.ml", 1056, 43830, 43863), 0), 0, Tag1 ("Astlib__Ast_414", 402)); (("pvb_loc", 1006), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8824), (("astlib/ast_414.ml", 1057, 43864, 43870), ("astlib/ast_414.ml", 1057, 43864, 43890), 0), 0, Tag1 ("Astlib__Ast_414", 403))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -8820)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1052, 43708, 43710), ("astlib/ast_414.ml", 1058, 43891, 43896), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 115)), 2, 0); Tag1 (("module_binding", 7882), (0, 0, [[(("pmb_name", 1007), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8816)], (0)), 100000000, 0, -8815)], (0)), 100000000, 0, -8814), (("astlib/ast_414.ml", 1062, 43970, 43976), ("astlib/ast_414.ml", 1062, 43970, 44004), 0), 0, Tag1 ("Astlib__Ast_414", 404)); (("pmb_expr", 1008), 0, (Tag3 ((("module_expr", 7876)), 0, (0)), 100000000, 0, -8817), (("astlib/ast_414.ml", 1063, 44005, 44011), ("astlib/ast_414.ml", 1063, 44005, 44033), 0), 0, Tag1 ("Astlib__Ast_414", 405)); (("pmb_attributes", 1009), 0, (Tag3 ((("attributes", 7819)), 0, (0)), 100000000, 0, -8818), (("astlib/ast_414.ml", 1064, 44034, 44040), ("astlib/ast_414.ml", 1064, 44034, 44067), 0), 0, Tag1 ("Astlib__Ast_414", 406)); (("pmb_loc", 1010), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8819), (("astlib/ast_414.ml", 1065, 44068, 44074), ("astlib/ast_414.ml", 1065, 44068, 44094), 0), 0, Tag1 ("Astlib__Ast_414", 407))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -8813)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1060, 43898, 43900), ("astlib/ast_414.ml", 1066, 44095, 44100), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 116)), 2, 0); Tag1 (("toplevel_phrase", 7883), (0, 0, Tag1 ([(("Ptop_def", 1025), ([(Tag3 ((("structure", 7878)), 0, (0)), 100000000, 0, -8811)]), 0, (("astlib/ast_414.ml", 1074, 44293, 44297), ("astlib/ast_414.ml", 1074, 44293, 44320), 0), 0, Tag1 ("Astlib__Ast_414", 412)); (("Ptop_dir", 1026), ([(Tag3 ((("toplevel_directive", 7884)), 0, (0)), 100000000, 0, -8812)]), 0, (("astlib/ast_414.ml", 1075, 44321, 44325), ("astlib/ast_414.ml", 1075, 44321, 44357), 0), 0, Tag1 ("Astlib__Ast_414", 413))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -8810)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1073, 44224, 44226), ("astlib/ast_414.ml", 1075, 44321, 44357), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 408)), 1, 0); Tag1 (("toplevel_directive", 7884), (0, 0, [[(("pdir_name", 1027), 0, (Tag3 (Tag1 ((("Asttypes", 7799)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8806)], (0)), 100000000, 0, -8805), (("astlib/ast_414.ml", 1079, 44467, 44473), ("astlib/ast_414.ml", 1079, 44467, 44495), 0), 0, Tag1 ("Astlib__Ast_414", 414)); (("pdir_arg", 1028), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("directive_argument", 7885)), 0, (0)), 100000000, 0, -8808)], (0)), 100000000, 0, -8807), (("astlib/ast_414.ml", 1080, 44496, 44502), ("astlib/ast_414.ml", 1080, 44496, 44538), 0), 0, Tag1 ("Astlib__Ast_414", 415)); (("pdir_loc", 1029), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8809), (("astlib/ast_414.ml", 1081, 44539, 44545), ("astlib/ast_414.ml", 1081, 44539, 44566), 0), 0, Tag1 ("Astlib__Ast_414", 416))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "toplevel_directive"), 0, (0)), 100000000, 0, -8804)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1077, 44387, 44389), ("astlib/ast_414.ml", 1082, 44567, 44572), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 409)), 2, 0); Tag1 (("directive_argument", 7885), (0, 0, [[(("pdira_desc", 1030), 0, (Tag3 ((("directive_argument_desc", 7886)), 0, (0)), 100000000, 0, -8802), (("astlib/ast_414.ml", 1086, 44654, 44660), ("astlib/ast_414.ml", 1086, 44654, 44696), 0), 0, Tag1 ("Astlib__Ast_414", 417)); (("pdira_loc", 1031), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -8803), (("astlib/ast_414.ml", 1087, 44697, 44703), ("astlib/ast_414.ml", 1087, 44697, 44725), 0), 0, Tag1 ("Astlib__Ast_414", 418))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -8801)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1084, 44574, 44576), ("astlib/ast_414.ml", 1088, 44726, 44731), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 410)), 2, 0); Tag1 (("directive_argument_desc", 7886), (0, 0, Tag1 ([(("Pdir_string", 1032), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8795)]), 0, (("astlib/ast_414.ml", 1091, 44817, 44821), ("astlib/ast_414.ml", 1091, 44817, 44844), 0), 0, Tag1 ("Astlib__Ast_414", 419)); (("Pdir_int", 1033), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8796); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -8798)], (0)), 100000000, 0, -8797)]), 0, (("astlib/ast_414.ml", 1092, 44845, 44849), ("astlib/ast_414.ml", 1092, 44845, 44883), 0), 0, Tag1 ("Astlib__Ast_414", 420)); (("Pdir_ident", 1034), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -8799)]), 0, (("astlib/ast_414.ml", 1093, 44884, 44888), ("astlib/ast_414.ml", 1093, 44884, 44915), 0), 0, Tag1 ("Astlib__Ast_414", 421)); (("Pdir_bool", 1035), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -8800)]), 0, (("astlib/ast_414.ml", 1094, 44916, 44920), ("astlib/ast_414.ml", 1094, 44916, 44939), 0), 0, Tag1 ("Astlib__Ast_414", 422))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "directive_argument_desc"), 0, (0)), 100000000, 0, -8794)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1090, 44733, 44735), ("astlib/ast_414.ml", 1094, 44916, 44939), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 411)), 2, 0)]), 0, (("astlib/ast_414.ml", 67, 2814, 2814), ("astlib/ast_414.ml", 1095, 44940, 44943), 0), Tag1 ("Astlib__Ast_414", 423)), 0, 0); Tag3 (("Config", 7801), 0, (Tag1 ([(("ast_impl_magic_number", 7887), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9469), 0, (("astlib/ast_414.ml", 1098, 44968, 44974), ("astlib/ast_414.ml", 1098, 44968, 44995), 0), 0, Tag1 ("Astlib__Ast_414", 424)), 0); (("ast_intf_magic_number", 7888), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9468), 0, (("astlib/ast_414.ml", 1099, 45013, 45019), ("astlib/ast_414.ml", 1099, 45013, 45040), 0), 0, Tag1 ("Astlib__Ast_414", 425)), 0)]), 0, (("astlib/ast_414.ml", 1097, 44945, 44945), ("astlib/ast_414.ml", 1100, 45058, 45061), 0), Tag1 ("Astlib__Ast_414", 426)), 0, 0)]), 0, (("astlib/astlib.ml", 37, 1663, 1663), ("astlib/astlib.ml", 37, 1663, 1687), 0), Tag1 ("Astlib", 12)), 0, 0); (("version", 7794), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -8766), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7795), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -8765), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7796), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -8746), 0), 100000000, 0, -8745), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -8762), 0), 100000000, 0, -8761), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -8764), 0), 100000000, 0, -8763), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -8756), 0), 100000000, 0, -8755), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -8728), 0), 100000000, 0, -8727), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -8742), 0), 100000000, 0, -8741), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -8732), 0), 100000000, 0, -8731), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -8754), 0), 100000000, 0, -8753), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -8740), 0), 100000000, 0, -8739), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -8738), 0), 100000000, 0, -8737), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -8736), 0), 100000000, 0, -8735), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -8734), 0), 100000000, 0, -8733), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -8750), 0), 100000000, 0, -8749), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -8758), 0), 100000000, 0, -8757), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -8752), 0), 100000000, 0, -8751), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -8730), 0), 100000000, 0, -8729), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -8744), 0), 100000000, 0, -8743), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -8760), 0), 100000000, 0, -8759), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7793)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -8748), 0), 100000000, 0, -8747), (0, 100000000, 0, -8726)), 100000000, 0, 1203)), 100000000, 0, 1204)), 100000000, 0, 1205)), 100000000, 0, 1206)), 100000000, 0, 1207)), 100000000, 0, 1208)), 100000000, 0, 1209)), 100000000, 0, 1210)), 100000000, 0, 1211)), 100000000, 0, 1212)), 100000000, 0, 1213)), 100000000, 0, 1214)), 100000000, 0, 1215)), 100000000, 0, 1216)), 100000000, 0, 1217)), 100000000, 0, 1218)), 100000000, 0, 1219)), 100000000, 0, 1220)), 100000000, 0, -8707), (0)), 100000000, 0, -8706)], (0)), 100000000, 0, -8705)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7797), ((("witnesses", 6673)), [((("_")), 100000000, 0, -8704)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7796)), 0, (0)), 100000000, 0, -8703)], (0)), 100000000, 0, -8702)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7798), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7796)), 0, (0)), 100000000, 0, -8701)], (0)), 100000000, 0, -8700), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 157, 5940, 5940), ("ast/versions.mli", 157, 5940, 6005), 0), Tag1 ("Ppxlib_ast__Versions", 46)), 0, 0); Tag3 (("OCaml_500", 6689), 0, (Tag1 ([Tag3 (("Ast", 7889), 0, (Tag1 ([Tag3 (("Asttypes", 7895), 0, (Tag1 ([Tag1 (("constant", 7898), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9554)]), 0, (("astlib/ast_414.ml", 22, 1494, 1500), ("astlib/ast_414.ml", 22, 1494, 1516), 0), 0, Tag1 ("Astlib__Ast_414", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -9555)]), 0, (("astlib/ast_414.ml", 23, 1517, 1521), ("astlib/ast_414.ml", 23, 1517, 1541), 0), 0, Tag1 ("Astlib__Ast_414", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9556); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9557); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9559)], (0)), 100000000, 0, -9558)]), 0, (("astlib/ast_414.ml", 24, 1542, 1546), ("astlib/ast_414.ml", 24, 1542, 1599), 0), 0, Tag1 ("Astlib__Ast_414", 3)); (("Const_float", 333), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9560)]), 0, (("astlib/ast_414.ml", 25, 1600, 1604), ("astlib/ast_414.ml", 25, 1600, 1627), 0), 0, Tag1 ("Astlib__Ast_414", 4)); (("Const_int32", 334), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -9561)]), 0, (("astlib/ast_414.ml", 26, 1628, 1632), ("astlib/ast_414.ml", 26, 1628, 1654), 0), 0, Tag1 ("Astlib__Ast_414", 5)); (("Const_int64", 335), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -9562)]), 0, (("astlib/ast_414.ml", 27, 1655, 1659), ("astlib/ast_414.ml", 27, 1655, 1681), 0), 0, Tag1 ("Astlib__Ast_414", 6)); (("Const_nativeint", 336), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -9563)]), 0, (("astlib/ast_414.ml", 28, 1682, 1686), ("astlib/ast_414.ml", 28, 1682, 1716), 0), 0, Tag1 ("Astlib__Ast_414", 7))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "constant"), 0, (0)), 100000000, 0, -9553)), 0, 0, 0, 0, (("astlib/ast_414.ml", 21, 1440, 1442), ("astlib/ast_414.ml", 28, 1682, 1716), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 0)), 1, 0); Tag1 (("rec_flag", 7899), (0, 0, Tag1 ([(("Nonrecursive", 543), (0), 0, (("astlib/ast_414.ml", 30, 1718, 1772), ("astlib/ast_414.ml", 30, 1718, 1784), 0), 0, Tag1 ("Astlib__Ast_414", 9)); (("Recursive", 544), (0), 0, (("astlib/ast_414.ml", 30, 1718, 1785), ("astlib/ast_414.ml", 30, 1718, 1796), 0), 0, Tag1 ("Astlib__Ast_414", 10))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -9552)), 0, 0, 0, 0, (("astlib/ast_414.ml", 30, 1718, 1720), ("astlib/ast_414.ml", 30, 1718, 1796), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 8)), 1, 0); Tag1 (("direction_flag", 7900), (0, 0, Tag1 ([(("Upto", 546), (0), 0, (("astlib/ast_414.ml", 32, 1798, 1864), ("astlib/ast_414.ml", 32, 1798, 1868), 0), 0, Tag1 ("Astlib__Ast_414", 12)); (("Downto", 547), (0), 0, (("astlib/ast_414.ml", 32, 1798, 1869), ("astlib/ast_414.ml", 32, 1798, 1877), 0), 0, Tag1 ("Astlib__Ast_414", 13))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -9551)), 0, 0, 0, 0, (("astlib/ast_414.ml", 32, 1798, 1800), ("astlib/ast_414.ml", 32, 1798, 1877), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 11)), 1, 0); Tag1 (("private_flag", 7901), (0, 0, Tag1 ([(("Private", 549), (0), 0, (("astlib/ast_414.ml", 35, 1933, 1995), ("astlib/ast_414.ml", 35, 1933, 2002), 0), 0, Tag1 ("Astlib__Ast_414", 15)); (("Public", 550), (0), 0, (("astlib/ast_414.ml", 35, 1933, 2003), ("astlib/ast_414.ml", 35, 1933, 2011), 0), 0, Tag1 ("Astlib__Ast_414", 16))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -9550)), 0, 0, 0, 0, (("astlib/ast_414.ml", 35, 1933, 1935), ("astlib/ast_414.ml", 35, 1933, 2011), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 14)), 1, 0); Tag1 (("mutable_flag", 7902), (0, 0, Tag1 ([(("Immutable", 552), (0), 0, (("astlib/ast_414.ml", 37, 2013, 2075), ("astlib/ast_414.ml", 37, 2013, 2084), 0), 0, Tag1 ("Astlib__Ast_414", 18)); (("Mutable", 553), (0), 0, (("astlib/ast_414.ml", 37, 2013, 2085), ("astlib/ast_414.ml", 37, 2013, 2094), 0), 0, Tag1 ("Astlib__Ast_414", 19))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -9549)), 0, 0, 0, 0, (("astlib/ast_414.ml", 37, 2013, 2015), ("astlib/ast_414.ml", 37, 2013, 2094), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 17)), 1, 0); Tag1 (("virtual_flag", 7903), (0, 0, Tag1 ([(("Virtual", 555), (0), 0, (("astlib/ast_414.ml", 39, 2096, 2158), ("astlib/ast_414.ml", 39, 2096, 2165), 0), 0, Tag1 ("Astlib__Ast_414", 21)); (("Concrete", 556), (0), 0, (("astlib/ast_414.ml", 39, 2096, 2166), ("astlib/ast_414.ml", 39, 2096, 2176), 0), 0, Tag1 ("Astlib__Ast_414", 22))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -9548)), 0, 0, 0, 0, (("astlib/ast_414.ml", 39, 2096, 2098), ("astlib/ast_414.ml", 39, 2096, 2176), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 20)), 1, 0); Tag1 (("override_flag", 7904), (0, 0, Tag1 ([(("Override", 558), (0), 0, (("astlib/ast_414.ml", 41, 2178, 2242), ("astlib/ast_414.ml", 41, 2178, 2250), 0), 0, Tag1 ("Astlib__Ast_414", 24)); (("Fresh", 559), (0), 0, (("astlib/ast_414.ml", 41, 2178, 2251), ("astlib/ast_414.ml", 41, 2178, 2258), 0), 0, Tag1 ("Astlib__Ast_414", 25))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -9547)), 0, 0, 0, 0, (("astlib/ast_414.ml", 41, 2178, 2180), ("astlib/ast_414.ml", 41, 2178, 2258), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 23)), 1, 0); Tag1 (("closed_flag", 7905), (0, 0, Tag1 ([(("Closed", 561), (0), 0, (("astlib/ast_414.ml", 43, 2260, 2320), ("astlib/ast_414.ml", 43, 2260, 2326), 0), 0, Tag1 ("Astlib__Ast_414", 27)); (("Open", 562), (0), 0, (("astlib/ast_414.ml", 43, 2260, 2327), ("astlib/ast_414.ml", 43, 2260, 2333), 0), 0, Tag1 ("Astlib__Ast_414", 28))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -9546)), 0, 0, 0, 0, (("astlib/ast_414.ml", 43, 2260, 2262), ("astlib/ast_414.ml", 43, 2260, 2333), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 26)), 1, 0); Tag1 (("label", 7906), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9545)), 0, 0, 0, 0, (("astlib/ast_414.ml", 45, 2335, 2337), ("astlib/ast_414.ml", 45, 2335, 2356), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 29)), 1, 0); Tag1 (("arg_label", 7907), (0, 0, Tag1 ([(("Nolabel", 565), (0), 0, (("astlib/ast_414.ml", 48, 2414, 2420), ("astlib/ast_414.ml", 48, 2414, 2427), 0), 0, Tag1 ("Astlib__Ast_414", 31)); (("Labelled", 566), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9543)]), 0, (("astlib/ast_414.ml", 49, 2428, 2432), ("astlib/ast_414.ml", 49, 2428, 2452), 0), 0, Tag1 ("Astlib__Ast_414", 32)); (("Optional", 567), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9544)]), 0, (("astlib/ast_414.ml", 50, 2477, 2481), ("astlib/ast_414.ml", 50, 2477, 2501), 0), 0, Tag1 ("Astlib__Ast_414", 33))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -9542)), 0, 0, 0, 0, (("astlib/ast_414.ml", 47, 2358, 2360), ("astlib/ast_414.ml", 50, 2477, 2501), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 30)), 1, 0); Tag1 (("loc", 7908), ([((("a")), 100000000, 0, -9540)], 1, [[(("txt", 569), 0, ((("a")), 100000000, 0, -9540), (("astlib/ast_414.ml", 53, 2564, 2568), ("astlib/ast_414.ml", 53, 2564, 2577), 0), 0, Tag1 ("Astlib__Ast_414", 35)); (("loc", 570), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9541), (("astlib/ast_414.ml", 54, 2578, 2582), ("astlib/ast_414.ml", 54, 2578, 2599), 0), 0, Tag1 ("Astlib__Ast_414", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -9540)], (0)), 100000000, 0, -9539)), [25], [0], 0, 0, (("astlib/ast_414.ml", 52, 2528, 2530), ("astlib/ast_414.ml", 55, 2600, 2603), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 34)), 1, 0); Tag1 (("variance", 7909), (0, 0, Tag1 ([(("Covariant", 638), (0), 0, (("astlib/ast_414.ml", 58, 2659, 2663), ("astlib/ast_414.ml", 58, 2659, 2674), 0), 0, Tag1 ("Astlib__Ast_414", 38)); (("Contravariant", 639), (0), 0, (("astlib/ast_414.ml", 59, 2675, 2679), ("astlib/ast_414.ml", 59, 2675, 2694), 0), 0, Tag1 ("Astlib__Ast_414", 39)); (("NoVariance", 640), (0), 0, (("astlib/ast_414.ml", 60, 2695, 2699), ("astlib/ast_414.ml", 60, 2695, 2711), 0), 0, Tag1 ("Astlib__Ast_414", 40))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -9538)), 0, 0, 0, 0, (("astlib/ast_414.ml", 57, 2605, 2607), ("astlib/ast_414.ml", 60, 2695, 2711), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 37)), 1, 0); Tag1 (("injectivity", 7910), (0, 0, Tag1 ([(("Injective", 642), (0), 0, (("astlib/ast_414.ml", 63, 2773, 2777), ("astlib/ast_414.ml", 63, 2773, 2788), 0), 0, Tag1 ("Astlib__Ast_414", 42)); (("NoInjectivity", 643), (0), 0, (("astlib/ast_414.ml", 64, 2789, 2793), ("astlib/ast_414.ml", 64, 2789, 2808), 0), 0, Tag1 ("Astlib__Ast_414", 43))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "injectivity"), 0, (0)), 100000000, 0, -9537)), 0, 0, 0, 0, (("astlib/ast_414.ml", 62, 2713, 2715), ("astlib/ast_414.ml", 64, 2789, 2808), 0), 0, 1, 0, Tag1 ("Astlib__Ast_414", 41)), 1, 0)]), 0, (("astlib/ast_500.ml", 3, 125, 125), ("astlib/ast_500.ml", 5, 177, 180), 0), Tag1 ("Astlib__Ast_500", 0)), 0, 0); Tag3 (("Parsetree", 7896), 0, (Tag1 ([Tag1 (("constant", 7911), (0, 0, Tag1 ([(("Pconst_integer", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10227); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -10229)], (0)), 100000000, 0, -10228)]), 0, (("astlib/ast_414.ml", 71, 2912, 2916), ("astlib/ast_414.ml", 71, 2912, 2956), 0), 0, Tag1 ("Astlib__Ast_414", 46)); (("Pconst_char", 647), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -10230)]), 0, (("astlib/ast_414.ml", 77, 3168, 3172), ("astlib/ast_414.ml", 77, 3168, 3193), 0), 0, Tag1 ("Astlib__Ast_414", 47)); (("Pconst_string", 648), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10231); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10232); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10234)], (0)), 100000000, 0, -10233)]), 0, (("astlib/ast_414.ml", 78, 3227, 3231), ("astlib/ast_414.ml", 78, 3227, 3285), 0), 0, Tag1 ("Astlib__Ast_414", 48)); (("Pconst_float", 649), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10235); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -10237)], (0)), 100000000, 0, -10236)]), 0, (("astlib/ast_414.ml", 84, 3471, 3475), ("astlib/ast_414.ml", 84, 3471, 3513), 0), 0, Tag1 ("Astlib__Ast_414", 49))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "constant"), 0, (0)), 100000000, 0, -10226)), 0, 0, 0, 0, (("astlib/ast_414.ml", 70, 2857, 2859), ("astlib/ast_414.ml", 84, 3471, 3513), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 45)), 1, 0); Tag1 (("location_stack", 7912), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10225)], (0)), 100000000, 0, -10224)), 0, 0, 0, 0, (("astlib/ast_414.ml", 91, 3698, 3700), ("astlib/ast_414.ml", 91, 3698, 3737), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 50)), 1, 0); Tag1 (("attribute", 7913), (0, 0, [[(("attr_name", 717), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10221)], (0)), 100000000, 0, -10220), (("astlib/ast_414.ml", 96, 3829, 3833), ("astlib/ast_414.ml", 96, 3829, 3856), 0), 0, Tag1 ("Astlib__Ast_414", 117)); (("attr_payload", 718), 0, (Tag3 ((("payload", 7916)), 0, (0)), 100000000, 0, -10222), (("astlib/ast_414.ml", 97, 3857, 3861), ("astlib/ast_414.ml", 97, 3857, 3884), 0), 0, Tag1 ("Astlib__Ast_414", 118)); (("attr_loc", 719), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10223), (("astlib/ast_414.ml", 98, 3885, 3889), ("astlib/ast_414.ml", 98, 3885, 3911), 0), 0, Tag1 ("Astlib__Ast_414", 119))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "attribute"), 0, (0)), 100000000, 0, -10219)), 0, 0, 0, 0, (("astlib/ast_414.ml", 95, 3770, 3772), ("astlib/ast_414.ml", 99, 3912, 3915), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 51)), 1, 0); Tag1 (("extension", 7914), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10217)], (0)), 100000000, 0, -10216); (Tag3 ((("payload", 7916)), 0, (0)), 100000000, 0, -10218)]), 100000000, 0, -10215)), 0, 0, 0, 0, (("astlib/ast_414.ml", 106, 4082, 4084), ("astlib/ast_414.ml", 106, 4082, 4120), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 52)), 2, 0); Tag1 (("attributes", 7915), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 7913)), 0, (0)), 100000000, 0, -10214)], (0)), 100000000, 0, -10213)), 0, 0, 0, 0, (("astlib/ast_414.ml", 112, 4249, 4251), ("astlib/ast_414.ml", 112, 4249, 4282), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 53)), 2, 0); Tag1 (("payload", 7916), (0, 0, Tag1 ([(("PStr", 720), ([(Tag3 ((("structure", 7974)), 0, (0)), 100000000, 0, -10207)]), 0, (("astlib/ast_414.ml", 115, 4336, 4340), ("astlib/ast_414.ml", 115, 4336, 4359), 0), 0, Tag1 ("Astlib__Ast_414", 120)); (("PSig", 721), ([(Tag3 ((("signature", 7959)), 0, (0)), 100000000, 0, -10208)]), 0, (("astlib/ast_414.ml", 116, 4360, 4364), ("astlib/ast_414.ml", 116, 4360, 4383), 0), 0, Tag1 ("Astlib__Ast_414", 121)); (("PTyp", 722), ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10209)]), 0, (("astlib/ast_414.ml", 117, 4438, 4442), ("astlib/ast_414.ml", 117, 4438, 4461), 0), 0, Tag1 ("Astlib__Ast_414", 122)); (("PPat", 723), ([(Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10210); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10212)], (0)), 100000000, 0, -10211)]), 0, (("astlib/ast_414.ml", 118, 4514, 4518), ("astlib/ast_414.ml", 118, 4514, 4555), 0), 0, Tag1 ("Astlib__Ast_414", 123))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "payload"), 0, (0)), 100000000, 0, -10206)), 0, 0, 0, 0, (("astlib/ast_414.ml", 114, 4284, 4286), ("astlib/ast_414.ml", 118, 4514, 4555), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 54)), 2, 0); Tag1 (("core_type", 7917), (0, 0, [[(("ptyp_desc", 724), 0, (Tag3 ((("core_type_desc", 7918)), 0, (0)), 100000000, 0, -10202), (("astlib/ast_414.ml", 126, 4755, 4761), ("astlib/ast_414.ml", 126, 4755, 4787), 0), 0, Tag1 ("Astlib__Ast_414", 124)); (("ptyp_loc", 725), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10203), (("astlib/ast_414.ml", 127, 4788, 4794), ("astlib/ast_414.ml", 127, 4788, 4815), 0), 0, Tag1 ("Astlib__Ast_414", 125)); (("ptyp_loc_stack", 726), 0, (Tag3 ((("location_stack", 7912)), 0, (0)), 100000000, 0, -10204), (("astlib/ast_414.ml", 128, 4816, 4822), ("astlib/ast_414.ml", 128, 4816, 4853), 0), 0, Tag1 ("Astlib__Ast_414", 126)); (("ptyp_attributes", 727), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -10205), (("astlib/ast_414.ml", 129, 4854, 4860), ("astlib/ast_414.ml", 129, 4854, 4888), 0), 0, Tag1 ("Astlib__Ast_414", 127))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -10201)), 0, 0, 0, 0, (("astlib/ast_414.ml", 124, 4693, 4695), ("astlib/ast_414.ml", 130, 4919, 4924), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 55)), 2, 0); Tag1 (("core_type_desc", 7918), (0, 0, Tag1 ([(("Ptyp_any", 728), (0), 0, (("astlib/ast_414.ml", 133, 4992, 4996), ("astlib/ast_414.ml", 133, 4992, 5006), 0), 0, Tag1 ("Astlib__Ast_414", 128)); (("Ptyp_var", 729), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10170)]), 0, (("astlib/ast_414.ml", 134, 5019, 5023), ("astlib/ast_414.ml", 134, 5019, 5043), 0), 0, Tag1 ("Astlib__Ast_414", 129)); (("Ptyp_arrow", 730), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -10171); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10172); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10173)]), 0, (("astlib/ast_414.ml", 135, 5081, 5085), ("astlib/ast_414.ml", 135, 5081, 5134), 0), 0, Tag1 ("Astlib__Ast_414", 130)); (("Ptyp_tuple", 731), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10175)], (0)), 100000000, 0, -10174)]), 0, (("astlib/ast_414.ml", 144, 5578, 5582), ("astlib/ast_414.ml", 144, 5578, 5612), 0), 0, Tag1 ("Astlib__Ast_414", 131)); (("Ptyp_constr", 732), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10177)], (0)), 100000000, 0, -10176); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10179)], (0)), 100000000, 0, -10178)]), 0, (("astlib/ast_414.ml", 150, 5758, 5762), ("astlib/ast_414.ml", 150, 5758, 5811), 0), 0, Tag1 ("Astlib__Ast_414", 132)); (("Ptyp_object", 736), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 7922)), 0, (0)), 100000000, 0, -10181)], (0)), 100000000, 0, -10180); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -10182)]), 0, (("astlib/ast_414.ml", 156, 6048, 6052), ("astlib/ast_414.ml", 156, 6048, 6100), 0), 0, Tag1 ("Astlib__Ast_414", 133)); (("Ptyp_class", 737), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10184)], (0)), 100000000, 0, -10183); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10186)], (0)), 100000000, 0, -10185)]), 0, (("astlib/ast_414.ml", 163, 6466, 6470), ("astlib/ast_414.ml", 163, 6466, 6518), 0), 0, Tag1 ("Astlib__Ast_414", 134)); (("Ptyp_alias", 738), ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10187); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10188)]), 0, (("astlib/ast_414.ml", 169, 6758, 6762), ("astlib/ast_414.ml", 169, 6758, 6796), 0), 0, Tag1 ("Astlib__Ast_414", 135)); (("Ptyp_variant", 739), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 7920)), 0, (0)), 100000000, 0, -10190)], (0)), 100000000, 0, -10189); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -10191); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -10194)], (0)), 100000000, 0, -10193)], (0)), 100000000, 0, -10192)]), 0, (("astlib/ast_414.ml", 170, 6816, 6820), ("astlib/ast_414.ml", 170, 6816, 6886), 0), 0, Tag1 ("Astlib__Ast_414", 136)); (("Ptyp_poly", 740), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10197)], (0)), 100000000, 0, -10196)], (0)), 100000000, 0, -10195); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10198)]), 0, (("astlib/ast_414.ml", 185, 7623, 7627), ("astlib/ast_414.ml", 185, 7623, 7669), 0), 0, Tag1 ("Astlib__Ast_414", 137)); (("Ptyp_package", 741), ([(Tag3 ((("package_type", 7919)), 0, (0)), 100000000, 0, -10199)]), 0, (("astlib/ast_414.ml", 213, 8634, 8638), ("astlib/ast_414.ml", 213, 8634, 8668), 0), 0, Tag1 ("Astlib__Ast_414", 138)); (("Ptyp_extension", 742), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -10200)]), 0, (("astlib/ast_414.ml", 214, 8691, 8695), ("astlib/ast_414.ml", 214, 8691, 8724), 0), 0, Tag1 ("Astlib__Ast_414", 139))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "core_type_desc"), 0, (0)), 100000000, 0, -10169)), 0, 0, 0, 0, (("astlib/ast_414.ml", 132, 4926, 4928), ("astlib/ast_414.ml", 214, 8691, 8724), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 56)), 2, 0); Tag1 (("package_type", 7919), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10163)], (0)), 100000000, 0, -10162); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10167)], (0)), 100000000, 0, -10166); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10168)]), 100000000, 0, -10165)], (0)), 100000000, 0, -10164)]), 100000000, 0, -10161)), 0, 0, 0, 0, (("astlib/ast_414.ml", 216, 8743, 8745), ("astlib/ast_414.ml", 216, 8743, 8816), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 57)), 2, 0); Tag1 (("row_field", 7920), (0, 0, [[(("prf_desc", 743), 0, (Tag3 ((("row_field_desc", 7921)), 0, (0)), 100000000, 0, -10158), (("astlib/ast_414.ml", 224, 9098, 9102), ("astlib/ast_414.ml", 224, 9098, 9128), 0), 0, Tag1 ("Astlib__Ast_414", 140)); (("prf_loc", 744), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10159), (("astlib/ast_414.ml", 225, 9129, 9133), ("astlib/ast_414.ml", 225, 9129, 9154), 0), 0, Tag1 ("Astlib__Ast_414", 141)); (("prf_attributes", 745), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -10160), (("astlib/ast_414.ml", 226, 9155, 9159), ("astlib/ast_414.ml", 226, 9155, 9187), 0), 0, Tag1 ("Astlib__Ast_414", 142))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "row_field"), 0, (0)), 100000000, 0, -10157)), 0, 0, 0, 0, (("astlib/ast_414.ml", 223, 9040, 9042), ("astlib/ast_414.ml", 227, 9188, 9191), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 58)), 2, 0); Tag1 (("row_field_desc", 7921), (0, 0, Tag1 ([(("Rtag", 746), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -10152)], (0)), 100000000, 0, -10151); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -10153); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10155)], (0)), 100000000, 0, -10154)]), 0, (("astlib/ast_414.ml", 230, 9259, 9263), ("astlib/ast_414.ml", 230, 9259, 9306), 0), 0, Tag1 ("Astlib__Ast_414", 143)); (("Rinherit", 747), ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10156)]), 0, (("astlib/ast_414.ml", 242, 9900, 9904), ("astlib/ast_414.ml", 242, 9900, 9927), 0), 0, Tag1 ("Astlib__Ast_414", 144))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "row_field_desc"), 0, (0)), 100000000, 0, -10150)), 0, 0, 0, 0, (("astlib/ast_414.ml", 229, 9193, 9195), ("astlib/ast_414.ml", 242, 9900, 9927), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 59)), 2, 0); Tag1 (("object_field", 7922), (0, 0, [[(("pof_desc", 748), 0, (Tag3 ((("object_field_desc", 7923)), 0, (0)), 100000000, 0, -10147), (("astlib/ast_414.ml", 245, 10011, 10015), ("astlib/ast_414.ml", 245, 10011, 10044), 0), 0, Tag1 ("Astlib__Ast_414", 145)); (("pof_loc", 749), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10148), (("astlib/ast_414.ml", 246, 10045, 10049), ("astlib/ast_414.ml", 246, 10045, 10070), 0), 0, Tag1 ("Astlib__Ast_414", 146)); (("pof_attributes", 750), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -10149), (("astlib/ast_414.ml", 247, 10071, 10075), ("astlib/ast_414.ml", 247, 10071, 10103), 0), 0, Tag1 ("Astlib__Ast_414", 147))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "object_field"), 0, (0)), 100000000, 0, -10146)), 0, 0, 0, 0, (("astlib/ast_414.ml", 244, 9947, 9949), ("astlib/ast_414.ml", 248, 10104, 10107), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 60)), 2, 0); Tag1 (("object_field_desc", 7923), (0, 0, Tag1 ([(("Otag", 751), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -10143)], (0)), 100000000, 0, -10142); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10144)]), 0, (("astlib/ast_414.ml", 251, 10181, 10185), ("astlib/ast_414.ml", 251, 10181, 10216), 0), 0, Tag1 ("Astlib__Ast_414", 148)); (("Oinherit", 752), ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10145)]), 0, (("astlib/ast_414.ml", 252, 10217, 10221), ("astlib/ast_414.ml", 252, 10217, 10244), 0), 0, Tag1 ("Astlib__Ast_414", 149))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "object_field_desc"), 0, (0)), 100000000, 0, -10141)), 0, 0, 0, 0, (("astlib/ast_414.ml", 250, 10109, 10111), ("astlib/ast_414.ml", 252, 10217, 10244), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 61)), 2, 0); Tag1 (("pattern", 7924), (0, 0, [[(("ppat_desc", 753), 0, (Tag3 ((("pattern_desc", 7925)), 0, (0)), 100000000, 0, -10137), (("astlib/ast_414.ml", 258, 10327, 10333), ("astlib/ast_414.ml", 258, 10327, 10357), 0), 0, Tag1 ("Astlib__Ast_414", 150)); (("ppat_loc", 754), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10138), (("astlib/ast_414.ml", 259, 10358, 10364), ("astlib/ast_414.ml", 259, 10358, 10385), 0), 0, Tag1 ("Astlib__Ast_414", 151)); (("ppat_loc_stack", 755), 0, (Tag3 ((("location_stack", 7912)), 0, (0)), 100000000, 0, -10139), (("astlib/ast_414.ml", 260, 10386, 10392), ("astlib/ast_414.ml", 260, 10386, 10423), 0), 0, Tag1 ("Astlib__Ast_414", 152)); (("ppat_attributes", 756), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -10140), (("astlib/ast_414.ml", 261, 10424, 10430), ("astlib/ast_414.ml", 261, 10424, 10458), 0), 0, Tag1 ("Astlib__Ast_414", 153))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -10136)), 0, 0, 0, 0, (("astlib/ast_414.ml", 256, 10269, 10271), ("astlib/ast_414.ml", 262, 10489, 10494), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 62)), 2, 0); Tag1 (("pattern_desc", 7925), (0, 0, Tag1 ([(("Ppat_any", 757), (0), 0, (("astlib/ast_414.ml", 265, 10558, 10562), ("astlib/ast_414.ml", 265, 10558, 10572), 0), 0, Tag1 ("Astlib__Ast_414", 154)); (("Ppat_var", 758), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10093)], (0)), 100000000, 0, -10092)]), 0, (("astlib/ast_414.ml", 266, 10598, 10602), ("astlib/ast_414.ml", 266, 10598, 10626), 0), 0, Tag1 ("Astlib__Ast_414", 155)); (("Ppat_alias", 759), ([(Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10094); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10096)], (0)), 100000000, 0, -10095)]), 0, (("astlib/ast_414.ml", 267, 10666, 10670), ("astlib/ast_414.ml", 267, 10666, 10706), 0), 0, Tag1 ("Astlib__Ast_414", 156)); (("Ppat_constant", 760), ([(Tag3 ((("constant", 7911)), 0, (0)), 100000000, 0, -10097)]), 0, (("astlib/ast_414.ml", 269, 10757, 10761), ("astlib/ast_414.ml", 269, 10757, 10788), 0), 0, Tag1 ("Astlib__Ast_414", 157)); (("Ppat_interval", 761), ([(Tag3 ((("constant", 7911)), 0, (0)), 100000000, 0, -10098); (Tag3 ((("constant", 7911)), 0, (0)), 100000000, 0, -10099)]), 0, (("astlib/ast_414.ml", 271, 10867, 10871), ("astlib/ast_414.ml", 271, 10867, 10909), 0), 0, Tag1 ("Astlib__Ast_414", 158)); (("Ppat_tuple", 762), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10101)], (0)), 100000000, 0, -10100)]), 0, (("astlib/ast_414.ml", 276, 11068, 11072), ("astlib/ast_414.ml", 276, 11068, 11100), 0), 0, Tag1 ("Astlib__Ast_414", 159)); (("Ppat_construct", 763), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10103)], (0)), 100000000, 0, -10102); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10108)], (0)), 100000000, 0, -10107)], (0)), 100000000, 0, -10106); (Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10109)]), 100000000, 0, -10105)], (0)), 100000000, 0, -10104)]), 0, (("astlib/ast_414.ml", 281, 11186, 11190), ("astlib/ast_414.ml", 281, 11186, 11262), 0), 0, Tag1 ("Astlib__Ast_414", 160)); (("Ppat_variant", 764), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -10110); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10112)], (0)), 100000000, 0, -10111)]), 0, (("astlib/ast_414.ml", 289, 11648, 11652), ("astlib/ast_414.ml", 289, 11648, 11692), 0), 0, Tag1 ("Astlib__Ast_414", 161)); (("Ppat_record", 765), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10116)], (0)), 100000000, 0, -10115); (Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10117)]), 100000000, 0, -10114)], (0)), 100000000, 0, -10113); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "closed_flag"), 0, (0)), 100000000, 0, -10118)]), 0, (("astlib/ast_414.ml", 294, 11846, 11850), ("astlib/ast_414.ml", 294, 11846, 11913), 0), 0, Tag1 ("Astlib__Ast_414", 162)); (("Ppat_array", 766), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10120)], (0)), 100000000, 0, -10119)]), 0, (("astlib/ast_414.ml", 303, 12260, 12264), ("astlib/ast_414.ml", 303, 12260, 12292), 0), 0, Tag1 ("Astlib__Ast_414", 163)); (("Ppat_or", 767), ([(Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10121); (Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10122)]), 0, (("astlib/ast_414.ml", 304, 12329, 12333), ("astlib/ast_414.ml", 304, 12329, 12363), 0), 0, Tag1 ("Astlib__Ast_414", 164)); (("Ppat_constraint", 768), ([(Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10123); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10124)]), 0, (("astlib/ast_414.ml", 305, 12390, 12394), ("astlib/ast_414.ml", 305, 12390, 12434), 0), 0, Tag1 ("Astlib__Ast_414", 165)); (("Ppat_type", 769), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10126)], (0)), 100000000, 0, -10125)]), 0, (("astlib/ast_414.ml", 306, 12461, 12465), ("astlib/ast_414.ml", 306, 12461, 12495), 0), 0, Tag1 ("Astlib__Ast_414", 166)); (("Ppat_lazy", 770), ([(Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10127)]), 0, (("astlib/ast_414.ml", 307, 12522, 12526), ("astlib/ast_414.ml", 307, 12522, 12548), 0), 0, Tag1 ("Astlib__Ast_414", 167)); (("Ppat_unpack", 771), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10130)], (0)), 100000000, 0, -10129)], (0)), 100000000, 0, -10128)]), 0, (("astlib/ast_414.ml", 308, 12574, 12578), ("astlib/ast_414.ml", 308, 12574, 12612), 0), 0, Tag1 ("Astlib__Ast_414", 168)); (("Ppat_exception", 772), ([(Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10131)]), 0, (("astlib/ast_414.ml", 316, 12893, 12897), ("astlib/ast_414.ml", 316, 12893, 12924), 0), 0, Tag1 ("Astlib__Ast_414", 169)); (("Ppat_extension", 773), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -10132)]), 0, (("astlib/ast_414.ml", 317, 12955, 12959), ("astlib/ast_414.ml", 317, 12955, 12988), 0), 0, Tag1 ("Astlib__Ast_414", 170)); (("Ppat_open", 774), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10134)], (0)), 100000000, 0, -10133); (Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10135)]), 0, (("astlib/ast_414.ml", 318, 13013, 13017), ("astlib/ast_414.ml", 318, 13013, 13057), 0), 0, Tag1 ("Astlib__Ast_414", 171))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "pattern_desc"), 0, (0)), 100000000, 0, -10091)), 0, 0, 0, 0, (("astlib/ast_414.ml", 264, 10496, 10498), ("astlib/ast_414.ml", 318, 13013, 13057), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 63)), 2, 0); Tag1 (("expression", 7926), (0, 0, [[(("pexp_desc", 775), 0, (Tag3 ((("expression_desc", 7927)), 0, (0)), 100000000, 0, -10087), (("astlib/ast_414.ml", 324, 13181, 13188), ("astlib/ast_414.ml", 324, 13181, 13215), 0), 0, Tag1 ("Astlib__Ast_414", 172)); (("pexp_loc", 776), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10088), (("astlib/ast_414.ml", 325, 13216, 13223), ("astlib/ast_414.ml", 325, 13216, 13244), 0), 0, Tag1 ("Astlib__Ast_414", 173)); (("pexp_loc_stack", 777), 0, (Tag3 ((("location_stack", 7912)), 0, (0)), 100000000, 0, -10089), (("astlib/ast_414.ml", 326, 13245, 13252), ("astlib/ast_414.ml", 326, 13245, 13283), 0), 0, Tag1 ("Astlib__Ast_414", 174)); (("pexp_attributes", 778), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -10090), (("astlib/ast_414.ml", 327, 13284, 13291), ("astlib/ast_414.ml", 327, 13284, 13319), 0), 0, Tag1 ("Astlib__Ast_414", 175))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -10086)), 0, 0, 0, 0, (("astlib/ast_414.ml", 322, 13115, 13117), ("astlib/ast_414.ml", 328, 13350, 13357), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 64)), 2, 0); Tag1 (("expression_desc", 7927), (0, 0, Tag1 ([(("Pexp_ident", 779), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9984)], (0)), 100000000, 0, -9983)]), 0, (("astlib/ast_414.ml", 331, 13427, 13431), ("astlib/ast_414.ml", 331, 13427, 13462), 0), 0, Tag1 ("Astlib__Ast_414", 176)); (("Pexp_constant", 780), ([(Tag3 ((("constant", 7911)), 0, (0)), 100000000, 0, -9985)]), 0, (("astlib/ast_414.ml", 334, 13523, 13527), ("astlib/ast_414.ml", 334, 13523, 13554), 0), 0, Tag1 ("Astlib__Ast_414", 177)); (("Pexp_let", 781), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -9986); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7977)), 0, (0)), 100000000, 0, -9988)], (0)), 100000000, 0, -9987); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9989)]), 0, (("astlib/ast_414.ml", 337, 13659, 13663), ("astlib/ast_414.ml", 337, 13659, 13719), 0), 0, Tag1 ("Astlib__Ast_414", 178)); (("Pexp_function", 782), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7928)), 0, (0)), 100000000, 0, -9991)], (0)), 100000000, 0, -9990)]), 0, (("astlib/ast_414.ml", 344, 14079, 14083), ("astlib/ast_414.ml", 344, 14079, 14111), 0), 0, Tag1 ("Astlib__Ast_414", 179)); (("Pexp_fun", 783), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -9992); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9994)], (0)), 100000000, 0, -9993); (Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -9995); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9996)]), 0, (("astlib/ast_414.ml", 345, 14157, 14161), ("astlib/ast_414.ml", 345, 14157, 14227), 0), 0, Tag1 ("Astlib__Ast_414", 180)); (("Pexp_apply", 784), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9997); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -10000); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10001)]), 100000000, 0, -9999)], (0)), 100000000, 0, -9998)]), 0, (("astlib/ast_414.ml", 368, 15304, 15308), ("astlib/ast_414.ml", 368, 15304, 15366), 0), 0, Tag1 ("Astlib__Ast_414", 181)); (("Pexp_match", 785), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10002); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7928)), 0, (0)), 100000000, 0, -10004)], (0)), 100000000, 0, -10003)]), 0, (("astlib/ast_414.ml", 379, 15793, 15797), ("astlib/ast_414.ml", 379, 15793, 15835), 0), 0, Tag1 ("Astlib__Ast_414", 182)); (("Pexp_try", 786), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10005); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 7928)), 0, (0)), 100000000, 0, -10007)], (0)), 100000000, 0, -10006)]), 0, (("astlib/ast_414.ml", 381, 15893, 15897), ("astlib/ast_414.ml", 381, 15893, 15933), 0), 0, Tag1 ("Astlib__Ast_414", 183)); (("Pexp_tuple", 787), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10009)], (0)), 100000000, 0, -10008)]), 0, (("astlib/ast_414.ml", 383, 15989, 15993), ("astlib/ast_414.ml", 383, 15989, 16024), 0), 0, Tag1 ("Astlib__Ast_414", 184)); (("Pexp_construct", 788), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10011)], (0)), 100000000, 0, -10010); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10013)], (0)), 100000000, 0, -10012)]), 0, (("astlib/ast_414.ml", 388, 16112, 16116), ("astlib/ast_414.ml", 388, 16112, 16171), 0), 0, Tag1 ("Astlib__Ast_414", 185)); (("Pexp_variant", 789), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -10014); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10016)], (0)), 100000000, 0, -10015)]), 0, (("astlib/ast_414.ml", 394, 16424, 16428), ("astlib/ast_414.ml", 394, 16424, 16471), 0), 0, Tag1 ("Astlib__Ast_414", 186)); (("Pexp_record", 790), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10020)], (0)), 100000000, 0, -10019); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10021)]), 100000000, 0, -10018)], (0)), 100000000, 0, -10017); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10023)], (0)), 100000000, 0, -10022)]), 0, (("astlib/ast_414.ml", 399, 16623, 16627), ("astlib/ast_414.ml", 399, 16623, 16699), 0), 0, Tag1 ("Astlib__Ast_414", 187)); (("Pexp_field", 791), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10024); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10026)], (0)), 100000000, 0, -10025)]), 0, (("astlib/ast_414.ml", 406, 16960, 16964), ("astlib/ast_414.ml", 406, 16960, 17008), 0), 0, Tag1 ("Astlib__Ast_414", 188)); (("Pexp_setfield", 792), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10027); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10029)], (0)), 100000000, 0, -10028); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10030)]), 0, (("astlib/ast_414.ml", 407, 17023, 17027), ("astlib/ast_414.ml", 407, 17023, 17087), 0), 0, Tag1 ("Astlib__Ast_414", 189)); (("Pexp_array", 793), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10032)], (0)), 100000000, 0, -10031)]), 0, (("astlib/ast_414.ml", 409, 17116, 17120), ("astlib/ast_414.ml", 409, 17116, 17151), 0), 0, Tag1 ("Astlib__Ast_414", 190)); (("Pexp_ifthenelse", 794), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10033); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10034); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10036)], (0)), 100000000, 0, -10035)]), 0, (("astlib/ast_414.ml", 410, 17180, 17184), ("astlib/ast_414.ml", 410, 17180, 17248), 0), 0, Tag1 ("Astlib__Ast_414", 191)); (("Pexp_sequence", 795), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10037); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10038)]), 0, (("astlib/ast_414.ml", 412, 17288, 17292), ("astlib/ast_414.ml", 412, 17288, 17334), 0), 0, Tag1 ("Astlib__Ast_414", 192)); (("Pexp_while", 796), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10039); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10040)]), 0, (("astlib/ast_414.ml", 413, 17352, 17356), ("astlib/ast_414.ml", 413, 17352, 17395), 0), 0, Tag1 ("Astlib__Ast_414", 193)); (("Pexp_for", 797), ([(Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -10041); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10042); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10043); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "direction_flag"), 0, (0)), 100000000, 0, -10044); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10045)]), 0, (("astlib/ast_414.ml", 414, 17426, 17430), ("astlib/ast_414.ml", 414, 17426, 17507), 0), 0, Tag1 ("Astlib__Ast_414", 194)); (("Pexp_constraint", 798), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10046); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10047)]), 0, (("astlib/ast_414.ml", 421, 17841, 17845), ("astlib/ast_414.ml", 421, 17841, 17888), 0), 0, Tag1 ("Astlib__Ast_414", 195)); (("Pexp_coerce", 799), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10048); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10050)], (0)), 100000000, 0, -10049); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10051)]), 0, (("astlib/ast_414.ml", 422, 17907, 17911), ("astlib/ast_414.ml", 422, 17907, 17969), 0), 0, Tag1 ("Astlib__Ast_414", 196)); (("Pexp_send", 800), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10052); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -10054)], (0)), 100000000, 0, -10053)]), 0, (("astlib/ast_414.ml", 427, 18146, 18150), ("astlib/ast_414.ml", 427, 18146, 18187), 0), 0, Tag1 ("Astlib__Ast_414", 197)); (("Pexp_new", 801), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10056)], (0)), 100000000, 0, -10055)]), 0, (("astlib/ast_414.ml", 428, 18204, 18208), ("astlib/ast_414.ml", 428, 18204, 18237), 0), 0, Tag1 ("Astlib__Ast_414", 198)); (("Pexp_setinstvar", 802), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -10058)], (0)), 100000000, 0, -10057); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10059)]), 0, (("astlib/ast_414.ml", 429, 18256, 18260), ("astlib/ast_414.ml", 429, 18256, 18303), 0), 0, Tag1 ("Astlib__Ast_414", 199)); (("Pexp_override", 803), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -10063)], (0)), 100000000, 0, -10062); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10064)]), 100000000, 0, -10061)], (0)), 100000000, 0, -10060)]), 0, (("astlib/ast_414.ml", 430, 18321, 18325), ("astlib/ast_414.ml", 430, 18321, 18373), 0), 0, Tag1 ("Astlib__Ast_414", 200)); (("Pexp_letmodule", 804), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10067)], (0)), 100000000, 0, -10066)], (0)), 100000000, 0, -10065); (Tag3 ((("module_expr", 7972)), 0, (0)), 100000000, 0, -10068); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10069)]), 0, (("astlib/ast_414.ml", 432, 18419, 18423), ("astlib/ast_414.ml", 432, 18419, 18487), 0), 0, Tag1 ("Astlib__Ast_414", 201)); (("Pexp_letexception", 805), ([(Tag3 ((("extension_constructor", 7938)), 0, (0)), 100000000, 0, -10070); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10071)]), 0, (("astlib/ast_414.ml", 434, 18528, 18532), ("astlib/ast_414.ml", 434, 18528, 18589), 0), 0, Tag1 ("Astlib__Ast_414", 202)); (("Pexp_assert", 806), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10072)]), 0, (("astlib/ast_414.ml", 436, 18628, 18632), ("astlib/ast_414.ml", 436, 18628, 18659), 0), 0, Tag1 ("Astlib__Ast_414", 203)); (("Pexp_lazy", 807), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10073)]), 0, (("astlib/ast_414.ml", 441, 18784, 18788), ("astlib/ast_414.ml", 441, 18784, 18813), 0), 0, Tag1 ("Astlib__Ast_414", 204)); (("Pexp_poly", 808), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10074); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -10076)], (0)), 100000000, 0, -10075)]), 0, (("astlib/ast_414.ml", 442, 18831, 18835), ("astlib/ast_414.ml", 442, 18831, 18879), 0), 0, Tag1 ("Astlib__Ast_414", 205)); (("Pexp_object", 809), ([(Tag3 ((("class_structure", 7951)), 0, (0)), 100000000, 0, -10077)]), 0, (("astlib/ast_414.ml", 448, 19075, 19079), ("astlib/ast_414.ml", 448, 19075, 19111), 0), 0, Tag1 ("Astlib__Ast_414", 206)); (("Pexp_newtype", 810), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10079)], (0)), 100000000, 0, -10078); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10080)]), 0, (("astlib/ast_414.ml", 449, 19137, 19141), ("astlib/ast_414.ml", 449, 19137, 19182), 0), 0, Tag1 ("Astlib__Ast_414", 207)); (("Pexp_pack", 811), ([(Tag3 ((("module_expr", 7972)), 0, (0)), 100000000, 0, -10081)]), 0, (("astlib/ast_414.ml", 450, 19211, 19215), ("astlib/ast_414.ml", 450, 19211, 19241), 0), 0, Tag1 ("Astlib__Ast_414", 208)); (("Pexp_open", 812), ([(Tag3 ((("open_declaration", 7967)), 0, (0)), 100000000, 0, -10082); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -10083)]), 0, (("astlib/ast_414.ml", 455, 19383, 19387), ("astlib/ast_414.ml", 455, 19383, 19431), 0), 0, Tag1 ("Astlib__Ast_414", 209)); (("Pexp_letop", 813), ([(Tag3 ((("letop", 7929)), 0, (0)), 100000000, 0, -10084)]), 0, (("astlib/ast_414.ml", 459, 19526, 19530), ("astlib/ast_414.ml", 459, 19526, 19551), 0), 0, Tag1 ("Astlib__Ast_414", 210)); (("Pexp_extension", 814), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -10085)]), 0, (("astlib/ast_414.ml", 462, 19641, 19645), ("astlib/ast_414.ml", 462, 19641, 19674), 0), 0, Tag1 ("Astlib__Ast_414", 211)); (("Pexp_unreachable", 815), (0), 0, (("astlib/ast_414.ml", 463, 19691, 19695), ("astlib/ast_414.ml", 463, 19691, 19713), 0), 0, Tag1 ("Astlib__Ast_414", 212))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "expression_desc"), 0, (0)), 100000000, 0, -9982)), 0, 0, 0, 0, (("astlib/ast_414.ml", 330, 13359, 13361), ("astlib/ast_414.ml", 463, 19691, 19713), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 65)), 2, 0); Tag1 (("case", 7928), (0, 0, [[(("pc_lhs", 816), 0, (Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -9978), (("astlib/ast_414.ml", 467, 19779, 19785), ("astlib/ast_414.ml", 467, 19779, 19801), 0), 0, Tag1 ("Astlib__Ast_414", 213)); (("pc_guard", 817), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9980)], (0)), 100000000, 0, -9979), (("astlib/ast_414.ml", 468, 19802, 19808), ("astlib/ast_414.ml", 468, 19802, 19836), 0), 0, Tag1 ("Astlib__Ast_414", 214)); (("pc_rhs", 818), 0, (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9981), (("astlib/ast_414.ml", 469, 19837, 19843), ("astlib/ast_414.ml", 469, 19837, 19862), 0), 0, Tag1 ("Astlib__Ast_414", 215))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "case"), 0, (0)), 100000000, 0, -9977)), 0, 0, 0, 0, (("astlib/ast_414.ml", 465, 19727, 19729), ("astlib/ast_414.ml", 470, 19863, 19868), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 66)), 2, 0); Tag1 (("letop", 7929), (0, 0, [[(("let_", 819), 0, (Tag3 ((("binding_op", 7930)), 0, (0)), 100000000, 0, -9973), (("astlib/ast_414.ml", 475, 20000, 20006), ("astlib/ast_414.ml", 475, 20000, 20024), 0), 0, Tag1 ("Astlib__Ast_414", 216)); (("ands", 820), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binding_op", 7930)), 0, (0)), 100000000, 0, -9975)], (0)), 100000000, 0, -9974), (("astlib/ast_414.ml", 476, 20025, 20031), ("astlib/ast_414.ml", 476, 20025, 20054), 0), 0, Tag1 ("Astlib__Ast_414", 217)); (("body", 821), 0, (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9976), (("astlib/ast_414.ml", 477, 20055, 20061), ("astlib/ast_414.ml", 477, 20055, 20079), 0), 0, Tag1 ("Astlib__Ast_414", 218))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "letop"), 0, (0)), 100000000, 0, -9972)), 0, 0, 0, 0, (("astlib/ast_414.ml", 473, 19946, 19948), ("astlib/ast_414.ml", 478, 20080, 20085), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 67)), 2, 0); Tag1 (("binding_op", 7930), (0, 0, [[(("pbop_op", 822), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9968)], (0)), 100000000, 0, -9967), (("astlib/ast_414.ml", 482, 20151, 20157), ("astlib/ast_414.ml", 482, 20151, 20178), 0), 0, Tag1 ("Astlib__Ast_414", 219)); (("pbop_pat", 823), 0, (Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -9969), (("astlib/ast_414.ml", 483, 20179, 20185), ("astlib/ast_414.ml", 483, 20179, 20204), 0), 0, Tag1 ("Astlib__Ast_414", 220)); (("pbop_exp", 824), 0, (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9970), (("astlib/ast_414.ml", 484, 20205, 20211), ("astlib/ast_414.ml", 484, 20205, 20233), 0), 0, Tag1 ("Astlib__Ast_414", 221)); (("pbop_loc", 825), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9971), (("astlib/ast_414.ml", 485, 20234, 20240), ("astlib/ast_414.ml", 485, 20234, 20262), 0), 0, Tag1 ("Astlib__Ast_414", 222))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "binding_op"), 0, (0)), 100000000, 0, -9966)), 0, 0, 0, 0, (("astlib/ast_414.ml", 480, 20087, 20089), ("astlib/ast_414.ml", 486, 20263, 20268), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 68)), 2, 0); Tag1 (("value_description", 7931), (0, 0, [[(("pval_name", 826), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9960)], (0)), 100000000, 0, -9959), (("astlib/ast_414.ml", 492, 20381, 20387), ("astlib/ast_414.ml", 492, 20381, 20409), 0), 0, Tag1 ("Astlib__Ast_414", 223)); (("pval_type", 827), 0, (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9961), (("astlib/ast_414.ml", 493, 20410, 20416), ("astlib/ast_414.ml", 493, 20410, 20437), 0), 0, Tag1 ("Astlib__Ast_414", 224)); (("pval_prim", 828), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9963)], (0)), 100000000, 0, -9962), (("astlib/ast_414.ml", 494, 20438, 20444), ("astlib/ast_414.ml", 494, 20438, 20467), 0), 0, Tag1 ("Astlib__Ast_414", 225)); (("pval_attributes", 829), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9964), (("astlib/ast_414.ml", 495, 20468, 20474), ("astlib/ast_414.ml", 495, 20468, 20502), 0), 0, Tag1 ("Astlib__Ast_414", 226)); (("pval_loc", 830), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9965), (("astlib/ast_414.ml", 496, 20537, 20543), ("astlib/ast_414.ml", 496, 20537, 20564), 0), 0, Tag1 ("Astlib__Ast_414", 227))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "value_description"), 0, (0)), 100000000, 0, -9958)), 0, 0, 0, 0, (("astlib/ast_414.ml", 490, 20303, 20305), ("astlib/ast_414.ml", 497, 20565, 20570), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 69)), 2, 0); Tag1 (("type_declaration", 7932), (0, 0, [[(("ptype_name", 831), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9940)], (0)), 100000000, 0, -9939), (("astlib/ast_414.ml", 509, 20953, 20959), ("astlib/ast_414.ml", 509, 20953, 20982), 0), 0, Tag1 ("Astlib__Ast_414", 228)); (("ptype_params", 832), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9943); (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -9945); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "injectivity"), 0, (0)), 100000000, 0, -9946)]), 100000000, 0, -9944)]), 100000000, 0, -9942)], (0)), 100000000, 0, -9941), (("astlib/ast_414.ml", 510, 20983, 20989), ("astlib/ast_414.ml", 510, 20983, 21047), 0), 0, Tag1 ("Astlib__Ast_414", 229)); (("ptype_cstrs", 833), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9949); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9950); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9951)]), 100000000, 0, -9948)], (0)), 100000000, 0, -9947), (("astlib/ast_414.ml", 512, 21078, 21084), ("astlib/ast_414.ml", 512, 21078, 21139), 0), 0, Tag1 ("Astlib__Ast_414", 230)); (("ptype_kind", 834), 0, (Tag3 ((("type_kind", 7933)), 0, (0)), 100000000, 0, -9952), (("astlib/ast_414.ml", 514, 21200, 21206), ("astlib/ast_414.ml", 514, 21200, 21228), 0), 0, Tag1 ("Astlib__Ast_414", 231)); (("ptype_private", 835), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -9953), (("astlib/ast_414.ml", 515, 21229, 21235), ("astlib/ast_414.ml", 515, 21229, 21263), 0), 0, Tag1 ("Astlib__Ast_414", 232)); (("ptype_manifest", 836), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9955)], (0)), 100000000, 0, -9954), (("astlib/ast_414.ml", 516, 21292, 21298), ("astlib/ast_414.ml", 516, 21292, 21331), 0), 0, Tag1 ("Astlib__Ast_414", 233)); (("ptype_attributes", 837), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9956), (("astlib/ast_414.ml", 517, 21357, 21363), ("astlib/ast_414.ml", 517, 21357, 21392), 0), 0, Tag1 ("Astlib__Ast_414", 234)); (("ptype_loc", 838), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9957), (("astlib/ast_414.ml", 518, 21427, 21433), ("astlib/ast_414.ml", 518, 21427, 21455), 0), 0, Tag1 ("Astlib__Ast_414", 235))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -9938)), 0, 0, 0, 0, (("astlib/ast_414.ml", 507, 20877, 20879), ("astlib/ast_414.ml", 519, 21456, 21461), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 70)), 2, 0); Tag1 (("type_kind", 7933), (0, 0, Tag1 ([(("Ptype_abstract", 839), (0), 0, (("astlib/ast_414.ml", 547, 22769, 22773), ("astlib/ast_414.ml", 547, 22769, 22789), 0), 0, Tag1 ("Astlib__Ast_414", 236)); (("Ptype_variant", 840), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 7935)), 0, (0)), 100000000, 0, -9935)], (0)), 100000000, 0, -9934)]), 0, (("astlib/ast_414.ml", 548, 22790, 22794), ("astlib/ast_414.ml", 548, 22790, 22841), 0), 0, Tag1 ("Astlib__Ast_414", 237)); (("Ptype_record", 841), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7934)), 0, (0)), 100000000, 0, -9937)], (0)), 100000000, 0, -9936)]), 0, (("astlib/ast_414.ml", 549, 22842, 22846), ("astlib/ast_414.ml", 549, 22842, 22886), 0), 0, Tag1 ("Astlib__Ast_414", 238)); (("Ptype_open", 842), (0), 0, (("astlib/ast_414.ml", 550, 22921, 22925), ("astlib/ast_414.ml", 550, 22921, 22937), 0), 0, Tag1 ("Astlib__Ast_414", 239))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "type_kind"), 0, (0)), 100000000, 0, -9933)), 0, 0, 0, 0, (("astlib/ast_414.ml", 546, 22713, 22715), ("astlib/ast_414.ml", 550, 22921, 22937), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 71)), 2, 0); Tag1 (("label_declaration", 7934), (0, 0, [[(("pld_name", 843), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9928)], (0)), 100000000, 0, -9927), (("astlib/ast_414.ml", 554, 23017, 23023), ("astlib/ast_414.ml", 554, 23017, 23044), 0), 0, Tag1 ("Astlib__Ast_414", 240)); (("pld_mutable", 844), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -9929), (("astlib/ast_414.ml", 555, 23045, 23051), ("astlib/ast_414.ml", 555, 23045, 23077), 0), 0, Tag1 ("Astlib__Ast_414", 241)); (("pld_type", 845), 0, (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9930), (("astlib/ast_414.ml", 556, 23078, 23084), ("astlib/ast_414.ml", 556, 23078, 23104), 0), 0, Tag1 ("Astlib__Ast_414", 242)); (("pld_loc", 846), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9931), (("astlib/ast_414.ml", 557, 23105, 23111), ("astlib/ast_414.ml", 557, 23105, 23131), 0), 0, Tag1 ("Astlib__Ast_414", 243)); (("pld_attributes", 847), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9932), (("astlib/ast_414.ml", 558, 23132, 23138), ("astlib/ast_414.ml", 558, 23132, 23165), 0), 0, Tag1 ("Astlib__Ast_414", 244))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "label_declaration"), 0, (0)), 100000000, 0, -9926)), 0, 0, 0, 0, (("astlib/ast_414.ml", 552, 22939, 22941), ("astlib/ast_414.ml", 559, 23198, 23203), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 72)), 2, 0); Tag1 (("constructor_declaration", 7935), (0, 0, [[(("pcd_name", 848), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9917)], (0)), 100000000, 0, -9916), (("astlib/ast_414.ml", 573, 23763, 23769), ("astlib/ast_414.ml", 573, 23763, 23790), 0), 0, Tag1 ("Astlib__Ast_414", 245)); (("pcd_vars", 849), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9920)], (0)), 100000000, 0, -9919)], (0)), 100000000, 0, -9918), (("astlib/ast_414.ml", 574, 23791, 23797), ("astlib/ast_414.ml", 574, 23791, 23823), 0), 0, Tag1 ("Astlib__Ast_414", 246)); (("pcd_args", 850), 0, (Tag3 ((("constructor_arguments", 7936)), 0, (0)), 100000000, 0, -9921), (("astlib/ast_414.ml", 575, 23824, 23830), ("astlib/ast_414.ml", 575, 23824, 23862), 0), 0, Tag1 ("Astlib__Ast_414", 247)); (("pcd_res", 851), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9923)], (0)), 100000000, 0, -9922), (("astlib/ast_414.ml", 576, 23863, 23869), ("astlib/ast_414.ml", 576, 23863, 23895), 0), 0, Tag1 ("Astlib__Ast_414", 248)); (("pcd_loc", 852), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9924), (("astlib/ast_414.ml", 577, 23896, 23902), ("astlib/ast_414.ml", 577, 23896, 23922), 0), 0, Tag1 ("Astlib__Ast_414", 249)); (("pcd_attributes", 853), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9925), (("astlib/ast_414.ml", 578, 23923, 23929), ("astlib/ast_414.ml", 578, 23923, 23956), 0), 0, Tag1 ("Astlib__Ast_414", 250))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "constructor_declaration"), 0, (0)), 100000000, 0, -9915)), 0, 0, 0, 0, (("astlib/ast_414.ml", 571, 23673, 23675), ("astlib/ast_414.ml", 579, 23992, 23997), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 73)), 2, 0); Tag1 (("constructor_arguments", 7936), (0, 0, Tag1 ([(("Pcstr_tuple", 854), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9912)], (0)), 100000000, 0, -9911)]), 0, (("astlib/ast_414.ml", 582, 24079, 24083), ("astlib/ast_414.ml", 582, 24079, 24114), 0), 0, Tag1 ("Astlib__Ast_414", 251)); (("Pcstr_record", 855), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 7934)), 0, (0)), 100000000, 0, -9914)], (0)), 100000000, 0, -9913)]), 0, (("astlib/ast_414.ml", 583, 24115, 24119), ("astlib/ast_414.ml", 583, 24115, 24159), 0), 0, Tag1 ("Astlib__Ast_414", 252))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "constructor_arguments"), 0, (0)), 100000000, 0, -9910)), 0, 0, 0, 0, (("astlib/ast_414.ml", 581, 23999, 24001), ("astlib/ast_414.ml", 583, 24115, 24159), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 74)), 2, 0); Tag1 (("type_extension", 7937), (0, 0, [[(("ptyext_path", 856), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9898)], (0)), 100000000, 0, -9897), (("astlib/ast_414.ml", 600, 24935, 24941), ("astlib/ast_414.ml", 600, 24935, 24970), 0), 0, Tag1 ("Astlib__Ast_414", 253)); (("ptyext_params", 857), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9901); (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -9903); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "injectivity"), 0, (0)), 100000000, 0, -9904)]), 100000000, 0, -9902)]), 100000000, 0, -9900)], (0)), 100000000, 0, -9899), (("astlib/ast_414.ml", 601, 24971, 24977), ("astlib/ast_414.ml", 601, 24971, 25036), 0), 0, Tag1 ("Astlib__Ast_414", 254)); (("ptyext_constructors", 858), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 7938)), 0, (0)), 100000000, 0, -9906)], (0)), 100000000, 0, -9905), (("astlib/ast_414.ml", 602, 25037, 25043), ("astlib/ast_414.ml", 602, 25037, 25091), 0), 0, Tag1 ("Astlib__Ast_414", 255)); (("ptyext_private", 859), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -9907), (("astlib/ast_414.ml", 603, 25092, 25098), ("astlib/ast_414.ml", 603, 25092, 25127), 0), 0, Tag1 ("Astlib__Ast_414", 256)); (("ptyext_loc", 860), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9908), (("astlib/ast_414.ml", 604, 25128, 25134), ("astlib/ast_414.ml", 604, 25128, 25157), 0), 0, Tag1 ("Astlib__Ast_414", 257)); (("ptyext_attributes", 861), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9909), (("astlib/ast_414.ml", 605, 25158, 25164), ("astlib/ast_414.ml", 605, 25158, 25194), 0), 0, Tag1 ("Astlib__Ast_414", 258))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -9896)), 0, 0, 0, 0, (("astlib/ast_414.ml", 598, 24863, 24865), ("astlib/ast_414.ml", 606, 25227, 25232), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 75)), 2, 0); Tag1 (("extension_constructor", 7938), (0, 0, [[(("pext_name", 862), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9892)], (0)), 100000000, 0, -9891), (("astlib/ast_414.ml", 614, 25433, 25439), ("astlib/ast_414.ml", 614, 25433, 25461), 0), 0, Tag1 ("Astlib__Ast_414", 259)); (("pext_kind", 863), 0, (Tag3 ((("extension_constructor_kind", 7940)), 0, (0)), 100000000, 0, -9893), (("astlib/ast_414.ml", 615, 25462, 25468), ("astlib/ast_414.ml", 615, 25462, 25506), 0), 0, Tag1 ("Astlib__Ast_414", 260)); (("pext_loc", 864), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9894), (("astlib/ast_414.ml", 616, 25507, 25513), ("astlib/ast_414.ml", 616, 25507, 25534), 0), 0, Tag1 ("Astlib__Ast_414", 261)); (("pext_attributes", 865), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9895), (("astlib/ast_414.ml", 617, 25535, 25541), ("astlib/ast_414.ml", 617, 25535, 25569), 0), 0, Tag1 ("Astlib__Ast_414", 262))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -9890)), 0, 0, 0, 0, (("astlib/ast_414.ml", 612, 25347, 25349), ("astlib/ast_414.ml", 618, 25605, 25610), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 76)), 2, 0); Tag1 (("type_exception", 7939), (0, 0, [[(("ptyexn_constructor", 866), 0, (Tag3 ((("extension_constructor", 7938)), 0, (0)), 100000000, 0, -9887), (("astlib/ast_414.ml", 622, 25684, 25690), ("astlib/ast_414.ml", 622, 25684, 25733), 0), 0, Tag1 ("Astlib__Ast_414", 263)); (("ptyexn_loc", 867), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9888), (("astlib/ast_414.ml", 623, 25734, 25740), ("astlib/ast_414.ml", 623, 25734, 25764), 0), 0, Tag1 ("Astlib__Ast_414", 264)); (("ptyexn_attributes", 868), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9889), (("astlib/ast_414.ml", 624, 25765, 25771), ("astlib/ast_414.ml", 624, 25765, 25802), 0), 0, Tag1 ("Astlib__Ast_414", 265))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "type_exception"), 0, (0)), 100000000, 0, -9886)), 0, 0, 0, 0, (("astlib/ast_414.ml", 620, 25612, 25614), ("astlib/ast_414.ml", 625, 25837, 25842), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 77)), 2, 0); Tag1 (("extension_constructor_kind", 7940), (0, 0, Tag1 ([(("Pext_decl", 869), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9880)], (0)), 100000000, 0, -9879)], (0)), 100000000, 0, -9878); (Tag3 ((("constructor_arguments", 7936)), 0, (0)), 100000000, 0, -9881); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9883)], (0)), 100000000, 0, -9882)]), 0, (("astlib/ast_414.ml", 629, 25990, 25994), ("astlib/ast_414.ml", 629, 25990, 26067), 0), 0, Tag1 ("Astlib__Ast_414", 266)); (("Pext_rebind", 870), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9885)], (0)), 100000000, 0, -9884)]), 0, (("astlib/ast_414.ml", 649, 26956, 26960), ("astlib/ast_414.ml", 649, 26956, 26992), 0), 0, Tag1 ("Astlib__Ast_414", 267))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "extension_constructor_kind"), 0, (0)), 100000000, 0, -9877)), 0, 0, 0, 0, (("astlib/ast_414.ml", 628, 25900, 25902), ("astlib/ast_414.ml", 649, 26956, 26992), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 78)), 2, 0); Tag1 (("class_type", 7941), (0, 0, [[(("pcty_desc", 871), 0, (Tag3 ((("class_type_desc", 7942)), 0, (0)), 100000000, 0, -9874), (("astlib/ast_414.ml", 657, 27220, 27226), ("astlib/ast_414.ml", 657, 27220, 27253), 0), 0, Tag1 ("Astlib__Ast_414", 268)); (("pcty_loc", 872), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9875), (("astlib/ast_414.ml", 658, 27254, 27260), ("astlib/ast_414.ml", 658, 27254, 27281), 0), 0, Tag1 ("Astlib__Ast_414", 269)); (("pcty_attributes", 873), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9876), (("astlib/ast_414.ml", 659, 27282, 27288), ("astlib/ast_414.ml", 659, 27282, 27316), 0), 0, Tag1 ("Astlib__Ast_414", 270))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -9873)), 0, 0, 0, 0, (("astlib/ast_414.ml", 655, 27156, 27158), ("astlib/ast_414.ml", 660, 27347, 27352), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 79)), 2, 0); Tag1 (("class_type_desc", 7942), (0, 0, Tag1 ([(("Pcty_constr", 874), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9863)], (0)), 100000000, 0, -9862); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9865)], (0)), 100000000, 0, -9864)]), 0, (("astlib/ast_414.ml", 663, 27422, 27426), ("astlib/ast_414.ml", 663, 27422, 27475), 0), 0, Tag1 ("Astlib__Ast_414", 271)); (("Pcty_signature", 875), ([(Tag3 ((("class_signature", 7943)), 0, (0)), 100000000, 0, -9866)]), 0, (("astlib/ast_414.ml", 666, 27533, 27537), ("astlib/ast_414.ml", 666, 27533, 27572), 0), 0, Tag1 ("Astlib__Ast_414", 272)); (("Pcty_arrow", 876), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -9867); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9868); (Tag3 ((("class_type", 7941)), 0, (0)), 100000000, 0, -9869)]), 0, (("astlib/ast_414.ml", 667, 27598, 27602), ("astlib/ast_414.ml", 667, 27598, 27652), 0), 0, Tag1 ("Astlib__Ast_414", 273)); (("Pcty_extension", 877), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -9870)]), 0, (("astlib/ast_414.ml", 676, 28045, 28049), ("astlib/ast_414.ml", 676, 28045, 28078), 0), 0, Tag1 ("Astlib__Ast_414", 274)); (("Pcty_open", 878), ([(Tag3 ((("open_description", 7966)), 0, (0)), 100000000, 0, -9871); (Tag3 ((("class_type", 7941)), 0, (0)), 100000000, 0, -9872)]), 0, (("astlib/ast_414.ml", 677, 28093, 28097), ("astlib/ast_414.ml", 677, 28093, 28141), 0), 0, Tag1 ("Astlib__Ast_414", 275))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_type_desc"), 0, (0)), 100000000, 0, -9861)), 0, 0, 0, 0, (("astlib/ast_414.ml", 662, 27354, 27356), ("astlib/ast_414.ml", 677, 28093, 28141), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 80)), 2, 0); Tag1 (("class_signature", 7943), (0, 0, [[(("pcsig_self", 879), 0, (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9858), (("astlib/ast_414.ml", 681, 28244, 28250), ("astlib/ast_414.ml", 681, 28244, 28272), 0), 0, Tag1 ("Astlib__Ast_414", 276)); (("pcsig_fields", 880), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 7944)), 0, (0)), 100000000, 0, -9860)], (0)), 100000000, 0, -9859), (("astlib/ast_414.ml", 682, 28273, 28279), ("astlib/ast_414.ml", 682, 28273, 28315), 0), 0, Tag1 ("Astlib__Ast_414", 277))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -9857)), 0, 0, 0, 0, (("astlib/ast_414.ml", 679, 28170, 28172), ("astlib/ast_414.ml", 683, 28316, 28321), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 81)), 2, 0); Tag1 (("class_type_field", 7944), (0, 0, [[(("pctf_desc", 881), 0, (Tag3 ((("class_type_field_desc", 7945)), 0, (0)), 100000000, 0, -9854), (("astlib/ast_414.ml", 692, 28633, 28639), ("astlib/ast_414.ml", 692, 28633, 28672), 0), 0, Tag1 ("Astlib__Ast_414", 278)); (("pctf_loc", 882), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9855), (("astlib/ast_414.ml", 693, 28673, 28679), ("astlib/ast_414.ml", 693, 28673, 28700), 0), 0, Tag1 ("Astlib__Ast_414", 279)); (("pctf_attributes", 883), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9856), (("astlib/ast_414.ml", 694, 28701, 28707), ("astlib/ast_414.ml", 694, 28701, 28735), 0), 0, Tag1 ("Astlib__Ast_414", 280))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -9853)), 0, 0, 0, 0, (("astlib/ast_414.ml", 690, 28557, 28559), ("astlib/ast_414.ml", 695, 28770, 28775), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 82)), 2, 0); Tag1 (("class_type_field_desc", 7945), (0, 0, Tag1 ([(("Pctf_inherit", 884), ([(Tag3 ((("class_type", 7941)), 0, (0)), 100000000, 0, -9835)]), 0, (("astlib/ast_414.ml", 698, 28857, 28861), ("astlib/ast_414.ml", 698, 28857, 28889), 0), 0, Tag1 ("Astlib__Ast_414", 281)); (("Pctf_val", 885), ([(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -9838)], (0)), 100000000, 0, -9837); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -9839); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -9840); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9841)]), 100000000, 0, -9836)]), 0, (("astlib/ast_414.ml", 699, 28911, 28915), ("astlib/ast_414.ml", 699, 28911, 28982), 0), 0, Tag1 ("Astlib__Ast_414", 282)); (("Pctf_method", 886), ([(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -9844)], (0)), 100000000, 0, -9843); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -9845); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -9846); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9847)]), 100000000, 0, -9842)]), 0, (("astlib/ast_414.ml", 701, 29009, 29013), ("astlib/ast_414.ml", 701, 29009, 29083), 0), 0, Tag1 ("Astlib__Ast_414", 283)); (("Pctf_constraint", 887), ([(Tag2 ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9849); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9850)]), 100000000, 0, -9848)]), 0, (("astlib/ast_414.ml", 706, 29199, 29203), ("astlib/ast_414.ml", 706, 29199, 29247), 0), 0, Tag1 ("Astlib__Ast_414", 284)); (("Pctf_attribute", 888), ([(Tag3 ((("attribute", 7913)), 0, (0)), 100000000, 0, -9851)]), 0, (("astlib/ast_414.ml", 707, 29277, 29281), ("astlib/ast_414.ml", 707, 29277, 29310), 0), 0, Tag1 ("Astlib__Ast_414", 285)); (("Pctf_extension", 889), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -9852)]), 0, (("astlib/ast_414.ml", 708, 29332, 29336), ("astlib/ast_414.ml", 708, 29332, 29365), 0), 0, Tag1 ("Astlib__Ast_414", 286))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_type_field_desc"), 0, (0)), 100000000, 0, -9834)), 0, 0, 0, 0, (("astlib/ast_414.ml", 697, 28777, 28779), ("astlib/ast_414.ml", 708, 29332, 29365), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 83)), 2, 0); Tag1 (("class_infos", 7946), ([((("a")), 100000000, 0, -9822)], 1, [[(("pci_virt", 890), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "virtual_flag"), 0, (0)), 100000000, 0, -9823), (("astlib/ast_414.ml", 712, 29456, 29462), ("astlib/ast_414.ml", 712, 29456, 29485), 0), 0, Tag1 ("Astlib__Ast_414", 287)); (("pci_params", 891), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9826); (Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "variance"), 0, (0)), 100000000, 0, -9828); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "injectivity"), 0, (0)), 100000000, 0, -9829)]), 100000000, 0, -9827)]), 100000000, 0, -9825)], (0)), 100000000, 0, -9824), (("astlib/ast_414.ml", 713, 29486, 29492), ("astlib/ast_414.ml", 713, 29486, 29548), 0), 0, Tag1 ("Astlib__Ast_414", 288)); (("pci_name", 892), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9831)], (0)), 100000000, 0, -9830), (("astlib/ast_414.ml", 714, 29549, 29555), ("astlib/ast_414.ml", 714, 29549, 29576), 0), 0, Tag1 ("Astlib__Ast_414", 289)); (("pci_expr", 893), 0, ((("a")), 100000000, 0, -9822), (("astlib/ast_414.ml", 715, 29577, 29583), ("astlib/ast_414.ml", 715, 29577, 29596), 0), 0, Tag1 ("Astlib__Ast_414", 290)); (("pci_loc", 894), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9832), (("astlib/ast_414.ml", 716, 29597, 29603), ("astlib/ast_414.ml", 716, 29597, 29623), 0), 0, Tag1 ("Astlib__Ast_414", 291)); (("pci_attributes", 895), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9833), (("astlib/ast_414.ml", 717, 29624, 29630), ("astlib/ast_414.ml", 717, 29624, 29657), 0), 0, Tag1 ("Astlib__Ast_414", 292))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_infos"), [((("a")), 100000000, 0, -9822)], (0)), 100000000, 0, -9821)), [25], [0], 0, 0, (("astlib/ast_414.ml", 710, 29384, 29386), ("astlib/ast_414.ml", 718, 29692, 29697), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 84)), 2, 0); Tag1 (("class_description", 7947), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7946)), [(Tag3 ((("class_type", 7941)), 0, (0)), 100000000, 0, -9820)], (0)), 100000000, 0, -9819)), 0, 0, 0, 0, (("astlib/ast_414.ml", 727, 29911, 29913), ("astlib/ast_414.ml", 727, 29911, 29959), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 85)), 2, 0); Tag1 (("class_type_declaration", 7948), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7946)), [(Tag3 ((("class_type", 7941)), 0, (0)), 100000000, 0, -9818)], (0)), 100000000, 0, -9817)), 0, 0, 0, 0, (("astlib/ast_414.ml", 729, 29961, 29963), ("astlib/ast_414.ml", 729, 29961, 30014), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 86)), 2, 0); Tag1 (("class_expr", 7949), (0, 0, [[(("pcl_desc", 896), 0, (Tag3 ((("class_expr_desc", 7950)), 0, (0)), 100000000, 0, -9814), (("astlib/ast_414.ml", 735, 30137, 30144), ("astlib/ast_414.ml", 735, 30137, 30170), 0), 0, Tag1 ("Astlib__Ast_414", 293)); (("pcl_loc", 897), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9815), (("astlib/ast_414.ml", 736, 30171, 30178), ("astlib/ast_414.ml", 736, 30171, 30198), 0), 0, Tag1 ("Astlib__Ast_414", 294)); (("pcl_attributes", 898), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9816), (("astlib/ast_414.ml", 737, 30199, 30206), ("astlib/ast_414.ml", 737, 30199, 30233), 0), 0, Tag1 ("Astlib__Ast_414", 295))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -9813)), 0, 0, 0, 0, (("astlib/ast_414.ml", 733, 30071, 30073), ("astlib/ast_414.ml", 738, 30264, 30271), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 87)), 2, 0); Tag1 (("class_expr_desc", 7950), (0, 0, Tag1 ([(("Pcl_constr", 899), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9790)], (0)), 100000000, 0, -9789); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9792)], (0)), 100000000, 0, -9791)]), 0, (("astlib/ast_414.ml", 741, 30341, 30345), ("astlib/ast_414.ml", 741, 30341, 30393), 0), 0, Tag1 ("Astlib__Ast_414", 296)); (("Pcl_structure", 900), ([(Tag3 ((("class_structure", 7951)), 0, (0)), 100000000, 0, -9793)]), 0, (("astlib/ast_414.ml", 743, 30437, 30441), ("astlib/ast_414.ml", 743, 30437, 30475), 0), 0, Tag1 ("Astlib__Ast_414", 297)); (("Pcl_fun", 901), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -9794); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9796)], (0)), 100000000, 0, -9795); (Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -9797); (Tag3 ((("class_expr", 7949)), 0, (0)), 100000000, 0, -9798)]), 0, (("astlib/ast_414.ml", 744, 30501, 30505), ("astlib/ast_414.ml", 744, 30501, 30570), 0), 0, Tag1 ("Astlib__Ast_414", 298)); (("Pcl_apply", 902), ([(Tag3 ((("class_expr", 7949)), 0, (0)), 100000000, 0, -9799); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "arg_label"), 0, (0)), 100000000, 0, -9802); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9803)]), 100000000, 0, -9801)], (0)), 100000000, 0, -9800)]), 0, (("astlib/ast_414.ml", 759, 31287, 31291), ("astlib/ast_414.ml", 759, 31287, 31348), 0), 0, Tag1 ("Astlib__Ast_414", 299)); (("Pcl_let", 903), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -9804); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7977)), 0, (0)), 100000000, 0, -9806)], (0)), 100000000, 0, -9805); (Tag3 ((("class_expr", 7949)), 0, (0)), 100000000, 0, -9807)]), 0, (("astlib/ast_414.ml", 767, 31608, 31612), ("astlib/ast_414.ml", 767, 31608, 31667), 0), 0, Tag1 ("Astlib__Ast_414", 300)); (("Pcl_constraint", 904), ([(Tag3 ((("class_expr", 7949)), 0, (0)), 100000000, 0, -9808); (Tag3 ((("class_type", 7941)), 0, (0)), 100000000, 0, -9809)]), 0, (("astlib/ast_414.ml", 774, 32028, 32032), ("astlib/ast_414.ml", 774, 32028, 32075), 0), 0, Tag1 ("Astlib__Ast_414", 301)); (("Pcl_extension", 905), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -9810)]), 0, (("astlib/ast_414.ml", 775, 32096, 32100), ("astlib/ast_414.ml", 775, 32096, 32128), 0), 0, Tag1 ("Astlib__Ast_414", 302)); (("Pcl_open", 906), ([(Tag3 ((("open_description", 7966)), 0, (0)), 100000000, 0, -9811); (Tag3 ((("class_expr", 7949)), 0, (0)), 100000000, 0, -9812)]), 0, (("astlib/ast_414.ml", 776, 32145, 32149), ("astlib/ast_414.ml", 776, 32145, 32192), 0), 0, Tag1 ("Astlib__Ast_414", 303))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_expr_desc"), 0, (0)), 100000000, 0, -9788)), 0, 0, 0, 0, (("astlib/ast_414.ml", 740, 30273, 30275), ("astlib/ast_414.ml", 776, 32145, 32192), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 88)), 2, 0); Tag1 (("class_structure", 7951), (0, 0, [[(("pcstr_self", 907), 0, (Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -9785), (("astlib/ast_414.ml", 780, 32295, 32301), ("astlib/ast_414.ml", 780, 32295, 32321), 0), 0, Tag1 ("Astlib__Ast_414", 304)); (("pcstr_fields", 908), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 7952)), 0, (0)), 100000000, 0, -9787)], (0)), 100000000, 0, -9786), (("astlib/ast_414.ml", 781, 32322, 32328), ("astlib/ast_414.ml", 781, 32322, 32359), 0), 0, Tag1 ("Astlib__Ast_414", 305))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_structure"), 0, (0)), 100000000, 0, -9784)), 0, 0, 0, 0, (("astlib/ast_414.ml", 778, 32221, 32223), ("astlib/ast_414.ml", 782, 32360, 32365), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 89)), 2, 0); Tag1 (("class_field", 7952), (0, 0, [[(("pcf_desc", 909), 0, (Tag3 ((("class_field_desc", 7953)), 0, (0)), 100000000, 0, -9781), (("astlib/ast_414.ml", 791, 32665, 32671), ("astlib/ast_414.ml", 791, 32665, 32698), 0), 0, Tag1 ("Astlib__Ast_414", 306)); (("pcf_loc", 910), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9782), (("astlib/ast_414.ml", 792, 32699, 32705), ("astlib/ast_414.ml", 792, 32699, 32725), 0), 0, Tag1 ("Astlib__Ast_414", 307)); (("pcf_attributes", 911), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9783), (("astlib/ast_414.ml", 793, 32726, 32732), ("astlib/ast_414.ml", 793, 32726, 32759), 0), 0, Tag1 ("Astlib__Ast_414", 308))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -9780)), 0, 0, 0, 0, (("astlib/ast_414.ml", 789, 32599, 32601), ("astlib/ast_414.ml", 794, 32794, 32799), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 90)), 2, 0); Tag1 (("class_field_desc", 7953), (0, 0, Tag1 ([(("Pcf_inherit", 912), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -9759); (Tag3 ((("class_expr", 7949)), 0, (0)), 100000000, 0, -9760); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9763)], (0)), 100000000, 0, -9762)], (0)), 100000000, 0, -9761)]), 0, (("astlib/ast_414.ml", 797, 32871, 32875), ("astlib/ast_414.ml", 797, 32871, 32938), 0), 0, Tag1 ("Astlib__Ast_414", 309)); (("Pcf_val", 913), ([(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -9766)], (0)), 100000000, 0, -9765); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "mutable_flag"), 0, (0)), 100000000, 0, -9767); (Tag3 ((("class_field_kind", 7954)), 0, (0)), 100000000, 0, -9768)]), 100000000, 0, -9764)]), 0, (("astlib/ast_414.ml", 812, 33614, 33618), ("astlib/ast_414.ml", 812, 33614, 33676), 0), 0, Tag1 ("Astlib__Ast_414", 310)); (("Pcf_method", 914), ([(Tag2 ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "label"), 0, (0)), 100000000, 0, -9771)], (0)), 100000000, 0, -9770); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "private_flag"), 0, (0)), 100000000, 0, -9772); (Tag3 ((("class_field_kind", 7954)), 0, (0)), 100000000, 0, -9773)]), 100000000, 0, -9769)]), 0, (("astlib/ast_414.ml", 827, 34468, 34472), ("astlib/ast_414.ml", 827, 34468, 34533), 0), 0, Tag1 ("Astlib__Ast_414", 311)); (("Pcf_constraint", 915), ([(Tag2 ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9775); (Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9776)]), 100000000, 0, -9774)]), 0, (("astlib/ast_414.ml", 833, 34773, 34777), ("astlib/ast_414.ml", 833, 34773, 34820), 0), 0, Tag1 ("Astlib__Ast_414", 312)); (("Pcf_initializer", 916), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9777)]), 0, (("astlib/ast_414.ml", 834, 34850, 34854), ("astlib/ast_414.ml", 834, 34850, 34885), 0), 0, Tag1 ("Astlib__Ast_414", 313)); (("Pcf_attribute", 917), ([(Tag3 ((("attribute", 7913)), 0, (0)), 100000000, 0, -9778)]), 0, (("astlib/ast_414.ml", 835, 34910, 34914), ("astlib/ast_414.ml", 835, 34910, 34942), 0), 0, Tag1 ("Astlib__Ast_414", 314)); (("Pcf_extension", 918), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -9779)]), 0, (("astlib/ast_414.ml", 836, 34964, 34968), ("astlib/ast_414.ml", 836, 34964, 34996), 0), 0, Tag1 ("Astlib__Ast_414", 315))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_field_desc"), 0, (0)), 100000000, 0, -9758)), 0, 0, 0, 0, (("astlib/ast_414.ml", 796, 32801, 32803), ("astlib/ast_414.ml", 836, 34964, 34996), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 91)), 2, 0); Tag1 (("class_field_kind", 7954), (0, 0, Tag1 ([(("Cfk_virtual", 919), ([(Tag3 ((("core_type", 7917)), 0, (0)), 100000000, 0, -9755)]), 0, (("astlib/ast_414.ml", 839, 35085, 35089), ("astlib/ast_414.ml", 839, 35085, 35115), 0), 0, Tag1 ("Astlib__Ast_414", 316)); (("Cfk_concrete", 920), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -9756); (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9757)]), 0, (("astlib/ast_414.ml", 840, 35116, 35120), ("astlib/ast_414.ml", 840, 35116, 35164), 0), 0, Tag1 ("Astlib__Ast_414", 317))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "class_field_kind"), 0, (0)), 100000000, 0, -9754)), 0, 0, 0, 0, (("astlib/ast_414.ml", 838, 35015, 35017), ("astlib/ast_414.ml", 840, 35116, 35164), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 92)), 2, 0); Tag1 (("class_declaration", 7955), (0, 0, 0, 1, ((Tag3 ((("class_infos", 7946)), [(Tag3 ((("class_expr", 7949)), 0, (0)), 100000000, 0, -9753)], (0)), 100000000, 0, -9752)), 0, 0, 0, 0, (("astlib/ast_414.ml", 842, 35166, 35168), ("astlib/ast_414.ml", 842, 35166, 35214), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 93)), 2, 0); Tag1 (("module_type", 7956), (0, 0, [[(("pmty_desc", 921), 0, (Tag3 ((("module_type_desc", 7957)), 0, (0)), 100000000, 0, -9749), (("astlib/ast_414.ml", 849, 35366, 35372), ("astlib/ast_414.ml", 849, 35366, 35400), 0), 0, Tag1 ("Astlib__Ast_414", 318)); (("pmty_loc", 922), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9750), (("astlib/ast_414.ml", 850, 35401, 35407), ("astlib/ast_414.ml", 850, 35401, 35428), 0), 0, Tag1 ("Astlib__Ast_414", 319)); (("pmty_attributes", 923), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9751), (("astlib/ast_414.ml", 851, 35429, 35435), ("astlib/ast_414.ml", 851, 35429, 35463), 0), 0, Tag1 ("Astlib__Ast_414", 320))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -9748)), 0, 0, 0, 0, (("astlib/ast_414.ml", 847, 35300, 35302), ("astlib/ast_414.ml", 852, 35494, 35499), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 94)), 2, 0); Tag1 (("module_type_desc", 7957), (0, 0, Tag1 ([(("Pmty_ident", 924), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9737)], (0)), 100000000, 0, -9736)]), 0, (("astlib/ast_414.ml", 855, 35571, 35575), ("astlib/ast_414.ml", 855, 35571, 35606), 0), 0, Tag1 ("Astlib__Ast_414", 321)); (("Pmty_signature", 925), ([(Tag3 ((("signature", 7959)), 0, (0)), 100000000, 0, -9738)]), 0, (("astlib/ast_414.ml", 856, 35646, 35650), ("astlib/ast_414.ml", 856, 35646, 35679), 0), 0, Tag1 ("Astlib__Ast_414", 322)); (("Pmty_functor", 926), ([(Tag3 ((("functor_parameter", 7958)), 0, (0)), 100000000, 0, -9739); (Tag3 ((("module_type", 7956)), 0, (0)), 100000000, 0, -9740)]), 0, (("astlib/ast_414.ml", 857, 35702, 35706), ("astlib/ast_414.ml", 857, 35702, 35755), 0), 0, Tag1 ("Astlib__Ast_414", 323)); (("Pmty_with", 927), ([(Tag3 ((("module_type", 7956)), 0, (0)), 100000000, 0, -9741); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 7971)), 0, (0)), 100000000, 0, -9743)], (0)), 100000000, 0, -9742)]), 0, (("astlib/ast_414.ml", 859, 35797, 35801), ("astlib/ast_414.ml", 859, 35797, 35850), 0), 0, Tag1 ("Astlib__Ast_414", 324)); (("Pmty_typeof", 928), ([(Tag3 ((("module_expr", 7972)), 0, (0)), 100000000, 0, -9744)]), 0, (("astlib/ast_414.ml", 860, 35873, 35877), ("astlib/ast_414.ml", 860, 35873, 35905), 0), 0, Tag1 ("Astlib__Ast_414", 325)); (("Pmty_extension", 929), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -9745)]), 0, (("astlib/ast_414.ml", 861, 35934, 35938), ("astlib/ast_414.ml", 861, 35934, 35967), 0), 0, Tag1 ("Astlib__Ast_414", 326)); (("Pmty_alias", 930), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9747)], (0)), 100000000, 0, -9746)]), 0, (("astlib/ast_414.ml", 862, 35984, 35988), ("astlib/ast_414.ml", 862, 35984, 36019), 0), 0, Tag1 ("Astlib__Ast_414", 327))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_type_desc"), 0, (0)), 100000000, 0, -9735)), 0, 0, 0, 0, (("astlib/ast_414.ml", 854, 35501, 35503), ("astlib/ast_414.ml", 862, 35984, 36019), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 95)), 2, 0); Tag1 (("functor_parameter", 7958), (0, 0, Tag1 ([(("Unit", 931), (0), 0, (("astlib/ast_414.ml", 865, 36114, 36118), ("astlib/ast_414.ml", 865, 36114, 36124), 0), 0, Tag1 ("Astlib__Ast_414", 328)); (("Named", 932), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9733)], (0)), 100000000, 0, -9732)], (0)), 100000000, 0, -9731); (Tag3 ((("module_type", 7956)), 0, (0)), 100000000, 0, -9734)]), 0, (("astlib/ast_414.ml", 866, 36138, 36142), ("astlib/ast_414.ml", 866, 36138, 36184), 0), 0, Tag1 ("Astlib__Ast_414", 329))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "functor_parameter"), 0, (0)), 100000000, 0, -9730)), 0, 0, 0, 0, (("astlib/ast_414.ml", 864, 36042, 36044), ("astlib/ast_414.ml", 866, 36138, 36184), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 96)), 2, 0); Tag1 (("signature", 7959), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 7960)), 0, (0)), 100000000, 0, -9729)], (0)), 100000000, 0, -9728)), 0, 0, 0, 0, (("astlib/ast_414.ml", 871, 36332, 36334), ("astlib/ast_414.ml", 871, 36332, 36369), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 97)), 2, 0); Tag1 (("signature_item", 7960), (0, 0, [[(("psig_desc", 933), 0, (Tag3 ((("signature_item_desc", 7961)), 0, (0)), 100000000, 0, -9726), (("astlib/ast_414.ml", 875, 36443, 36449), ("astlib/ast_414.ml", 875, 36443, 36480), 0), 0, Tag1 ("Astlib__Ast_414", 330)); (("psig_loc", 934), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9727), (("astlib/ast_414.ml", 876, 36481, 36487), ("astlib/ast_414.ml", 876, 36481, 36508), 0), 0, Tag1 ("Astlib__Ast_414", 331))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -9725)), 0, 0, 0, 0, (("astlib/ast_414.ml", 873, 36371, 36373), ("astlib/ast_414.ml", 877, 36509, 36514), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 98)), 2, 0); Tag1 (("signature_item_desc", 7961), (0, 0, Tag1 ([(("Psig_value", 935), ([(Tag3 ((("value_description", 7931)), 0, (0)), 100000000, 0, -9702)]), 0, (("astlib/ast_414.ml", 880, 36592, 36596), ("astlib/ast_414.ml", 880, 36592, 36629), 0), 0, Tag1 ("Astlib__Ast_414", 332)); (("Psig_type", 936), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -9703); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7932)), 0, (0)), 100000000, 0, -9705)], (0)), 100000000, 0, -9704)]), 0, (("astlib/ast_414.ml", 884, 36717, 36721), ("astlib/ast_414.ml", 884, 36717, 36768), 0), 0, Tag1 ("Astlib__Ast_414", 333)); (("Psig_typesubst", 937), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7932)), 0, (0)), 100000000, 0, -9707)], (0)), 100000000, 0, -9706)]), 0, (("astlib/ast_414.ml", 886, 36822, 36826), ("astlib/ast_414.ml", 886, 36822, 36867), 0), 0, Tag1 ("Astlib__Ast_414", 334)); (("Psig_typext", 938), ([(Tag3 ((("type_extension", 7937)), 0, (0)), 100000000, 0, -9708)]), 0, (("astlib/ast_414.ml", 888, 36923, 36927), ("astlib/ast_414.ml", 888, 36923, 36958), 0), 0, Tag1 ("Astlib__Ast_414", 335)); (("Psig_exception", 939), ([(Tag3 ((("type_exception", 7939)), 0, (0)), 100000000, 0, -9709)]), 0, (("astlib/ast_414.ml", 889, 36984, 36988), ("astlib/ast_414.ml", 889, 36984, 37022), 0), 0, Tag1 ("Astlib__Ast_414", 336)); (("Psig_module", 940), ([(Tag3 ((("module_declaration", 7962)), 0, (0)), 100000000, 0, -9710)]), 0, (("astlib/ast_414.ml", 890, 37050, 37054), ("astlib/ast_414.ml", 890, 37050, 37089), 0), 0, Tag1 ("Astlib__Ast_414", 337)); (("Psig_modsubst", 941), ([(Tag3 ((("module_substitution", 7963)), 0, (0)), 100000000, 0, -9711)]), 0, (("astlib/ast_414.ml", 891, 37133, 37137), ("astlib/ast_414.ml", 891, 37133, 37175), 0), 0, Tag1 ("Astlib__Ast_414", 338)); (("Psig_recmodule", 942), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 7962)), 0, (0)), 100000000, 0, -9713)], (0)), 100000000, 0, -9712)]), 0, (("astlib/ast_414.ml", 892, 37200, 37204), ("astlib/ast_414.ml", 892, 37200, 37247), 0), 0, Tag1 ("Astlib__Ast_414", 339)); (("Psig_modtype", 943), ([(Tag3 ((("module_type_declaration", 7964)), 0, (0)), 100000000, 0, -9714)]), 0, (("astlib/ast_414.ml", 894, 37306, 37310), ("astlib/ast_414.ml", 894, 37306, 37351), 0), 0, Tag1 ("Astlib__Ast_414", 340)); (("Psig_modtypesubst", 944), ([(Tag3 ((("module_type_declaration", 7964)), 0, (0)), 100000000, 0, -9715)]), 0, (("astlib/ast_414.ml", 896, 37408, 37412), ("astlib/ast_414.ml", 896, 37408, 37458), 0), 0, Tag1 ("Astlib__Ast_414", 341)); (("Psig_open", 945), ([(Tag3 ((("open_description", 7966)), 0, (0)), 100000000, 0, -9716)]), 0, (("astlib/ast_414.ml", 898, 37499, 37503), ("astlib/ast_414.ml", 898, 37499, 37534), 0), 0, Tag1 ("Astlib__Ast_414", 342)); (("Psig_include", 946), ([(Tag3 ((("include_description", 7969)), 0, (0)), 100000000, 0, -9717)]), 0, (("astlib/ast_414.ml", 899, 37552, 37556), ("astlib/ast_414.ml", 899, 37552, 37593), 0), 0, Tag1 ("Astlib__Ast_414", 343)); (("Psig_class", 947), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 7947)), 0, (0)), 100000000, 0, -9719)], (0)), 100000000, 0, -9718)]), 0, (("astlib/ast_414.ml", 900, 37615, 37619), ("astlib/ast_414.ml", 900, 37615, 37657), 0), 0, Tag1 ("Astlib__Ast_414", 344)); (("Psig_class_type", 948), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7948)), 0, (0)), 100000000, 0, -9721)], (0)), 100000000, 0, -9720)]), 0, (("astlib/ast_414.ml", 902, 37711, 37715), ("astlib/ast_414.ml", 902, 37711, 37763), 0), 0, Tag1 ("Astlib__Ast_414", 345)); (("Psig_attribute", 949), ([(Tag3 ((("attribute", 7913)), 0, (0)), 100000000, 0, -9722)]), 0, (("astlib/ast_414.ml", 904, 37824, 37828), ("astlib/ast_414.ml", 904, 37824, 37857), 0), 0, Tag1 ("Astlib__Ast_414", 346)); (("Psig_extension", 950), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -9723); (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9724)]), 0, (("astlib/ast_414.ml", 905, 37879, 37883), ("astlib/ast_414.ml", 905, 37879, 37925), 0), 0, Tag1 ("Astlib__Ast_414", 347))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "signature_item_desc"), 0, (0)), 100000000, 0, -9701)), 0, 0, 0, 0, (("astlib/ast_414.ml", 879, 36516, 36518), ("astlib/ast_414.ml", 905, 37879, 37925), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 99)), 2, 0); Tag1 (("module_declaration", 7962), (0, 0, [[(("pmd_name", 951), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9697)], (0)), 100000000, 0, -9696)], (0)), 100000000, 0, -9695), (("astlib/ast_414.ml", 909, 38024, 38030), ("astlib/ast_414.ml", 909, 38024, 38058), 0), 0, Tag1 ("Astlib__Ast_414", 348)); (("pmd_type", 952), 0, (Tag3 ((("module_type", 7956)), 0, (0)), 100000000, 0, -9698), (("astlib/ast_414.ml", 910, 38059, 38065), ("astlib/ast_414.ml", 910, 38059, 38087), 0), 0, Tag1 ("Astlib__Ast_414", 349)); (("pmd_attributes", 953), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9699), (("astlib/ast_414.ml", 911, 38088, 38094), ("astlib/ast_414.ml", 911, 38088, 38121), 0), 0, Tag1 ("Astlib__Ast_414", 350)); (("pmd_loc", 954), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9700), (("astlib/ast_414.ml", 912, 38156, 38162), ("astlib/ast_414.ml", 912, 38156, 38182), 0), 0, Tag1 ("Astlib__Ast_414", 351))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_declaration"), 0, (0)), 100000000, 0, -9694)), 0, 0, 0, 0, (("astlib/ast_414.ml", 907, 37944, 37946), ("astlib/ast_414.ml", 913, 38183, 38188), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 100)), 2, 0); Tag1 (("module_substitution", 7963), (0, 0, [[(("pms_name", 955), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9689)], (0)), 100000000, 0, -9688), (("astlib/ast_414.ml", 918, 38337, 38343), ("astlib/ast_414.ml", 918, 38337, 38364), 0), 0, Tag1 ("Astlib__Ast_414", 352)); (("pms_manifest", 956), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9691)], (0)), 100000000, 0, -9690), (("astlib/ast_414.ml", 919, 38365, 38371), ("astlib/ast_414.ml", 919, 38365, 38401), 0), 0, Tag1 ("Astlib__Ast_414", 353)); (("pms_attributes", 957), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9692), (("astlib/ast_414.ml", 920, 38402, 38408), ("astlib/ast_414.ml", 920, 38402, 38435), 0), 0, Tag1 ("Astlib__Ast_414", 354)); (("pms_loc", 958), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9693), (("astlib/ast_414.ml", 921, 38470, 38476), ("astlib/ast_414.ml", 921, 38470, 38496), 0), 0, Tag1 ("Astlib__Ast_414", 355))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_substitution"), 0, (0)), 100000000, 0, -9687)), 0, 0, 0, 0, (("astlib/ast_414.ml", 916, 38255, 38257), ("astlib/ast_414.ml", 922, 38497, 38502), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 101)), 2, 0); Tag1 (("module_type_declaration", 7964), (0, 0, [[(("pmtd_name", 959), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9682)], (0)), 100000000, 0, -9681), (("astlib/ast_414.ml", 927, 38660, 38666), ("astlib/ast_414.ml", 927, 38660, 38688), 0), 0, Tag1 ("Astlib__Ast_414", 356)); (("pmtd_type", 960), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 7956)), 0, (0)), 100000000, 0, -9684)], (0)), 100000000, 0, -9683), (("astlib/ast_414.ml", 928, 38689, 38695), ("astlib/ast_414.ml", 928, 38689, 38725), 0), 0, Tag1 ("Astlib__Ast_414", 357)); (("pmtd_attributes", 961), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9685), (("astlib/ast_414.ml", 929, 38726, 38732), ("astlib/ast_414.ml", 929, 38726, 38760), 0), 0, Tag1 ("Astlib__Ast_414", 358)); (("pmtd_loc", 962), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9686), (("astlib/ast_414.ml", 930, 38795, 38801), ("astlib/ast_414.ml", 930, 38795, 38822), 0), 0, Tag1 ("Astlib__Ast_414", 359))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_type_declaration"), 0, (0)), 100000000, 0, -9680)), 0, 0, 0, 0, (("astlib/ast_414.ml", 925, 38570, 38572), ("astlib/ast_414.ml", 931, 38823, 38828), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 102)), 2, 0); Tag1 (("open_infos", 7965), ([((("a")), 100000000, 0, -9676)], 1, [[(("popen_expr", 963), 0, ((("a")), 100000000, 0, -9676), (("astlib/ast_414.ml", 940, 39103, 39109), ("astlib/ast_414.ml", 940, 39103, 39124), 0), 0, Tag1 ("Astlib__Ast_414", 360)); (("popen_override", 964), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "override_flag"), 0, (0)), 100000000, 0, -9677), (("astlib/ast_414.ml", 941, 39125, 39131), ("astlib/ast_414.ml", 941, 39125, 39161), 0), 0, Tag1 ("Astlib__Ast_414", 361)); (("popen_loc", 965), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9678), (("astlib/ast_414.ml", 942, 39162, 39168), ("astlib/ast_414.ml", 942, 39162, 39190), 0), 0, Tag1 ("Astlib__Ast_414", 362)); (("popen_attributes", 966), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9679), (("astlib/ast_414.ml", 943, 39191, 39197), ("astlib/ast_414.ml", 943, 39191, 39226), 0), 0, Tag1 ("Astlib__Ast_414", 363))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "open_infos"), [((("a")), 100000000, 0, -9676)], (0)), 100000000, 0, -9675)), [25], [0], 0, 0, (("astlib/ast_414.ml", 938, 39033, 39035), ("astlib/ast_414.ml", 944, 39227, 39232), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 103)), 2, 0); Tag1 (("open_description", 7966), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7965)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9674)], (0)), 100000000, 0, -9673)], (0)), 100000000, 0, -9672)), 0, 0, 0, 0, (("astlib/ast_414.ml", 953, 39619, 39621), ("astlib/ast_414.ml", 953, 39619, 39670), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 104)), 2, 0); Tag1 (("open_declaration", 7967), (0, 0, 0, 1, ((Tag3 ((("open_infos", 7965)), [(Tag3 ((("module_expr", 7972)), 0, (0)), 100000000, 0, -9671)], (0)), 100000000, 0, -9670)), 0, 0, 0, 0, (("astlib/ast_414.ml", 958, 39768, 39770), ("astlib/ast_414.ml", 958, 39768, 39815), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 105)), 2, 0); Tag1 (("include_infos", 7968), ([((("a")), 100000000, 0, -9667)], 1, [[(("pincl_mod", 967), 0, ((("a")), 100000000, 0, -9667), (("astlib/ast_414.ml", 966, 40019, 40025), ("astlib/ast_414.ml", 966, 40019, 40039), 0), 0, Tag1 ("Astlib__Ast_414", 364)); (("pincl_loc", 968), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9668), (("astlib/ast_414.ml", 967, 40040, 40046), ("astlib/ast_414.ml", 967, 40040, 40068), 0), 0, Tag1 ("Astlib__Ast_414", 365)); (("pincl_attributes", 969), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9669), (("astlib/ast_414.ml", 968, 40069, 40075), ("astlib/ast_414.ml", 968, 40069, 40104), 0), 0, Tag1 ("Astlib__Ast_414", 366))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "include_infos"), [((("a")), 100000000, 0, -9667)], (0)), 100000000, 0, -9666)), [25], [0], 0, 0, (("astlib/ast_414.ml", 964, 39943, 39945), ("astlib/ast_414.ml", 969, 40105, 40110), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 106)), 2, 0); Tag1 (("include_description", 7969), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7968)), [(Tag3 ((("module_type", 7956)), 0, (0)), 100000000, 0, -9665)], (0)), 100000000, 0, -9664)), 0, 0, 0, 0, (("astlib/ast_414.ml", 971, 40112, 40114), ("astlib/ast_414.ml", 971, 40112, 40165), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 107)), 2, 0); Tag1 (("include_declaration", 7970), (0, 0, 0, 1, ((Tag3 ((("include_infos", 7968)), [(Tag3 ((("module_expr", 7972)), 0, (0)), 100000000, 0, -9663)], (0)), 100000000, 0, -9662)), 0, 0, 0, 0, (("astlib/ast_414.ml", 974, 40237, 40239), ("astlib/ast_414.ml", 974, 40237, 40290), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 108)), 2, 0); Tag1 (("with_constraint", 7971), (0, 0, Tag1 ([(("Pwith_type", 970), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9643)], (0)), 100000000, 0, -9642); (Tag3 ((("type_declaration", 7932)), 0, (0)), 100000000, 0, -9644)]), 0, (("astlib/ast_414.ml", 978, 40430, 40434), ("astlib/ast_414.ml", 978, 40430, 40484), 0), 0, Tag1 ("Astlib__Ast_414", 367)); (("Pwith_module", 971), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9646)], (0)), 100000000, 0, -9645); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9648)], (0)), 100000000, 0, -9647)]), 0, (("astlib/ast_414.ml", 983, 40634, 40638), ("astlib/ast_414.ml", 983, 40634, 40689), 0), 0, Tag1 ("Astlib__Ast_414", 368)); (("Pwith_modtype", 972), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9650)], (0)), 100000000, 0, -9649); (Tag3 ((("module_type", 7956)), 0, (0)), 100000000, 0, -9651)]), 0, (("astlib/ast_414.ml", 985, 40727, 40731), ("astlib/ast_414.ml", 985, 40727, 40779), 0), 0, Tag1 ("Astlib__Ast_414", 369)); (("Pwith_modtypesubst", 973), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9653)], (0)), 100000000, 0, -9652); (Tag3 ((("module_type", 7956)), 0, (0)), 100000000, 0, -9654)]), 0, (("astlib/ast_414.ml", 987, 40822, 40826), ("astlib/ast_414.ml", 987, 40822, 40879), 0), 0, Tag1 ("Astlib__Ast_414", 370)); (("Pwith_typesubst", 974), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9656)], (0)), 100000000, 0, -9655); (Tag3 ((("type_declaration", 7932)), 0, (0)), 100000000, 0, -9657)]), 0, (("astlib/ast_414.ml", 989, 40929, 40933), ("astlib/ast_414.ml", 989, 40929, 40988), 0), 0, Tag1 ("Astlib__Ast_414", 371)); (("Pwith_modsubst", 975), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9659)], (0)), 100000000, 0, -9658); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9661)], (0)), 100000000, 0, -9660)]), 0, (("astlib/ast_414.ml", 991, 41056, 41060), ("astlib/ast_414.ml", 991, 41056, 41113), 0), 0, Tag1 ("Astlib__Ast_414", 372))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "with_constraint"), 0, (0)), 100000000, 0, -9641)), 0, 0, 0, 0, (("astlib/ast_414.ml", 977, 40362, 40364), ("astlib/ast_414.ml", 991, 41056, 41113), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 109)), 2, 0); Tag1 (("module_expr", 7972), (0, 0, [[(("pmod_desc", 976), 0, (Tag3 ((("module_expr_desc", 7973)), 0, (0)), 100000000, 0, -9638), (("astlib/ast_414.ml", 998, 41275, 41281), ("astlib/ast_414.ml", 998, 41275, 41309), 0), 0, Tag1 ("Astlib__Ast_414", 373)); (("pmod_loc", 977), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9639), (("astlib/ast_414.ml", 999, 41310, 41316), ("astlib/ast_414.ml", 999, 41310, 41337), 0), 0, Tag1 ("Astlib__Ast_414", 374)); (("pmod_attributes", 978), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9640), (("astlib/ast_414.ml", 1000, 41338, 41344), ("astlib/ast_414.ml", 1000, 41338, 41372), 0), 0, Tag1 ("Astlib__Ast_414", 375))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -9637)), 0, 0, 0, 0, (("astlib/ast_414.ml", 996, 41209, 41211), ("astlib/ast_414.ml", 1001, 41403, 41408), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 110)), 2, 0); Tag1 (("module_expr_desc", 7973), (0, 0, Tag1 ([(("Pmod_ident", 979), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9627)], (0)), 100000000, 0, -9626)]), 0, (("astlib/ast_414.ml", 1004, 41480, 41484), ("astlib/ast_414.ml", 1004, 41480, 41515), 0), 0, Tag1 ("Astlib__Ast_414", 376)); (("Pmod_structure", 980), ([(Tag3 ((("structure", 7974)), 0, (0)), 100000000, 0, -9628)]), 0, (("astlib/ast_414.ml", 1005, 41528, 41532), ("astlib/ast_414.ml", 1005, 41528, 41561), 0), 0, Tag1 ("Astlib__Ast_414", 377)); (("Pmod_functor", 981), ([(Tag3 ((("functor_parameter", 7958)), 0, (0)), 100000000, 0, -9629); (Tag3 ((("module_expr", 7972)), 0, (0)), 100000000, 0, -9630)]), 0, (("astlib/ast_414.ml", 1006, 41587, 41591), ("astlib/ast_414.ml", 1006, 41587, 41640), 0), 0, Tag1 ("Astlib__Ast_414", 378)); (("Pmod_apply", 982), ([(Tag3 ((("module_expr", 7972)), 0, (0)), 100000000, 0, -9631); (Tag3 ((("module_expr", 7972)), 0, (0)), 100000000, 0, -9632)]), 0, (("astlib/ast_414.ml", 1008, 41681, 41685), ("astlib/ast_414.ml", 1008, 41681, 41726), 0), 0, Tag1 ("Astlib__Ast_414", 379)); (("Pmod_constraint", 983), ([(Tag3 ((("module_expr", 7972)), 0, (0)), 100000000, 0, -9633); (Tag3 ((("module_type", 7956)), 0, (0)), 100000000, 0, -9634)]), 0, (("astlib/ast_414.ml", 1009, 41746, 41750), ("astlib/ast_414.ml", 1009, 41746, 41796), 0), 0, Tag1 ("Astlib__Ast_414", 380)); (("Pmod_unpack", 984), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9635)]), 0, (("astlib/ast_414.ml", 1010, 41817, 41821), ("astlib/ast_414.ml", 1010, 41817, 41848), 0), 0, Tag1 ("Astlib__Ast_414", 381)); (("Pmod_extension", 985), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -9636)]), 0, (("astlib/ast_414.ml", 1011, 41867, 41871), ("astlib/ast_414.ml", 1011, 41867, 41900), 0), 0, Tag1 ("Astlib__Ast_414", 382))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_expr_desc"), 0, (0)), 100000000, 0, -9625)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1003, 41410, 41412), ("astlib/ast_414.ml", 1011, 41867, 41900), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 111)), 2, 0); Tag1 (("structure", 7974), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 7975)), 0, (0)), 100000000, 0, -9624)], (0)), 100000000, 0, -9623)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1013, 41918, 41920), ("astlib/ast_414.ml", 1013, 41918, 41955), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 112)), 2, 0); Tag1 (("structure_item", 7975), (0, 0, [[(("pstr_desc", 986), 0, (Tag3 ((("structure_item_desc", 7976)), 0, (0)), 100000000, 0, -9621), (("astlib/ast_414.ml", 1017, 42029, 42035), ("astlib/ast_414.ml", 1017, 42029, 42066), 0), 0, Tag1 ("Astlib__Ast_414", 383)); (("pstr_loc", 987), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9622), (("astlib/ast_414.ml", 1018, 42067, 42073), ("astlib/ast_414.ml", 1018, 42067, 42094), 0), 0, Tag1 ("Astlib__Ast_414", 384))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -9620)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1015, 41957, 41959), ("astlib/ast_414.ml", 1019, 42095, 42100), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 113)), 2, 0); Tag1 (("structure_item_desc", 7976), (0, 0, Tag1 ([(("Pstr_eval", 988), ([(Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9596); (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9597)]), 0, (("astlib/ast_414.ml", 1022, 42178, 42182), ("astlib/ast_414.ml", 1022, 42178, 42220), 0), 0, Tag1 ("Astlib__Ast_414", 385)); (("Pstr_value", 989), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -9598); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 7977)), 0, (0)), 100000000, 0, -9600)], (0)), 100000000, 0, -9599)]), 0, (("astlib/ast_414.ml", 1023, 42233, 42237), ("astlib/ast_414.ml", 1023, 42233, 42282), 0), 0, Tag1 ("Astlib__Ast_414", 386)); (("Pstr_primitive", 990), ([(Tag3 ((("value_description", 7931)), 0, (0)), 100000000, 0, -9601)]), 0, (("astlib/ast_414.ml", 1030, 42632, 42636), ("astlib/ast_414.ml", 1030, 42632, 42673), 0), 0, Tag1 ("Astlib__Ast_414", 387)); (("Pstr_type", 991), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "rec_flag"), 0, (0)), 100000000, 0, -9602); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 7932)), 0, (0)), 100000000, 0, -9604)], (0)), 100000000, 0, -9603)]), 0, (("astlib/ast_414.ml", 1033, 42750, 42754), ("astlib/ast_414.ml", 1033, 42750, 42801), 0), 0, Tag1 ("Astlib__Ast_414", 388)); (("Pstr_typext", 992), ([(Tag3 ((("type_extension", 7937)), 0, (0)), 100000000, 0, -9605)]), 0, (("astlib/ast_414.ml", 1035, 42854, 42858), ("astlib/ast_414.ml", 1035, 42854, 42889), 0), 0, Tag1 ("Astlib__Ast_414", 389)); (("Pstr_exception", 993), ([(Tag3 ((("type_exception", 7939)), 0, (0)), 100000000, 0, -9606)]), 0, (("astlib/ast_414.ml", 1036, 42915, 42919), ("astlib/ast_414.ml", 1036, 42915, 42953), 0), 0, Tag1 ("Astlib__Ast_414", 390)); (("Pstr_module", 994), ([(Tag3 ((("module_binding", 7978)), 0, (0)), 100000000, 0, -9607)]), 0, (("astlib/ast_414.ml", 1039, 43026, 43030), ("astlib/ast_414.ml", 1039, 43026, 43061), 0), 0, Tag1 ("Astlib__Ast_414", 391)); (("Pstr_recmodule", 995), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 7978)), 0, (0)), 100000000, 0, -9609)], (0)), 100000000, 0, -9608)]), 0, (("astlib/ast_414.ml", 1040, 43086, 43090), ("astlib/ast_414.ml", 1040, 43086, 43129), 0), 0, Tag1 ("Astlib__Ast_414", 392)); (("Pstr_modtype", 996), ([(Tag3 ((("module_type_declaration", 7964)), 0, (0)), 100000000, 0, -9610)]), 0, (("astlib/ast_414.ml", 1042, 43188, 43192), ("astlib/ast_414.ml", 1042, 43188, 43233), 0), 0, Tag1 ("Astlib__Ast_414", 393)); (("Pstr_open", 997), ([(Tag3 ((("open_declaration", 7967)), 0, (0)), 100000000, 0, -9611)]), 0, (("astlib/ast_414.ml", 1043, 43263, 43267), ("astlib/ast_414.ml", 1043, 43263, 43298), 0), 0, Tag1 ("Astlib__Ast_414", 394)); (("Pstr_class", 998), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 7955)), 0, (0)), 100000000, 0, -9613)], (0)), 100000000, 0, -9612)]), 0, (("astlib/ast_414.ml", 1044, 43316, 43320), ("astlib/ast_414.ml", 1044, 43316, 43358), 0), 0, Tag1 ("Astlib__Ast_414", 395)); (("Pstr_class_type", 999), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 7948)), 0, (0)), 100000000, 0, -9615)], (0)), 100000000, 0, -9614)]), 0, (("astlib/ast_414.ml", 1046, 43412, 43416), ("astlib/ast_414.ml", 1046, 43412, 43464), 0), 0, Tag1 ("Astlib__Ast_414", 396)); (("Pstr_include", 1000), ([(Tag3 ((("include_declaration", 7970)), 0, (0)), 100000000, 0, -9616)]), 0, (("astlib/ast_414.ml", 1048, 43525, 43529), ("astlib/ast_414.ml", 1048, 43525, 43566), 0), 0, Tag1 ("Astlib__Ast_414", 397)); (("Pstr_attribute", 1001), ([(Tag3 ((("attribute", 7913)), 0, (0)), 100000000, 0, -9617)]), 0, (("astlib/ast_414.ml", 1049, 43588, 43592), ("astlib/ast_414.ml", 1049, 43588, 43621), 0), 0, Tag1 ("Astlib__Ast_414", 398)); (("Pstr_extension", 1002), ([(Tag3 ((("extension", 7914)), 0, (0)), 100000000, 0, -9618); (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9619)]), 0, (("astlib/ast_414.ml", 1050, 43643, 43647), ("astlib/ast_414.ml", 1050, 43643, 43689), 0), 0, Tag1 ("Astlib__Ast_414", 399))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "structure_item_desc"), 0, (0)), 100000000, 0, -9595)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1021, 42102, 42104), ("astlib/ast_414.ml", 1050, 43643, 43689), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 114)), 2, 0); Tag1 (("value_binding", 7977), (0, 0, [[(("pvb_pat", 1003), 0, (Tag3 ((("pattern", 7924)), 0, (0)), 100000000, 0, -9591), (("astlib/ast_414.ml", 1054, 43778, 43784), ("astlib/ast_414.ml", 1054, 43778, 43801), 0), 0, Tag1 ("Astlib__Ast_414", 400)); (("pvb_expr", 1004), 0, (Tag3 ((("expression", 7926)), 0, (0)), 100000000, 0, -9592), (("astlib/ast_414.ml", 1055, 43802, 43808), ("astlib/ast_414.ml", 1055, 43802, 43829), 0), 0, Tag1 ("Astlib__Ast_414", 401)); (("pvb_attributes", 1005), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9593), (("astlib/ast_414.ml", 1056, 43830, 43836), ("astlib/ast_414.ml", 1056, 43830, 43863), 0), 0, Tag1 ("Astlib__Ast_414", 402)); (("pvb_loc", 1006), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9594), (("astlib/ast_414.ml", 1057, 43864, 43870), ("astlib/ast_414.ml", 1057, 43864, 43890), 0), 0, Tag1 ("Astlib__Ast_414", 403))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "value_binding"), 0, (0)), 100000000, 0, -9590)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1052, 43708, 43710), ("astlib/ast_414.ml", 1058, 43891, 43896), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 115)), 2, 0); Tag1 (("module_binding", 7978), (0, 0, [[(("pmb_name", 1007), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9586)], (0)), 100000000, 0, -9585)], (0)), 100000000, 0, -9584), (("astlib/ast_414.ml", 1062, 43970, 43976), ("astlib/ast_414.ml", 1062, 43970, 44004), 0), 0, Tag1 ("Astlib__Ast_414", 404)); (("pmb_expr", 1008), 0, (Tag3 ((("module_expr", 7972)), 0, (0)), 100000000, 0, -9587), (("astlib/ast_414.ml", 1063, 44005, 44011), ("astlib/ast_414.ml", 1063, 44005, 44033), 0), 0, Tag1 ("Astlib__Ast_414", 405)); (("pmb_attributes", 1009), 0, (Tag3 ((("attributes", 7915)), 0, (0)), 100000000, 0, -9588), (("astlib/ast_414.ml", 1064, 44034, 44040), ("astlib/ast_414.ml", 1064, 44034, 44067), 0), 0, Tag1 ("Astlib__Ast_414", 406)); (("pmb_loc", 1010), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9589), (("astlib/ast_414.ml", 1065, 44068, 44074), ("astlib/ast_414.ml", 1065, 44068, 44094), 0), 0, Tag1 ("Astlib__Ast_414", 407))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "module_binding"), 0, (0)), 100000000, 0, -9583)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1060, 43898, 43900), ("astlib/ast_414.ml", 1066, 44095, 44100), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 116)), 2, 0); Tag1 (("toplevel_phrase", 7979), (0, 0, Tag1 ([(("Ptop_def", 1025), ([(Tag3 ((("structure", 7974)), 0, (0)), 100000000, 0, -9581)]), 0, (("astlib/ast_414.ml", 1074, 44293, 44297), ("astlib/ast_414.ml", 1074, 44293, 44320), 0), 0, Tag1 ("Astlib__Ast_414", 412)); (("Ptop_dir", 1026), ([(Tag3 ((("toplevel_directive", 7980)), 0, (0)), 100000000, 0, -9582)]), 0, (("astlib/ast_414.ml", 1075, 44321, 44325), ("astlib/ast_414.ml", 1075, 44321, 44357), 0), 0, Tag1 ("Astlib__Ast_414", 413))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -9580)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1073, 44224, 44226), ("astlib/ast_414.ml", 1075, 44321, 44357), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 408)), 1, 0); Tag1 (("toplevel_directive", 7980), (0, 0, [[(("pdir_name", 1027), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Asttypes"), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9576)], (0)), 100000000, 0, -9575), (("astlib/ast_414.ml", 1079, 44467, 44473), ("astlib/ast_414.ml", 1079, 44467, 44495), 0), 0, Tag1 ("Astlib__Ast_414", 414)); (("pdir_arg", 1028), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("directive_argument", 7981)), 0, (0)), 100000000, 0, -9578)], (0)), 100000000, 0, -9577), (("astlib/ast_414.ml", 1080, 44496, 44502), ("astlib/ast_414.ml", 1080, 44496, 44538), 0), 0, Tag1 ("Astlib__Ast_414", 415)); (("pdir_loc", 1029), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9579), (("astlib/ast_414.ml", 1081, 44539, 44545), ("astlib/ast_414.ml", 1081, 44539, 44566), 0), 0, Tag1 ("Astlib__Ast_414", 416))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "toplevel_directive"), 0, (0)), 100000000, 0, -9574)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1077, 44387, 44389), ("astlib/ast_414.ml", 1082, 44567, 44572), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 409)), 2, 0); Tag1 (("directive_argument", 7981), (0, 0, [[(("pdira_desc", 1030), 0, (Tag3 ((("directive_argument_desc", 7982)), 0, (0)), 100000000, 0, -9572), (("astlib/ast_414.ml", 1086, 44654, 44660), ("astlib/ast_414.ml", 1086, 44654, 44696), 0), 0, Tag1 ("Astlib__Ast_414", 417)); (("pdira_loc", 1031), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -9573), (("astlib/ast_414.ml", 1087, 44697, 44703), ("astlib/ast_414.ml", 1087, 44697, 44725), 0), 0, Tag1 ("Astlib__Ast_414", 418))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "directive_argument"), 0, (0)), 100000000, 0, -9571)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1084, 44574, 44576), ("astlib/ast_414.ml", 1088, 44726, 44731), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 410)), 2, 0); Tag1 (("directive_argument_desc", 7982), (0, 0, Tag1 ([(("Pdir_string", 1032), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9565)]), 0, (("astlib/ast_414.ml", 1091, 44817, 44821), ("astlib/ast_414.ml", 1091, 44817, 44844), 0), 0, Tag1 ("Astlib__Ast_414", 419)); (("Pdir_int", 1033), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9566); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -9568)], (0)), 100000000, 0, -9567)]), 0, (("astlib/ast_414.ml", 1092, 44845, 44849), ("astlib/ast_414.ml", 1092, 44845, 44883), 0), 0, Tag1 ("Astlib__Ast_414", 420)); (("Pdir_ident", 1034), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -9569)]), 0, (("astlib/ast_414.ml", 1093, 44884, 44888), ("astlib/ast_414.ml", 1093, 44884, 44915), 0), 0, Tag1 ("Astlib__Ast_414", 421)); (("Pdir_bool", 1035), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -9570)]), 0, (("astlib/ast_414.ml", 1094, 44916, 44920), ("astlib/ast_414.ml", 1094, 44916, 44939), 0), 0, Tag1 ("Astlib__Ast_414", 422))], 0), 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__Ast_414")), "Parsetree"), "directive_argument_desc"), 0, (0)), 100000000, 0, -9564)), 0, 0, 0, 0, (("astlib/ast_414.ml", 1090, 44733, 44735), ("astlib/ast_414.ml", 1094, 44916, 44939), 0), 0, 0, 0, Tag1 ("Astlib__Ast_414", 411)), 2, 0)]), 0, (("astlib/ast_500.ml", 7, 182, 182), ("astlib/ast_500.ml", 9, 236, 239), 0), Tag1 ("Astlib__Ast_500", 1)), 0, 0); Tag3 (("Config", 7897), 0, (Tag1 ([(("ast_impl_magic_number", 7983), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10239), 0, (("astlib/ast_500.ml", 12, 264, 270), ("astlib/ast_500.ml", 12, 264, 291), 0), 0, Tag1 ("Astlib__Ast_500", 2)), 0); (("ast_intf_magic_number", 7984), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10238), 0, (("astlib/ast_500.ml", 13, 309, 315), ("astlib/ast_500.ml", 13, 309, 336), 0), 0, Tag1 ("Astlib__Ast_500", 3)), 0)]), 0, (("astlib/ast_500.ml", 11, 241, 241), ("astlib/ast_500.ml", 14, 354, 357), 0), Tag1 ("Astlib__Ast_500", 4)), 0, 0)]), 0, (("astlib/astlib.ml", 38, 1688, 1688), ("astlib/astlib.ml", 38, 1688, 1712), 0), Tag1 ("Astlib", 13)), 0, 0); (("version", 7890), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -9536), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7891), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -9535), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7892), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -9516), 0), 100000000, 0, -9515), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -9532), 0), 100000000, 0, -9531), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -9534), 0), 100000000, 0, -9533), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -9526), 0), 100000000, 0, -9525), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -9498), 0), 100000000, 0, -9497), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -9512), 0), 100000000, 0, -9511), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -9502), 0), 100000000, 0, -9501), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -9524), 0), 100000000, 0, -9523), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -9510), 0), 100000000, 0, -9509), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -9508), 0), 100000000, 0, -9507), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -9506), 0), 100000000, 0, -9505), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -9504), 0), 100000000, 0, -9503), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -9520), 0), 100000000, 0, -9519), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -9528), 0), 100000000, 0, -9527), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -9522), 0), 100000000, 0, -9521), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -9500), 0), 100000000, 0, -9499), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -9514), 0), 100000000, 0, -9513), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -9530), 0), 100000000, 0, -9529), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7889)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -9518), 0), 100000000, 0, -9517), (0, 100000000, 0, -9496)), 100000000, 0, 1294)), 100000000, 0, 1295)), 100000000, 0, 1296)), 100000000, 0, 1297)), 100000000, 0, 1298)), 100000000, 0, 1299)), 100000000, 0, 1300)), 100000000, 0, 1301)), 100000000, 0, 1302)), 100000000, 0, 1303)), 100000000, 0, 1304)), 100000000, 0, 1305)), 100000000, 0, 1306)), 100000000, 0, 1307)), 100000000, 0, 1308)), 100000000, 0, 1309)), 100000000, 0, 1310)), 100000000, 0, 1311)), 100000000, 0, -9477), (0)), 100000000, 0, -9476)], (0)), 100000000, 0, -9475)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7893), ((("witnesses", 6673)), [((("_")), 100000000, 0, -9474)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7892)), 0, (0)), 100000000, 0, -9473)], (0)), 100000000, 0, -9472)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7894), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7892)), 0, (0)), 100000000, 0, -9471)], (0)), 100000000, 0, -9470), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 158, 6006, 6006), ("ast/versions.mli", 158, 6006, 6071), 0), Tag1 ("Ppxlib_ast__Versions", 47)), 0, 0); Tag3 (("OCaml_501", 6690), 0, (Tag1 ([Tag3 (("Ast", 7985), 0, (Tag1 ([Tag3 (("Asttypes", 7991), 0, (Tag1 ([Tag1 (("constant", 7994), (0, 0, Tag1 ([(("Const_int", 321), ([(Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10324)]), 0, (("astlib/ast_501.ml", 3, 103, 109), ("astlib/ast_501.ml", 3, 103, 125), 0), 0, Tag1 ("Astlib__Ast_501", 1)); (("Const_char", 322), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -10325)]), 0, (("astlib/ast_501.ml", 4, 126, 130), ("astlib/ast_501.ml", 4, 126, 150), 0), 0, Tag1 ("Astlib__Ast_501", 2)); (("Const_string", 323), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10326); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10327); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10329)], (0)), 100000000, 0, -10328)]), 0, (("astlib/ast_501.ml", 5, 151, 155), ("astlib/ast_501.ml", 5, 151, 208), 0), 0, Tag1 ("Astlib__Ast_501", 3)); (("Const_float", 333), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10330)]), 0, (("astlib/ast_501.ml", 6, 209, 213), ("astlib/ast_501.ml", 6, 209, 236), 0), 0, Tag1 ("Astlib__Ast_501", 4)); (("Const_int32", 334), ([(Tag3 ((Tag3 ("int32", 12)), 0, (0)), 100000000, 0, -10331)]), 0, (("astlib/ast_501.ml", 7, 237, 241), ("astlib/ast_501.ml", 7, 237, 263), 0), 0, Tag1 ("Astlib__Ast_501", 5)); (("Const_int64", 335), ([(Tag3 ((Tag3 ("int64", 13)), 0, (0)), 100000000, 0, -10332)]), 0, (("astlib/ast_501.ml", 8, 264, 268), ("astlib/ast_501.ml", 8, 264, 290), 0), 0, Tag1 ("Astlib__Ast_501", 6)); (("Const_nativeint", 336), ([(Tag3 ((Tag3 ("nativeint", 11)), 0, (0)), 100000000, 0, -10333)]), 0, (("astlib/ast_501.ml", 9, 291, 295), ("astlib/ast_501.ml", 9, 291, 325), 0), 0, Tag1 ("Astlib__Ast_501", 7))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "constant"), 0, (0)), 100000000, 0, -10323)), 0, 0, 0, 0, (("astlib/ast_501.ml", 2, 49, 51), ("astlib/ast_501.ml", 9, 291, 325), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 0)), 1, 0); Tag1 (("rec_flag", 7995), (0, 0, Tag1 ([(("Nonrecursive", 622), (0), 0, (("astlib/ast_501.ml", 11, 327, 381), ("astlib/ast_501.ml", 11, 327, 393), 0), 0, Tag1 ("Astlib__Ast_501", 9)); (("Recursive", 623), (0), 0, (("astlib/ast_501.ml", 11, 327, 394), ("astlib/ast_501.ml", 11, 327, 405), 0), 0, Tag1 ("Astlib__Ast_501", 10))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "rec_flag"), 0, (0)), 100000000, 0, -10322)), 0, 0, 0, 0, (("astlib/ast_501.ml", 11, 327, 329), ("astlib/ast_501.ml", 11, 327, 405), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 8)), 1, 0); Tag1 (("direction_flag", 7996), (0, 0, Tag1 ([(("Upto", 625), (0), 0, (("astlib/ast_501.ml", 13, 407, 473), ("astlib/ast_501.ml", 13, 407, 477), 0), 0, Tag1 ("Astlib__Ast_501", 12)); (("Downto", 626), (0), 0, (("astlib/ast_501.ml", 13, 407, 478), ("astlib/ast_501.ml", 13, 407, 486), 0), 0, Tag1 ("Astlib__Ast_501", 13))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "direction_flag"), 0, (0)), 100000000, 0, -10321)), 0, 0, 0, 0, (("astlib/ast_501.ml", 13, 407, 409), ("astlib/ast_501.ml", 13, 407, 486), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 11)), 1, 0); Tag1 (("private_flag", 7997), (0, 0, Tag1 ([(("Private", 628), (0), 0, (("astlib/ast_501.ml", 16, 542, 604), ("astlib/ast_501.ml", 16, 542, 611), 0), 0, Tag1 ("Astlib__Ast_501", 15)); (("Public", 629), (0), 0, (("astlib/ast_501.ml", 16, 542, 612), ("astlib/ast_501.ml", 16, 542, 620), 0), 0, Tag1 ("Astlib__Ast_501", 16))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "private_flag"), 0, (0)), 100000000, 0, -10320)), 0, 0, 0, 0, (("astlib/ast_501.ml", 16, 542, 544), ("astlib/ast_501.ml", 16, 542, 620), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 14)), 1, 0); Tag1 (("mutable_flag", 7998), (0, 0, Tag1 ([(("Immutable", 631), (0), 0, (("astlib/ast_501.ml", 18, 622, 684), ("astlib/ast_501.ml", 18, 622, 693), 0), 0, Tag1 ("Astlib__Ast_501", 18)); (("Mutable", 632), (0), 0, (("astlib/ast_501.ml", 18, 622, 694), ("astlib/ast_501.ml", 18, 622, 703), 0), 0, Tag1 ("Astlib__Ast_501", 19))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "mutable_flag"), 0, (0)), 100000000, 0, -10319)), 0, 0, 0, 0, (("astlib/ast_501.ml", 18, 622, 624), ("astlib/ast_501.ml", 18, 622, 703), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 17)), 1, 0); Tag1 (("virtual_flag", 7999), (0, 0, Tag1 ([(("Virtual", 634), (0), 0, (("astlib/ast_501.ml", 20, 705, 767), ("astlib/ast_501.ml", 20, 705, 774), 0), 0, Tag1 ("Astlib__Ast_501", 21)); (("Concrete", 635), (0), 0, (("astlib/ast_501.ml", 20, 705, 775), ("astlib/ast_501.ml", 20, 705, 785), 0), 0, Tag1 ("Astlib__Ast_501", 22))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "virtual_flag"), 0, (0)), 100000000, 0, -10318)), 0, 0, 0, 0, (("astlib/ast_501.ml", 20, 705, 707), ("astlib/ast_501.ml", 20, 705, 785), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 20)), 1, 0); Tag1 (("override_flag", 8000), (0, 0, Tag1 ([(("Override", 637), (0), 0, (("astlib/ast_501.ml", 22, 787, 851), ("astlib/ast_501.ml", 22, 787, 859), 0), 0, Tag1 ("Astlib__Ast_501", 24)); (("Fresh", 638), (0), 0, (("astlib/ast_501.ml", 22, 787, 860), ("astlib/ast_501.ml", 22, 787, 867), 0), 0, Tag1 ("Astlib__Ast_501", 25))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "override_flag"), 0, (0)), 100000000, 0, -10317)), 0, 0, 0, 0, (("astlib/ast_501.ml", 22, 787, 789), ("astlib/ast_501.ml", 22, 787, 867), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 23)), 1, 0); Tag1 (("closed_flag", 8001), (0, 0, Tag1 ([(("Closed", 640), (0), 0, (("astlib/ast_501.ml", 24, 869, 929), ("astlib/ast_501.ml", 24, 869, 935), 0), 0, Tag1 ("Astlib__Ast_501", 27)); (("Open", 641), (0), 0, (("astlib/ast_501.ml", 24, 869, 936), ("astlib/ast_501.ml", 24, 869, 942), 0), 0, Tag1 ("Astlib__Ast_501", 28))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "closed_flag"), 0, (0)), 100000000, 0, -10316)), 0, 0, 0, 0, (("astlib/ast_501.ml", 24, 869, 871), ("astlib/ast_501.ml", 24, 869, 942), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 26)), 1, 0); Tag1 (("label", 8002), (0, 0, 0, 1, ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10315)), 0, 0, 0, 0, (("astlib/ast_501.ml", 26, 944, 946), ("astlib/ast_501.ml", 26, 944, 965), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 29)), 1, 0); Tag1 (("arg_label", 8003), (0, 0, Tag1 ([(("Nolabel", 644), (0), 0, (("astlib/ast_501.ml", 29, 1023, 1029), ("astlib/ast_501.ml", 29, 1023, 1036), 0), 0, Tag1 ("Astlib__Ast_501", 31)); (("Labelled", 645), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10313)]), 0, (("astlib/ast_501.ml", 30, 1037, 1041), ("astlib/ast_501.ml", 30, 1037, 1061), 0), 0, Tag1 ("Astlib__Ast_501", 32)); (("Optional", 646), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10314)]), 0, (("astlib/ast_501.ml", 31, 1086, 1090), ("astlib/ast_501.ml", 31, 1086, 1110), 0), 0, Tag1 ("Astlib__Ast_501", 33))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "arg_label"), 0, (0)), 100000000, 0, -10312)), 0, 0, 0, 0, (("astlib/ast_501.ml", 28, 967, 969), ("astlib/ast_501.ml", 31, 1086, 1110), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 30)), 1, 0); Tag1 (("loc", 8004), ([((("a")), 100000000, 0, -10310)], 1, [[(("txt", 648), 0, ((("a")), 100000000, 0, -10310), (("astlib/ast_501.ml", 34, 1173, 1177), ("astlib/ast_501.ml", 34, 1173, 1186), 0), 0, Tag1 ("Astlib__Ast_501", 35)); (("loc", 649), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10311), (("astlib/ast_501.ml", 35, 1187, 1191), ("astlib/ast_501.ml", 35, 1187, 1208), 0), 0, Tag1 ("Astlib__Ast_501", 36))]], 1, ((Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "loc"), [((("a")), 100000000, 0, -10310)], (0)), 100000000, 0, -10309)), [25], [0], 0, 0, (("astlib/ast_501.ml", 33, 1137, 1139), ("astlib/ast_501.ml", 36, 1209, 1212), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 34)), 1, 0); Tag1 (("variance", 8005), (0, 0, Tag1 ([(("Covariant", 651), (0), 0, (("astlib/ast_501.ml", 39, 1268, 1272), ("astlib/ast_501.ml", 39, 1268, 1283), 0), 0, Tag1 ("Astlib__Ast_501", 38)); (("Contravariant", 652), (0), 0, (("astlib/ast_501.ml", 40, 1284, 1288), ("astlib/ast_501.ml", 40, 1284, 1303), 0), 0, Tag1 ("Astlib__Ast_501", 39)); (("NoVariance", 653), (0), 0, (("astlib/ast_501.ml", 41, 1304, 1308), ("astlib/ast_501.ml", 41, 1304, 1320), 0), 0, Tag1 ("Astlib__Ast_501", 40))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "variance"), 0, (0)), 100000000, 0, -10308)), 0, 0, 0, 0, (("astlib/ast_501.ml", 38, 1214, 1216), ("astlib/ast_501.ml", 41, 1304, 1320), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 37)), 1, 0); Tag1 (("injectivity", 8006), (0, 0, Tag1 ([(("Injective", 655), (0), 0, (("astlib/ast_501.ml", 44, 1382, 1386), ("astlib/ast_501.ml", 44, 1382, 1397), 0), 0, Tag1 ("Astlib__Ast_501", 42)); (("NoInjectivity", 656), (0), 0, (("astlib/ast_501.ml", 45, 1398, 1402), ("astlib/ast_501.ml", 45, 1398, 1417), 0), 0, Tag1 ("Astlib__Ast_501", 43))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Asttypes")), "injectivity"), 0, (0)), 100000000, 0, -10307)), 0, 0, 0, 0, (("astlib/ast_501.ml", 43, 1322, 1324), ("astlib/ast_501.ml", 45, 1398, 1417), 0), 0, 1, 0, Tag1 ("Astlib__Ast_501", 41)), 1, 0)]), 0, (("astlib/ast_501.ml", 1, 24, 24), ("astlib/ast_501.ml", 46, 1418, 1421), 0), Tag1 ("Astlib__Ast_501", 44)), 0, 0); Tag3 (("Parsetree", 7992), 0, (Tag1 ([Tag1 (("constant", 8007), (0, 0, Tag1 ([(("Pconst_integer", 659), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11008); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -11010)], (0)), 100000000, 0, -11009)]), 0, (("astlib/ast_501.ml", 52, 1521, 1525), ("astlib/ast_501.ml", 52, 1521, 1565), 0), 0, Tag1 ("Astlib__Ast_501", 46)); (("Pconst_char", 660), ([(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -11011)]), 0, (("astlib/ast_501.ml", 58, 1777, 1781), ("astlib/ast_501.ml", 58, 1777, 1802), 0), 0, Tag1 ("Astlib__Ast_501", 47)); (("Pconst_string", 661), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11012); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -11013); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11015)], (0)), 100000000, 0, -11014)]), 0, (("astlib/ast_501.ml", 59, 1836, 1840), ("astlib/ast_501.ml", 59, 1836, 1894), 0), 0, Tag1 ("Astlib__Ast_501", 48)); (("Pconst_float", 662), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11016); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -11018)], (0)), 100000000, 0, -11017)]), 0, (("astlib/ast_501.ml", 65, 2080, 2084), ("astlib/ast_501.ml", 65, 2080, 2122), 0), 0, Tag1 ("Astlib__Ast_501", 49))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "constant"), 0, (0)), 100000000, 0, -11007)), 0, 0, 0, 0, (("astlib/ast_501.ml", 51, 1466, 1468), ("astlib/ast_501.ml", 65, 2080, 2122), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 45)), 1, 0); Tag1 (("location_stack", 8008), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -11006)], (0)), 100000000, 0, -11005)), 0, 0, 0, 0, (("astlib/ast_501.ml", 72, 2307, 2309), ("astlib/ast_501.ml", 72, 2307, 2346), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 52)), 1, 0); Tag1 (("attribute", 8009), (0, 0, [[(("attr_name", 804), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11002)], (0)), 100000000, 0, -11001), (("astlib/ast_501.ml", 77, 2438, 2442), ("astlib/ast_501.ml", 77, 2438, 2465), 0), 0, Tag1 ("Astlib__Ast_501", 120)); (("attr_payload", 805), 0, (Tag3 ((("payload", 8012)), 0, (0)), 100000000, 0, -11003), (("astlib/ast_501.ml", 78, 2466, 2470), ("astlib/ast_501.ml", 78, 2466, 2493), 0), 0, Tag1 ("Astlib__Ast_501", 121)); (("attr_loc", 806), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -11004), (("astlib/ast_501.ml", 79, 2494, 2498), ("astlib/ast_501.ml", 79, 2494, 2520), 0), 0, Tag1 ("Astlib__Ast_501", 122))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "attribute"), 0, (0)), 100000000, 0, -11000)), 0, 0, 0, 0, (("astlib/ast_501.ml", 76, 2379, 2381), ("astlib/ast_501.ml", 80, 2521, 2524), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 53)), 1, 0); Tag1 (("extension", 8010), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10998)], (0)), 100000000, 0, -10997); (Tag3 ((("payload", 8012)), 0, (0)), 100000000, 0, -10999)]), 100000000, 0, -10996)), 0, 0, 0, 0, (("astlib/ast_501.ml", 87, 2691, 2693), ("astlib/ast_501.ml", 87, 2691, 2729), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 54)), 2, 0); Tag1 (("attributes", 8011), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("attribute", 8009)), 0, (0)), 100000000, 0, -10995)], (0)), 100000000, 0, -10994)), 0, 0, 0, 0, (("astlib/ast_501.ml", 93, 2858, 2860), ("astlib/ast_501.ml", 93, 2858, 2891), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 55)), 2, 0); Tag1 (("payload", 8012), (0, 0, Tag1 ([(("PStr", 807), ([(Tag3 ((("structure", 8070)), 0, (0)), 100000000, 0, -10988)]), 0, (("astlib/ast_501.ml", 96, 2945, 2949), ("astlib/ast_501.ml", 96, 2945, 2968), 0), 0, Tag1 ("Astlib__Ast_501", 123)); (("PSig", 808), ([(Tag3 ((("signature", 8055)), 0, (0)), 100000000, 0, -10989)]), 0, (("astlib/ast_501.ml", 97, 2969, 2973), ("astlib/ast_501.ml", 97, 2969, 2992), 0), 0, Tag1 ("Astlib__Ast_501", 124)); (("PTyp", 809), ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10990)]), 0, (("astlib/ast_501.ml", 98, 3047, 3051), ("astlib/ast_501.ml", 98, 3047, 3070), 0), 0, Tag1 ("Astlib__Ast_501", 125)); (("PPat", 810), ([(Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10991); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10993)], (0)), 100000000, 0, -10992)]), 0, (("astlib/ast_501.ml", 99, 3123, 3127), ("astlib/ast_501.ml", 99, 3123, 3164), 0), 0, Tag1 ("Astlib__Ast_501", 126))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "payload"), 0, (0)), 100000000, 0, -10987)), 0, 0, 0, 0, (("astlib/ast_501.ml", 95, 2893, 2895), ("astlib/ast_501.ml", 99, 3123, 3164), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 56)), 2, 0); Tag1 (("core_type", 8013), (0, 0, [[(("ptyp_desc", 811), 0, (Tag3 ((("core_type_desc", 8014)), 0, (0)), 100000000, 0, -10983), (("astlib/ast_501.ml", 107, 3364, 3370), ("astlib/ast_501.ml", 107, 3364, 3396), 0), 0, Tag1 ("Astlib__Ast_501", 127)); (("ptyp_loc", 812), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10984), (("astlib/ast_501.ml", 108, 3397, 3403), ("astlib/ast_501.ml", 108, 3397, 3424), 0), 0, Tag1 ("Astlib__Ast_501", 128)); (("ptyp_loc_stack", 813), 0, (Tag3 ((("location_stack", 8008)), 0, (0)), 100000000, 0, -10985), (("astlib/ast_501.ml", 109, 3425, 3431), ("astlib/ast_501.ml", 109, 3425, 3462), 0), 0, Tag1 ("Astlib__Ast_501", 129)); (("ptyp_attributes", 814), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10986), (("astlib/ast_501.ml", 110, 3463, 3469), ("astlib/ast_501.ml", 110, 3463, 3497), 0), 0, Tag1 ("Astlib__Ast_501", 130))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type"), 0, (0)), 100000000, 0, -10982)), 0, 0, 0, 0, (("astlib/ast_501.ml", 105, 3302, 3304), ("astlib/ast_501.ml", 111, 3528, 3533), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 57)), 2, 0); Tag1 (("core_type_desc", 8014), (0, 0, Tag1 ([(("Ptyp_any", 815), (0), 0, (("astlib/ast_501.ml", 114, 3601, 3605), ("astlib/ast_501.ml", 114, 3601, 3615), 0), 0, Tag1 ("Astlib__Ast_501", 131)); (("Ptyp_var", 816), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10951)]), 0, (("astlib/ast_501.ml", 115, 3628, 3632), ("astlib/ast_501.ml", 115, 3628, 3652), 0), 0, Tag1 ("Astlib__Ast_501", 132)); (("Ptyp_arrow", 817), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "arg_label"), 0, (0)), 100000000, 0, -10952); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10953); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10954)]), 0, (("astlib/ast_501.ml", 116, 3690, 3694), ("astlib/ast_501.ml", 116, 3690, 3743), 0), 0, Tag1 ("Astlib__Ast_501", 133)); (("Ptyp_tuple", 818), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10956)], (0)), 100000000, 0, -10955)]), 0, (("astlib/ast_501.ml", 125, 4187, 4191), ("astlib/ast_501.ml", 125, 4187, 4221), 0), 0, Tag1 ("Astlib__Ast_501", 134)); (("Ptyp_constr", 819), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10958)], (0)), 100000000, 0, -10957); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10960)], (0)), 100000000, 0, -10959)]), 0, (("astlib/ast_501.ml", 131, 4367, 4371), ("astlib/ast_501.ml", 131, 4367, 4420), 0), 0, Tag1 ("Astlib__Ast_501", 135)); (("Ptyp_object", 823), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("object_field", 8018)), 0, (0)), 100000000, 0, -10962)], (0)), 100000000, 0, -10961); (Tag3 (Tag1 ((("Asttypes", 7991)), "closed_flag"), 0, (0)), 100000000, 0, -10963)]), 0, (("astlib/ast_501.ml", 137, 4657, 4661), ("astlib/ast_501.ml", 137, 4657, 4709), 0), 0, Tag1 ("Astlib__Ast_501", 136)); (("Ptyp_class", 824), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10965)], (0)), 100000000, 0, -10964); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10967)], (0)), 100000000, 0, -10966)]), 0, (("astlib/ast_501.ml", 144, 5075, 5079), ("astlib/ast_501.ml", 144, 5075, 5127), 0), 0, Tag1 ("Astlib__Ast_501", 137)); (("Ptyp_alias", 825), ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10968); (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10969)]), 0, (("astlib/ast_501.ml", 150, 5367, 5371), ("astlib/ast_501.ml", 150, 5367, 5405), 0), 0, Tag1 ("Astlib__Ast_501", 138)); (("Ptyp_variant", 826), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("row_field", 8016)), 0, (0)), 100000000, 0, -10971)], (0)), 100000000, 0, -10970); (Tag3 (Tag1 ((("Asttypes", 7991)), "closed_flag"), 0, (0)), 100000000, 0, -10972); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10975)], (0)), 100000000, 0, -10974)], (0)), 100000000, 0, -10973)]), 0, (("astlib/ast_501.ml", 151, 5425, 5429), ("astlib/ast_501.ml", 151, 5425, 5495), 0), 0, Tag1 ("Astlib__Ast_501", 139)); (("Ptyp_poly", 827), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10978)], (0)), 100000000, 0, -10977)], (0)), 100000000, 0, -10976); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10979)]), 0, (("astlib/ast_501.ml", 166, 6232, 6236), ("astlib/ast_501.ml", 166, 6232, 6278), 0), 0, Tag1 ("Astlib__Ast_501", 140)); (("Ptyp_package", 828), ([(Tag3 ((("package_type", 8015)), 0, (0)), 100000000, 0, -10980)]), 0, (("astlib/ast_501.ml", 194, 7243, 7247), ("astlib/ast_501.ml", 194, 7243, 7277), 0), 0, Tag1 ("Astlib__Ast_501", 141)); (("Ptyp_extension", 829), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10981)]), 0, (("astlib/ast_501.ml", 195, 7300, 7304), ("astlib/ast_501.ml", 195, 7300, 7333), 0), 0, Tag1 ("Astlib__Ast_501", 142))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "core_type_desc"), 0, (0)), 100000000, 0, -10950)), 0, 0, 0, 0, (("astlib/ast_501.ml", 113, 3535, 3537), ("astlib/ast_501.ml", 195, 7300, 7333), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 58)), 2, 0); Tag1 (("package_type", 8015), (0, 0, 0, 1, ((Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10944)], (0)), 100000000, 0, -10943); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10948)], (0)), 100000000, 0, -10947); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10949)]), 100000000, 0, -10946)], (0)), 100000000, 0, -10945)]), 100000000, 0, -10942)), 0, 0, 0, 0, (("astlib/ast_501.ml", 197, 7352, 7354), ("astlib/ast_501.ml", 197, 7352, 7425), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 59)), 2, 0); Tag1 (("row_field", 8016), (0, 0, [[(("prf_desc", 830), 0, (Tag3 ((("row_field_desc", 8017)), 0, (0)), 100000000, 0, -10939), (("astlib/ast_501.ml", 205, 7707, 7711), ("astlib/ast_501.ml", 205, 7707, 7737), 0), 0, Tag1 ("Astlib__Ast_501", 143)); (("prf_loc", 831), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10940), (("astlib/ast_501.ml", 206, 7738, 7742), ("astlib/ast_501.ml", 206, 7738, 7763), 0), 0, Tag1 ("Astlib__Ast_501", 144)); (("prf_attributes", 832), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10941), (("astlib/ast_501.ml", 207, 7764, 7768), ("astlib/ast_501.ml", 207, 7764, 7796), 0), 0, Tag1 ("Astlib__Ast_501", 145))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "row_field"), 0, (0)), 100000000, 0, -10938)), 0, 0, 0, 0, (("astlib/ast_501.ml", 204, 7649, 7651), ("astlib/ast_501.ml", 208, 7797, 7800), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 60)), 2, 0); Tag1 (("row_field_desc", 8017), (0, 0, Tag1 ([(("Rtag", 833), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10933)], (0)), 100000000, 0, -10932); (Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -10934); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10936)], (0)), 100000000, 0, -10935)]), 0, (("astlib/ast_501.ml", 211, 7868, 7872), ("astlib/ast_501.ml", 211, 7868, 7915), 0), 0, Tag1 ("Astlib__Ast_501", 146)); (("Rinherit", 834), ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10937)]), 0, (("astlib/ast_501.ml", 223, 8509, 8513), ("astlib/ast_501.ml", 223, 8509, 8536), 0), 0, Tag1 ("Astlib__Ast_501", 147))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "row_field_desc"), 0, (0)), 100000000, 0, -10931)), 0, 0, 0, 0, (("astlib/ast_501.ml", 210, 7802, 7804), ("astlib/ast_501.ml", 223, 8509, 8536), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 61)), 2, 0); Tag1 (("object_field", 8018), (0, 0, [[(("pof_desc", 835), 0, (Tag3 ((("object_field_desc", 8019)), 0, (0)), 100000000, 0, -10928), (("astlib/ast_501.ml", 226, 8620, 8624), ("astlib/ast_501.ml", 226, 8620, 8653), 0), 0, Tag1 ("Astlib__Ast_501", 148)); (("pof_loc", 836), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10929), (("astlib/ast_501.ml", 227, 8654, 8658), ("astlib/ast_501.ml", 227, 8654, 8679), 0), 0, Tag1 ("Astlib__Ast_501", 149)); (("pof_attributes", 837), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10930), (("astlib/ast_501.ml", 228, 8680, 8684), ("astlib/ast_501.ml", 228, 8680, 8712), 0), 0, Tag1 ("Astlib__Ast_501", 150))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "object_field"), 0, (0)), 100000000, 0, -10927)), 0, 0, 0, 0, (("astlib/ast_501.ml", 225, 8556, 8558), ("astlib/ast_501.ml", 229, 8713, 8716), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 62)), 2, 0); Tag1 (("object_field_desc", 8019), (0, 0, Tag1 ([(("Otag", 838), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10924)], (0)), 100000000, 0, -10923); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10925)]), 0, (("astlib/ast_501.ml", 232, 8790, 8794), ("astlib/ast_501.ml", 232, 8790, 8825), 0), 0, Tag1 ("Astlib__Ast_501", 151)); (("Oinherit", 839), ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10926)]), 0, (("astlib/ast_501.ml", 233, 8826, 8830), ("astlib/ast_501.ml", 233, 8826, 8853), 0), 0, Tag1 ("Astlib__Ast_501", 152))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "object_field_desc"), 0, (0)), 100000000, 0, -10922)), 0, 0, 0, 0, (("astlib/ast_501.ml", 231, 8718, 8720), ("astlib/ast_501.ml", 233, 8826, 8853), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 63)), 2, 0); Tag1 (("pattern", 8020), (0, 0, [[(("ppat_desc", 840), 0, (Tag3 ((("pattern_desc", 8021)), 0, (0)), 100000000, 0, -10918), (("astlib/ast_501.ml", 239, 8936, 8942), ("astlib/ast_501.ml", 239, 8936, 8966), 0), 0, Tag1 ("Astlib__Ast_501", 153)); (("ppat_loc", 841), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10919), (("astlib/ast_501.ml", 240, 8967, 8973), ("astlib/ast_501.ml", 240, 8967, 8994), 0), 0, Tag1 ("Astlib__Ast_501", 154)); (("ppat_loc_stack", 842), 0, (Tag3 ((("location_stack", 8008)), 0, (0)), 100000000, 0, -10920), (("astlib/ast_501.ml", 241, 8995, 9001), ("astlib/ast_501.ml", 241, 8995, 9032), 0), 0, Tag1 ("Astlib__Ast_501", 155)); (("ppat_attributes", 843), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10921), (("astlib/ast_501.ml", 242, 9033, 9039), ("astlib/ast_501.ml", 242, 9033, 9067), 0), 0, Tag1 ("Astlib__Ast_501", 156))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern"), 0, (0)), 100000000, 0, -10917)), 0, 0, 0, 0, (("astlib/ast_501.ml", 237, 8878, 8880), ("astlib/ast_501.ml", 243, 9098, 9103), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 64)), 2, 0); Tag1 (("pattern_desc", 8021), (0, 0, Tag1 ([(("Ppat_any", 844), (0), 0, (("astlib/ast_501.ml", 246, 9167, 9171), ("astlib/ast_501.ml", 246, 9167, 9181), 0), 0, Tag1 ("Astlib__Ast_501", 157)); (("Ppat_var", 845), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10874)], (0)), 100000000, 0, -10873)]), 0, (("astlib/ast_501.ml", 247, 9207, 9211), ("astlib/ast_501.ml", 247, 9207, 9235), 0), 0, Tag1 ("Astlib__Ast_501", 158)); (("Ppat_alias", 846), ([(Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10875); (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10877)], (0)), 100000000, 0, -10876)]), 0, (("astlib/ast_501.ml", 248, 9275, 9279), ("astlib/ast_501.ml", 248, 9275, 9315), 0), 0, Tag1 ("Astlib__Ast_501", 159)); (("Ppat_constant", 847), ([(Tag3 ((("constant", 8007)), 0, (0)), 100000000, 0, -10878)]), 0, (("astlib/ast_501.ml", 250, 9366, 9370), ("astlib/ast_501.ml", 250, 9366, 9397), 0), 0, Tag1 ("Astlib__Ast_501", 160)); (("Ppat_interval", 848), ([(Tag3 ((("constant", 8007)), 0, (0)), 100000000, 0, -10879); (Tag3 ((("constant", 8007)), 0, (0)), 100000000, 0, -10880)]), 0, (("astlib/ast_501.ml", 252, 9476, 9480), ("astlib/ast_501.ml", 252, 9476, 9518), 0), 0, Tag1 ("Astlib__Ast_501", 161)); (("Ppat_tuple", 849), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10882)], (0)), 100000000, 0, -10881)]), 0, (("astlib/ast_501.ml", 257, 9677, 9681), ("astlib/ast_501.ml", 257, 9677, 9709), 0), 0, Tag1 ("Astlib__Ast_501", 162)); (("Ppat_construct", 850), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10884)], (0)), 100000000, 0, -10883); (Tag3 ((Tag3 ("option", 10)), [(Tag2 ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10889)], (0)), 100000000, 0, -10888)], (0)), 100000000, 0, -10887); (Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10890)]), 100000000, 0, -10886)], (0)), 100000000, 0, -10885)]), 0, (("astlib/ast_501.ml", 262, 9795, 9799), ("astlib/ast_501.ml", 262, 9795, 9871), 0), 0, Tag1 ("Astlib__Ast_501", 163)); (("Ppat_variant", 851), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10891); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10893)], (0)), 100000000, 0, -10892)]), 0, (("astlib/ast_501.ml", 270, 10257, 10261), ("astlib/ast_501.ml", 270, 10257, 10301), 0), 0, Tag1 ("Astlib__Ast_501", 164)); (("Ppat_record", 852), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10897)], (0)), 100000000, 0, -10896); (Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10898)]), 100000000, 0, -10895)], (0)), 100000000, 0, -10894); (Tag3 (Tag1 ((("Asttypes", 7991)), "closed_flag"), 0, (0)), 100000000, 0, -10899)]), 0, (("astlib/ast_501.ml", 275, 10455, 10459), ("astlib/ast_501.ml", 275, 10455, 10522), 0), 0, Tag1 ("Astlib__Ast_501", 165)); (("Ppat_array", 853), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10901)], (0)), 100000000, 0, -10900)]), 0, (("astlib/ast_501.ml", 284, 10869, 10873), ("astlib/ast_501.ml", 284, 10869, 10901), 0), 0, Tag1 ("Astlib__Ast_501", 166)); (("Ppat_or", 854), ([(Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10902); (Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10903)]), 0, (("astlib/ast_501.ml", 285, 10938, 10942), ("astlib/ast_501.ml", 285, 10938, 10972), 0), 0, Tag1 ("Astlib__Ast_501", 167)); (("Ppat_constraint", 855), ([(Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10904); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10905)]), 0, (("astlib/ast_501.ml", 286, 10999, 11003), ("astlib/ast_501.ml", 286, 10999, 11043), 0), 0, Tag1 ("Astlib__Ast_501", 168)); (("Ppat_type", 856), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10907)], (0)), 100000000, 0, -10906)]), 0, (("astlib/ast_501.ml", 287, 11070, 11074), ("astlib/ast_501.ml", 287, 11070, 11104), 0), 0, Tag1 ("Astlib__Ast_501", 169)); (("Ppat_lazy", 857), ([(Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10908)]), 0, (("astlib/ast_501.ml", 288, 11131, 11135), ("astlib/ast_501.ml", 288, 11131, 11157), 0), 0, Tag1 ("Astlib__Ast_501", 170)); (("Ppat_unpack", 858), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10911)], (0)), 100000000, 0, -10910)], (0)), 100000000, 0, -10909)]), 0, (("astlib/ast_501.ml", 289, 11183, 11187), ("astlib/ast_501.ml", 289, 11183, 11221), 0), 0, Tag1 ("Astlib__Ast_501", 171)); (("Ppat_exception", 859), ([(Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10912)]), 0, (("astlib/ast_501.ml", 297, 11502, 11506), ("astlib/ast_501.ml", 297, 11502, 11533), 0), 0, Tag1 ("Astlib__Ast_501", 172)); (("Ppat_extension", 860), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10913)]), 0, (("astlib/ast_501.ml", 298, 11564, 11568), ("astlib/ast_501.ml", 298, 11564, 11597), 0), 0, Tag1 ("Astlib__Ast_501", 173)); (("Ppat_open", 861), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10915)], (0)), 100000000, 0, -10914); (Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10916)]), 0, (("astlib/ast_501.ml", 299, 11622, 11626), ("astlib/ast_501.ml", 299, 11622, 11666), 0), 0, Tag1 ("Astlib__Ast_501", 174))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "pattern_desc"), 0, (0)), 100000000, 0, -10872)), 0, 0, 0, 0, (("astlib/ast_501.ml", 245, 9105, 9107), ("astlib/ast_501.ml", 299, 11622, 11666), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 65)), 2, 0); Tag1 (("expression", 8022), (0, 0, [[(("pexp_desc", 862), 0, (Tag3 ((("expression_desc", 8023)), 0, (0)), 100000000, 0, -10868), (("astlib/ast_501.ml", 305, 11790, 11797), ("astlib/ast_501.ml", 305, 11790, 11824), 0), 0, Tag1 ("Astlib__Ast_501", 175)); (("pexp_loc", 863), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10869), (("astlib/ast_501.ml", 306, 11825, 11832), ("astlib/ast_501.ml", 306, 11825, 11853), 0), 0, Tag1 ("Astlib__Ast_501", 176)); (("pexp_loc_stack", 864), 0, (Tag3 ((("location_stack", 8008)), 0, (0)), 100000000, 0, -10870), (("astlib/ast_501.ml", 307, 11854, 11861), ("astlib/ast_501.ml", 307, 11854, 11892), 0), 0, Tag1 ("Astlib__Ast_501", 177)); (("pexp_attributes", 865), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10871), (("astlib/ast_501.ml", 308, 11893, 11900), ("astlib/ast_501.ml", 308, 11893, 11928), 0), 0, Tag1 ("Astlib__Ast_501", 178))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression"), 0, (0)), 100000000, 0, -10867)), 0, 0, 0, 0, (("astlib/ast_501.ml", 303, 11724, 11726), ("astlib/ast_501.ml", 309, 11959, 11966), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 66)), 2, 0); Tag1 (("expression_desc", 8023), (0, 0, Tag1 ([(("Pexp_ident", 866), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10765)], (0)), 100000000, 0, -10764)]), 0, (("astlib/ast_501.ml", 312, 12036, 12040), ("astlib/ast_501.ml", 312, 12036, 12071), 0), 0, Tag1 ("Astlib__Ast_501", 179)); (("Pexp_constant", 867), ([(Tag3 ((("constant", 8007)), 0, (0)), 100000000, 0, -10766)]), 0, (("astlib/ast_501.ml", 315, 12132, 12136), ("astlib/ast_501.ml", 315, 12132, 12163), 0), 0, Tag1 ("Astlib__Ast_501", 180)); (("Pexp_let", 868), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "rec_flag"), 0, (0)), 100000000, 0, -10767); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 8074)), 0, (0)), 100000000, 0, -10769)], (0)), 100000000, 0, -10768); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10770)]), 0, (("astlib/ast_501.ml", 318, 12268, 12272), ("astlib/ast_501.ml", 318, 12268, 12328), 0), 0, Tag1 ("Astlib__Ast_501", 181)); (("Pexp_function", 869), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 8024)), 0, (0)), 100000000, 0, -10772)], (0)), 100000000, 0, -10771)]), 0, (("astlib/ast_501.ml", 325, 12688, 12692), ("astlib/ast_501.ml", 325, 12688, 12720), 0), 0, Tag1 ("Astlib__Ast_501", 182)); (("Pexp_fun", 870), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "arg_label"), 0, (0)), 100000000, 0, -10773); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10775)], (0)), 100000000, 0, -10774); (Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10776); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10777)]), 0, (("astlib/ast_501.ml", 326, 12766, 12770), ("astlib/ast_501.ml", 326, 12766, 12836), 0), 0, Tag1 ("Astlib__Ast_501", 183)); (("Pexp_apply", 871), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10778); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "arg_label"), 0, (0)), 100000000, 0, -10781); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10782)]), 100000000, 0, -10780)], (0)), 100000000, 0, -10779)]), 0, (("astlib/ast_501.ml", 349, 13913, 13917), ("astlib/ast_501.ml", 349, 13913, 13975), 0), 0, Tag1 ("Astlib__Ast_501", 184)); (("Pexp_match", 872), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10783); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 8024)), 0, (0)), 100000000, 0, -10785)], (0)), 100000000, 0, -10784)]), 0, (("astlib/ast_501.ml", 360, 14402, 14406), ("astlib/ast_501.ml", 360, 14402, 14444), 0), 0, Tag1 ("Astlib__Ast_501", 185)); (("Pexp_try", 873), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10786); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("case", 8024)), 0, (0)), 100000000, 0, -10788)], (0)), 100000000, 0, -10787)]), 0, (("astlib/ast_501.ml", 362, 14502, 14506), ("astlib/ast_501.ml", 362, 14502, 14542), 0), 0, Tag1 ("Astlib__Ast_501", 186)); (("Pexp_tuple", 874), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10790)], (0)), 100000000, 0, -10789)]), 0, (("astlib/ast_501.ml", 364, 14598, 14602), ("astlib/ast_501.ml", 364, 14598, 14633), 0), 0, Tag1 ("Astlib__Ast_501", 187)); (("Pexp_construct", 875), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10792)], (0)), 100000000, 0, -10791); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10794)], (0)), 100000000, 0, -10793)]), 0, (("astlib/ast_501.ml", 369, 14721, 14725), ("astlib/ast_501.ml", 369, 14721, 14780), 0), 0, Tag1 ("Astlib__Ast_501", 188)); (("Pexp_variant", 876), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10795); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10797)], (0)), 100000000, 0, -10796)]), 0, (("astlib/ast_501.ml", 375, 15033, 15037), ("astlib/ast_501.ml", 375, 15033, 15080), 0), 0, Tag1 ("Astlib__Ast_501", 189)); (("Pexp_record", 877), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10801)], (0)), 100000000, 0, -10800); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10802)]), 100000000, 0, -10799)], (0)), 100000000, 0, -10798); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10804)], (0)), 100000000, 0, -10803)]), 0, (("astlib/ast_501.ml", 380, 15232, 15236), ("astlib/ast_501.ml", 380, 15232, 15308), 0), 0, Tag1 ("Astlib__Ast_501", 190)); (("Pexp_field", 878), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10805); (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10807)], (0)), 100000000, 0, -10806)]), 0, (("astlib/ast_501.ml", 387, 15569, 15573), ("astlib/ast_501.ml", 387, 15569, 15617), 0), 0, Tag1 ("Astlib__Ast_501", 191)); (("Pexp_setfield", 879), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10808); (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10810)], (0)), 100000000, 0, -10809); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10811)]), 0, (("astlib/ast_501.ml", 388, 15632, 15636), ("astlib/ast_501.ml", 388, 15632, 15696), 0), 0, Tag1 ("Astlib__Ast_501", 192)); (("Pexp_array", 880), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10813)], (0)), 100000000, 0, -10812)]), 0, (("astlib/ast_501.ml", 390, 15725, 15729), ("astlib/ast_501.ml", 390, 15725, 15760), 0), 0, Tag1 ("Astlib__Ast_501", 193)); (("Pexp_ifthenelse", 881), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10814); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10815); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10817)], (0)), 100000000, 0, -10816)]), 0, (("astlib/ast_501.ml", 391, 15789, 15793), ("astlib/ast_501.ml", 391, 15789, 15857), 0), 0, Tag1 ("Astlib__Ast_501", 194)); (("Pexp_sequence", 882), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10818); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10819)]), 0, (("astlib/ast_501.ml", 393, 15897, 15901), ("astlib/ast_501.ml", 393, 15897, 15943), 0), 0, Tag1 ("Astlib__Ast_501", 195)); (("Pexp_while", 883), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10820); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10821)]), 0, (("astlib/ast_501.ml", 394, 15961, 15965), ("astlib/ast_501.ml", 394, 15961, 16004), 0), 0, Tag1 ("Astlib__Ast_501", 196)); (("Pexp_for", 884), ([(Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10822); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10823); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10824); (Tag3 (Tag1 ((("Asttypes", 7991)), "direction_flag"), 0, (0)), 100000000, 0, -10825); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10826)]), 0, (("astlib/ast_501.ml", 395, 16035, 16039), ("astlib/ast_501.ml", 395, 16035, 16116), 0), 0, Tag1 ("Astlib__Ast_501", 197)); (("Pexp_constraint", 885), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10827); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10828)]), 0, (("astlib/ast_501.ml", 402, 16450, 16454), ("astlib/ast_501.ml", 402, 16450, 16497), 0), 0, Tag1 ("Astlib__Ast_501", 198)); (("Pexp_coerce", 886), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10829); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10831)], (0)), 100000000, 0, -10830); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10832)]), 0, (("astlib/ast_501.ml", 403, 16516, 16520), ("astlib/ast_501.ml", 403, 16516, 16578), 0), 0, Tag1 ("Astlib__Ast_501", 199)); (("Pexp_send", 887), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10833); (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10835)], (0)), 100000000, 0, -10834)]), 0, (("astlib/ast_501.ml", 408, 16755, 16759), ("astlib/ast_501.ml", 408, 16755, 16796), 0), 0, Tag1 ("Astlib__Ast_501", 200)); (("Pexp_new", 888), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10837)], (0)), 100000000, 0, -10836)]), 0, (("astlib/ast_501.ml", 409, 16813, 16817), ("astlib/ast_501.ml", 409, 16813, 16846), 0), 0, Tag1 ("Astlib__Ast_501", 201)); (("Pexp_setinstvar", 889), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10839)], (0)), 100000000, 0, -10838); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10840)]), 0, (("astlib/ast_501.ml", 410, 16865, 16869), ("astlib/ast_501.ml", 410, 16865, 16912), 0), 0, Tag1 ("Astlib__Ast_501", 202)); (("Pexp_override", 890), ([(Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10844)], (0)), 100000000, 0, -10843); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10845)]), 100000000, 0, -10842)], (0)), 100000000, 0, -10841)]), 0, (("astlib/ast_501.ml", 411, 16930, 16934), ("astlib/ast_501.ml", 411, 16930, 16982), 0), 0, Tag1 ("Astlib__Ast_501", 203)); (("Pexp_letmodule", 891), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10848)], (0)), 100000000, 0, -10847)], (0)), 100000000, 0, -10846); (Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10849); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10850)]), 0, (("astlib/ast_501.ml", 413, 17028, 17032), ("astlib/ast_501.ml", 413, 17028, 17096), 0), 0, Tag1 ("Astlib__Ast_501", 204)); (("Pexp_letexception", 892), ([(Tag3 ((("extension_constructor", 8034)), 0, (0)), 100000000, 0, -10851); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10852)]), 0, (("astlib/ast_501.ml", 415, 17137, 17141), ("astlib/ast_501.ml", 415, 17137, 17198), 0), 0, Tag1 ("Astlib__Ast_501", 205)); (("Pexp_assert", 893), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10853)]), 0, (("astlib/ast_501.ml", 417, 17237, 17241), ("astlib/ast_501.ml", 417, 17237, 17268), 0), 0, Tag1 ("Astlib__Ast_501", 206)); (("Pexp_lazy", 894), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10854)]), 0, (("astlib/ast_501.ml", 422, 17393, 17397), ("astlib/ast_501.ml", 422, 17393, 17422), 0), 0, Tag1 ("Astlib__Ast_501", 207)); (("Pexp_poly", 895), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10855); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10857)], (0)), 100000000, 0, -10856)]), 0, (("astlib/ast_501.ml", 423, 17440, 17444), ("astlib/ast_501.ml", 423, 17440, 17488), 0), 0, Tag1 ("Astlib__Ast_501", 208)); (("Pexp_object", 896), ([(Tag3 ((("class_structure", 8047)), 0, (0)), 100000000, 0, -10858)]), 0, (("astlib/ast_501.ml", 429, 17684, 17688), ("astlib/ast_501.ml", 429, 17684, 17720), 0), 0, Tag1 ("Astlib__Ast_501", 209)); (("Pexp_newtype", 897), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10860)], (0)), 100000000, 0, -10859); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10861)]), 0, (("astlib/ast_501.ml", 430, 17746, 17750), ("astlib/ast_501.ml", 430, 17746, 17791), 0), 0, Tag1 ("Astlib__Ast_501", 210)); (("Pexp_pack", 898), ([(Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10862)]), 0, (("astlib/ast_501.ml", 431, 17820, 17824), ("astlib/ast_501.ml", 431, 17820, 17850), 0), 0, Tag1 ("Astlib__Ast_501", 211)); (("Pexp_open", 899), ([(Tag3 ((("open_declaration", 8063)), 0, (0)), 100000000, 0, -10863); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10864)]), 0, (("astlib/ast_501.ml", 436, 17992, 17996), ("astlib/ast_501.ml", 436, 17992, 18040), 0), 0, Tag1 ("Astlib__Ast_501", 212)); (("Pexp_letop", 900), ([(Tag3 ((("letop", 8025)), 0, (0)), 100000000, 0, -10865)]), 0, (("astlib/ast_501.ml", 440, 18135, 18139), ("astlib/ast_501.ml", 440, 18135, 18160), 0), 0, Tag1 ("Astlib__Ast_501", 213)); (("Pexp_extension", 901), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10866)]), 0, (("astlib/ast_501.ml", 443, 18250, 18254), ("astlib/ast_501.ml", 443, 18250, 18283), 0), 0, Tag1 ("Astlib__Ast_501", 214)); (("Pexp_unreachable", 902), (0), 0, (("astlib/ast_501.ml", 444, 18300, 18304), ("astlib/ast_501.ml", 444, 18300, 18322), 0), 0, Tag1 ("Astlib__Ast_501", 215))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "expression_desc"), 0, (0)), 100000000, 0, -10763)), 0, 0, 0, 0, (("astlib/ast_501.ml", 311, 11968, 11970), ("astlib/ast_501.ml", 444, 18300, 18322), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 67)), 2, 0); Tag1 (("case", 8024), (0, 0, [[(("pc_lhs", 903), 0, (Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10759), (("astlib/ast_501.ml", 448, 18388, 18394), ("astlib/ast_501.ml", 448, 18388, 18410), 0), 0, Tag1 ("Astlib__Ast_501", 216)); (("pc_guard", 904), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10761)], (0)), 100000000, 0, -10760), (("astlib/ast_501.ml", 449, 18411, 18417), ("astlib/ast_501.ml", 449, 18411, 18445), 0), 0, Tag1 ("Astlib__Ast_501", 217)); (("pc_rhs", 905), 0, (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10762), (("astlib/ast_501.ml", 450, 18446, 18452), ("astlib/ast_501.ml", 450, 18446, 18471), 0), 0, Tag1 ("Astlib__Ast_501", 218))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "case"), 0, (0)), 100000000, 0, -10758)), 0, 0, 0, 0, (("astlib/ast_501.ml", 446, 18336, 18338), ("astlib/ast_501.ml", 451, 18472, 18477), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 68)), 2, 0); Tag1 (("letop", 8025), (0, 0, [[(("let_", 906), 0, (Tag3 ((("binding_op", 8026)), 0, (0)), 100000000, 0, -10754), (("astlib/ast_501.ml", 456, 18609, 18615), ("astlib/ast_501.ml", 456, 18609, 18633), 0), 0, Tag1 ("Astlib__Ast_501", 219)); (("ands", 907), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("binding_op", 8026)), 0, (0)), 100000000, 0, -10756)], (0)), 100000000, 0, -10755), (("astlib/ast_501.ml", 457, 18634, 18640), ("astlib/ast_501.ml", 457, 18634, 18663), 0), 0, Tag1 ("Astlib__Ast_501", 220)); (("body", 908), 0, (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10757), (("astlib/ast_501.ml", 458, 18664, 18670), ("astlib/ast_501.ml", 458, 18664, 18688), 0), 0, Tag1 ("Astlib__Ast_501", 221))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "letop"), 0, (0)), 100000000, 0, -10753)), 0, 0, 0, 0, (("astlib/ast_501.ml", 454, 18555, 18557), ("astlib/ast_501.ml", 459, 18689, 18694), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 69)), 2, 0); Tag1 (("binding_op", 8026), (0, 0, [[(("pbop_op", 909), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10749)], (0)), 100000000, 0, -10748), (("astlib/ast_501.ml", 463, 18760, 18766), ("astlib/ast_501.ml", 463, 18760, 18787), 0), 0, Tag1 ("Astlib__Ast_501", 222)); (("pbop_pat", 910), 0, (Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10750), (("astlib/ast_501.ml", 464, 18788, 18794), ("astlib/ast_501.ml", 464, 18788, 18813), 0), 0, Tag1 ("Astlib__Ast_501", 223)); (("pbop_exp", 911), 0, (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10751), (("astlib/ast_501.ml", 465, 18814, 18820), ("astlib/ast_501.ml", 465, 18814, 18842), 0), 0, Tag1 ("Astlib__Ast_501", 224)); (("pbop_loc", 912), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10752), (("astlib/ast_501.ml", 466, 18843, 18849), ("astlib/ast_501.ml", 466, 18843, 18871), 0), 0, Tag1 ("Astlib__Ast_501", 225))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "binding_op"), 0, (0)), 100000000, 0, -10747)), 0, 0, 0, 0, (("astlib/ast_501.ml", 461, 18696, 18698), ("astlib/ast_501.ml", 467, 18872, 18877), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 70)), 2, 0); Tag1 (("value_description", 8027), (0, 0, [[(("pval_name", 913), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10741)], (0)), 100000000, 0, -10740), (("astlib/ast_501.ml", 473, 18990, 18996), ("astlib/ast_501.ml", 473, 18990, 19018), 0), 0, Tag1 ("Astlib__Ast_501", 226)); (("pval_type", 914), 0, (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10742), (("astlib/ast_501.ml", 474, 19019, 19025), ("astlib/ast_501.ml", 474, 19019, 19046), 0), 0, Tag1 ("Astlib__Ast_501", 227)); (("pval_prim", 915), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10744)], (0)), 100000000, 0, -10743), (("astlib/ast_501.ml", 475, 19047, 19053), ("astlib/ast_501.ml", 475, 19047, 19076), 0), 0, Tag1 ("Astlib__Ast_501", 228)); (("pval_attributes", 916), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10745), (("astlib/ast_501.ml", 476, 19077, 19083), ("astlib/ast_501.ml", 476, 19077, 19111), 0), 0, Tag1 ("Astlib__Ast_501", 229)); (("pval_loc", 917), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10746), (("astlib/ast_501.ml", 477, 19146, 19152), ("astlib/ast_501.ml", 477, 19146, 19173), 0), 0, Tag1 ("Astlib__Ast_501", 230))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_description"), 0, (0)), 100000000, 0, -10739)), 0, 0, 0, 0, (("astlib/ast_501.ml", 471, 18912, 18914), ("astlib/ast_501.ml", 478, 19174, 19179), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 71)), 2, 0); Tag1 (("type_declaration", 8028), (0, 0, [[(("ptype_name", 918), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10721)], (0)), 100000000, 0, -10720), (("astlib/ast_501.ml", 490, 19562, 19568), ("astlib/ast_501.ml", 490, 19562, 19591), 0), 0, Tag1 ("Astlib__Ast_501", 231)); (("ptype_params", 919), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10724); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "variance"), 0, (0)), 100000000, 0, -10726); (Tag3 (Tag1 ((("Asttypes", 7991)), "injectivity"), 0, (0)), 100000000, 0, -10727)]), 100000000, 0, -10725)]), 100000000, 0, -10723)], (0)), 100000000, 0, -10722), (("astlib/ast_501.ml", 491, 19592, 19598), ("astlib/ast_501.ml", 491, 19592, 19656), 0), 0, Tag1 ("Astlib__Ast_501", 232)); (("ptype_cstrs", 920), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10730); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10731); (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10732)]), 100000000, 0, -10729)], (0)), 100000000, 0, -10728), (("astlib/ast_501.ml", 493, 19687, 19693), ("astlib/ast_501.ml", 493, 19687, 19748), 0), 0, Tag1 ("Astlib__Ast_501", 233)); (("ptype_kind", 921), 0, (Tag3 ((("type_kind", 8029)), 0, (0)), 100000000, 0, -10733), (("astlib/ast_501.ml", 495, 19809, 19815), ("astlib/ast_501.ml", 495, 19809, 19837), 0), 0, Tag1 ("Astlib__Ast_501", 234)); (("ptype_private", 922), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "private_flag"), 0, (0)), 100000000, 0, -10734), (("astlib/ast_501.ml", 496, 19838, 19844), ("astlib/ast_501.ml", 496, 19838, 19872), 0), 0, Tag1 ("Astlib__Ast_501", 235)); (("ptype_manifest", 923), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10736)], (0)), 100000000, 0, -10735), (("astlib/ast_501.ml", 497, 19901, 19907), ("astlib/ast_501.ml", 497, 19901, 19940), 0), 0, Tag1 ("Astlib__Ast_501", 236)); (("ptype_attributes", 924), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10737), (("astlib/ast_501.ml", 498, 19966, 19972), ("astlib/ast_501.ml", 498, 19966, 20001), 0), 0, Tag1 ("Astlib__Ast_501", 237)); (("ptype_loc", 925), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10738), (("astlib/ast_501.ml", 499, 20036, 20042), ("astlib/ast_501.ml", 499, 20036, 20064), 0), 0, Tag1 ("Astlib__Ast_501", 238))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_declaration"), 0, (0)), 100000000, 0, -10719)), 0, 0, 0, 0, (("astlib/ast_501.ml", 488, 19486, 19488), ("astlib/ast_501.ml", 500, 20065, 20070), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 72)), 2, 0); Tag1 (("type_kind", 8029), (0, 0, Tag1 ([(("Ptype_abstract", 926), (0), 0, (("astlib/ast_501.ml", 528, 21378, 21382), ("astlib/ast_501.ml", 528, 21378, 21398), 0), 0, Tag1 ("Astlib__Ast_501", 239)); (("Ptype_variant", 927), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("constructor_declaration", 8031)), 0, (0)), 100000000, 0, -10716)], (0)), 100000000, 0, -10715)]), 0, (("astlib/ast_501.ml", 529, 21399, 21403), ("astlib/ast_501.ml", 529, 21399, 21450), 0), 0, Tag1 ("Astlib__Ast_501", 240)); (("Ptype_record", 928), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 8030)), 0, (0)), 100000000, 0, -10718)], (0)), 100000000, 0, -10717)]), 0, (("astlib/ast_501.ml", 530, 21451, 21455), ("astlib/ast_501.ml", 530, 21451, 21495), 0), 0, Tag1 ("Astlib__Ast_501", 241)); (("Ptype_open", 929), (0), 0, (("astlib/ast_501.ml", 531, 21530, 21534), ("astlib/ast_501.ml", 531, 21530, 21546), 0), 0, Tag1 ("Astlib__Ast_501", 242))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_kind"), 0, (0)), 100000000, 0, -10714)), 0, 0, 0, 0, (("astlib/ast_501.ml", 527, 21322, 21324), ("astlib/ast_501.ml", 531, 21530, 21546), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 73)), 2, 0); Tag1 (("label_declaration", 8030), (0, 0, [[(("pld_name", 930), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10709)], (0)), 100000000, 0, -10708), (("astlib/ast_501.ml", 535, 21626, 21632), ("astlib/ast_501.ml", 535, 21626, 21653), 0), 0, Tag1 ("Astlib__Ast_501", 243)); (("pld_mutable", 931), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "mutable_flag"), 0, (0)), 100000000, 0, -10710), (("astlib/ast_501.ml", 536, 21654, 21660), ("astlib/ast_501.ml", 536, 21654, 21686), 0), 0, Tag1 ("Astlib__Ast_501", 244)); (("pld_type", 932), 0, (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10711), (("astlib/ast_501.ml", 537, 21687, 21693), ("astlib/ast_501.ml", 537, 21687, 21713), 0), 0, Tag1 ("Astlib__Ast_501", 245)); (("pld_loc", 933), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10712), (("astlib/ast_501.ml", 538, 21714, 21720), ("astlib/ast_501.ml", 538, 21714, 21740), 0), 0, Tag1 ("Astlib__Ast_501", 246)); (("pld_attributes", 934), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10713), (("astlib/ast_501.ml", 539, 21741, 21747), ("astlib/ast_501.ml", 539, 21741, 21774), 0), 0, Tag1 ("Astlib__Ast_501", 247))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "label_declaration"), 0, (0)), 100000000, 0, -10707)), 0, 0, 0, 0, (("astlib/ast_501.ml", 533, 21548, 21550), ("astlib/ast_501.ml", 540, 21807, 21812), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 74)), 2, 0); Tag1 (("constructor_declaration", 8031), (0, 0, [[(("pcd_name", 935), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10698)], (0)), 100000000, 0, -10697), (("astlib/ast_501.ml", 554, 22372, 22378), ("astlib/ast_501.ml", 554, 22372, 22399), 0), 0, Tag1 ("Astlib__Ast_501", 248)); (("pcd_vars", 936), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10701)], (0)), 100000000, 0, -10700)], (0)), 100000000, 0, -10699), (("astlib/ast_501.ml", 555, 22400, 22406), ("astlib/ast_501.ml", 555, 22400, 22432), 0), 0, Tag1 ("Astlib__Ast_501", 249)); (("pcd_args", 937), 0, (Tag3 ((("constructor_arguments", 8032)), 0, (0)), 100000000, 0, -10702), (("astlib/ast_501.ml", 556, 22433, 22439), ("astlib/ast_501.ml", 556, 22433, 22471), 0), 0, Tag1 ("Astlib__Ast_501", 250)); (("pcd_res", 938), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10704)], (0)), 100000000, 0, -10703), (("astlib/ast_501.ml", 557, 22472, 22478), ("astlib/ast_501.ml", 557, 22472, 22504), 0), 0, Tag1 ("Astlib__Ast_501", 251)); (("pcd_loc", 939), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10705), (("astlib/ast_501.ml", 558, 22505, 22511), ("astlib/ast_501.ml", 558, 22505, 22531), 0), 0, Tag1 ("Astlib__Ast_501", 252)); (("pcd_attributes", 940), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10706), (("astlib/ast_501.ml", 559, 22532, 22538), ("astlib/ast_501.ml", 559, 22532, 22565), 0), 0, Tag1 ("Astlib__Ast_501", 253))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "constructor_declaration"), 0, (0)), 100000000, 0, -10696)), 0, 0, 0, 0, (("astlib/ast_501.ml", 552, 22282, 22284), ("astlib/ast_501.ml", 560, 22601, 22606), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 75)), 2, 0); Tag1 (("constructor_arguments", 8032), (0, 0, Tag1 ([(("Pcstr_tuple", 941), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10693)], (0)), 100000000, 0, -10692)]), 0, (("astlib/ast_501.ml", 563, 22688, 22692), ("astlib/ast_501.ml", 563, 22688, 22723), 0), 0, Tag1 ("Astlib__Ast_501", 254)); (("Pcstr_record", 942), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("label_declaration", 8030)), 0, (0)), 100000000, 0, -10695)], (0)), 100000000, 0, -10694)]), 0, (("astlib/ast_501.ml", 564, 22724, 22728), ("astlib/ast_501.ml", 564, 22724, 22768), 0), 0, Tag1 ("Astlib__Ast_501", 255))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "constructor_arguments"), 0, (0)), 100000000, 0, -10691)), 0, 0, 0, 0, (("astlib/ast_501.ml", 562, 22608, 22610), ("astlib/ast_501.ml", 564, 22724, 22768), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 76)), 2, 0); Tag1 (("type_extension", 8033), (0, 0, [[(("ptyext_path", 943), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10679)], (0)), 100000000, 0, -10678), (("astlib/ast_501.ml", 581, 23544, 23550), ("astlib/ast_501.ml", 581, 23544, 23579), 0), 0, Tag1 ("Astlib__Ast_501", 256)); (("ptyext_params", 944), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10682); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "variance"), 0, (0)), 100000000, 0, -10684); (Tag3 (Tag1 ((("Asttypes", 7991)), "injectivity"), 0, (0)), 100000000, 0, -10685)]), 100000000, 0, -10683)]), 100000000, 0, -10681)], (0)), 100000000, 0, -10680), (("astlib/ast_501.ml", 582, 23580, 23586), ("astlib/ast_501.ml", 582, 23580, 23645), 0), 0, Tag1 ("Astlib__Ast_501", 257)); (("ptyext_constructors", 945), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("extension_constructor", 8034)), 0, (0)), 100000000, 0, -10687)], (0)), 100000000, 0, -10686), (("astlib/ast_501.ml", 583, 23646, 23652), ("astlib/ast_501.ml", 583, 23646, 23700), 0), 0, Tag1 ("Astlib__Ast_501", 258)); (("ptyext_private", 946), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "private_flag"), 0, (0)), 100000000, 0, -10688), (("astlib/ast_501.ml", 584, 23701, 23707), ("astlib/ast_501.ml", 584, 23701, 23736), 0), 0, Tag1 ("Astlib__Ast_501", 259)); (("ptyext_loc", 947), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10689), (("astlib/ast_501.ml", 585, 23737, 23743), ("astlib/ast_501.ml", 585, 23737, 23766), 0), 0, Tag1 ("Astlib__Ast_501", 260)); (("ptyext_attributes", 948), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10690), (("astlib/ast_501.ml", 586, 23767, 23773), ("astlib/ast_501.ml", 586, 23767, 23803), 0), 0, Tag1 ("Astlib__Ast_501", 261))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_extension"), 0, (0)), 100000000, 0, -10677)), 0, 0, 0, 0, (("astlib/ast_501.ml", 579, 23472, 23474), ("astlib/ast_501.ml", 587, 23836, 23841), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 77)), 2, 0); Tag1 (("extension_constructor", 8034), (0, 0, [[(("pext_name", 949), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10673)], (0)), 100000000, 0, -10672), (("astlib/ast_501.ml", 595, 24042, 24048), ("astlib/ast_501.ml", 595, 24042, 24070), 0), 0, Tag1 ("Astlib__Ast_501", 262)); (("pext_kind", 950), 0, (Tag3 ((("extension_constructor_kind", 8036)), 0, (0)), 100000000, 0, -10674), (("astlib/ast_501.ml", 596, 24071, 24077), ("astlib/ast_501.ml", 596, 24071, 24115), 0), 0, Tag1 ("Astlib__Ast_501", 263)); (("pext_loc", 951), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10675), (("astlib/ast_501.ml", 597, 24116, 24122), ("astlib/ast_501.ml", 597, 24116, 24143), 0), 0, Tag1 ("Astlib__Ast_501", 264)); (("pext_attributes", 952), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10676), (("astlib/ast_501.ml", 598, 24144, 24150), ("astlib/ast_501.ml", 598, 24144, 24178), 0), 0, Tag1 ("Astlib__Ast_501", 265))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor"), 0, (0)), 100000000, 0, -10671)), 0, 0, 0, 0, (("astlib/ast_501.ml", 593, 23956, 23958), ("astlib/ast_501.ml", 599, 24214, 24219), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 78)), 2, 0); Tag1 (("type_exception", 8035), (0, 0, [[(("ptyexn_constructor", 953), 0, (Tag3 ((("extension_constructor", 8034)), 0, (0)), 100000000, 0, -10668), (("astlib/ast_501.ml", 603, 24293, 24299), ("astlib/ast_501.ml", 603, 24293, 24342), 0), 0, Tag1 ("Astlib__Ast_501", 266)); (("ptyexn_loc", 954), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10669), (("astlib/ast_501.ml", 604, 24343, 24349), ("astlib/ast_501.ml", 604, 24343, 24373), 0), 0, Tag1 ("Astlib__Ast_501", 267)); (("ptyexn_attributes", 955), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10670), (("astlib/ast_501.ml", 605, 24374, 24380), ("astlib/ast_501.ml", 605, 24374, 24411), 0), 0, Tag1 ("Astlib__Ast_501", 268))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "type_exception"), 0, (0)), 100000000, 0, -10667)), 0, 0, 0, 0, (("astlib/ast_501.ml", 601, 24221, 24223), ("astlib/ast_501.ml", 606, 24446, 24451), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 79)), 2, 0); Tag1 (("extension_constructor_kind", 8036), (0, 0, Tag1 ([(("Pext_decl", 956), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10661)], (0)), 100000000, 0, -10660)], (0)), 100000000, 0, -10659); (Tag3 ((("constructor_arguments", 8032)), 0, (0)), 100000000, 0, -10662); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10664)], (0)), 100000000, 0, -10663)]), 0, (("astlib/ast_501.ml", 610, 24599, 24603), ("astlib/ast_501.ml", 610, 24599, 24676), 0), 0, Tag1 ("Astlib__Ast_501", 269)); (("Pext_rebind", 957), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10666)], (0)), 100000000, 0, -10665)]), 0, (("astlib/ast_501.ml", 630, 25565, 25569), ("astlib/ast_501.ml", 630, 25565, 25601), 0), 0, Tag1 ("Astlib__Ast_501", 270))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "extension_constructor_kind"), 0, (0)), 100000000, 0, -10658)), 0, 0, 0, 0, (("astlib/ast_501.ml", 609, 24509, 24511), ("astlib/ast_501.ml", 630, 25565, 25601), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 80)), 2, 0); Tag1 (("class_type", 8037), (0, 0, [[(("pcty_desc", 958), 0, (Tag3 ((("class_type_desc", 8038)), 0, (0)), 100000000, 0, -10655), (("astlib/ast_501.ml", 638, 25829, 25835), ("astlib/ast_501.ml", 638, 25829, 25862), 0), 0, Tag1 ("Astlib__Ast_501", 271)); (("pcty_loc", 959), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10656), (("astlib/ast_501.ml", 639, 25863, 25869), ("astlib/ast_501.ml", 639, 25863, 25890), 0), 0, Tag1 ("Astlib__Ast_501", 272)); (("pcty_attributes", 960), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10657), (("astlib/ast_501.ml", 640, 25891, 25897), ("astlib/ast_501.ml", 640, 25891, 25925), 0), 0, Tag1 ("Astlib__Ast_501", 273))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type"), 0, (0)), 100000000, 0, -10654)), 0, 0, 0, 0, (("astlib/ast_501.ml", 636, 25765, 25767), ("astlib/ast_501.ml", 641, 25956, 25961), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 81)), 2, 0); Tag1 (("class_type_desc", 8038), (0, 0, Tag1 ([(("Pcty_constr", 961), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10644)], (0)), 100000000, 0, -10643); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10646)], (0)), 100000000, 0, -10645)]), 0, (("astlib/ast_501.ml", 644, 26031, 26035), ("astlib/ast_501.ml", 644, 26031, 26084), 0), 0, Tag1 ("Astlib__Ast_501", 274)); (("Pcty_signature", 962), ([(Tag3 ((("class_signature", 8039)), 0, (0)), 100000000, 0, -10647)]), 0, (("astlib/ast_501.ml", 647, 26142, 26146), ("astlib/ast_501.ml", 647, 26142, 26181), 0), 0, Tag1 ("Astlib__Ast_501", 275)); (("Pcty_arrow", 963), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "arg_label"), 0, (0)), 100000000, 0, -10648); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10649); (Tag3 ((("class_type", 8037)), 0, (0)), 100000000, 0, -10650)]), 0, (("astlib/ast_501.ml", 648, 26207, 26211), ("astlib/ast_501.ml", 648, 26207, 26261), 0), 0, Tag1 ("Astlib__Ast_501", 276)); (("Pcty_extension", 964), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10651)]), 0, (("astlib/ast_501.ml", 657, 26654, 26658), ("astlib/ast_501.ml", 657, 26654, 26687), 0), 0, Tag1 ("Astlib__Ast_501", 277)); (("Pcty_open", 965), ([(Tag3 ((("open_description", 8062)), 0, (0)), 100000000, 0, -10652); (Tag3 ((("class_type", 8037)), 0, (0)), 100000000, 0, -10653)]), 0, (("astlib/ast_501.ml", 658, 26702, 26706), ("astlib/ast_501.ml", 658, 26702, 26750), 0), 0, Tag1 ("Astlib__Ast_501", 278))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_desc"), 0, (0)), 100000000, 0, -10642)), 0, 0, 0, 0, (("astlib/ast_501.ml", 643, 25963, 25965), ("astlib/ast_501.ml", 658, 26702, 26750), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 82)), 2, 0); Tag1 (("class_signature", 8039), (0, 0, [[(("pcsig_self", 966), 0, (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10639), (("astlib/ast_501.ml", 662, 26853, 26859), ("astlib/ast_501.ml", 662, 26853, 26881), 0), 0, Tag1 ("Astlib__Ast_501", 279)); (("pcsig_fields", 967), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_field", 8040)), 0, (0)), 100000000, 0, -10641)], (0)), 100000000, 0, -10640), (("astlib/ast_501.ml", 663, 26882, 26888), ("astlib/ast_501.ml", 663, 26882, 26924), 0), 0, Tag1 ("Astlib__Ast_501", 280))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_signature"), 0, (0)), 100000000, 0, -10638)), 0, 0, 0, 0, (("astlib/ast_501.ml", 660, 26779, 26781), ("astlib/ast_501.ml", 664, 26925, 26930), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 83)), 2, 0); Tag1 (("class_type_field", 8040), (0, 0, [[(("pctf_desc", 968), 0, (Tag3 ((("class_type_field_desc", 8041)), 0, (0)), 100000000, 0, -10635), (("astlib/ast_501.ml", 673, 27242, 27248), ("astlib/ast_501.ml", 673, 27242, 27281), 0), 0, Tag1 ("Astlib__Ast_501", 281)); (("pctf_loc", 969), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10636), (("astlib/ast_501.ml", 674, 27282, 27288), ("astlib/ast_501.ml", 674, 27282, 27309), 0), 0, Tag1 ("Astlib__Ast_501", 282)); (("pctf_attributes", 970), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10637), (("astlib/ast_501.ml", 675, 27310, 27316), ("astlib/ast_501.ml", 675, 27310, 27344), 0), 0, Tag1 ("Astlib__Ast_501", 283))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field"), 0, (0)), 100000000, 0, -10634)), 0, 0, 0, 0, (("astlib/ast_501.ml", 671, 27166, 27168), ("astlib/ast_501.ml", 676, 27379, 27384), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 84)), 2, 0); Tag1 (("class_type_field_desc", 8041), (0, 0, Tag1 ([(("Pctf_inherit", 971), ([(Tag3 ((("class_type", 8037)), 0, (0)), 100000000, 0, -10616)]), 0, (("astlib/ast_501.ml", 679, 27466, 27470), ("astlib/ast_501.ml", 679, 27466, 27498), 0), 0, Tag1 ("Astlib__Ast_501", 284)); (("Pctf_val", 972), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10619)], (0)), 100000000, 0, -10618); (Tag3 (Tag1 ((("Asttypes", 7991)), "mutable_flag"), 0, (0)), 100000000, 0, -10620); (Tag3 (Tag1 ((("Asttypes", 7991)), "virtual_flag"), 0, (0)), 100000000, 0, -10621); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10622)]), 100000000, 0, -10617)]), 0, (("astlib/ast_501.ml", 680, 27520, 27524), ("astlib/ast_501.ml", 680, 27520, 27591), 0), 0, Tag1 ("Astlib__Ast_501", 285)); (("Pctf_method", 973), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10625)], (0)), 100000000, 0, -10624); (Tag3 (Tag1 ((("Asttypes", 7991)), "private_flag"), 0, (0)), 100000000, 0, -10626); (Tag3 (Tag1 ((("Asttypes", 7991)), "virtual_flag"), 0, (0)), 100000000, 0, -10627); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10628)]), 100000000, 0, -10623)]), 0, (("astlib/ast_501.ml", 682, 27618, 27622), ("astlib/ast_501.ml", 682, 27618, 27692), 0), 0, Tag1 ("Astlib__Ast_501", 286)); (("Pctf_constraint", 974), ([(Tag2 ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10630); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10631)]), 100000000, 0, -10629)]), 0, (("astlib/ast_501.ml", 687, 27808, 27812), ("astlib/ast_501.ml", 687, 27808, 27856), 0), 0, Tag1 ("Astlib__Ast_501", 287)); (("Pctf_attribute", 975), ([(Tag3 ((("attribute", 8009)), 0, (0)), 100000000, 0, -10632)]), 0, (("astlib/ast_501.ml", 688, 27886, 27890), ("astlib/ast_501.ml", 688, 27886, 27919), 0), 0, Tag1 ("Astlib__Ast_501", 288)); (("Pctf_extension", 976), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10633)]), 0, (("astlib/ast_501.ml", 689, 27941, 27945), ("astlib/ast_501.ml", 689, 27941, 27974), 0), 0, Tag1 ("Astlib__Ast_501", 289))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_type_field_desc"), 0, (0)), 100000000, 0, -10615)), 0, 0, 0, 0, (("astlib/ast_501.ml", 678, 27386, 27388), ("astlib/ast_501.ml", 689, 27941, 27974), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 85)), 2, 0); Tag1 (("class_infos", 8042), ([((("a")), 100000000, 0, -10603)], 1, [[(("pci_virt", 977), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "virtual_flag"), 0, (0)), 100000000, 0, -10604), (("astlib/ast_501.ml", 693, 28065, 28071), ("astlib/ast_501.ml", 693, 28065, 28094), 0), 0, Tag1 ("Astlib__Ast_501", 290)); (("pci_params", 978), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10607); (Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "variance"), 0, (0)), 100000000, 0, -10609); (Tag3 (Tag1 ((("Asttypes", 7991)), "injectivity"), 0, (0)), 100000000, 0, -10610)]), 100000000, 0, -10608)]), 100000000, 0, -10606)], (0)), 100000000, 0, -10605), (("astlib/ast_501.ml", 694, 28095, 28101), ("astlib/ast_501.ml", 694, 28095, 28157), 0), 0, Tag1 ("Astlib__Ast_501", 291)); (("pci_name", 979), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10612)], (0)), 100000000, 0, -10611), (("astlib/ast_501.ml", 695, 28158, 28164), ("astlib/ast_501.ml", 695, 28158, 28185), 0), 0, Tag1 ("Astlib__Ast_501", 292)); (("pci_expr", 980), 0, ((("a")), 100000000, 0, -10603), (("astlib/ast_501.ml", 696, 28186, 28192), ("astlib/ast_501.ml", 696, 28186, 28205), 0), 0, Tag1 ("Astlib__Ast_501", 293)); (("pci_loc", 981), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10613), (("astlib/ast_501.ml", 697, 28206, 28212), ("astlib/ast_501.ml", 697, 28206, 28232), 0), 0, Tag1 ("Astlib__Ast_501", 294)); (("pci_attributes", 982), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10614), (("astlib/ast_501.ml", 698, 28233, 28239), ("astlib/ast_501.ml", 698, 28233, 28266), 0), 0, Tag1 ("Astlib__Ast_501", 295))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_infos"), [((("a")), 100000000, 0, -10603)], (0)), 100000000, 0, -10602)), [25], [0], 0, 0, (("astlib/ast_501.ml", 691, 27993, 27995), ("astlib/ast_501.ml", 699, 28301, 28306), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 86)), 2, 0); Tag1 (("class_description", 8043), (0, 0, 0, 1, ((Tag3 ((("class_infos", 8042)), [(Tag3 ((("class_type", 8037)), 0, (0)), 100000000, 0, -10601)], (0)), 100000000, 0, -10600)), 0, 0, 0, 0, (("astlib/ast_501.ml", 708, 28520, 28522), ("astlib/ast_501.ml", 708, 28520, 28568), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 87)), 2, 0); Tag1 (("class_type_declaration", 8044), (0, 0, 0, 1, ((Tag3 ((("class_infos", 8042)), [(Tag3 ((("class_type", 8037)), 0, (0)), 100000000, 0, -10599)], (0)), 100000000, 0, -10598)), 0, 0, 0, 0, (("astlib/ast_501.ml", 710, 28570, 28572), ("astlib/ast_501.ml", 710, 28570, 28623), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 88)), 2, 0); Tag1 (("class_expr", 8045), (0, 0, [[(("pcl_desc", 983), 0, (Tag3 ((("class_expr_desc", 8046)), 0, (0)), 100000000, 0, -10595), (("astlib/ast_501.ml", 716, 28746, 28753), ("astlib/ast_501.ml", 716, 28746, 28779), 0), 0, Tag1 ("Astlib__Ast_501", 296)); (("pcl_loc", 984), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10596), (("astlib/ast_501.ml", 717, 28780, 28787), ("astlib/ast_501.ml", 717, 28780, 28807), 0), 0, Tag1 ("Astlib__Ast_501", 297)); (("pcl_attributes", 985), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10597), (("astlib/ast_501.ml", 718, 28808, 28815), ("astlib/ast_501.ml", 718, 28808, 28842), 0), 0, Tag1 ("Astlib__Ast_501", 298))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr"), 0, (0)), 100000000, 0, -10594)), 0, 0, 0, 0, (("astlib/ast_501.ml", 714, 28680, 28682), ("astlib/ast_501.ml", 719, 28873, 28880), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 89)), 2, 0); Tag1 (("class_expr_desc", 8046), (0, 0, Tag1 ([(("Pcl_constr", 986), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10571)], (0)), 100000000, 0, -10570); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10573)], (0)), 100000000, 0, -10572)]), 0, (("astlib/ast_501.ml", 722, 28950, 28954), ("astlib/ast_501.ml", 722, 28950, 29002), 0), 0, Tag1 ("Astlib__Ast_501", 299)); (("Pcl_structure", 987), ([(Tag3 ((("class_structure", 8047)), 0, (0)), 100000000, 0, -10574)]), 0, (("astlib/ast_501.ml", 724, 29046, 29050), ("astlib/ast_501.ml", 724, 29046, 29084), 0), 0, Tag1 ("Astlib__Ast_501", 300)); (("Pcl_fun", 988), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "arg_label"), 0, (0)), 100000000, 0, -10575); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10577)], (0)), 100000000, 0, -10576); (Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10578); (Tag3 ((("class_expr", 8045)), 0, (0)), 100000000, 0, -10579)]), 0, (("astlib/ast_501.ml", 725, 29110, 29114), ("astlib/ast_501.ml", 725, 29110, 29179), 0), 0, Tag1 ("Astlib__Ast_501", 301)); (("Pcl_apply", 989), ([(Tag3 ((("class_expr", 8045)), 0, (0)), 100000000, 0, -10580); (Tag3 ((Tag3 ("list", 9)), [(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "arg_label"), 0, (0)), 100000000, 0, -10583); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10584)]), 100000000, 0, -10582)], (0)), 100000000, 0, -10581)]), 0, (("astlib/ast_501.ml", 740, 29896, 29900), ("astlib/ast_501.ml", 740, 29896, 29957), 0), 0, Tag1 ("Astlib__Ast_501", 302)); (("Pcl_let", 990), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "rec_flag"), 0, (0)), 100000000, 0, -10585); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 8074)), 0, (0)), 100000000, 0, -10587)], (0)), 100000000, 0, -10586); (Tag3 ((("class_expr", 8045)), 0, (0)), 100000000, 0, -10588)]), 0, (("astlib/ast_501.ml", 748, 30217, 30221), ("astlib/ast_501.ml", 748, 30217, 30276), 0), 0, Tag1 ("Astlib__Ast_501", 303)); (("Pcl_constraint", 991), ([(Tag3 ((("class_expr", 8045)), 0, (0)), 100000000, 0, -10589); (Tag3 ((("class_type", 8037)), 0, (0)), 100000000, 0, -10590)]), 0, (("astlib/ast_501.ml", 755, 30637, 30641), ("astlib/ast_501.ml", 755, 30637, 30684), 0), 0, Tag1 ("Astlib__Ast_501", 304)); (("Pcl_extension", 992), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10591)]), 0, (("astlib/ast_501.ml", 756, 30705, 30709), ("astlib/ast_501.ml", 756, 30705, 30737), 0), 0, Tag1 ("Astlib__Ast_501", 305)); (("Pcl_open", 993), ([(Tag3 ((("open_description", 8062)), 0, (0)), 100000000, 0, -10592); (Tag3 ((("class_expr", 8045)), 0, (0)), 100000000, 0, -10593)]), 0, (("astlib/ast_501.ml", 757, 30754, 30758), ("astlib/ast_501.ml", 757, 30754, 30801), 0), 0, Tag1 ("Astlib__Ast_501", 306))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_expr_desc"), 0, (0)), 100000000, 0, -10569)), 0, 0, 0, 0, (("astlib/ast_501.ml", 721, 28882, 28884), ("astlib/ast_501.ml", 757, 30754, 30801), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 90)), 2, 0); Tag1 (("class_structure", 8047), (0, 0, [[(("pcstr_self", 994), 0, (Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10566), (("astlib/ast_501.ml", 761, 30904, 30910), ("astlib/ast_501.ml", 761, 30904, 30930), 0), 0, Tag1 ("Astlib__Ast_501", 307)); (("pcstr_fields", 995), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_field", 8048)), 0, (0)), 100000000, 0, -10568)], (0)), 100000000, 0, -10567), (("astlib/ast_501.ml", 762, 30931, 30937), ("astlib/ast_501.ml", 762, 30931, 30968), 0), 0, Tag1 ("Astlib__Ast_501", 308))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_structure"), 0, (0)), 100000000, 0, -10565)), 0, 0, 0, 0, (("astlib/ast_501.ml", 759, 30830, 30832), ("astlib/ast_501.ml", 763, 30969, 30974), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 91)), 2, 0); Tag1 (("class_field", 8048), (0, 0, [[(("pcf_desc", 996), 0, (Tag3 ((("class_field_desc", 8049)), 0, (0)), 100000000, 0, -10562), (("astlib/ast_501.ml", 772, 31274, 31280), ("astlib/ast_501.ml", 772, 31274, 31307), 0), 0, Tag1 ("Astlib__Ast_501", 309)); (("pcf_loc", 997), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10563), (("astlib/ast_501.ml", 773, 31308, 31314), ("astlib/ast_501.ml", 773, 31308, 31334), 0), 0, Tag1 ("Astlib__Ast_501", 310)); (("pcf_attributes", 998), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10564), (("astlib/ast_501.ml", 774, 31335, 31341), ("astlib/ast_501.ml", 774, 31335, 31368), 0), 0, Tag1 ("Astlib__Ast_501", 311))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field"), 0, (0)), 100000000, 0, -10561)), 0, 0, 0, 0, (("astlib/ast_501.ml", 770, 31208, 31210), ("astlib/ast_501.ml", 775, 31403, 31408), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 92)), 2, 0); Tag1 (("class_field_desc", 8049), (0, 0, Tag1 ([(("Pcf_inherit", 999), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "override_flag"), 0, (0)), 100000000, 0, -10540); (Tag3 ((("class_expr", 8045)), 0, (0)), 100000000, 0, -10541); (Tag3 ((Tag3 ("option", 10)), [(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10544)], (0)), 100000000, 0, -10543)], (0)), 100000000, 0, -10542)]), 0, (("astlib/ast_501.ml", 778, 31480, 31484), ("astlib/ast_501.ml", 778, 31480, 31547), 0), 0, Tag1 ("Astlib__Ast_501", 312)); (("Pcf_val", 1000), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10547)], (0)), 100000000, 0, -10546); (Tag3 (Tag1 ((("Asttypes", 7991)), "mutable_flag"), 0, (0)), 100000000, 0, -10548); (Tag3 ((("class_field_kind", 8050)), 0, (0)), 100000000, 0, -10549)]), 100000000, 0, -10545)]), 0, (("astlib/ast_501.ml", 793, 32223, 32227), ("astlib/ast_501.ml", 793, 32223, 32285), 0), 0, Tag1 ("Astlib__Ast_501", 313)); (("Pcf_method", 1001), ([(Tag2 ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 ((("Asttypes", 7991)), "label"), 0, (0)), 100000000, 0, -10552)], (0)), 100000000, 0, -10551); (Tag3 (Tag1 ((("Asttypes", 7991)), "private_flag"), 0, (0)), 100000000, 0, -10553); (Tag3 ((("class_field_kind", 8050)), 0, (0)), 100000000, 0, -10554)]), 100000000, 0, -10550)]), 0, (("astlib/ast_501.ml", 808, 33077, 33081), ("astlib/ast_501.ml", 808, 33077, 33142), 0), 0, Tag1 ("Astlib__Ast_501", 314)); (("Pcf_constraint", 1002), ([(Tag2 ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10556); (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10557)]), 100000000, 0, -10555)]), 0, (("astlib/ast_501.ml", 814, 33382, 33386), ("astlib/ast_501.ml", 814, 33382, 33429), 0), 0, Tag1 ("Astlib__Ast_501", 315)); (("Pcf_initializer", 1003), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10558)]), 0, (("astlib/ast_501.ml", 815, 33459, 33463), ("astlib/ast_501.ml", 815, 33459, 33494), 0), 0, Tag1 ("Astlib__Ast_501", 316)); (("Pcf_attribute", 1004), ([(Tag3 ((("attribute", 8009)), 0, (0)), 100000000, 0, -10559)]), 0, (("astlib/ast_501.ml", 816, 33519, 33523), ("astlib/ast_501.ml", 816, 33519, 33551), 0), 0, Tag1 ("Astlib__Ast_501", 317)); (("Pcf_extension", 1005), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10560)]), 0, (("astlib/ast_501.ml", 817, 33573, 33577), ("astlib/ast_501.ml", 817, 33573, 33605), 0), 0, Tag1 ("Astlib__Ast_501", 318))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field_desc"), 0, (0)), 100000000, 0, -10539)), 0, 0, 0, 0, (("astlib/ast_501.ml", 777, 31410, 31412), ("astlib/ast_501.ml", 817, 33573, 33605), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 93)), 2, 0); Tag1 (("class_field_kind", 8050), (0, 0, Tag1 ([(("Cfk_virtual", 1006), ([(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10536)]), 0, (("astlib/ast_501.ml", 820, 33694, 33698), ("astlib/ast_501.ml", 820, 33694, 33724), 0), 0, Tag1 ("Astlib__Ast_501", 319)); (("Cfk_concrete", 1007), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "override_flag"), 0, (0)), 100000000, 0, -10537); (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10538)]), 0, (("astlib/ast_501.ml", 821, 33725, 33729), ("astlib/ast_501.ml", 821, 33725, 33773), 0), 0, Tag1 ("Astlib__Ast_501", 320))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "class_field_kind"), 0, (0)), 100000000, 0, -10535)), 0, 0, 0, 0, (("astlib/ast_501.ml", 819, 33624, 33626), ("astlib/ast_501.ml", 821, 33725, 33773), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 94)), 2, 0); Tag1 (("class_declaration", 8051), (0, 0, 0, 1, ((Tag3 ((("class_infos", 8042)), [(Tag3 ((("class_expr", 8045)), 0, (0)), 100000000, 0, -10534)], (0)), 100000000, 0, -10533)), 0, 0, 0, 0, (("astlib/ast_501.ml", 823, 33775, 33777), ("astlib/ast_501.ml", 823, 33775, 33823), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 95)), 2, 0); Tag1 (("module_type", 8052), (0, 0, [[(("pmty_desc", 1008), 0, (Tag3 ((("module_type_desc", 8053)), 0, (0)), 100000000, 0, -10530), (("astlib/ast_501.ml", 830, 33975, 33981), ("astlib/ast_501.ml", 830, 33975, 34009), 0), 0, Tag1 ("Astlib__Ast_501", 321)); (("pmty_loc", 1009), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10531), (("astlib/ast_501.ml", 831, 34010, 34016), ("astlib/ast_501.ml", 831, 34010, 34037), 0), 0, Tag1 ("Astlib__Ast_501", 322)); (("pmty_attributes", 1010), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10532), (("astlib/ast_501.ml", 832, 34038, 34044), ("astlib/ast_501.ml", 832, 34038, 34072), 0), 0, Tag1 ("Astlib__Ast_501", 323))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type"), 0, (0)), 100000000, 0, -10529)), 0, 0, 0, 0, (("astlib/ast_501.ml", 828, 33909, 33911), ("astlib/ast_501.ml", 833, 34103, 34108), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 96)), 2, 0); Tag1 (("module_type_desc", 8053), (0, 0, Tag1 ([(("Pmty_ident", 1011), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10518)], (0)), 100000000, 0, -10517)]), 0, (("astlib/ast_501.ml", 836, 34180, 34184), ("astlib/ast_501.ml", 836, 34180, 34215), 0), 0, Tag1 ("Astlib__Ast_501", 324)); (("Pmty_signature", 1012), ([(Tag3 ((("signature", 8055)), 0, (0)), 100000000, 0, -10519)]), 0, (("astlib/ast_501.ml", 837, 34255, 34259), ("astlib/ast_501.ml", 837, 34255, 34288), 0), 0, Tag1 ("Astlib__Ast_501", 325)); (("Pmty_functor", 1013), ([(Tag3 ((("functor_parameter", 8054)), 0, (0)), 100000000, 0, -10520); (Tag3 ((("module_type", 8052)), 0, (0)), 100000000, 0, -10521)]), 0, (("astlib/ast_501.ml", 838, 34311, 34315), ("astlib/ast_501.ml", 838, 34311, 34364), 0), 0, Tag1 ("Astlib__Ast_501", 326)); (("Pmty_with", 1014), ([(Tag3 ((("module_type", 8052)), 0, (0)), 100000000, 0, -10522); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("with_constraint", 8067)), 0, (0)), 100000000, 0, -10524)], (0)), 100000000, 0, -10523)]), 0, (("astlib/ast_501.ml", 840, 34406, 34410), ("astlib/ast_501.ml", 840, 34406, 34459), 0), 0, Tag1 ("Astlib__Ast_501", 327)); (("Pmty_typeof", 1015), ([(Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10525)]), 0, (("astlib/ast_501.ml", 841, 34482, 34486), ("astlib/ast_501.ml", 841, 34482, 34514), 0), 0, Tag1 ("Astlib__Ast_501", 328)); (("Pmty_extension", 1016), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10526)]), 0, (("astlib/ast_501.ml", 842, 34543, 34547), ("astlib/ast_501.ml", 842, 34543, 34576), 0), 0, Tag1 ("Astlib__Ast_501", 329)); (("Pmty_alias", 1017), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10528)], (0)), 100000000, 0, -10527)]), 0, (("astlib/ast_501.ml", 843, 34593, 34597), ("astlib/ast_501.ml", 843, 34593, 34628), 0), 0, Tag1 ("Astlib__Ast_501", 330))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type_desc"), 0, (0)), 100000000, 0, -10516)), 0, 0, 0, 0, (("astlib/ast_501.ml", 835, 34110, 34112), ("astlib/ast_501.ml", 843, 34593, 34628), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 97)), 2, 0); Tag1 (("functor_parameter", 8054), (0, 0, Tag1 ([(("Unit", 1018), (0), 0, (("astlib/ast_501.ml", 846, 34723, 34727), ("astlib/ast_501.ml", 846, 34723, 34733), 0), 0, Tag1 ("Astlib__Ast_501", 331)); (("Named", 1019), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10514)], (0)), 100000000, 0, -10513)], (0)), 100000000, 0, -10512); (Tag3 ((("module_type", 8052)), 0, (0)), 100000000, 0, -10515)]), 0, (("astlib/ast_501.ml", 847, 34747, 34751), ("astlib/ast_501.ml", 847, 34747, 34793), 0), 0, Tag1 ("Astlib__Ast_501", 332))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "functor_parameter"), 0, (0)), 100000000, 0, -10511)), 0, 0, 0, 0, (("astlib/ast_501.ml", 845, 34651, 34653), ("astlib/ast_501.ml", 847, 34747, 34793), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 98)), 2, 0); Tag1 (("signature", 8055), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("signature_item", 8056)), 0, (0)), 100000000, 0, -10510)], (0)), 100000000, 0, -10509)), 0, 0, 0, 0, (("astlib/ast_501.ml", 852, 34941, 34943), ("astlib/ast_501.ml", 852, 34941, 34978), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 99)), 2, 0); Tag1 (("signature_item", 8056), (0, 0, [[(("psig_desc", 1020), 0, (Tag3 ((("signature_item_desc", 8057)), 0, (0)), 100000000, 0, -10507), (("astlib/ast_501.ml", 856, 35052, 35058), ("astlib/ast_501.ml", 856, 35052, 35089), 0), 0, Tag1 ("Astlib__Ast_501", 333)); (("psig_loc", 1021), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10508), (("astlib/ast_501.ml", 857, 35090, 35096), ("astlib/ast_501.ml", 857, 35090, 35117), 0), 0, Tag1 ("Astlib__Ast_501", 334))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item"), 0, (0)), 100000000, 0, -10506)), 0, 0, 0, 0, (("astlib/ast_501.ml", 854, 34980, 34982), ("astlib/ast_501.ml", 858, 35118, 35123), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 100)), 2, 0); Tag1 (("signature_item_desc", 8057), (0, 0, Tag1 ([(("Psig_value", 1022), ([(Tag3 ((("value_description", 8027)), 0, (0)), 100000000, 0, -10483)]), 0, (("astlib/ast_501.ml", 861, 35201, 35205), ("astlib/ast_501.ml", 861, 35201, 35238), 0), 0, Tag1 ("Astlib__Ast_501", 335)); (("Psig_type", 1023), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "rec_flag"), 0, (0)), 100000000, 0, -10484); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 8028)), 0, (0)), 100000000, 0, -10486)], (0)), 100000000, 0, -10485)]), 0, (("astlib/ast_501.ml", 865, 35326, 35330), ("astlib/ast_501.ml", 865, 35326, 35377), 0), 0, Tag1 ("Astlib__Ast_501", 336)); (("Psig_typesubst", 1024), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 8028)), 0, (0)), 100000000, 0, -10488)], (0)), 100000000, 0, -10487)]), 0, (("astlib/ast_501.ml", 867, 35431, 35435), ("astlib/ast_501.ml", 867, 35431, 35476), 0), 0, Tag1 ("Astlib__Ast_501", 337)); (("Psig_typext", 1025), ([(Tag3 ((("type_extension", 8033)), 0, (0)), 100000000, 0, -10489)]), 0, (("astlib/ast_501.ml", 869, 35532, 35536), ("astlib/ast_501.ml", 869, 35532, 35567), 0), 0, Tag1 ("Astlib__Ast_501", 338)); (("Psig_exception", 1026), ([(Tag3 ((("type_exception", 8035)), 0, (0)), 100000000, 0, -10490)]), 0, (("astlib/ast_501.ml", 870, 35593, 35597), ("astlib/ast_501.ml", 870, 35593, 35631), 0), 0, Tag1 ("Astlib__Ast_501", 339)); (("Psig_module", 1027), ([(Tag3 ((("module_declaration", 8058)), 0, (0)), 100000000, 0, -10491)]), 0, (("astlib/ast_501.ml", 871, 35659, 35663), ("astlib/ast_501.ml", 871, 35659, 35698), 0), 0, Tag1 ("Astlib__Ast_501", 340)); (("Psig_modsubst", 1028), ([(Tag3 ((("module_substitution", 8059)), 0, (0)), 100000000, 0, -10492)]), 0, (("astlib/ast_501.ml", 872, 35742, 35746), ("astlib/ast_501.ml", 872, 35742, 35784), 0), 0, Tag1 ("Astlib__Ast_501", 341)); (("Psig_recmodule", 1029), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_declaration", 8058)), 0, (0)), 100000000, 0, -10494)], (0)), 100000000, 0, -10493)]), 0, (("astlib/ast_501.ml", 873, 35809, 35813), ("astlib/ast_501.ml", 873, 35809, 35856), 0), 0, Tag1 ("Astlib__Ast_501", 342)); (("Psig_modtype", 1030), ([(Tag3 ((("module_type_declaration", 8060)), 0, (0)), 100000000, 0, -10495)]), 0, (("astlib/ast_501.ml", 875, 35915, 35919), ("astlib/ast_501.ml", 875, 35915, 35960), 0), 0, Tag1 ("Astlib__Ast_501", 343)); (("Psig_modtypesubst", 1031), ([(Tag3 ((("module_type_declaration", 8060)), 0, (0)), 100000000, 0, -10496)]), 0, (("astlib/ast_501.ml", 877, 36017, 36021), ("astlib/ast_501.ml", 877, 36017, 36067), 0), 0, Tag1 ("Astlib__Ast_501", 344)); (("Psig_open", 1032), ([(Tag3 ((("open_description", 8062)), 0, (0)), 100000000, 0, -10497)]), 0, (("astlib/ast_501.ml", 879, 36108, 36112), ("astlib/ast_501.ml", 879, 36108, 36143), 0), 0, Tag1 ("Astlib__Ast_501", 345)); (("Psig_include", 1033), ([(Tag3 ((("include_description", 8065)), 0, (0)), 100000000, 0, -10498)]), 0, (("astlib/ast_501.ml", 880, 36161, 36165), ("astlib/ast_501.ml", 880, 36161, 36202), 0), 0, Tag1 ("Astlib__Ast_501", 346)); (("Psig_class", 1034), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_description", 8043)), 0, (0)), 100000000, 0, -10500)], (0)), 100000000, 0, -10499)]), 0, (("astlib/ast_501.ml", 881, 36224, 36228), ("astlib/ast_501.ml", 881, 36224, 36266), 0), 0, Tag1 ("Astlib__Ast_501", 347)); (("Psig_class_type", 1035), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 8044)), 0, (0)), 100000000, 0, -10502)], (0)), 100000000, 0, -10501)]), 0, (("astlib/ast_501.ml", 883, 36320, 36324), ("astlib/ast_501.ml", 883, 36320, 36372), 0), 0, Tag1 ("Astlib__Ast_501", 348)); (("Psig_attribute", 1036), ([(Tag3 ((("attribute", 8009)), 0, (0)), 100000000, 0, -10503)]), 0, (("astlib/ast_501.ml", 885, 36433, 36437), ("astlib/ast_501.ml", 885, 36433, 36466), 0), 0, Tag1 ("Astlib__Ast_501", 349)); (("Psig_extension", 1037), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10504); (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10505)]), 0, (("astlib/ast_501.ml", 886, 36488, 36492), ("astlib/ast_501.ml", 886, 36488, 36534), 0), 0, Tag1 ("Astlib__Ast_501", 350))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "signature_item_desc"), 0, (0)), 100000000, 0, -10482)), 0, 0, 0, 0, (("astlib/ast_501.ml", 860, 35125, 35127), ("astlib/ast_501.ml", 886, 36488, 36534), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 101)), 2, 0); Tag1 (("module_declaration", 8058), (0, 0, [[(("pmd_name", 1038), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10478)], (0)), 100000000, 0, -10477)], (0)), 100000000, 0, -10476), (("astlib/ast_501.ml", 890, 36633, 36639), ("astlib/ast_501.ml", 890, 36633, 36667), 0), 0, Tag1 ("Astlib__Ast_501", 351)); (("pmd_type", 1039), 0, (Tag3 ((("module_type", 8052)), 0, (0)), 100000000, 0, -10479), (("astlib/ast_501.ml", 891, 36668, 36674), ("astlib/ast_501.ml", 891, 36668, 36696), 0), 0, Tag1 ("Astlib__Ast_501", 352)); (("pmd_attributes", 1040), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10480), (("astlib/ast_501.ml", 892, 36697, 36703), ("astlib/ast_501.ml", 892, 36697, 36730), 0), 0, Tag1 ("Astlib__Ast_501", 353)); (("pmd_loc", 1041), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10481), (("astlib/ast_501.ml", 893, 36765, 36771), ("astlib/ast_501.ml", 893, 36765, 36791), 0), 0, Tag1 ("Astlib__Ast_501", 354))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_declaration"), 0, (0)), 100000000, 0, -10475)), 0, 0, 0, 0, (("astlib/ast_501.ml", 888, 36553, 36555), ("astlib/ast_501.ml", 894, 36792, 36797), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 102)), 2, 0); Tag1 (("module_substitution", 8059), (0, 0, [[(("pms_name", 1042), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10470)], (0)), 100000000, 0, -10469), (("astlib/ast_501.ml", 899, 36946, 36952), ("astlib/ast_501.ml", 899, 36946, 36973), 0), 0, Tag1 ("Astlib__Ast_501", 355)); (("pms_manifest", 1043), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10472)], (0)), 100000000, 0, -10471), (("astlib/ast_501.ml", 900, 36974, 36980), ("astlib/ast_501.ml", 900, 36974, 37010), 0), 0, Tag1 ("Astlib__Ast_501", 356)); (("pms_attributes", 1044), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10473), (("astlib/ast_501.ml", 901, 37011, 37017), ("astlib/ast_501.ml", 901, 37011, 37044), 0), 0, Tag1 ("Astlib__Ast_501", 357)); (("pms_loc", 1045), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10474), (("astlib/ast_501.ml", 902, 37079, 37085), ("astlib/ast_501.ml", 902, 37079, 37105), 0), 0, Tag1 ("Astlib__Ast_501", 358))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_substitution"), 0, (0)), 100000000, 0, -10468)), 0, 0, 0, 0, (("astlib/ast_501.ml", 897, 36864, 36866), ("astlib/ast_501.ml", 903, 37106, 37111), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 103)), 2, 0); Tag1 (("module_type_declaration", 8060), (0, 0, [[(("pmtd_name", 1046), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10463)], (0)), 100000000, 0, -10462), (("astlib/ast_501.ml", 908, 37269, 37275), ("astlib/ast_501.ml", 908, 37269, 37297), 0), 0, Tag1 ("Astlib__Ast_501", 359)); (("pmtd_type", 1047), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("module_type", 8052)), 0, (0)), 100000000, 0, -10465)], (0)), 100000000, 0, -10464), (("astlib/ast_501.ml", 909, 37298, 37304), ("astlib/ast_501.ml", 909, 37298, 37334), 0), 0, Tag1 ("Astlib__Ast_501", 360)); (("pmtd_attributes", 1048), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10466), (("astlib/ast_501.ml", 910, 37335, 37341), ("astlib/ast_501.ml", 910, 37335, 37369), 0), 0, Tag1 ("Astlib__Ast_501", 361)); (("pmtd_loc", 1049), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10467), (("astlib/ast_501.ml", 911, 37404, 37410), ("astlib/ast_501.ml", 911, 37404, 37431), 0), 0, Tag1 ("Astlib__Ast_501", 362))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_type_declaration"), 0, (0)), 100000000, 0, -10461)), 0, 0, 0, 0, (("astlib/ast_501.ml", 906, 37179, 37181), ("astlib/ast_501.ml", 912, 37432, 37437), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 104)), 2, 0); Tag1 (("open_infos", 8061), ([((("a")), 100000000, 0, -10457)], 1, [[(("popen_expr", 1050), 0, ((("a")), 100000000, 0, -10457), (("astlib/ast_501.ml", 921, 37712, 37718), ("astlib/ast_501.ml", 921, 37712, 37733), 0), 0, Tag1 ("Astlib__Ast_501", 363)); (("popen_override", 1051), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "override_flag"), 0, (0)), 100000000, 0, -10458), (("astlib/ast_501.ml", 922, 37734, 37740), ("astlib/ast_501.ml", 922, 37734, 37770), 0), 0, Tag1 ("Astlib__Ast_501", 364)); (("popen_loc", 1052), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10459), (("astlib/ast_501.ml", 923, 37771, 37777), ("astlib/ast_501.ml", 923, 37771, 37799), 0), 0, Tag1 ("Astlib__Ast_501", 365)); (("popen_attributes", 1053), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10460), (("astlib/ast_501.ml", 924, 37800, 37806), ("astlib/ast_501.ml", 924, 37800, 37835), 0), 0, Tag1 ("Astlib__Ast_501", 366))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "open_infos"), [((("a")), 100000000, 0, -10457)], (0)), 100000000, 0, -10456)), [25], [0], 0, 0, (("astlib/ast_501.ml", 919, 37642, 37644), ("astlib/ast_501.ml", 925, 37836, 37841), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 105)), 2, 0); Tag1 (("open_description", 8062), (0, 0, 0, 1, ((Tag3 ((("open_infos", 8061)), [(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10455)], (0)), 100000000, 0, -10454)], (0)), 100000000, 0, -10453)), 0, 0, 0, 0, (("astlib/ast_501.ml", 934, 38228, 38230), ("astlib/ast_501.ml", 934, 38228, 38279), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 106)), 2, 0); Tag1 (("open_declaration", 8063), (0, 0, 0, 1, ((Tag3 ((("open_infos", 8061)), [(Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10452)], (0)), 100000000, 0, -10451)), 0, 0, 0, 0, (("astlib/ast_501.ml", 939, 38377, 38379), ("astlib/ast_501.ml", 939, 38377, 38424), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 107)), 2, 0); Tag1 (("include_infos", 8064), ([((("a")), 100000000, 0, -10448)], 1, [[(("pincl_mod", 1054), 0, ((("a")), 100000000, 0, -10448), (("astlib/ast_501.ml", 947, 38628, 38634), ("astlib/ast_501.ml", 947, 38628, 38648), 0), 0, Tag1 ("Astlib__Ast_501", 367)); (("pincl_loc", 1055), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10449), (("astlib/ast_501.ml", 948, 38649, 38655), ("astlib/ast_501.ml", 948, 38649, 38677), 0), 0, Tag1 ("Astlib__Ast_501", 368)); (("pincl_attributes", 1056), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10450), (("astlib/ast_501.ml", 949, 38678, 38684), ("astlib/ast_501.ml", 949, 38678, 38713), 0), 0, Tag1 ("Astlib__Ast_501", 369))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "include_infos"), [((("a")), 100000000, 0, -10448)], (0)), 100000000, 0, -10447)), [25], [0], 0, 0, (("astlib/ast_501.ml", 945, 38552, 38554), ("astlib/ast_501.ml", 950, 38714, 38719), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 108)), 2, 0); Tag1 (("include_description", 8065), (0, 0, 0, 1, ((Tag3 ((("include_infos", 8064)), [(Tag3 ((("module_type", 8052)), 0, (0)), 100000000, 0, -10446)], (0)), 100000000, 0, -10445)), 0, 0, 0, 0, (("astlib/ast_501.ml", 952, 38721, 38723), ("astlib/ast_501.ml", 952, 38721, 38774), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 109)), 2, 0); Tag1 (("include_declaration", 8066), (0, 0, 0, 1, ((Tag3 ((("include_infos", 8064)), [(Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10444)], (0)), 100000000, 0, -10443)), 0, 0, 0, 0, (("astlib/ast_501.ml", 955, 38846, 38848), ("astlib/ast_501.ml", 955, 38846, 38899), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 110)), 2, 0); Tag1 (("with_constraint", 8067), (0, 0, Tag1 ([(("Pwith_type", 1057), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10424)], (0)), 100000000, 0, -10423); (Tag3 ((("type_declaration", 8028)), 0, (0)), 100000000, 0, -10425)]), 0, (("astlib/ast_501.ml", 959, 39039, 39043), ("astlib/ast_501.ml", 959, 39039, 39093), 0), 0, Tag1 ("Astlib__Ast_501", 370)); (("Pwith_module", 1058), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10427)], (0)), 100000000, 0, -10426); (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10429)], (0)), 100000000, 0, -10428)]), 0, (("astlib/ast_501.ml", 964, 39243, 39247), ("astlib/ast_501.ml", 964, 39243, 39298), 0), 0, Tag1 ("Astlib__Ast_501", 371)); (("Pwith_modtype", 1059), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10431)], (0)), 100000000, 0, -10430); (Tag3 ((("module_type", 8052)), 0, (0)), 100000000, 0, -10432)]), 0, (("astlib/ast_501.ml", 966, 39336, 39340), ("astlib/ast_501.ml", 966, 39336, 39388), 0), 0, Tag1 ("Astlib__Ast_501", 372)); (("Pwith_modtypesubst", 1060), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10434)], (0)), 100000000, 0, -10433); (Tag3 ((("module_type", 8052)), 0, (0)), 100000000, 0, -10435)]), 0, (("astlib/ast_501.ml", 968, 39431, 39435), ("astlib/ast_501.ml", 968, 39431, 39488), 0), 0, Tag1 ("Astlib__Ast_501", 373)); (("Pwith_typesubst", 1061), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10437)], (0)), 100000000, 0, -10436); (Tag3 ((("type_declaration", 8028)), 0, (0)), 100000000, 0, -10438)]), 0, (("astlib/ast_501.ml", 970, 39538, 39542), ("astlib/ast_501.ml", 970, 39538, 39597), 0), 0, Tag1 ("Astlib__Ast_501", 374)); (("Pwith_modsubst", 1062), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10440)], (0)), 100000000, 0, -10439); (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10442)], (0)), 100000000, 0, -10441)]), 0, (("astlib/ast_501.ml", 972, 39665, 39669), ("astlib/ast_501.ml", 972, 39665, 39722), 0), 0, Tag1 ("Astlib__Ast_501", 375))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "with_constraint"), 0, (0)), 100000000, 0, -10422)), 0, 0, 0, 0, (("astlib/ast_501.ml", 958, 38971, 38973), ("astlib/ast_501.ml", 972, 39665, 39722), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 111)), 2, 0); Tag1 (("module_expr", 8068), (0, 0, [[(("pmod_desc", 1063), 0, (Tag3 ((("module_expr_desc", 8069)), 0, (0)), 100000000, 0, -10419), (("astlib/ast_501.ml", 979, 39884, 39890), ("astlib/ast_501.ml", 979, 39884, 39918), 0), 0, Tag1 ("Astlib__Ast_501", 376)); (("pmod_loc", 1064), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10420), (("astlib/ast_501.ml", 980, 39919, 39925), ("astlib/ast_501.ml", 980, 39919, 39946), 0), 0, Tag1 ("Astlib__Ast_501", 377)); (("pmod_attributes", 1065), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10421), (("astlib/ast_501.ml", 981, 39947, 39953), ("astlib/ast_501.ml", 981, 39947, 39981), 0), 0, Tag1 ("Astlib__Ast_501", 378))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr"), 0, (0)), 100000000, 0, -10418)), 0, 0, 0, 0, (("astlib/ast_501.ml", 977, 39818, 39820), ("astlib/ast_501.ml", 982, 40012, 40017), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 112)), 2, 0); Tag1 (("module_expr_desc", 8069), (0, 0, Tag1 ([(("Pmod_ident", 1066), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10407)], (0)), 100000000, 0, -10406)]), 0, (("astlib/ast_501.ml", 985, 40089, 40093), ("astlib/ast_501.ml", 985, 40089, 40124), 0), 0, Tag1 ("Astlib__Ast_501", 379)); (("Pmod_structure", 1067), ([(Tag3 ((("structure", 8070)), 0, (0)), 100000000, 0, -10408)]), 0, (("astlib/ast_501.ml", 986, 40137, 40141), ("astlib/ast_501.ml", 986, 40137, 40170), 0), 0, Tag1 ("Astlib__Ast_501", 380)); (("Pmod_functor", 1068), ([(Tag3 ((("functor_parameter", 8054)), 0, (0)), 100000000, 0, -10409); (Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10410)]), 0, (("astlib/ast_501.ml", 987, 40196, 40200), ("astlib/ast_501.ml", 987, 40196, 40249), 0), 0, Tag1 ("Astlib__Ast_501", 381)); (("Pmod_apply", 1069), ([(Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10411); (Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10412)]), 0, (("astlib/ast_501.ml", 989, 40290, 40294), ("astlib/ast_501.ml", 989, 40290, 40335), 0), 0, Tag1 ("Astlib__Ast_501", 382)); (("Pmod_apply_unit", 1070), ([(Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10413)]), 0, (("astlib/ast_501.ml", 990, 40355, 40359), ("astlib/ast_501.ml", 990, 40355, 40391), 0), 0, Tag1 ("Astlib__Ast_501", 383)); (("Pmod_constraint", 1071), ([(Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10414); (Tag3 ((("module_type", 8052)), 0, (0)), 100000000, 0, -10415)]), 0, (("astlib/ast_501.ml", 991, 40407, 40411), ("astlib/ast_501.ml", 991, 40407, 40457), 0), 0, Tag1 ("Astlib__Ast_501", 384)); (("Pmod_unpack", 1072), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10416)]), 0, (("astlib/ast_501.ml", 992, 40478, 40482), ("astlib/ast_501.ml", 992, 40478, 40509), 0), 0, Tag1 ("Astlib__Ast_501", 385)); (("Pmod_extension", 1073), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10417)]), 0, (("astlib/ast_501.ml", 993, 40528, 40532), ("astlib/ast_501.ml", 993, 40528, 40561), 0), 0, Tag1 ("Astlib__Ast_501", 386))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_expr_desc"), 0, (0)), 100000000, 0, -10405)), 0, 0, 0, 0, (("astlib/ast_501.ml", 984, 40019, 40021), ("astlib/ast_501.ml", 993, 40528, 40561), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 113)), 2, 0); Tag1 (("structure", 8070), (0, 0, 0, 1, ((Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("structure_item", 8071)), 0, (0)), 100000000, 0, -10404)], (0)), 100000000, 0, -10403)), 0, 0, 0, 0, (("astlib/ast_501.ml", 995, 40579, 40581), ("astlib/ast_501.ml", 995, 40579, 40616), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 114)), 2, 0); Tag1 (("structure_item", 8071), (0, 0, [[(("pstr_desc", 1074), 0, (Tag3 ((("structure_item_desc", 8072)), 0, (0)), 100000000, 0, -10401), (("astlib/ast_501.ml", 999, 40690, 40696), ("astlib/ast_501.ml", 999, 40690, 40727), 0), 0, Tag1 ("Astlib__Ast_501", 387)); (("pstr_loc", 1075), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10402), (("astlib/ast_501.ml", 1000, 40728, 40734), ("astlib/ast_501.ml", 1000, 40728, 40755), 0), 0, Tag1 ("Astlib__Ast_501", 388))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item"), 0, (0)), 100000000, 0, -10400)), 0, 0, 0, 0, (("astlib/ast_501.ml", 997, 40618, 40620), ("astlib/ast_501.ml", 1001, 40756, 40761), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 115)), 2, 0); Tag1 (("structure_item_desc", 8072), (0, 0, Tag1 ([(("Pstr_eval", 1076), ([(Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10376); (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10377)]), 0, (("astlib/ast_501.ml", 1004, 40839, 40843), ("astlib/ast_501.ml", 1004, 40839, 40881), 0), 0, Tag1 ("Astlib__Ast_501", 389)); (("Pstr_value", 1077), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "rec_flag"), 0, (0)), 100000000, 0, -10378); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("value_binding", 8074)), 0, (0)), 100000000, 0, -10380)], (0)), 100000000, 0, -10379)]), 0, (("astlib/ast_501.ml", 1005, 40894, 40898), ("astlib/ast_501.ml", 1005, 40894, 40943), 0), 0, Tag1 ("Astlib__Ast_501", 390)); (("Pstr_primitive", 1078), ([(Tag3 ((("value_description", 8027)), 0, (0)), 100000000, 0, -10381)]), 0, (("astlib/ast_501.ml", 1012, 41293, 41297), ("astlib/ast_501.ml", 1012, 41293, 41334), 0), 0, Tag1 ("Astlib__Ast_501", 391)); (("Pstr_type", 1079), ([(Tag3 (Tag1 ((("Asttypes", 7991)), "rec_flag"), 0, (0)), 100000000, 0, -10382); (Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("type_declaration", 8028)), 0, (0)), 100000000, 0, -10384)], (0)), 100000000, 0, -10383)]), 0, (("astlib/ast_501.ml", 1015, 41411, 41415), ("astlib/ast_501.ml", 1015, 41411, 41462), 0), 0, Tag1 ("Astlib__Ast_501", 392)); (("Pstr_typext", 1080), ([(Tag3 ((("type_extension", 8033)), 0, (0)), 100000000, 0, -10385)]), 0, (("astlib/ast_501.ml", 1017, 41515, 41519), ("astlib/ast_501.ml", 1017, 41515, 41550), 0), 0, Tag1 ("Astlib__Ast_501", 393)); (("Pstr_exception", 1081), ([(Tag3 ((("type_exception", 8035)), 0, (0)), 100000000, 0, -10386)]), 0, (("astlib/ast_501.ml", 1018, 41576, 41580), ("astlib/ast_501.ml", 1018, 41576, 41614), 0), 0, Tag1 ("Astlib__Ast_501", 394)); (("Pstr_module", 1082), ([(Tag3 ((("module_binding", 8075)), 0, (0)), 100000000, 0, -10387)]), 0, (("astlib/ast_501.ml", 1021, 41687, 41691), ("astlib/ast_501.ml", 1021, 41687, 41722), 0), 0, Tag1 ("Astlib__Ast_501", 395)); (("Pstr_recmodule", 1083), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("module_binding", 8075)), 0, (0)), 100000000, 0, -10389)], (0)), 100000000, 0, -10388)]), 0, (("astlib/ast_501.ml", 1022, 41747, 41751), ("astlib/ast_501.ml", 1022, 41747, 41790), 0), 0, Tag1 ("Astlib__Ast_501", 396)); (("Pstr_modtype", 1084), ([(Tag3 ((("module_type_declaration", 8060)), 0, (0)), 100000000, 0, -10390)]), 0, (("astlib/ast_501.ml", 1024, 41849, 41853), ("astlib/ast_501.ml", 1024, 41849, 41894), 0), 0, Tag1 ("Astlib__Ast_501", 397)); (("Pstr_open", 1085), ([(Tag3 ((("open_declaration", 8063)), 0, (0)), 100000000, 0, -10391)]), 0, (("astlib/ast_501.ml", 1025, 41924, 41928), ("astlib/ast_501.ml", 1025, 41924, 41959), 0), 0, Tag1 ("Astlib__Ast_501", 398)); (("Pstr_class", 1086), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_declaration", 8051)), 0, (0)), 100000000, 0, -10393)], (0)), 100000000, 0, -10392)]), 0, (("astlib/ast_501.ml", 1026, 41977, 41981), ("astlib/ast_501.ml", 1026, 41977, 42019), 0), 0, Tag1 ("Astlib__Ast_501", 399)); (("Pstr_class_type", 1087), ([(Tag3 ((Tag3 ("list", 9)), [(Tag3 ((("class_type_declaration", 8044)), 0, (0)), 100000000, 0, -10395)], (0)), 100000000, 0, -10394)]), 0, (("astlib/ast_501.ml", 1028, 42073, 42077), ("astlib/ast_501.ml", 1028, 42073, 42125), 0), 0, Tag1 ("Astlib__Ast_501", 400)); (("Pstr_include", 1088), ([(Tag3 ((("include_declaration", 8066)), 0, (0)), 100000000, 0, -10396)]), 0, (("astlib/ast_501.ml", 1030, 42186, 42190), ("astlib/ast_501.ml", 1030, 42186, 42227), 0), 0, Tag1 ("Astlib__Ast_501", 401)); (("Pstr_attribute", 1089), ([(Tag3 ((("attribute", 8009)), 0, (0)), 100000000, 0, -10397)]), 0, (("astlib/ast_501.ml", 1031, 42249, 42253), ("astlib/ast_501.ml", 1031, 42249, 42282), 0), 0, Tag1 ("Astlib__Ast_501", 402)); (("Pstr_extension", 1090), ([(Tag3 ((("extension", 8010)), 0, (0)), 100000000, 0, -10398); (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10399)]), 0, (("astlib/ast_501.ml", 1032, 42304, 42308), ("astlib/ast_501.ml", 1032, 42304, 42350), 0), 0, Tag1 ("Astlib__Ast_501", 403))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "structure_item_desc"), 0, (0)), 100000000, 0, -10375)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1003, 40763, 40765), ("astlib/ast_501.ml", 1032, 42304, 42350), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 116)), 2, 0); Tag1 (("value_constraint", 8073), (0, 0, Tag1 ([(("Pvc_constraint", 1091), Tag1 ([(("locally_abstract_univars", 1092), 0, (Tag3 ((Tag3 ("list", 9)), [(Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10370)], (0)), 100000000, 0, -10369)], (0)), 100000000, 0, -10368), (("astlib/ast_501.ml", 1036, 42465, 42471), ("astlib/ast_501.ml", 1036, 42465, 42512), 0), 0, Tag1 ("Astlib__Ast_501", 404)); (("typ", 1093), 0, (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10371), (("astlib/ast_501.ml", 1037, 42513, 42519), ("astlib/ast_501.ml", 1037, 42513, 42533), 0), 0, Tag1 ("Astlib__Ast_501", 405))]), 0, (("astlib/ast_501.ml", 1035, 42439, 42443), ("astlib/ast_501.ml", 1038, 42534, 42541), 0), 0, Tag1 ("Astlib__Ast_501", 406)); (("Pvc_coercion", 1094), Tag1 ([(("ground", 1095), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10373)], (0)), 100000000, 0, -10372), (("astlib/ast_501.ml", 1039, 42542, 42565), ("astlib/ast_501.ml", 1039, 42542, 42589), 0), 0, Tag1 ("Astlib__Ast_501", 407)); (("coercion", 1096), 0, (Tag3 ((("core_type", 8013)), 0, (0)), 100000000, 0, -10374), (("astlib/ast_501.ml", 1039, 42542, 42590), ("astlib/ast_501.ml", 1039, 42542, 42608), 0), 0, Tag1 ("Astlib__Ast_501", 408))]), 0, (("astlib/ast_501.ml", 1039, 42542, 42546), ("astlib/ast_501.ml", 1039, 42542, 42610), 0), 0, Tag1 ("Astlib__Ast_501", 409))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_constraint"), 0, (0)), 100000000, 0, -10367)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1034, 42369, 42371), ("astlib/ast_501.ml", 1039, 42542, 42610), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 117)), 2, 0); Tag1 (("value_binding", 8074), (0, 0, [[(("pvb_pat", 1097), 0, (Tag3 ((("pattern", 8020)), 0, (0)), 100000000, 0, -10361), (("astlib/ast_501.ml", 1043, 42682, 42688), ("astlib/ast_501.ml", 1043, 42682, 42705), 0), 0, Tag1 ("Astlib__Ast_501", 410)); (("pvb_expr", 1098), 0, (Tag3 ((("expression", 8022)), 0, (0)), 100000000, 0, -10362), (("astlib/ast_501.ml", 1044, 42706, 42712), ("astlib/ast_501.ml", 1044, 42706, 42733), 0), 0, Tag1 ("Astlib__Ast_501", 411)); (("pvb_constraint", 1099), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("value_constraint", 8073)), 0, (0)), 100000000, 0, -10364)], (0)), 100000000, 0, -10363), (("astlib/ast_501.ml", 1045, 42734, 42740), ("astlib/ast_501.ml", 1045, 42734, 42780), 0), 0, Tag1 ("Astlib__Ast_501", 412)); (("pvb_attributes", 1100), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10365), (("astlib/ast_501.ml", 1046, 42781, 42787), ("astlib/ast_501.ml", 1046, 42781, 42814), 0), 0, Tag1 ("Astlib__Ast_501", 413)); (("pvb_loc", 1101), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10366), (("astlib/ast_501.ml", 1047, 42815, 42821), ("astlib/ast_501.ml", 1047, 42815, 42841), 0), 0, Tag1 ("Astlib__Ast_501", 414))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "value_binding"), 0, (0)), 100000000, 0, -10360)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1041, 42612, 42614), ("astlib/ast_501.ml", 1048, 42842, 42847), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 118)), 2, 0); Tag1 (("module_binding", 8075), (0, 0, [[(("pmb_name", 1102), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10356)], (0)), 100000000, 0, -10355)], (0)), 100000000, 0, -10354), (("astlib/ast_501.ml", 1052, 42921, 42927), ("astlib/ast_501.ml", 1052, 42921, 42955), 0), 0, Tag1 ("Astlib__Ast_501", 415)); (("pmb_expr", 1103), 0, (Tag3 ((("module_expr", 8068)), 0, (0)), 100000000, 0, -10357), (("astlib/ast_501.ml", 1053, 42956, 42962), ("astlib/ast_501.ml", 1053, 42956, 42984), 0), 0, Tag1 ("Astlib__Ast_501", 416)); (("pmb_attributes", 1104), 0, (Tag3 ((("attributes", 8011)), 0, (0)), 100000000, 0, -10358), (("astlib/ast_501.ml", 1054, 42985, 42991), ("astlib/ast_501.ml", 1054, 42985, 43018), 0), 0, Tag1 ("Astlib__Ast_501", 417)); (("pmb_loc", 1105), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10359), (("astlib/ast_501.ml", 1055, 43019, 43025), ("astlib/ast_501.ml", 1055, 43019, 43045), 0), 0, Tag1 ("Astlib__Ast_501", 418))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "module_binding"), 0, (0)), 100000000, 0, -10353)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1050, 42849, 42851), ("astlib/ast_501.ml", 1056, 43046, 43051), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 119)), 2, 0); Tag1 (("toplevel_phrase", 8076), (0, 0, Tag1 ([(("Ptop_def", 1120), ([(Tag3 ((("structure", 8070)), 0, (0)), 100000000, 0, -10351)]), 0, (("astlib/ast_501.ml", 1064, 43244, 43248), ("astlib/ast_501.ml", 1064, 43244, 43271), 0), 0, Tag1 ("Astlib__Ast_501", 435)); (("Ptop_dir", 1121), ([(Tag3 ((("toplevel_directive", 8077)), 0, (0)), 100000000, 0, -10352)]), 0, (("astlib/ast_501.ml", 1065, 43272, 43276), ("astlib/ast_501.ml", 1065, 43272, 43308), 0), 0, Tag1 ("Astlib__Ast_501", 436))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "toplevel_phrase"), 0, (0)), 100000000, 0, -10350)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1063, 43175, 43177), ("astlib/ast_501.ml", 1065, 43272, 43308), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 431)), 1, 0); Tag1 (("toplevel_directive", 8077), (0, 0, [[(("pdir_name", 1122), 0, (Tag3 (Tag1 ((("Asttypes", 7991)), "loc"), [(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10346)], (0)), 100000000, 0, -10345), (("astlib/ast_501.ml", 1069, 43418, 43424), ("astlib/ast_501.ml", 1069, 43418, 43446), 0), 0, Tag1 ("Astlib__Ast_501", 437)); (("pdir_arg", 1123), 0, (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((("directive_argument", 8078)), 0, (0)), 100000000, 0, -10348)], (0)), 100000000, 0, -10347), (("astlib/ast_501.ml", 1070, 43447, 43453), ("astlib/ast_501.ml", 1070, 43447, 43489), 0), 0, Tag1 ("Astlib__Ast_501", 438)); (("pdir_loc", 1124), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10349), (("astlib/ast_501.ml", 1071, 43490, 43496), ("astlib/ast_501.ml", 1071, 43490, 43517), 0), 0, Tag1 ("Astlib__Ast_501", 439))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "toplevel_directive"), 0, (0)), 100000000, 0, -10344)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1067, 43338, 43340), ("astlib/ast_501.ml", 1072, 43518, 43523), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 432)), 2, 0); Tag1 (("directive_argument", 8078), (0, 0, [[(("pdira_desc", 1125), 0, (Tag3 ((("directive_argument_desc", 8079)), 0, (0)), 100000000, 0, -10342), (("astlib/ast_501.ml", 1076, 43605, 43611), ("astlib/ast_501.ml", 1076, 43605, 43647), 0), 0, Tag1 ("Astlib__Ast_501", 440)); (("pdira_loc", 1126), 0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Location"), "t"), 0, (0)), 100000000, 0, -10343), (("astlib/ast_501.ml", 1077, 43648, 43654), ("astlib/ast_501.ml", 1077, 43648, 43676), 0), 0, Tag1 ("Astlib__Ast_501", 441))]], 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "directive_argument"), 0, (0)), 100000000, 0, -10341)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1074, 43525, 43527), ("astlib/ast_501.ml", 1078, 43677, 43682), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 433)), 2, 0); Tag1 (("directive_argument_desc", 8079), (0, 0, Tag1 ([(("Pdir_string", 1127), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10335)]), 0, (("astlib/ast_501.ml", 1081, 43768, 43772), ("astlib/ast_501.ml", 1081, 43768, 43795), 0), 0, Tag1 ("Astlib__Ast_501", 442)); (("Pdir_int", 1128), ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10336); (Tag3 ((Tag3 ("option", 10)), [(Tag3 ((Tag3 ("char", 2)), 0, (0)), 100000000, 0, -10338)], (0)), 100000000, 0, -10337)]), 0, (("astlib/ast_501.ml", 1082, 43796, 43800), ("astlib/ast_501.ml", 1082, 43796, 43834), 0), 0, Tag1 ("Astlib__Ast_501", 443)); (("Pdir_ident", 1129), ([(Tag3 (Tag1 (Tag1 ((Tag2 ("Astlib__")), "Longident"), "t"), 0, (0)), 100000000, 0, -10339)]), 0, (("astlib/ast_501.ml", 1083, 43835, 43839), ("astlib/ast_501.ml", 1083, 43835, 43866), 0), 0, Tag1 ("Astlib__Ast_501", 444)); (("Pdir_bool", 1130), ([(Tag3 ((Tag3 ("bool", 5)), 0, (0)), 100000000, 0, -10340)]), 0, (("astlib/ast_501.ml", 1084, 43867, 43871), ("astlib/ast_501.ml", 1084, 43867, 43890), 0), 0, Tag1 ("Astlib__Ast_501", 445))], 0), 1, ((Tag3 (Tag1 ((Tag2 ("Parsetree")), "directive_argument_desc"), 0, (0)), 100000000, 0, -10334)), 0, 0, 0, 0, (("astlib/ast_501.ml", 1080, 43684, 43686), ("astlib/ast_501.ml", 1084, 43867, 43890), 0), 0, 0, 0, Tag1 ("Astlib__Ast_501", 434)), 2, 0)]), 0, (("astlib/ast_501.ml", 48, 1423, 1423), ("astlib/ast_501.ml", 1085, 43891, 43894), 0), Tag1 ("Astlib__Ast_501", 446)), 0, 0); Tag3 (("Config", 7993), 0, (Tag1 ([(("ast_impl_magic_number", 8080), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11020), 0, (("astlib/ast_501.ml", 1088, 43919, 43925), ("astlib/ast_501.ml", 1088, 43919, 43946), 0), 0, Tag1 ("Astlib__Ast_501", 447)), 0); (("ast_intf_magic_number", 8081), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11019), 0, (("astlib/ast_501.ml", 1089, 43964, 43970), ("astlib/ast_501.ml", 1089, 43964, 43991), 0), 0, Tag1 ("Astlib__Ast_501", 448)), 0)]), 0, (("astlib/ast_501.ml", 1087, 43896, 43896), ("astlib/ast_501.ml", 1090, 44009, 44012), 0), Tag1 ("Astlib__Ast_501", 449)), 0, 0)]), 0, (("astlib/astlib.ml", 39, 1713, 1713), ("astlib/astlib.ml", 39, 1713, 1737), 0), Tag1 ("Astlib", 14)), 0, 0); (("version", 7986), ((Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -10306), 0, (("ast/versions.mli", 101, 3377, 3379), ("ast/versions.mli", 101, 3377, 3396), 0), 0, Tag1 ("Ppxlib_ast__Versions", 28)), 0); (("string_version", 7987), ((Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -10305), 0, (("ast/versions.mli", 104, 3447, 3449), ("ast/versions.mli", 104, 3447, 3476), 0), 0, Tag1 ("Ppxlib_ast__Versions", 29)), 0); Tag1 (("types", 7988), (0, 0, 0, 1, ((Tag3 ((("_types", 6672)), [(Tag4 ((Tag5 ("case", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "case"), 0, (0)), 100000000, 0, -10286), 0), 100000000, 0, -10285), (Tag5 ("class_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -10302), 0), 100000000, 0, -10301), (Tag5 ("class_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -10304), 0), 100000000, 0, -10303), (Tag5 ("class_signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -10296), 0), 100000000, 0, -10295), (Tag5 ("class_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -10268), 0), 100000000, 0, -10267), (Tag5 ("class_type_field", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -10282), 0), 100000000, 0, -10281), (Tag5 ("core_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -10272), 0), 100000000, 0, -10271), (Tag5 ("expression", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -10294), 0), 100000000, 0, -10293), (Tag5 ("extension_constructor", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -10280), 0), 100000000, 0, -10279), (Tag5 ("module_expr", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -10278), 0), 100000000, 0, -10277), (Tag5 ("module_type", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -10276), 0), 100000000, 0, -10275), (Tag5 ("pattern", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -10274), 0), 100000000, 0, -10273), (Tag5 ("signature", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -10290), 0), 100000000, 0, -10289), (Tag5 ("signature_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -10298), 0), 100000000, 0, -10297), (Tag5 ("structure", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -10292), 0), 100000000, 0, -10291), (Tag5 ("structure_item", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -10270), 0), 100000000, 0, -10269), (Tag5 ("toplevel_phrase", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -10284), 0), 100000000, 0, -10283), (Tag5 ("type_declaration", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -10300), 0), 100000000, 0, -10299), (Tag5 ("type_extension", 1, (Tag10 ((Tag3 (Tag1 (Tag1 ((("Ast", 7985)), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -10288), 0), 100000000, 0, -10287), (0, 100000000, 0, -10266)), 100000000, 0, 1390)), 100000000, 0, 1391)), 100000000, 0, 1392)), 100000000, 0, 1393)), 100000000, 0, 1394)), 100000000, 0, 1395)), 100000000, 0, 1396)), 100000000, 0, 1397)), 100000000, 0, 1398)), 100000000, 0, 1399)), 100000000, 0, 1400)), 100000000, 0, 1401)), 100000000, 0, 1402)), 100000000, 0, 1403)), 100000000, 0, 1404)), 100000000, 0, 1405)), 100000000, 0, 1406)), 100000000, 0, 1407)), 100000000, 0, -10247), (0)), 100000000, 0, -10246)], (0)), 100000000, 0, -10245)), 0, 0, 0, 0, (("ast/versions.mli", 107, 3552, 3554), ("ast/versions.mli", 129, 4714, 4724), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 30)), 1, 0); Tag2 (("Version", 7989), ((("witnesses", 6673)), [((("_")), 100000000, 0, -10244)], (0), ((Tag3 ((("witnesses", 6673)), [(Tag3 ((("types", 7988)), 0, (0)), 100000000, 0, -10243)], (0)), 100000000, 0, -10242)), 1, (("_none_", 0, 0, -1), ("_none_", 0, 0, -1), 1), 0, Tag1 ("Ppxlib_ast__Versions", 31)), 0, 0); (("migration_info", 7990), ((Tag3 ((("migration_info", 6674)), [(Tag3 ((("types", 7988)), 0, (0)), 100000000, 0, -10241)], (0)), 100000000, 0, -10240), 0, (("ast/versions.mli", 136, 4933, 4935), ("ast/versions.mli", 136, 4933, 4976), 0), 0, Tag1 ("Ppxlib_ast__Versions", 32)), 0)]), 0, (("ast/versions.mli", 159, 6072, 6072), ("ast/versions.mli", 159, 6072, 6137), 0), Tag1 ("Ppxlib_ast__Versions", 50)), 0, 0); Tag3 (("OCaml_current", 6691), 1, (Tag3 ((("OCaml_501", 6690))), 0, (("ast/versions.mli", 163, 6192, 6192), ("ast/versions.mli", 163, 6192, 6224), 0), Tag1 ("Ppxlib_ast__Versions", 51)), 0, 0); (("all_versions", 6692), ((Tag3 ((Tag3 ("list", 9)), [(Tag11 ((("OCaml_version", 6675)), 0), 100000000, 0, -3)], (0)), 100000000, 0, -2), 0, (("ast/versions.mli", 166, 6277, 6277), ("ast/versions.mli", 166, 6277, 6323), 0), 0, Tag1 ("Ppxlib_ast__Versions", 52)), 0); Tag3 (("Convert", 6693), 0, (Tag2 (((("A", 6695)), ((("OCaml_version", 6675)))), Tag2 (((("B", 6696)), ((("OCaml_version", 6675)))), Tag1 ([(("copy_structure", 8082), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -11077), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "structure"), 0, (0)), 100000000, 0, -11076), 0), 100000000, 0, -11075), 0, (("ast/versions.mli", 175, 6593, 6595), ("ast/versions.mli", 175, 6593, 6694), 0), 0, Tag1 ("Ppxlib_ast__Versions", 55)), 0); (("copy_signature", 8083), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -11074), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "signature"), 0, (0)), 100000000, 0, -11073), 0), 100000000, 0, -11072), 0, (("ast/versions.mli", 176, 6695, 6697), ("ast/versions.mli", 176, 6695, 6796), 0), 0, Tag1 ("Ppxlib_ast__Versions", 56)), 0); (("copy_toplevel_phrase", 8084), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -11071), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "toplevel_phrase"), 0, (0)), 100000000, 0, -11070), 0), 100000000, 0, -11069), 0, (("ast/versions.mli", 177, 6797, 6799), ("ast/versions.mli", 177, 6797, 6904), 0), 0, Tag1 ("Ppxlib_ast__Versions", 57)), 0); (("copy_core_type", 8085), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -11068), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "core_type"), 0, (0)), 100000000, 0, -11067), 0), 100000000, 0, -11066), 0, (("ast/versions.mli", 178, 6905, 6907), ("ast/versions.mli", 178, 6905, 7006), 0), 0, Tag1 ("Ppxlib_ast__Versions", 58)), 0); (("copy_expression", 8086), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -11065), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "expression"), 0, (0)), 100000000, 0, -11064), 0), 100000000, 0, -11063), 0, (("ast/versions.mli", 179, 7007, 7009), ("ast/versions.mli", 179, 7007, 7109), 0), 0, Tag1 ("Ppxlib_ast__Versions", 59)), 0); (("copy_pattern", 8087), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -11062), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "pattern"), 0, (0)), 100000000, 0, -11061), 0), 100000000, 0, -11060), 0, (("ast/versions.mli", 180, 7110, 7112), ("ast/versions.mli", 180, 7110, 7209), 0), 0, Tag1 ("Ppxlib_ast__Versions", 60)), 0); (("copy_case", 8088), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "case"), 0, (0)), 100000000, 0, -11059), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "case"), 0, (0)), 100000000, 0, -11058), 0), 100000000, 0, -11057), 0, (("ast/versions.mli", 181, 7210, 7212), ("ast/versions.mli", 181, 7210, 7306), 0), 0, Tag1 ("Ppxlib_ast__Versions", 61)), 0); (("copy_type_declaration", 8089), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -11056), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "type_declaration"), 0, (0)), 100000000, 0, -11055), 0), 100000000, 0, -11054), 0, (("ast/versions.mli", 182, 7307, 7309), ("ast/versions.mli", 182, 7307, 7415), 0), 0, Tag1 ("Ppxlib_ast__Versions", 62)), 0); (("copy_type_extension", 8090), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -11053), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "type_extension"), 0, (0)), 100000000, 0, -11052), 0), 100000000, 0, -11051), 0, (("ast/versions.mli", 183, 7416, 7418), ("ast/versions.mli", 183, 7416, 7522), 0), 0, Tag1 ("Ppxlib_ast__Versions", 63)), 0); (("copy_extension_constructor", 8091), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -11050), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "extension_constructor"), 0, (0)), 100000000, 0, -11049), 0), 100000000, 0, -11048), 0, (("ast/versions.mli", 184, 7523, 7525), ("ast/versions.mli", 184, 7523, 7636), 0), 0, Tag1 ("Ppxlib_ast__Versions", 64)), 0); (("copy_class_expr", 8092), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -11047), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "class_expr"), 0, (0)), 100000000, 0, -11046), 0), 100000000, 0, -11045), 0, (("ast/versions.mli", 185, 7637, 7639), ("ast/versions.mli", 185, 7637, 7739), 0), 0, Tag1 ("Ppxlib_ast__Versions", 65)), 0); (("copy_class_field", 8093), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -11044), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "class_field"), 0, (0)), 100000000, 0, -11043), 0), 100000000, 0, -11042), 0, (("ast/versions.mli", 186, 7740, 7742), ("ast/versions.mli", 186, 7740, 7843), 0), 0, Tag1 ("Ppxlib_ast__Versions", 66)), 0); (("copy_class_type", 8094), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -11041), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "class_type"), 0, (0)), 100000000, 0, -11040), 0), 100000000, 0, -11039), 0, (("ast/versions.mli", 187, 7844, 7846), ("ast/versions.mli", 187, 7844, 7946), 0), 0, Tag1 ("Ppxlib_ast__Versions", 67)), 0); (("copy_class_signature", 8095), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -11038), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "class_signature"), 0, (0)), 100000000, 0, -11037), 0), 100000000, 0, -11036), 0, (("ast/versions.mli", 188, 7947, 7949), ("ast/versions.mli", 188, 7947, 8054), 0), 0, Tag1 ("Ppxlib_ast__Versions", 68)), 0); (("copy_class_type_field", 8096), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -11035), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "class_type_field"), 0, (0)), 100000000, 0, -11034), 0), 100000000, 0, -11033), 0, (("ast/versions.mli", 189, 8055, 8057), ("ast/versions.mli", 189, 8055, 8163), 0), 0, Tag1 ("Ppxlib_ast__Versions", 69)), 0); (("copy_module_expr", 8097), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -11032), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "module_expr"), 0, (0)), 100000000, 0, -11031), 0), 100000000, 0, -11030), 0, (("ast/versions.mli", 190, 8164, 8166), ("ast/versions.mli", 190, 8164, 8267), 0), 0, Tag1 ("Ppxlib_ast__Versions", 70)), 0); (("copy_module_type", 8098), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -11029), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "module_type"), 0, (0)), 100000000, 0, -11028), 0), 100000000, 0, -11027), 0, (("ast/versions.mli", 191, 8268, 8270), ("ast/versions.mli", 191, 8268, 8371), 0), 0, Tag1 ("Ppxlib_ast__Versions", 71)), 0); (("copy_signature_item", 8099), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -11026), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "signature_item"), 0, (0)), 100000000, 0, -11025), 0), 100000000, 0, -11024), 0, (("ast/versions.mli", 192, 8372, 8374), ("ast/versions.mli", 192, 8372, 8478), 0), 0, Tag1 ("Ppxlib_ast__Versions", 72)), 0); (("copy_structure_item", 8100), ((Tag1 (0, (Tag3 (Tag1 (Tag1 (Tag1 ((("A", 6695)), "Ast"), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -11023), (Tag3 (Tag1 (Tag1 (Tag1 ((("B", 6696)), "Ast"), "Parsetree"), "structure_item"), 0, (0)), 100000000, 0, -11022), 0), 100000000, 0, -11021), 0, (("ast/versions.mli", 193, 8479, 8481), ("ast/versions.mli", 193, 8479, 8585), 0), 0, Tag1 ("Ppxlib_ast__Versions", 73)), 0)]))), 0, (("ast/versions.mli", 171, 6391, 6391), ("ast/versions.mli", 195, 8592, 8595), 0), Tag1 ("Ppxlib_ast__Versions", 74)), 0, 0); Tag3 (("Find_version", 6694), 0, (Tag1 ([Tag1 (("t", 8101), (0, 0, Tag1 ([(("Impl", 3074), ([(Tag11 ((("OCaml_version", 6675)), 0), 100000000, 0, -11081)]), 0, (("ast/versions.mli", 199, 8696, 8707), ("ast/versions.mli", 199, 8696, 8737), 0), 0, Tag1 ("Ppxlib_ast__Versions", 76)); (("Intf", 3075), ([(Tag11 ((("OCaml_version", 6675)), 0), 100000000, 0, -11082)]), 0, (("ast/versions.mli", 199, 8696, 8738), ("ast/versions.mli", 199, 8696, 8770), 0), 0, Tag1 ("Ppxlib_ast__Versions", 77)); (("Unknown", 3076), (0), 0, (("ast/versions.mli", 199, 8696, 8771), ("ast/versions.mli", 199, 8696, 8780), 0), 0, Tag1 ("Ppxlib_ast__Versions", 78))], 0), 1, 0, 0, 0, 0, 0, (("ast/versions.mli", 199, 8696, 8698), ("ast/versions.mli", 199, 8696, 8780), 0), 0, 0, 0, Tag1 ("Ppxlib_ast__Versions", 75)), 1, 0); (("from_magic", 8102), ((Tag1 (0, (Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -11080), (Tag3 ((("t", 8101)), 0, (0)), 100000000, 0, -11079), 0), 100000000, 0, -11078), 0, (("ast/versions.mli", 201, 8782, 8784), ("ast/versions.mli", 201, 8782, 8812), 0), 0, Tag1 ("Ppxlib_ast__Versions", 79)), 0)]), 0, (("ast/versions.mli", 198, 8670, 8670), ("ast/versions.mli", 202, 8813, 8816), 0), Tag1 ("Ppxlib_ast__Versions", 80)), 0, 0)], "Ppxlib_ast__Versions", [("Ppxlib_ast__Versions", ("\005+\189\023\165C\208\138FX6X\224\005\223\t")); ("Warnings", ("e\016\015Z\137R2!\023\161\135\210\195\204:\023")); ("Types", ("\177\238\029.\220\006\163!\230\015\006\182\133\155\194\166")); ("Type_immediacy", ("\"\127k\011Q\241\211\138\193;8\142\129\141#\251")); ("Subst", ("\021\031\148\223\127\186\189\135\027}\145r\216\143\177\156")); ("Stdlib__Uchar", ("\189\n\181\141\022k\137kQ\201Sc\030:9\197")); ("Stdlib__Sys", ("5C\bv\199\216\201)\bo\220\168\239\199>H")); ("Stdlib__String", ("\141~|\209P5\220]\146\029\153\133\161\247\208\163")); ("Stdlib__Set", ("7|\\\133-\210\176\\d|\223\017\182o\146\171")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Map", ("\193\011\137as\170,TM\229U\178\142\233\000P")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Lazy", ("\1479\177F\251W\183>\15140\213\255\214\197.")); ("Stdlib__Hashtbl", ("\192HX\254\200gh\2475\187\130\178U-8h")); ("Stdlib__Format", ("\148\215\2499\234\007\000\024\174\164\005\134\243\025\164\238")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Domain", ("\021\235G\146\n\199fL\019C`\168{A\239(")); ("Stdlib__Digest", ("\023\005\031\245,\198tnG\154\179u\005\160\228\188")); ("Stdlib__Buffer", ("\017 \159E\224\025<e\221\243\250B\230,\163Q")); ("Stdlib__Arg", ("\024%=\206\198p\149Y\007\004\216,&\254#\207")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("Shape", ("\235\127Y\213\025\137=\244\218\181\248N\189\188\216p")); ("Profile", ("\201i\132?<qM\169\011\239@\142\202\182\023,")); ("Primitive", ("}Shh\162\015|\220A\203\249\232\245G\213\019")); ("Ppxlib_ast__", ("\182{\159J6;\249\149\208}`\139\002r\020x")); ("Path", ("\012\183\178\025\1298\228*\021r\185\160Y\252\n\026")); ("Parsetree", ("\255\184\178E\179\201?\171v\020\r*dO\170\242")); ("Outcometree", ("9\021%\234\211\206\210\004H\165\208\2014\234Q\142")); ("Ocaml_common", ("1\212\195\020\163\232\187\142G\192\221\180@\1278u")); ("Misc", ("*\026\026\234c\191\131\161\\\203\183\012O\252\153\198")); ("Longident", ("\248/\208\t\\\026\n\184\162GD\164)\226\248\226")); ("Location", ("\178\182H\005\029\193C\000\227\194\178qz\1489:")); ("Load_path", ("\012@\228l\230\164S\172h\1726X\020\252o}")); ("Identifiable", ("\004F\207\014\158GU\001\184\214\187%/#;\211")); ("Ident", ("\b9;!\187.\220\163(x\b\174\\\223\020\004")); ("Env", ("\021\n\181\142x\b\169j\227\"\017\248*\178\245\223")); ("Compmisc", ("B\127\\\174\004T\179\002\242}-C\214\152H*")); ("Cmi_format", ("6\177\bU\139\"\023\152=\249\135\174\b\011Cg")); ("Clflags", ("\162v\193G\199E|\029\023{\b\243]B\144;")); ("CamlinternalLazy", ("$R\130\004\165\140)\018\167x\018\240\162C\152V")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174")); ("Build_path_prefix_map", ("y\028\167\207D\220\198\216\011\208\172\149\2416\bc")); ("Asttypes", ("/\236U\160\174\204\175\251\243\169^\173\218\181\179\216")); ("Astlib__Longident", ("\n\192\233\142\177n\225\191\238\161#\150\204n\"Y")); ("Astlib__Location", ("nn\153\250\162\2239\215\129\229e\026xg\000U")); ("Astlib__Ast_501", ("\207\"A\188\024\242Q\223\153\146\239\128\168h\148&")); ("Astlib__Ast_500", ("\202\202\240\178Ep\168 [f\246\t\162T\141\254")); ("Astlib__Ast_414", ("i\179p\208\134r\2177\243\167\157nF\235\143\179")); ("Astlib__Ast_413", ("\240P\019\205\016\157\177\177O)\172\193\028\192\011\190")); ("Astlib__Ast_412", (">\181S\020\t\004\1998\163p\025\210s\216\251\169")); ("Astlib__Ast_411", ("\030\186y\191\005D\180nv\183\b@1\225\168+")); ("Astlib__Ast_410", ("\023\030O]m0\005\214X\n/\226c\201\214\232")); ("Astlib__Ast_409", ("P\147I\234\185H\181\153\207\221\003\165\139\161\150\027")); ("Astlib__Ast_408", ("\225\220%%\162\188\006W\007\252\001X\158\165,\004")); ("Astlib__Ast_407", ("\163\202\2018`\230bGY\138/\021'\148:\018")); ("Astlib__Ast_406", ("v\152\031Q\232\244\141\011p\012\161\164hy\203\151")); ("Astlib__Ast_405", ("\145;\017\238\241\127\173z\138\142Q4>\198\186\207")); ("Astlib__Ast_404", ("I\027\143Zr\250\2468\193\167uOo\029\236\148")); ("Astlib__Ast_403", ("\206M\242\247\155X\251\127\002Ly\024\154\245\153\180")); ("Astlib__Ast_402", ("\178]\161\230\193\144:\005/\\~\127'|\207\189")); ("Astlib__", ("\246\155.n\143$\1435\bi\005\019C\219\191A")); ("Astlib", ("\002*Xp\193\003\201C\234Q\143\029\232\1569\007"))], [(0)])

  end
