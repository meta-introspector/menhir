val __ocaml_lex_tables : Lexing.lex_tables
val chop : Lexing.lexbuf -> string * int
("DEBUG:rule", [(("__ocaml_lex_tables", 503), ((Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lex_tables"), 0, (0)), 100000000, 0, -10), 0, (("src/chopInlined.ml", 1, 25, 29), ("src/chopInlined.ml", 1, 25, 47), 0), 0, Tag1 ("Dune__exe__ChopInlined", 0)), 0); (("chop", 504), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -8), (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6)]), 100000000, 0, -4), 0), 100000000, 0, -9), 0, (("src/chopInlined.ml", 168, 10729, 10737), ("src/chopInlined.ml", 168, 10729, 10741), 0), 0, Tag1 ("Dune__exe__ChopInlined", 1)), 0); (("__ocaml_lex_chop_rec", 505), ((Tag1 (0, (Tag3 (Tag1 (Tag1 ((Tag2 ("Stdlib")), "Lexing"), "lexbuf"), 0, (0)), 100000000, 0, -8), (Tag1 (0, (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -7), (Tag2 ([(Tag3 ((Tag3 ("string", 15)), 0, (0)), 100000000, 0, -5); (Tag3 ((Tag3 ("int", 1)), 0, (0)), 100000000, 0, -6)]), 100000000, 0, -4), 0), 100000000, 0, -3), 0), 100000000, 0, -2), 0, (("src/chopInlined.ml", 172, 10909, 10913), ("src/chopInlined.ml", 172, 10909, 10933), 0), 0, Tag1 ("Dune__exe__ChopInlined", 2)), 0)], "Dune__exe__ChopInlined", [("Dune__exe__ChopInlined", ("kq\193\157\218\189{,P\019\151=`\\5x")); ("Stdlib__Seq", ("\228i\134Z1(\187\131\141\237X\149\233\233\229l")); ("Stdlib__Lexing", ("\148\158(\240\224\249\130\129\173>Sa\200\224\163\196")); ("Stdlib__Either", ("Lz\172\233\0020\189\133M\ts\199\228V\239\b")); ("Stdlib__Array", ("R\228O\222\160>\1728\n\221\218\027\240\242\017 ")); ("Stdlib", ("\011EI\"\139\201\184\193\207\161\232\136\215C+\223")); ("MenhirSdk", ("F\232\012\196l\143\145[\255\2193U\197\027\176\139")); ("Dune__exe", ("\137\000\197\175$\007]\218\141\248\172\212\146c\153\212")); ("CamlinternalFormatBasics", ("!%\242k\131\017S\201*D\240k\253\229p\174"))], [(0)])
val __ocaml_lex_chop_rec : Lexing.lexbuf -> int -> string * int
